ddq com/mojang/blaze3d/Blaze3D
	a ()V youJustLostTheGame
	b ()D getTime
ddr com/mojang/blaze3d/audio/Channel
	a LOGGER
	b source
	c initialized
	d streamingBufferSize
	e stream
	a ()Lddr; create
	<init> (I)V <init>
	b ()V destroy
	c ()V play
	j ()I getState
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z stopped
	a (Ldck;)V setSelfPosition
	a (F)V setPitch
	a (Z)V setLooping
	b (F)V setVolume
	h ()V disableAttenuation
	c (F)V linearAttenuation
	b (Z)V setRelative
	a (Lddw;)V attachStaticBuffer
	a (Lene;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (I)V pumpBuffers
	i ()V updateStream
	k ()I removeProcessedBuffers
	b (I)V lambda$pumpBuffers$1
	c (I)V lambda$attachStaticBuffer$0
	<clinit> ()V <clinit>
dds com/mojang/blaze3d/audio/Library
	a LOGGER
	b device
	c context
	d EMPTY
	e staticChannels
	f streamingChannels
	g listener
	<init> ()V <init>
	a ()V init
	f ()I getChannelCount
	g ()J tryOpenDevice
	b ()V cleanup
	c ()Lddt; getListener
	a (Ldds$c;)Lddr; acquireChannel
	a (Lddr;)V releaseChannel
	d ()Ljava/lang/String; getDebugString
	e ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
dds$1 com/mojang/blaze3d/audio/Library$1
	<init> ()V <init>
	a ()Lddr; acquire
	a (Lddr;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
dds$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lddr; acquire
	a (Lddr;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
dds$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	<init> (I)V <init>
	a ()Lddr; acquire
	a (Lddr;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
dds$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
	values ()[Ldds$c; values
	valueOf (Ljava/lang/String;)Ldds$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ddt com/mojang/blaze3d/audio/Listener
	a gain
	b position
	<init> ()V <init>
	a (Ldck;)V setListenerPosition
	a ()Ldck; getListenerPosition
	a (Lg;Lg;)V setListenerOrientation
	a (F)V setGain
	b ()F getGain
	c ()V reset
ddu com/mojang/blaze3d/audio/OggAudioStream
	a handle
	b audioFormat
	c input
	d buffer
	<init> (Ljava/io/InputStream;)V <init>
	c ()Z refillFromStream
	d ()V forwardBuffer
	a (Lddu$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Lddu$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lddu$a;)V convertStereo
	close ()V close
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	b ()Ljava/nio/ByteBuffer; readAll
ddu$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	<init> (I)V <init>
	b ()V createNewBuffer
	a (F)V put
	a ()Ljava/nio/ByteBuffer; get
	a (Lddu$a;)I access$000
ddv com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	a (I)Ljava/lang/String; alErrorToString
	a (Ljava/lang/String;)Z checkALError
	b (I)Ljava/lang/String; alcErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	<clinit> ()V <clinit>
ddw com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	<init> (Ljava/nio/ByteBuffer;Ljavax/sound/sampled/AudioFormat;)V <init>
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
ddx com/mojang/blaze3d/font/GlyphInfo
	getAdvance ()F getAdvance
	a (Z)F getAdvance
	a ()F getBearingX
	b ()F getBoldOffset
	c ()F getShadowOffset
ddy com/mojang/blaze3d/font/GlyphProvider
	close ()V close
	a (I)Lddz; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
ddz com/mojang/blaze3d/font/RawGlyph
	d ()I getPixelWidth
	e ()I getPixelHeight
	a (II)V upload
	f ()Z isColored
	g ()F getOversample
	h ()F getLeft
	i ()F getRight
	j ()F getUp
	k ()F getDown
	l ()F getBearingY
dea com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a fontMemory
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	<init> (Ljava/nio/ByteBuffer;Lorg/lwjgl/stb/STBTTFontinfo;FFFFLjava/lang/String;)V <init>
	b (I)Ldea$a; getGlyph
	close ()V close
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lddz; getGlyph
	c (I)Z lambda$getSupportedGlyphs$0
	a (Ldea;)F access$100
	b (Ldea;)F access$200
	c (Ldea;)F access$300
	d (Ldea;)F access$400
	e (Ldea;)Lorg/lwjgl/stb/STBTTFontinfo; access$500
	f (Ldea;)F access$600
dea$1 com/mojang/blaze3d/font/TrueTypeGlyphProvider$1
dea$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
	a this$0
	<init> (Ldea;IIIIFFI)V <init>
	d ()I getPixelWidth
	e ()I getPixelHeight
	g ()F getOversample
	getAdvance ()F getAdvance
	a ()F getBearingX
	l ()F getBearingY
	a (II)V upload
	f ()Z isColored
	<init> (Ldea;IIIIFFILdea$1;)V <init>
deb com/mojang/blaze3d/pipeline/RenderCall
	execute ()V execute
dec com/mojang/blaze3d/pipeline/RenderPipeline
	a renderCalls
	b recordingBuffer
	c processedBuffer
	d renderingBuffer
	<init> ()V <init>
ded com/mojang/blaze3d/pipeline/RenderTarget
	a width
	b height
	c viewWidth
	d viewHeight
	e useDepth
	f frameBufferId
	i colorTextureId
	j depthBufferId
	g clearChannels
	h filterMode
	<init> (IIZZ)V <init>
	a (IIZ)V resize
	d (IIZ)V _resize
	a ()V destroyBuffers
	a (Lded;)V copyDepthFrom
	b (IIZ)V createBuffers
	a (I)V setFilterMode
	b ()V checkStatus
	c ()V bindRead
	d ()V unbindRead
	a (Z)V bindWrite
	c (Z)V _bindWrite
	e ()V unbindWrite
	a (FFFF)V setClearColor
	a (II)V blitToScreen
	c (IIZ)V blitToScreen
	e (IIZ)V _blitToScreen
	b (Z)V clear
	f ()I getColorTextureId
	g ()I getDepthTextureId
	f (IIZ)V lambda$blitToScreen$3
	h ()V lambda$unbindWrite$2
	d (Z)V lambda$bindWrite$1
	g (IIZ)V lambda$resize$0
dee com/mojang/blaze3d/platform/ClipboardManager
	a clipboardScratchBuffer
	<init> ()V <init>
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
	a (JLjava/nio/ByteBuffer;[B)V pushClipboard
	a (JLjava/lang/String;)V setClipboard
def com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
	a ()Ljava/lang/invoke/MethodHandle; lambda$static$0
	<clinit> ()V <clinit>
deg com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
	<init> (IILjava/util/OptionalInt;Ljava/util/OptionalInt;Z)V <init>
com/mojang/blaze3d/platform/GLX com/mojang/blaze3d/platform/GLX
	LOGGER LOGGER
	capsString capsString
	cpuInfo cpuInfo
	LOOKUP_MAP LOOKUP_MAP
	<init> ()V <init>
	getOpenGLVersionString ()Ljava/lang/String; getOpenGLVersionString
	_getRefreshRate (Ldew;)I _getRefreshRate
	_getLWJGLVersion ()Ljava/lang/String; _getLWJGLVersion
	_initGlfw ()Ljava/util/function/LongSupplier; _initGlfw
	_setGlfwErrorCallback (Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V _setGlfwErrorCallback
	_shouldClose (Ldew;)Z _shouldClose
	_setupNvFogDistance ()V _setupNvFogDistance
	_init (IZ)V _init
	_getCapsString ()Ljava/lang/String; _getCapsString
	_getCpuInfo ()Ljava/lang/String; _getCpuInfo
	_renderCrosshair (IZZZ)V _renderCrosshair
	getErrorString (I)Ljava/lang/String; getErrorString
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	lambda$static$3 (Ljava/util/HashMap;)V lambda$static$3
	lambda$_initGlfw$2 ()J lambda$_initGlfw$2
	lambda$_initGlfw$1 (Ljava/util/List;IJ)V lambda$_initGlfw$1
	lambda$_initGlfw$0 (Ljava/lang/Integer;Ljava/lang/String;)V lambda$_initGlfw$0
	<clinit> ()V <clinit>
deh com/mojang/blaze3d/platform/GlConst
	a GL_FRAMEBUFFER
	b GL_RENDERBUFFER
	c GL_COLOR_ATTACHMENT0
	d GL_DEPTH_ATTACHMENT
	e GL_FRAMEBUFFER_COMPLETE
	f GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
	g GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
	h GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
	i GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
dei com/mojang/blaze3d/platform/GlDebug
	d LOGGER
	a BYTE_BUFFER
	b FLOAT_BUFFER
	c INT_BUFFER
	e NEWLINE_JOINER
	f STATEMENT_JOINER
	g BY_ID
	h DEBUG_LEVELS
	i DEBUG_LEVELS_ARB
	j SAVED_STATES
	a (I)Ljava/lang/String; printUnknownToken
	b (I)Ljava/lang/String; sourceToString
	c (I)Ljava/lang/String; typeToString
	d (I)Ljava/lang/String; severityToString
	a (IIIIIJJ)V printDebugLog
	a (ILjava/lang/String;)V setup
	a (IZ)V enableDebugCallback
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$setup$0
	<clinit> ()V <clinit>
dej com/mojang/blaze3d/platform/GlStateManager
	a MATRIX_BUFFER
	b ALPHA_TEST
	c LIGHTING
	d LIGHT_ENABLE
	e COLOR_MATERIAL
	f BLEND
	g DEPTH
	h FOG
	i CULL
	j POLY_OFFSET
	k COLOR_LOGIC
	l TEX_GEN
	m STENCIL
	n FLOAT_ARG_BUFFER
	o activeTexture
	p TEXTURES
	q shadeModel
	r RESCALE_NORMAL
	s COLOR_MASK
	t COLOR
	u fboMode
	v fboBlitMode
	a ()V _pushLightingAttributes
	b ()V _pushTextureAttributes
	c ()V _popAttributes
	d ()V _disableAlphaTest
	e ()V _enableAlphaTest
	a (IF)V _alphaFunc
	f ()V _enableLighting
	g ()V _disableLighting
	a (I)V _enableLight
	h ()V _enableColorMaterial
	i ()V _disableColorMaterial
	a (II)V _colorMaterial
	a (IILjava/nio/FloatBuffer;)V _light
	a (ILjava/nio/FloatBuffer;)V _lightModel
	a (FFF)V _normal3f
	j ()V _disableDepthTest
	k ()V _enableDepthTest
	b (I)V _depthFunc
	a (Z)V _depthMask
	l ()V _disableBlend
	m ()V _enableBlend
	b (II)V _blendFunc
	a (IIII)V _blendFuncSeparate
	a (FFFF)V _blendColor
	c (I)V _blendEquation
	a (Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; _init_fbo
	c (II)I glGetProgrami
	d (II)V glAttachShader
	d (I)V glDeleteShader
	e (I)I glCreateShader
	a (ILjava/lang/CharSequence;)V glShaderSource
	f (I)V glCompileShader
	e (II)I glGetShaderi
	g (I)V _glUseProgram
	n ()I glCreateProgram
	h (I)V glDeleteProgram
	i (I)V glLinkProgram
	b (ILjava/lang/CharSequence;)I _glGetUniformLocation
	a (ILjava/nio/IntBuffer;)V _glUniform1
	f (II)V _glUniform1i
	b (ILjava/nio/FloatBuffer;)V _glUniform1
	b (ILjava/nio/IntBuffer;)V _glUniform2
	c (ILjava/nio/FloatBuffer;)V _glUniform2
	c (ILjava/nio/IntBuffer;)V _glUniform3
	d (ILjava/nio/FloatBuffer;)V _glUniform3
	d (ILjava/nio/IntBuffer;)V _glUniform4
	e (ILjava/nio/FloatBuffer;)V _glUniform4
	a (IZLjava/nio/FloatBuffer;)V _glUniformMatrix2
	b (IZLjava/nio/FloatBuffer;)V _glUniformMatrix3
	c (IZLjava/nio/FloatBuffer;)V _glUniformMatrix4
	c (ILjava/lang/CharSequence;)I _glGetAttribLocation
	o ()I _glGenBuffers
	g (II)V _glBindBuffer
	a (ILjava/nio/ByteBuffer;I)V _glBufferData
	j (I)V _glDeleteBuffers
	a (IIIIIIII)V _glCopyTexSubImage2D
	h (II)V _glBindFramebuffer
	p ()I getFramebufferDepthTexture
	a (IIIIIIIIII)V _glBlitFrameBuffer
	k (I)V _glDeleteFramebuffers
	q ()I glGenFramebuffers
	l (I)I glCheckFramebufferStatus
	a (IIIII)V _glFramebufferTexture2D
	r ()I getActiveTextureName
	m (I)V glActiveTexture
	n (I)V _glClientActiveTexture
	a (IFF)V _glMultiTexCoord2f
	b (IIII)V glBlendFuncSeparate
	i (II)Ljava/lang/String; glGetShaderInfoLog
	j (II)Ljava/lang/String; glGetProgramInfoLog
	s ()V setupOutline
	t ()V teardownOutline
	k (II)V setupOverlayColor
	u ()V teardownOverlayColor
	o (II)V color1arg
	d (IIII)V color3arg
	p (II)V alpha1arg
	a (Lg;Lg;Lb;)V setupLevelDiffuseLighting
	a (Lg;Lg;)V setupGuiFlatDiffuseLighting
	b (Lg;Lg;)V setupGui3DDiffuseLighting
	e (FFFF)Ljava/nio/FloatBuffer; getBuffer
	v ()V setupEndPortalTexGen
	w ()V clearTexGen
	x ()V mulTextureByProjModelView
	y ()V _enableFog
	z ()V _disableFog
	o (I)V _fogMode
	a (F)V _fogDensity
	b (F)V _fogStart
	c (F)V _fogEnd
	a (I[F)V _fog
	l (II)V _fogi
	A ()V _enableCull
	B ()V _disableCull
	m (II)V _polygonMode
	C ()V _enablePolygonOffset
	D ()V _disablePolygonOffset
	E ()V _enableLineOffset
	F ()V _disableLineOffset
	a (FF)V _polygonOffset
	G ()V _enableColorLogicOp
	H ()V _disableColorLogicOp
	p (I)V _logicOp
	a (Ldej$t;)V _enableTexGen
	b (Ldej$t;)V _disableTexGen
	a (Ldej$t;I)V _texGenMode
	a (Ldej$t;ILjava/nio/FloatBuffer;)V _texGenParam
	c (Ldej$t;)Ldej$u; getTexGen
	q (I)V _activeTexture
	I ()V _enableTexture
	J ()V _disableTexture
	a (III)V _texEnv
	a (IIF)V _texParameter
	b (III)V _texParameter
	c (III)I _getTexLevelParameter
	K ()I _genTexture
	a ([I)V _genTextures
	r (I)V _deleteTexture
	b ([I)V _deleteTextures
	s (I)V _bindTexture
	a (IIIIIIIILjava/nio/IntBuffer;)V _texImage2D
	a (IIIIIIIIJ)V _texSubImage2D
	a (IIIIJ)V _getTexImage
	t (I)V _shadeModel
	L ()V _enableRescaleNormal
	M ()V _disableRescaleNormal
	c (IIII)V _viewport
	a (ZZZZ)V _colorMask
	d (III)V _stencilFunc
	u (I)V _stencilMask
	e (III)V _stencilOp
	a (D)V _clearDepth
	b (FFFF)V _clearColor
	v (I)V _clearStencil
	a (IZ)V _clear
	w (I)V _matrixMode
	N ()V _loadIdentity
	O ()V _pushMatrix
	P ()V _popMatrix
	f (ILjava/nio/FloatBuffer;)V _getMatrix
	a (DDDDDD)V _ortho
	c (FFFF)V _rotatef
	b (FFF)V _scalef
	a (DDD)V _scaled
	c (FFF)V _translatef
	b (DDD)V _translated
	a (Ljava/nio/FloatBuffer;)V _multMatrix
	a (Lb;)V _multMatrix
	d (FFFF)V _color4f
	Q ()V _clearCurrentColor
	a (IIJ)V _normalPointer
	a (IIIJ)V _texCoordPointer
	b (IIIJ)V _vertexPointer
	c (IIIJ)V _colorPointer
	a (IIIZIJ)V _vertexAttribPointer
	x (I)V _enableClientState
	y (I)V _disableClientState
	z (I)V _enableVertexAttribArray
	A (I)V _disableVertexAttribArray
	f (III)V _drawArrays
	d (F)V _lineWidth
	n (II)V _pixelStore
	b (IF)V _pixelTransfer
	a (IIIIIILjava/nio/ByteBuffer;)V _readPixels
	R ()I _getError
	B (I)Ljava/lang/String; _getString
	C (I)I _getInteger
	S ()Z supportsFramebufferBlit
	D (I)[Ldej$w; lambda$static$4
	E (I)Ldej$w; lambda$static$3
	F (I)[Ldej$c; lambda$static$2
	G (I)Ldej$c; lambda$static$1
	b (Ljava/nio/FloatBuffer;)V lambda$static$0
	<clinit> ()V <clinit>
dej$1 com/mojang/blaze3d/platform/GlStateManager$1
	a $SwitchMap$com$mojang$blaze3d$platform$GlStateManager$FboMode
	b $SwitchMap$com$mojang$blaze3d$platform$GlStateManager$FboBlitMode
	c $SwitchMap$com$mojang$blaze3d$platform$GlStateManager$TexGen
	<clinit> ()V <clinit>
dej$a com/mojang/blaze3d/platform/GlStateManager$AlphaState
	a mode
	b func
	c reference
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$b com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$c com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	<init> (I)V <init>
	a ()V disable
	b ()V enable
	a (Z)V setEnabled
dej$d com/mojang/blaze3d/platform/GlStateManager$Color
	a r
	b g
	c b
	d a
	<init> ()V <init>
	<init> (FFFF)V <init>
dej$e com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$f com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$g com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState
	a enable
	b face
	c mode
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$h com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$i com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$j com/mojang/blaze3d/platform/GlStateManager$DestFactor
	a CONSTANT_ALPHA
	b CONSTANT_COLOR
	c DST_ALPHA
	d DST_COLOR
	e ONE
	f ONE_MINUS_CONSTANT_ALPHA
	g ONE_MINUS_CONSTANT_COLOR
	h ONE_MINUS_DST_ALPHA
	i ONE_MINUS_DST_COLOR
	j ONE_MINUS_SRC_ALPHA
	k ONE_MINUS_SRC_COLOR
	l SRC_ALPHA
	m SRC_COLOR
	n ZERO
	o value
	p $VALUES
	values ()[Ldej$j; values
	valueOf (Ljava/lang/String;)Ldej$j; valueOf
	<init> (Ljava/lang/String;II)V <init>
	<clinit> ()V <clinit>
dej$k com/mojang/blaze3d/platform/GlStateManager$FboBlitMode
	a BASE
	b EXT
	c NONE
	d $VALUES
	values ()[Ldej$k; values
	valueOf (Ljava/lang/String;)Ldej$k; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dej$l com/mojang/blaze3d/platform/GlStateManager$FboMode
	a BASE
	b ARB
	c EXT
	d $VALUES
	values ()[Ldej$l; values
	valueOf (Ljava/lang/String;)Ldej$l; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dej$m com/mojang/blaze3d/platform/GlStateManager$FogMode
	a LINEAR
	b EXP
	c EXP2
	d value
	e $VALUES
	values ()[Ldej$m; values
	valueOf (Ljava/lang/String;)Ldej$m; valueOf
	<init> (Ljava/lang/String;II)V <init>
	<clinit> ()V <clinit>
dej$n com/mojang/blaze3d/platform/GlStateManager$FogState
	a enable
	b mode
	c density
	d start
	e end
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$o com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
	values ()[Ldej$o; values
	valueOf (Ljava/lang/String;)Ldej$o; valueOf
	<init> (Ljava/lang/String;II)V <init>
	<clinit> ()V <clinit>
dej$p com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$q com/mojang/blaze3d/platform/GlStateManager$SourceFactor
	a CONSTANT_ALPHA
	b CONSTANT_COLOR
	c DST_ALPHA
	d DST_COLOR
	e ONE
	f ONE_MINUS_CONSTANT_ALPHA
	g ONE_MINUS_CONSTANT_COLOR
	h ONE_MINUS_DST_ALPHA
	i ONE_MINUS_DST_COLOR
	j ONE_MINUS_SRC_ALPHA
	k ONE_MINUS_SRC_COLOR
	l SRC_ALPHA
	m SRC_ALPHA_SATURATE
	n SRC_COLOR
	o ZERO
	p value
	q $VALUES
	values ()[Ldej$q; values
	valueOf (Ljava/lang/String;)Ldej$q; valueOf
	<init> (Ljava/lang/String;II)V <init>
	<clinit> ()V <clinit>
dej$r com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$s com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$t com/mojang/blaze3d/platform/GlStateManager$TexGen
	a S
	b T
	c R
	d Q
	e $VALUES
	values ()[Ldej$t; values
	valueOf (Ljava/lang/String;)Ldej$t; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dej$u com/mojang/blaze3d/platform/GlStateManager$TexGenCoord
	a enable
	b coord
	c mode
	<init> (II)V <init>
dej$v com/mojang/blaze3d/platform/GlStateManager$TexGenState
	a s
	b t
	c r
	d q
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$w com/mojang/blaze3d/platform/GlStateManager$TextureState
	a enable
	b binding
	<init> ()V <init>
	<init> (Ldej$1;)V <init>
dej$x com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
	values ()[Ldej$x; values
	valueOf (Ljava/lang/String;)Ldej$x; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dek com/mojang/blaze3d/platform/GlUtil
	a (Ldet;)V populateSnooperWithOpenGL
	a (I)Ljava/nio/ByteBuffer; allocateMemory
	a (Ljava/nio/Buffer;)V freeMemory
	a ()Ljava/lang/String; getVendor
	b ()Ljava/lang/String; getCpuInfo
	c ()Ljava/lang/String; getRenderer
	d ()Ljava/lang/String; getOpenGLVersion
del com/mojang/blaze3d/platform/InputConstants
	b glfwRawMouseMotionSupported
	c GLFW_RAW_MOUSE_MOTION
	a UNKNOWN
	a (II)Ldel$a; getKey
	a (Ljava/lang/String;)Ldel$a; getKey
	a (JI)Z isKeyDown
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V setupMouseCallbacks
	a (JIDD)V grabOrReleaseMouse
	a ()Z isRawMouseInputSupported
	a (JZ)V updateRawMouseInput
	<clinit> ()V <clinit>
del$1 com/mojang/blaze3d/platform/InputConstants$1
del$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d displayName
	e NAME_MAP
	<init> (Ljava/lang/String;Ldel$b;I)V <init>
	a ()Ldel$b; getType
	b ()I getValue
	c ()Ljava/lang/String; getName
	d ()Lnr; getDisplayName
	e ()Ljava/util/OptionalInt; getNumericKeyValue
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Ldel$b;ILjava/lang/String;)Lnr; lambda$new$0
	<init> (Ljava/lang/String;Ldel$b;ILdel$1;)V <init>
	f ()Ljava/util/Map; access$200
	<clinit> ()V <clinit>
del$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d map
	e defaultPrefix
	f displayTextSupplier
	g $VALUES
	values ()[Ldel$b; values
	valueOf (Ljava/lang/String;)Ldel$b; valueOf
	a (Ldel$b;Ljava/lang/String;I)V addKey
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V <init>
	a (I)Ldel$a; getOrCreate
	b (I)Ldel$a; lambda$getOrCreate$3
	a (Ljava/lang/Integer;Ljava/lang/String;)Lnr; lambda$static$2
	b (Ljava/lang/Integer;Ljava/lang/String;)Lnr; lambda$static$1
	c (Ljava/lang/Integer;Ljava/lang/String;)Lnr; lambda$static$0
	a (Ldel$b;)Ljava/util/function/BiFunction; access$100
	b (Ldel$b;)Ljava/lang/String; access$300
	<clinit> ()V <clinit>
dem com/mojang/blaze3d/platform/Lighting
	a DIFFUSE_LIGHT_0
	b DIFFUSE_LIGHT_1
	c NETHER_DIFFUSE_LIGHT_0
	d NETHER_DIFFUSE_LIGHT_1
	a ()V turnBackOn
	b ()V turnOff
	a (Lb;)V setupNetherLevel
	b (Lb;)V setupLevel
	c ()V setupForFlatItems
	d ()V setupFor3DItems
	<clinit> ()V <clinit>
den com/mojang/blaze3d/platform/MemoryTracker
	a (I)Ljava/nio/ByteBuffer; createByteBuffer
	b (I)Ljava/nio/FloatBuffer; createFloatBuffer
deo com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	<init> (J)V <init>
	a ()V refreshVideoModes
	a (Ljava/util/Optional;)Ldev; getPreferredVidMode
	a (Ldev;)I getVideoModeIndex
	b ()Ldev; getCurrentMode
	c ()I getX
	d ()I getY
	a (I)Ldev; getMode
	e ()I getModeCount
	f ()J getMonitor
	toString ()Ljava/lang/String; toString
dep com/mojang/blaze3d/platform/MonitorCreator
	createMonitor (J)Ldeo; createMonitor
deq com/mojang/blaze3d/platform/NativeImage
	a LOGGER
	b OPEN_OPTIONS
	c format
	d width
	e height
	f useStbFree
	g pixels
	h size
	<init> (IIZ)V <init>
	<init> (Ldeq$a;IIZ)V <init>
	<init> (Ldeq$a;IIZJ)V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/io/InputStream;)Ldeq; read
	a (Ldeq$a;Ljava/io/InputStream;)Ldeq; read
	a (Ljava/nio/ByteBuffer;)Ldeq; read
	a (Ldeq$a;Ljava/nio/ByteBuffer;)Ldeq; read
	a (Z)V setClamp
	a (ZZ)V setFilter
	h ()V checkAllocated
	close ()V close
	a ()I getWidth
	b ()I getHeight
	c ()Ldeq$a; format
	a (II)I getPixelRGBA
	a (III)V setPixelRGBA
	b (II)B getLuminanceOrAlpha
	d ()[I makePixelArray
	a (IIIZ)V upload
	a (IIIIIIIZZ)V upload
	a (IIIIIIIZZZZ)V upload
	b (IIIIIIIZZZZ)V _upload
	a (IZ)V downloadTexture
	a (Ljava/io/File;)V writeToFile
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (Ljava/nio/file/Path;)V writeToFile
	e ()[B asByteArray
	a (Ljava/nio/channels/WritableByteChannel;)Z writeToChannel
	a (Ldeq;)V copyFrom
	a (IIIII)V fillRect
	a (IIIIIIZZ)V copyRect
	f ()V flipY
	a (IIIILdeq;)V resizeSubRectTo
	g ()V untrack
	a (Ljava/lang/String;)Ldeq; fromBase64
	a (I)I getA
	b (I)I getR
	c (I)I getG
	d (I)I getB
	a (IIII)I combine
	c (IIIIIIIZZZZ)V lambda$upload$0
	<clinit> ()V <clinit>
deq$1 com/mojang/blaze3d/platform/NativeImage$1
deq$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	values ()[Ldeq$a; values
	valueOf (Ljava/lang/String;)Ldeq$a; valueOf
	<init> (Ljava/lang/String;IIIZZZZZIIIIIZ)V <init>
	a ()I components
	b ()V setPackPixelStoreState
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasAlpha
	f ()I alphaOffset
	g ()Z hasLuminanceOrAlpha
	h ()I luminanceOrAlphaOffset
	i ()Z supportedByStb
	b (I)Ldeq$a; getStbFormat
	a (Ldeq$a;)I access$000
	a (I)Ldeq$a; access$100
	<clinit> ()V <clinit>
deq$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e INTENSITY
	f glFormat
	g $VALUES
	values ()[Ldeq$b; values
	valueOf (Ljava/lang/String;)Ldeq$b; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I glFormat
	<clinit> ()V <clinit>
deq$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	<init> (Ljava/nio/channels/WritableByteChannel;)V <init>
	invoke (JJI)V invoke
	a ()V throwIfException
	<init> (Ljava/nio/channels/WritableByteChannel;Ldeq$1;)V <init>
der com/mojang/blaze3d/platform/PngInfo
	a width
	b height
	<init> (Ljava/lang/String;Ljava/io/InputStream;)V <init>
	a (Ljava/io/InputStream;)Lder$a; createCallbacks
der$1 com/mojang/blaze3d/platform/PngInfo$1
der$a com/mojang/blaze3d/platform/PngInfo$StbReader
	a closed
	<init> ()V <init>
	a (JJI)I read
	a (JI)V skip
	a (J)I eof
	b (JI)I read
	a (I)V skip
	close ()V close
	<init> (Lder$1;)V <init>
der$b com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel
	b channel
	c readBufferAddress
	d bufferSize
	e read
	f consumed
	<init> (Ljava/nio/channels/ReadableByteChannel;)V <init>
	b (I)V fillReadBuffer
	b (JI)I read
	a (I)V skip
	close ()V close
	<init> (Ljava/nio/channels/ReadableByteChannel;Lder$1;)V <init>
der$c com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel
	b channel
	<init> (Ljava/nio/channels/SeekableByteChannel;)V <init>
	b (JI)I read
	a (I)V skip
	a (J)I eof
	close ()V close
	<init> (Ljava/nio/channels/SeekableByteChannel;Lder$1;)V <init>
des com/mojang/blaze3d/platform/ScreenManager
	a monitors
	b monitorCreator
	<init> (Ldep;)V <init>
	a (JI)V onMonitorChange
	a (J)Ldeo; getMonitor
	a (Ldew;)Ldeo; findBestMonitor
	a (III)I clamp
	a ()V shutdown
det com/mojang/blaze3d/platform/SnooperAccess
deu com/mojang/blaze3d/platform/TextureUtil
	a LOGGER
	a ()I generateTextureId
	a (I)V releaseTextureId
	a (III)V prepareImage
	a (Ldeq$b;III)V prepareImage
	a (IIII)V prepareImage
	a (Ldeq$b;IIII)V prepareImage
	b (I)V bind
	a (Ljava/io/InputStream;)Ljava/nio/ByteBuffer; readResource
	b (Ljava/io/InputStream;)Ljava/lang/String; readResourceAsString
	a (Ljava/nio/IntBuffer;II)V initTexture
	<clinit> ()V <clinit>
dev com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	<init> (IIIIII)V <init>
	<init> (Lorg/lwjgl/glfw/GLFWVidMode$Buffer;)V <init>
	<init> (Lorg/lwjgl/glfw/GLFWVidMode;)V <init>
	a ()I getWidth
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Ljava/util/Optional; read
	g ()Ljava/lang/String; write
	<clinit> ()V <clinit>
dew com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c eventHandler
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x framerateLimit
	y vsync
	<init> (Ldex;Ldes;Ldeg;Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()I getRefreshRate
	b ()Z shouldClose
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Ljava/io/InputStream;Ljava/io/InputStream;)V setIcon
	a (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; readIconPixels
	a (Ljava/lang/String;)V setErrorSection
	u ()V setBootErrorCallback
	b (IJ)V bootCrash
	a (IJ)V defaultErrorCallback
	c ()V setDefaultErrorCallback
	a (Z)V updateVsync
	close ()V close
	a (JII)V onMove
	b (JII)V onFramebufferResize
	v ()V refreshFramebufferSize
	c (JII)V onResize
	a (JZ)V onFocus
	b (JZ)V onEnter
	a (I)V setFramerateLimit
	d ()I getFramerateLimit
	e ()V updateDisplay
	f ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	g ()V changeFullscreenVideoMode
	w ()V setMode
	h ()V toggleFullScreen
	c (Z)V updateFullscreen
	a (IZ)I calculateScale
	a (D)V setGuiScale
	b (Ljava/lang/String;)V setTitle
	i ()J getWindow
	j ()Z isFullscreen
	k ()I getWidth
	l ()I getHeight
	b (I)V setWidth
	c (I)V setHeight
	m ()I getScreenWidth
	n ()I getScreenHeight
	o ()I getGuiScaledWidth
	p ()I getGuiScaledHeight
	q ()I getX
	r ()I getY
	s ()D getGuiScale
	t ()Ldeo; findBestMonitor
	b (Z)V updateRawMouseInput
	<clinit> ()V <clinit>
dew$1 com/mojang/blaze3d/platform/Window$1
dew$a com/mojang/blaze3d/platform/Window$WindowInitFailed
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ldew$1;)V <init>
dex com/mojang/blaze3d/platform/WindowEventHandler
	a (Z)V setWindowActive
	a ()V resizeDisplay
	b ()V cursorEntered
dey com/mojang/blaze3d/shaders/AbstractUniform
	<init> ()V <init>
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	b (FFFF)V setSafe
	a (IIII)V setSafe
	a ([F)V set
	a (Lb;)V set
dez com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	<init> (ZZIIIII)V <init>
	<init> ()V <init>
	<init> (III)V <init>
	<init> (IIIII)V <init>
	a ()V apply
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	b ()Z isOpaque
	a (Ljava/lang/String;)I stringToBlendFunc
	b (Ljava/lang/String;)I stringToBlendFactor
dfa com/mojang/blaze3d/shaders/Effect
	a ()I getId
	b ()V markDirty
	c ()Ldfb; getVertexProgram
	d ()Ldfb; getFragmentProgram
dfb com/mojang/blaze3d/shaders/Program
	a type
	b name
	c id
	d references
	<init> (Ldfb$a;ILjava/lang/String;)V <init>
	a (Ldfa;)V attachToEffect
	a ()V close
	b ()Ljava/lang/String; getName
	a (Ldfb$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ldfb; compileShader
dfb$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	values ()[Ldfb$a; values
	valueOf (Ljava/lang/String;)Ldfb$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;I)V <init>
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getExtension
	d ()I getGlType
	c ()Ljava/util/Map; getPrograms
	a (Ldfb$a;)I access$000
	<clinit> ()V <clinit>
dfc com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	a (I)V glUseProgram
	a (Ldfa;)V releaseProgram
	a ()I createProgram
	b (Ldfa;)V linkProgram
	<clinit> ()V <clinit>
dfd com/mojang/blaze3d/shaders/Uniform
	a LOGGER
	b location
	c count
	d type
	e intValues
	f floatValues
	g name
	h dirty
	i parent
	<init> (Ljava/lang/String;IILdfa;)V <init>
	a (ILjava/lang/CharSequence;)I glGetUniformLocation
	a (II)V uploadInteger
	b (ILjava/lang/CharSequence;)I glGetAttribLocation
	close ()V close
	c ()V markDirty
	a (Ljava/lang/String;)I getTypeFromString
	a (I)V setLocation
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	b (FFFF)V setSafe
	a (IIII)V setSafe
	a ([F)V set
	a (Lb;)V set
	b ()V upload
	d ()V uploadAsInteger
	e ()V uploadAsFloat
	f ()V uploadAsMatrix
	<clinit> ()V <clinit>
com/mojang/blaze3d/systems/RenderSystem com/mojang/blaze3d/systems/RenderSystem
	LOGGER LOGGER
	recordingQueue recordingQueue
	RENDER_THREAD_TESSELATOR RENDER_THREAD_TESSELATOR
	DEFAULTALPHACUTOFF DEFAULTALPHACUTOFF
	MINIMUM_ATLAS_TEXTURE_SIZE MINIMUM_ATLAS_TEXTURE_SIZE
	isReplayingQueue isReplayingQueue
	gameThread gameThread
	renderThread renderThread
	MAX_SUPPORTED_TEXTURE_SIZE MAX_SUPPORTED_TEXTURE_SIZE
	isInInit isInInit
	lastDrawTime lastDrawTime
	<init> ()V <init>
	initRenderThread ()V initRenderThread
	isOnRenderThread ()Z isOnRenderThread
	isOnRenderThreadOrInit ()Z isOnRenderThreadOrInit
	initGameThread (Z)V initGameThread
	isOnGameThread ()Z isOnGameThread
	isOnGameThreadOrInit ()Z isOnGameThreadOrInit
	assertThread (Ljava/util/function/Supplier;)V assertThread
	isInInitPhase ()Z isInInitPhase
	recordRenderCall (Ldeb;)V recordRenderCall
	flipFrame (J)V flipFrame
	replayQueue ()V replayQueue
	limitDisplayFPS (I)V limitDisplayFPS
	pushLightingAttributes ()V pushLightingAttributes
	pushTextureAttributes ()V pushTextureAttributes
	popAttributes ()V popAttributes
	disableAlphaTest ()V disableAlphaTest
	enableAlphaTest ()V enableAlphaTest
	alphaFunc (IF)V alphaFunc
	enableLighting ()V enableLighting
	disableLighting ()V disableLighting
	enableColorMaterial ()V enableColorMaterial
	disableColorMaterial ()V disableColorMaterial
	colorMaterial (II)V colorMaterial
	normal3f (FFF)V normal3f
	disableDepthTest ()V disableDepthTest
	enableDepthTest ()V enableDepthTest
	depthFunc (I)V depthFunc
	depthMask (Z)V depthMask
	enableBlend ()V enableBlend
	disableBlend ()V disableBlend
	blendFunc (Ldej$q;Ldej$j;)V blendFunc
	blendFunc (II)V blendFunc
	blendFuncSeparate (Ldej$q;Ldej$j;Ldej$q;Ldej$j;)V blendFuncSeparate
	blendFuncSeparate (IIII)V blendFuncSeparate
	blendEquation (I)V blendEquation
	blendColor (FFFF)V blendColor
	enableFog ()V enableFog
	disableFog ()V disableFog
	fogMode (Ldej$m;)V fogMode
	fogMode (I)V fogMode
	fogDensity (F)V fogDensity
	fogStart (F)V fogStart
	fogEnd (F)V fogEnd
	fog (IFFFF)V fog
	fogi (II)V fogi
	enableCull ()V enableCull
	disableCull ()V disableCull
	polygonMode (II)V polygonMode
	enablePolygonOffset ()V enablePolygonOffset
	disablePolygonOffset ()V disablePolygonOffset
	enableLineOffset ()V enableLineOffset
	disableLineOffset ()V disableLineOffset
	polygonOffset (FF)V polygonOffset
	enableColorLogicOp ()V enableColorLogicOp
	disableColorLogicOp ()V disableColorLogicOp
	logicOp (Ldej$o;)V logicOp
	activeTexture (I)V activeTexture
	enableTexture ()V enableTexture
	disableTexture ()V disableTexture
	texParameter (III)V texParameter
	deleteTexture (I)V deleteTexture
	bindTexture (I)V bindTexture
	shadeModel (I)V shadeModel
	enableRescaleNormal ()V enableRescaleNormal
	disableRescaleNormal ()V disableRescaleNormal
	viewport (IIII)V viewport
	colorMask (ZZZZ)V colorMask
	stencilFunc (III)V stencilFunc
	stencilMask (I)V stencilMask
	stencilOp (III)V stencilOp
	clearDepth (D)V clearDepth
	clearColor (FFFF)V clearColor
	clearStencil (I)V clearStencil
	clear (IZ)V clear
	matrixMode (I)V matrixMode
	loadIdentity ()V loadIdentity
	pushMatrix ()V pushMatrix
	popMatrix ()V popMatrix
	ortho (DDDDDD)V ortho
	rotatef (FFFF)V rotatef
	scalef (FFF)V scalef
	scaled (DDD)V scaled
	translatef (FFF)V translatef
	translated (DDD)V translated
	multMatrix (Lb;)V multMatrix
	color4f (FFFF)V color4f
	color3f (FFF)V color3f
	clearCurrentColor ()V clearCurrentColor
	drawArrays (III)V drawArrays
	lineWidth (F)V lineWidth
	pixelStore (II)V pixelStore
	pixelTransfer (IF)V pixelTransfer
	readPixels (IIIIIILjava/nio/ByteBuffer;)V readPixels
	getString (ILjava/util/function/Consumer;)V getString
	getBackendDescription ()Ljava/lang/String; getBackendDescription
	getApiDescription ()Ljava/lang/String; getApiDescription
	initBackendSystem ()Ljava/util/function/LongSupplier; initBackendSystem
	initRenderer (IZ)V initRenderer
	setErrorCallback (Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V setErrorCallback
	renderCrosshair (I)V renderCrosshair
	setupNvFogDistance ()V setupNvFogDistance
	glMultiTexCoord2f (IFF)V glMultiTexCoord2f
	getCapsString ()Ljava/lang/String; getCapsString
	setupDefaultState (IIII)V setupDefaultState
	maxSupportedTextureSize ()I maxSupportedTextureSize
	glBindBuffer (ILjava/util/function/Supplier;)V glBindBuffer
	glBufferData (ILjava/nio/ByteBuffer;I)V glBufferData
	glDeleteBuffers (I)V glDeleteBuffers
	glUniform1i (II)V glUniform1i
	glUniform1 (ILjava/nio/IntBuffer;)V glUniform1
	glUniform2 (ILjava/nio/IntBuffer;)V glUniform2
	glUniform3 (ILjava/nio/IntBuffer;)V glUniform3
	glUniform4 (ILjava/nio/IntBuffer;)V glUniform4
	glUniform1 (ILjava/nio/FloatBuffer;)V glUniform1
	glUniform2 (ILjava/nio/FloatBuffer;)V glUniform2
	glUniform3 (ILjava/nio/FloatBuffer;)V glUniform3
	glUniform4 (ILjava/nio/FloatBuffer;)V glUniform4
	glUniformMatrix2 (IZLjava/nio/FloatBuffer;)V glUniformMatrix2
	glUniformMatrix3 (IZLjava/nio/FloatBuffer;)V glUniformMatrix3
	glUniformMatrix4 (IZLjava/nio/FloatBuffer;)V glUniformMatrix4
	setupOutline ()V setupOutline
	teardownOutline ()V teardownOutline
	setupOverlayColor (Ljava/util/function/IntSupplier;I)V setupOverlayColor
	teardownOverlayColor ()V teardownOverlayColor
	setupLevelDiffuseLighting (Lg;Lg;Lb;)V setupLevelDiffuseLighting
	setupGuiFlatDiffuseLighting (Lg;Lg;)V setupGuiFlatDiffuseLighting
	setupGui3DDiffuseLighting (Lg;Lg;)V setupGui3DDiffuseLighting
	mulTextureByProjModelView ()V mulTextureByProjModelView
	setupEndPortalTexGen ()V setupEndPortalTexGen
	clearTexGen ()V clearTexGen
	beginInitialization ()V beginInitialization
	finishInitialization ()V finishInitialization
	glGenBuffers (Ljava/util/function/Consumer;)V glGenBuffers
	renderThreadTesselator ()Ldfl; renderThreadTesselator
	defaultBlendFunc ()V defaultBlendFunc
	defaultAlphaFunc ()V defaultAlphaFunc
	runAsFancy (Ljava/lang/Runnable;)V runAsFancy
	lambda$glGenBuffers$71 (Ljava/util/function/Consumer;)V lambda$glGenBuffers$71
	lambda$setupGui3DDiffuseLighting$70 (Lg;Lg;)V lambda$setupGui3DDiffuseLighting$70
	lambda$setupGuiFlatDiffuseLighting$69 (Lg;Lg;)V lambda$setupGuiFlatDiffuseLighting$69
	lambda$setupLevelDiffuseLighting$68 (Lg;Lg;Lb;)V lambda$setupLevelDiffuseLighting$68
	lambda$setupOverlayColor$67 (Ljava/util/function/IntSupplier;I)V lambda$setupOverlayColor$67
	lambda$glUniformMatrix4$66 (IZLjava/nio/FloatBuffer;)V lambda$glUniformMatrix4$66
	lambda$glUniformMatrix3$65 (IZLjava/nio/FloatBuffer;)V lambda$glUniformMatrix3$65
	lambda$glUniformMatrix2$64 (IZLjava/nio/FloatBuffer;)V lambda$glUniformMatrix2$64
	lambda$glUniform4$63 (ILjava/nio/FloatBuffer;)V lambda$glUniform4$63
	lambda$glUniform3$62 (ILjava/nio/FloatBuffer;)V lambda$glUniform3$62
	lambda$glUniform2$61 (ILjava/nio/FloatBuffer;)V lambda$glUniform2$61
	lambda$glUniform1$60 (ILjava/nio/FloatBuffer;)V lambda$glUniform1$60
	lambda$glUniform4$59 (ILjava/nio/IntBuffer;)V lambda$glUniform4$59
	lambda$glUniform3$58 (ILjava/nio/IntBuffer;)V lambda$glUniform3$58
	lambda$glUniform2$57 (ILjava/nio/IntBuffer;)V lambda$glUniform2$57
	lambda$glUniform1$56 (ILjava/nio/IntBuffer;)V lambda$glUniform1$56
	lambda$glUniform1i$55 (II)V lambda$glUniform1i$55
	lambda$glDeleteBuffers$54 (I)V lambda$glDeleteBuffers$54
	lambda$glBindBuffer$53 (ILjava/util/function/Supplier;)V lambda$glBindBuffer$53
	lambda$glMultiTexCoord2f$52 (IFF)V lambda$glMultiTexCoord2f$52
	lambda$renderCrosshair$51 (I)V lambda$renderCrosshair$51
	lambda$getString$50 (ILjava/util/function/Consumer;)V lambda$getString$50
	lambda$readPixels$49 (IIIIIILjava/nio/ByteBuffer;)V lambda$readPixels$49
	lambda$pixelTransfer$48 (IF)V lambda$pixelTransfer$48
	lambda$pixelStore$47 (II)V lambda$pixelStore$47
	lambda$lineWidth$46 (F)V lambda$lineWidth$46
	lambda$drawArrays$45 (III)V lambda$drawArrays$45
	lambda$color3f$44 (FFF)V lambda$color3f$44
	lambda$color4f$43 (FFFF)V lambda$color4f$43
	lambda$multMatrix$42 (Lb;)V lambda$multMatrix$42
	lambda$translated$41 (DDD)V lambda$translated$41
	lambda$translatef$40 (FFF)V lambda$translatef$40
	lambda$scaled$39 (DDD)V lambda$scaled$39
	lambda$scalef$38 (FFF)V lambda$scalef$38
	lambda$rotatef$37 (FFFF)V lambda$rotatef$37
	lambda$ortho$36 (DDDDDD)V lambda$ortho$36
	lambda$matrixMode$35 (I)V lambda$matrixMode$35
	lambda$clear$34 (IZ)V lambda$clear$34
	lambda$clearStencil$33 (I)V lambda$clearStencil$33
	lambda$clearColor$32 (FFFF)V lambda$clearColor$32
	lambda$clearDepth$31 (D)V lambda$clearDepth$31
	lambda$stencilOp$30 (III)V lambda$stencilOp$30
	lambda$stencilMask$29 (I)V lambda$stencilMask$29
	lambda$stencilFunc$28 (III)V lambda$stencilFunc$28
	lambda$colorMask$27 (ZZZZ)V lambda$colorMask$27
	lambda$viewport$26 (IIII)V lambda$viewport$26
	lambda$shadeModel$25 (I)V lambda$shadeModel$25
	lambda$bindTexture$24 (I)V lambda$bindTexture$24
	lambda$deleteTexture$23 (I)V lambda$deleteTexture$23
	lambda$texParameter$22 (III)V lambda$texParameter$22
	lambda$activeTexture$21 (I)V lambda$activeTexture$21
	lambda$logicOp$20 (Ldej$o;)V lambda$logicOp$20
	lambda$polygonOffset$19 (FF)V lambda$polygonOffset$19
	lambda$polygonMode$18 (II)V lambda$polygonMode$18
	lambda$fogi$17 (II)V lambda$fogi$17
	lambda$fog$16 (IFFFF)V lambda$fog$16
	lambda$fogEnd$15 (F)V lambda$fogEnd$15
	lambda$fogStart$14 (F)V lambda$fogStart$14
	lambda$fogDensity$13 (F)V lambda$fogDensity$13
	lambda$fogMode$12 (I)V lambda$fogMode$12
	lambda$fogMode$11 (Ldej$m;)V lambda$fogMode$11
	lambda$blendColor$10 (FFFF)V lambda$blendColor$10
	lambda$blendEquation$9 (I)V lambda$blendEquation$9
	lambda$blendFuncSeparate$8 (IIII)V lambda$blendFuncSeparate$8
	lambda$blendFuncSeparate$7 (Ldej$q;Ldej$j;Ldej$q;Ldej$j;)V lambda$blendFuncSeparate$7
	lambda$blendFunc$6 (II)V lambda$blendFunc$6
	lambda$blendFunc$5 (Ldej$q;Ldej$j;)V lambda$blendFunc$5
	lambda$depthMask$4 (Z)V lambda$depthMask$4
	lambda$depthFunc$3 (I)V lambda$depthFunc$3
	lambda$normal3f$2 (FFF)V lambda$normal3f$2
	lambda$colorMaterial$1 (II)V lambda$colorMaterial$1
	lambda$alphaFunc$0 (IF)V lambda$alphaFunc$0
	<clinit> ()V <clinit>
dfe com/mojang/blaze3d/vertex/BufferBuilder
	g LOGGER
	h buffer
	i vertexCounts
	j lastRenderedCountIndex
	k totalRenderedBytes
	l nextElementByte
	m totalUploadedBytes
	n vertices
	o currentElement
	p elementIndex
	q mode
	r format
	s fastFormat
	t fullFormat
	u building
	<init> (I)V <init>
	a ()V ensureVertexCapacity
	c (I)V ensureCapacity
	d (I)I roundUp
	a (FFF)V sortQuads
	a (Ljava/nio/FloatBuffer;I)V limitToVertex
	b ()Ldfe$b; getState
	a (Ljava/nio/FloatBuffer;FFFII)F getQuadDistanceFromPlayer
	a (Ldfe$b;)V restoreState
	a (ILdfo;)V begin
	a (Ldfo;)V switchFormat
	c ()V end
	a (IB)V putByte
	a (IS)V putShort
	a (IF)V putFloat
	d ()V endVertex
	e ()V nextElement
	a (IIII)Ldfn; color
	a (FFFFFFFFFIIFFF)V vertex
	f ()Lcom/mojang/datafixers/util/Pair; popNextBuffer
	g ()V clear
	h ()V discard
	i ()Ldfp; currentElement
	j ()Z building
	a ([FII)I lambda$sortQuads$0
	<clinit> ()V <clinit>
dfe$1 com/mojang/blaze3d/vertex/BufferBuilder$1
dfe$a com/mojang/blaze3d/vertex/BufferBuilder$DrawState
	a format
	b vertexCount
	c mode
	<init> (Ldfo;II)V <init>
	a ()Ldfo; format
	b ()I vertexCount
	c ()I mode
	<init> (Ldfo;IILdfe$1;)V <init>
dfe$b com/mojang/blaze3d/vertex/BufferBuilder$State
	a data
	b format
	<init> (Ljava/nio/ByteBuffer;Ldfo;)V <init>
	<init> (Ljava/nio/ByteBuffer;Ldfo;Ldfe$1;)V <init>
	a (Ldfe$b;)Ljava/nio/ByteBuffer; access$100
	b (Ldfe$b;)Ldfo; access$200
dff com/mojang/blaze3d/vertex/BufferUploader
	a (Ldfe;)V end
	a (Ljava/nio/ByteBuffer;ILdfo;I)V _end
	b (Ldfe;)V lambda$end$0
dfg com/mojang/blaze3d/vertex/BufferVertexConsumer
	i ()Ldfp; currentElement
	e ()V nextElement
	a (IB)V putByte
	a (IS)V putShort
	a (IF)V putFloat
	a (DDD)Ldfn; vertex
	a (IIII)Ldfn; color
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	a (SSI)Ldfn; uvShort
	b (FFF)Ldfn; normal
	a (F)B normalIntValue
dfh com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_UV2
	f ELEMENT_NORMAL
	g ELEMENT_PADDING
	h BLOCK
	i NEW_ENTITY
	j PARTICLE
	k POSITION
	l POSITION_COLOR
	m POSITION_COLOR_LIGHTMAP
	n POSITION_TEX
	o POSITION_COLOR_TEX
	p POSITION_TEX_COLOR
	q POSITION_COLOR_TEX_LIGHTMAP
	r POSITION_TEX_LIGHTMAP_COLOR
	s POSITION_TEX_COLOR_NORMAL
	<clinit> ()V <clinit>
dfi com/mojang/blaze3d/vertex/DefaultedVertexConsumer
	a defaultColorSet
	b defaultR
	c defaultG
	d defaultB
	e defaultA
	<init> ()V <init>
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
dfj com/mojang/blaze3d/vertex/PoseStack
	a poseStack
	<init> ()V <init>
	a (DDD)V translate
	a (FFF)V scale
	a (Ld;)V mulPose
	a ()V pushPose
	b ()V popPose
	c ()Ldfj$a; last
	d ()Z clear
	a (Ljava/util/ArrayDeque;)V lambda$new$0
dfj$1 com/mojang/blaze3d/vertex/PoseStack$1
dfj$a com/mojang/blaze3d/vertex/PoseStack$Pose
	a pose
	b normal
	<init> (Lb;La;)V <init>
	a ()Lb; pose
	b ()La; normal
	a (Ldfj$a;)Lb; access$000
	b (Ldfj$a;)La; access$100
	<init> (Lb;La;Ldfj$1;)V <init>
dfk com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator
	g delegate
	h cameraInversePose
	i normalInversePose
	j x
	k y
	l z
	m overlayU
	n overlayV
	o lightCoords
	p nx
	q ny
	r nz
	<init> (Ldfn;Lb;La;)V <init>
	a ()V resetState
	d ()V endVertex
	a (DDD)Ldfn; vertex
	a (IIII)Ldfn; color
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	b (FFF)Ldfn; normal
dfl com/mojang/blaze3d/vertex/Tesselator
	a builder
	b INSTANCE
	a ()Ldfl; getInstance
	<init> (I)V <init>
	<init> ()V <init>
	b ()V end
	c ()Ldfe; getBuilder
	<clinit> ()V <clinit>
dfm com/mojang/blaze3d/vertex/VertexBuffer
	a id
	b format
	c vertexCount
	<init> (Ldfo;)V <init>
	a ()V bind
	a (Ldfe;)V upload
	b (Ldfe;)Ljava/util/concurrent/CompletableFuture; uploadLater
	c (Ldfe;)V upload_
	a (Lb;I)V draw
	b ()V unbind
	close ()V close
	c ()Ljava/lang/Integer; lambda$unbind$5
	a (Ljava/lang/Runnable;)V lambda$uploadLater$4
	d (Ldfe;)V lambda$uploadLater$3
	e (Ldfe;)V lambda$upload$2
	d ()Ljava/lang/Integer; lambda$bind$1
	a (Ljava/lang/Integer;)V lambda$new$0
dfn com/mojang/blaze3d/vertex/VertexConsumer
	f LOGGER
	a (DDD)Ldfn; vertex
	a (IIII)Ldfn; color
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	b (FFF)Ldfn; normal
	d ()V endVertex
	a (FFFFFFFFFIIFFF)V vertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (FFFF)Ldfn; color
	a (I)Ldfn; uv2
	b (I)Ldfn; overlayCoords
	a (Ldfj$a;Leas;FFFII)V putBulkData
	a (Ldfj$a;Leas;[FFFF[IIZ)V putBulkData
	a (Lb;FFF)Ldfn; vertex
	a (La;FFF)Ldfn; normal
	<clinit> ()V <clinit>
dfo com/mojang/blaze3d/vertex/VertexFormat
	a elements
	b offsets
	c vertexSize
	<init> (Lcom/google/common/collect/ImmutableList;)V <init>
	toString ()Ljava/lang/String; toString
	a ()I getIntegerSize
	b ()I getVertexSize
	c ()Lcom/google/common/collect/ImmutableList; getElements
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (J)V setupBufferState
	d ()V clearBufferState
	b (J)V lambda$setupBufferState$0
dfp com/mojang/blaze3d/vertex/VertexFormatElement
	a LOGGER
	b type
	c usage
	d index
	e count
	f byteSize
	<init> (ILdfp$a;Ldfp$b;I)V <init>
	a (ILdfp$b;)Z supportsUsage
	a ()Ldfp$a; getType
	b ()Ldfp$b; getUsage
	c ()I getIndex
	toString ()Ljava/lang/String; toString
	d ()I getByteSize
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (JI)V setupBufferState
	e ()V clearBufferState
	<clinit> ()V <clinit>
dfp$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	values ()[Ldfp$a; values
	valueOf (Ljava/lang/String;)Ldfp$a; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;I)V <init>
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
	<clinit> ()V <clinit>
dfp$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e PADDING
	f GENERIC
	g name
	h setupState
	i clearState
	j $VALUES
	values ()[Ldfp$b; values
	valueOf (Ljava/lang/String;)Ldfp$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldfp$b$a;Ljava/util/function/IntConsumer;)V <init>
	a (IIIJI)V setupBufferState
	a (I)V clearBufferState
	a ()Ljava/lang/String; getName
	b (IIIJI)V lambda$static$10
	b (I)V lambda$static$9
	c (IIIJI)V lambda$static$8
	c (I)V lambda$static$7
	d (IIIJI)V lambda$static$6
	d (I)V lambda$static$5
	e (IIIJI)V lambda$static$4
	e (I)V lambda$static$3
	f (IIIJI)V lambda$static$2
	f (I)V lambda$static$1
	g (IIIJI)V lambda$static$0
	a (Ldfp$b;IIIJI)V access$000
	<clinit> ()V <clinit>
dfp$b$a com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState
	setupBufferState (IIIJI)V setupBufferState
dfq com/mojang/blaze3d/vertex/VertexMultiConsumer
	a (Ldfn;Ldfn;)Ldfn; create
dfq$a com/mojang/blaze3d/vertex/VertexMultiConsumer$Double
	a first
	b second
	<init> (Ldfn;Ldfn;)V <init>
	a (DDD)Ldfn; vertex
	a (IIII)Ldfn; color
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	b (FFF)Ldfn; normal
	a (FFFFFFFFFIIFFF)V vertex
	d ()V endVertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
a com/mojang/math/Matrix3f
	j G
	k CS
	l SS
	m SQ2
	a m00
	b m01
	c m02
	d m10
	e m11
	f m12
	g m20
	h m21
	i m22
	<init> ()V <init>
	<init> (Ld;)V <init>
	b (FFF)La; createScaleMatrix
	<init> (Lb;)V <init>
	<init> (La;)V <init>
	a (FFF)Lcom/mojang/datafixers/util/Pair; approxGivensQuat
	a (FF)Lcom/mojang/datafixers/util/Pair; qrGivensQuat
	c (La;)Ld; stepJacobi
	a ()V transpose
	b ()Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (La;)V load
	toString ()Ljava/lang/String; toString
	c ()V setIdentity
	e ()F adjugateAndDet
	f ()Z invert
	a (IIF)V set
	b (La;)V mul
	a (Ld;)V mul
	a (F)V mul
	d ()La; copy
	<clinit> ()V <clinit>
b com/mojang/math/Matrix4f
	a m00
	b m01
	c m02
	d m03
	e m10
	f m11
	g m12
	h m13
	i m20
	j m21
	k m22
	l m23
	m m30
	n m31
	o m32
	p m33
	<init> ()V <init>
	<init> (Lb;)V <init>
	<init> (Ld;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (II)I bufferIndex
	toString ()Ljava/lang/String; toString
	a (Ljava/nio/FloatBuffer;)V store
	a ()V setIdentity
	b ()F adjugateAndDet
	e ()V transpose
	c ()Z invert
	a (Lb;)V multiply
	a (Ld;)V multiply
	a (F)V multiply
	a (DFFF)Lb; perspective
	a (FFFF)Lb; orthographic
	a (Lg;)V translate
	d ()Lb; copy
	a (FFF)Lb; createScaleMatrix
	b (FFF)Lb; createTranslateMatrix
c com/mojang/math/OctahedralGroup
	a IDENTITY
	b ROT_180_FACE_XY
	c ROT_180_FACE_XZ
	d ROT_180_FACE_YZ
	e ROT_120_NNN
	f ROT_120_NNP
	g ROT_120_NPN
	h ROT_120_NPP
	i ROT_120_PNN
	j ROT_120_PNP
	k ROT_120_PPN
	l ROT_120_PPP
	m ROT_180_EDGE_XY_NEG
	n ROT_180_EDGE_XY_POS
	o ROT_180_EDGE_XZ_NEG
	p ROT_180_EDGE_XZ_POS
	q ROT_180_EDGE_YZ_NEG
	r ROT_180_EDGE_YZ_POS
	s ROT_90_X_NEG
	t ROT_90_X_POS
	u ROT_90_Y_NEG
	v ROT_90_Y_POS
	w ROT_90_Z_NEG
	x ROT_90_Z_POS
	y INVERSION
	z INVERT_X
	A INVERT_Y
	B INVERT_Z
	C ROT_60_REF_NNN
	D ROT_60_REF_NNP
	E ROT_60_REF_NPN
	F ROT_60_REF_NPP
	G ROT_60_REF_PNN
	H ROT_60_REF_PNP
	I ROT_60_REF_PPN
	J ROT_60_REF_PPP
	K SWAP_XY
	L SWAP_YZ
	M SWAP_XZ
	N SWAP_NEG_XY
	O SWAP_NEG_YZ
	P SWAP_NEG_XZ
	Q ROT_90_REF_X_NEG
	R ROT_90_REF_X_POS
	S ROT_90_REF_Y_NEG
	T ROT_90_REF_Y_POS
	U ROT_90_REF_Z_NEG
	V ROT_90_REF_Z_POS
	W transformation
	X name
	Y rotatedDirections
	Z invertX
	aa invertY
	ab invertZ
	ac permutation
	ad cayleyTable
	ae inverseTable
	af $VALUES
	values ()[Lc; values
	valueOf (Ljava/lang/String;)Lc; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Le;ZZZ)V <init>
	b ()Lit/unimi/dsi/fastutil/booleans/BooleanList; packInversions
	a (Lc;)Lc; compose
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	a (Lgc;)Lgc; rotate
	a (Lgc$a;)Z inverts
	a (Lge;)Lge; rotate
	a (I)[Lc; lambda$static$5
	b (Lc;)Lc; lambda$static$4
	a (Lc;Lc;)Z lambda$null$3
	a ([[Lc;)V lambda$static$2
	c (Lc;)Lc; lambda$null$1
	d (Lc;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	<clinit> ()V <clinit>
c$1 com/mojang/math/OctahedralGroup$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
d com/mojang/math/Quaternion
	a ONE
	b i
	c j
	d k
	e r
	<init> (FFFF)V <init>
	<init> (Lg;FZ)V <init>
	<init> (FFFZ)V <init>
	<init> (Ld;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()F i
	b ()F j
	c ()F k
	d ()F r
	a (Ld;)V mul
	a (F)V mul
	e ()V conj
	a (FFFF)V set
	b (F)F cos
	c (F)F sin
	f ()V normalize
	g ()Ld; copy
	<clinit> ()V <clinit>
e com/mojang/math/SymmetricGroup3
	a P123
	b P213
	c P132
	d P231
	e P312
	f P321
	g permutation
	h transformation
	i cayleyTable
	j $VALUES
	values ()[Le; values
	valueOf (Ljava/lang/String;)Le; valueOf
	<init> (Ljava/lang/String;IIII)V <init>
	a (Le;)Le; compose
	a (I)I permutation
	a ()La; transformation
	a ([[Le;)V lambda$static$1
	a ([ILe;)Z lambda$null$0
	<clinit> ()V <clinit>
f com/mojang/math/Transformation
	a matrix
	b decomposed
	c translation
	d leftRotation
	e scale
	f rightRotation
	g IDENTITY
	<init> (Lb;)V <init>
	<init> (Lg;Ld;Lg;Ld;)V <init>
	a ()Lf; identity
	a (Lf;)Lf; compose
	b ()Lf; inverse
	e ()V ensureDecomposed
	a (Lg;Ld;Lg;Ld;)Lb; compose
	a (Lb;)Lcom/mojang/datafixers/util/Pair; toAffine
	c ()Lb; getMatrix
	d ()Ld; getLeftRotation
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	f ()Lf; lambda$static$0
	<clinit> ()V <clinit>
dfr com/mojang/math/Vector3d
	a x
	b y
	c z
	<init> (DDD)V <init>
g com/mojang/math/Vector3f
	a XN
	b XP
	c YN
	d YP
	e ZN
	f ZP
	g x
	h y
	i z
	<init> ()V <init>
	<init> (FFF)V <init>
	<init> (Ldck;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()F x
	b ()F y
	c ()F z
	b (F)V mul
	b (FFF)V mul
	a (FF)V clamp
	a (FFF)V set
	c (FFF)V add
	a (Lg;)V add
	b (Lg;)V sub
	c (Lg;)F dot
	d ()Z normalize
	d (Lg;)V cross
	a (La;)V transform
	a (Ld;)V transform
	a (Lg;F)V lerp
	c (F)Ld; rotation
	a (F)Ld; rotationDegrees
	e ()Lg; copy
	a (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V map
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
h com/mojang/math/Vector4f
	a x
	b y
	c z
	d w
	<init> ()V <init>
	<init> (FFFF)V <init>
	<init> (Lg;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()F x
	b ()F y
	c ()F z
	d ()F w
	a (Lg;)V mul
	a (FFFF)V set
	a (Lh;)F dot
	e ()Z normalize
	a (Lb;)V transform
	a (Ld;)V transform
	f ()V perspectiveDivide
	toString ()Ljava/lang/String; toString
dfs com/mojang/realmsclient/KeyCombo
	a chars
	b matchIndex
	c onCompletion
	<init> ([CLjava/lang/Runnable;)V <init>
	a (C)Z keyPressed
	a ()V reset
	toString ()Ljava/lang/String; toString
dft com/mojang/realmsclient/RealmsMainScreen
	a LOGGER
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	p EXPIRED_ICON_LOCATION
	q EXPIRES_SOON_ICON_LOCATION
	r LEAVE_ICON_LOCATION
	s INVITATION_ICONS_LOCATION
	t INVITE_ICON_LOCATION
	u WORLDICON_LOCATION
	v LOGO_LOCATION
	w CONFIGURE_LOCATION
	x QUESTIONMARK_LOCATION
	y NEWS_LOCATION
	z POPUP_LOCATION
	A DARKEN_LOCATION
	B CROSS_ICON_LOCATION
	C TRIAL_ICON_LOCATION
	D BUTTON_LOCATION
	E NO_PENDING_INVITES_TEXT
	F PENDING_INVITES_TEXT
	G TRIAL_MESSAGE_LINES
	H SERVER_UNITIALIZED_TEXT
	I SUBSCRIPTION_EXPIRED_TEXT
	J SUBSCRIPTION_RENEW_TEXT
	K TRIAL_EXPIRED_TEXT
	L SUBSCRIPTION_CREATE_TEXT
	M SELECT_MINIGAME_PREFIX
	N POPUP_TEXT
	O SERVER_EXPIRED_TOOLTIP
	P SERVER_EXPIRES_SOON_TOOLTIP
	Q SERVER_EXPIRES_IN_DAY_TOOLTIP
	R SERVER_OPEN_TOOLTIP
	S SERVER_CLOSED_TOOLTIP
	T LEAVE_SERVER_TOOLTIP
	U CONFIGURE_SERVER_TOOLTIP
	V SERVER_INFO_TOOLTIP
	W NEWS_TOOLTIP
	X teaserImages
	Y REALMS_DATA_FETCHER
	Z overrideConfigure
	aa lastScrollYPosition
	ab hasParentalConsent
	ac checkedParentalConsent
	ad checkedClientCompatability
	ae realmsGenericErrorScreen
	af regionsPinged
	ag inviteNarrationLimiter
	ah dontSetConnectedToRealms
	ai lastScreen
	aj realmSelectionList
	ak selectedServerId
	al playButton
	am backButton
	an renewButton
	ao configureButton
	ap leaveButton
	aq toolTip
	ar realmsServers
	as numberOfPendingInvites
	at animTick
	au hasFetchedServers
	av popupOpenedByUser
	aw justClosedPopup
	ax trialsAvailable
	ay createdTrial
	az showingPopup
	aA hasUnreadNews
	aB newsLink
	aC carouselIndex
	aD carouselTick
	aE hasSwitchedCarouselImage
	aF keyCombos
	aG clicks
	aH connectLock
	aI formattedPopup
	aJ hoveredElement
	aK showPopupButton
	aL pendingInvitesButton
	aM newsButton
	aN createTrialButton
	aO buyARealmButton
	aP closeButton
	<init> (Ldoq;)V <init>
	B ()Z shouldShowMessageInList
	aq_ ()Z shouldShowPopup
	b ()V init
	C ()Z hasParentalConsent
	c ()V addButtons
	a (Ldgn;)V updateButtonStates
	D ()Z shouldShowPopupButton
	b (Ldgn;)Z shouldPlayButtonBeActive
	c (Ldgn;)Z shouldRenewButtonBeActive
	d (Ldgn;)Z shouldConfigureButtonBeVisible
	e (Ldgn;)Z shouldLeaveButtonBeVisible
	d ()V tick
	E ()V pingRegions
	F ()Ljava/util/List; getOwnedNonExpiredWorldIds
	e ()V removed
	G ()V onRenew
	H ()V checkClientCompatability
	I ()V checkUnreadNews
	J ()V checkParentalConsent
	K ()V switchToStage
	L ()V switchToLocal
	M ()V switchToProd
	N ()V stopRealmsFetcher
	f (Ldgn;)V configureClicked
	g (Ldgn;)V leaveClicked
	O ()V saveListScrollPosition
	a (J)Ldgn; findServer
	d (Z)V leaveServer
	h (Ldgn;)V removeServer
	ar_ ()V removeSelection
	a (III)Z keyPressed
	P ()V onClosePopup
	a (CI)Z charTyped
	a (Ldfj;IIF)V render
	a (Ldfj;II)V drawRealmsLogo
	a (DDI)Z mouseClicked
	a (DD)Z isOutsidePopup
	b (Ldfj;II)V drawPopup
	Q ()I popupX0
	R ()I popupY0
	a (Ldfj;IIIIZZ)V drawInvitationPendingIcon
	c (DD)Z inPendingInvitationArea
	a (Ldgn;Ldoq;)V play
	i (Ldgn;)Z isSelfOwnedServer
	j (Ldgn;)Z isSelfOwnedNonExpiredServer
	c (Ldfj;IIII)V drawExpired
	b (Ldfj;IIIII)V drawExpiring
	d (Ldfj;IIII)V drawOpen
	e (Ldfj;IIII)V drawClose
	f (Ldfj;IIII)V drawLeave
	g (Ldfj;IIII)V drawConfigure
	a (Ldfj;Ljava/util/List;II)V renderMousehoverTooltip
	a (Ldfj;IIIIZ)V renderMoreInfo
	a (Ldfj;IIZIIZZ)V renderNews
	b (Ldfj;)V renderLocal
	c (Ldfj;)V renderStage
	g ()Ldft; newScreen
	a (Lacf;)V updateTeaserImages
	a ([Lnr;)V setTooltip
	a (Ldlg;)V pendingButtonPress
	a (Lvk;)Z lambda$updateTeaserImages$14
	b (Ljava/lang/String;)Z lambda$updateTeaserImages$13
	a (CLdfs;)V lambda$charTyped$12
	a (Ldft$b;)Z lambda$removeServer$11
	S ()V lambda$pingRegions$10
	b (Ldlg;)V lambda$addButtons$9
	c (Ldlg;)V lambda$addButtons$8
	d (Ldlg;)V lambda$addButtons$7
	e (Ldlg;)V lambda$addButtons$6
	f (Ldlg;)V lambda$addButtons$5
	g (Ldlg;)V lambda$addButtons$4
	h (Ldlg;)V lambda$addButtons$3
	T ()V lambda$init$2
	U ()V lambda$init$1
	V ()V lambda$init$0
	a (Ldoq;)Ldoq; access$102
	a (Ldft;)Ldoq; access$200
	b (Ldft;)Ldjw; access$300
	c (Ldft;)Ldjw; access$400
	d (Ldft;)V access$500
	a (Z)Z access$602
	h ()Lorg/apache/logging/log4j/Logger; access$700
	e (Ldft;)Ldjw; access$800
	f (Ldft;)Ldjw; access$900
	g (Ldft;)Ldjw; access$1000
	i ()Ldoq; access$100
	h (Ldft;)Ldjw; access$1100
	i (Ldft;)Ldjw; access$1200
	j (Ldft;)Ldjw; access$1300
	b (Z)Z access$1402
	k (Ldft;)Ldjw; access$1500
	c (Z)Z access$1602
	l (Ldft;)Ldjw; access$1700
	m (Ldft;)Ldjw; access$1800
	n (Ldft;)Ldjw; access$1900
	j ()Ldhi; access$2000
	o (Ldft;)J access$2100
	a (Ldft;J)Ldgn; access$2200
	p (Ldft;)Ldjw; access$2300
	q (Ldft;)Ldjw; access$2400
	r (Ldft;)Ldjw; access$2500
	a (Ldft;Ldgn;)V access$2600
	s (Ldft;)Ldft$f; access$2700
	t (Ldft;)I access$2800
	a (Ldft;I)I access$2802
	u (Ldft;)Ljava/util/List; access$2900
	b (Ldft;J)J access$2102
	b (Ldft;Ldgn;)V access$3000
	v (Ldft;)Ldlg; access$3100
	a (Ldft;Z)Z access$3202
	w (Ldft;)Ldft$c; access$3300
	c (Ldft;Ldgn;)V access$3400
	d (Ldft;Ldgn;)V access$3500
	x (Ldft;)V access$3600
	k ()Ljava/util/List; access$3800
	y (Ldft;)Ldkr; access$3900
	z (Ldft;)Ldjw; access$4000
	l ()Lvk; access$4100
	A (Ldft;)Ldjw; access$4200
	B (Ldft;)I access$4300
	C (Ldft;)Ldkr; access$4400
	m ()Lnr; access$4500
	a (Ldft;Ldfj;IIII)V access$4600
	b (Ldft;Ldfj;IIII)V access$4700
	e (Ldft;Ldgn;)Z access$4800
	a (Ldft;Ldfj;IIIII)V access$4900
	c (Ldft;Ldfj;IIII)V access$5000
	n ()Z access$5100
	d (Ldft;Ldfj;IIII)V access$5200
	e (Ldft;Ldfj;IIII)V access$5300
	D (Ldft;)Ldkr; access$5400
	E (Ldft;)Ldkr; access$5500
	F (Ldft;)Ldkr; access$5600
	a (Ldft;[Lnr;)V access$5700
	o ()Lvk; access$5800
	G (Ldft;)Ldjw; access$5900
	p ()Lnr; access$6000
	q ()Lnr; access$6100
	r ()Lnr; access$6200
	s ()Lnr; access$6300
	H (Ldft;)Ldkr; access$6400
	I (Ldft;)Ldkr; access$6500
	a (Ldft;Ldft$c;)Ldft$c; access$3302
	J (Ldft;)Ldkr; access$6600
	K (Ldft;)Ldkr; access$6700
	t ()Lnr; access$6800
	L (Ldft;)Ldkr; access$6900
	M (Ldft;)Ldkr; access$7000
	N (Ldft;)Ldkr; access$7100
	O (Ldft;)Ldkr; access$7200
	P (Ldft;)Ldkr; access$7300
	Q (Ldft;)Ldkr; access$7400
	R (Ldft;)I access$7500
	a (Ldft;Ldfj;IIIIZZ)V access$7600
	a (Ldft;Ldlg;)V access$7700
	S (Ldft;)Z access$7800
	a (Ldft;Ldfj;IIZIIZZ)V access$7900
	T (Ldft;)Ljava/lang/String; access$8000
	b (Ldft;Z)Z access$7802
	a (Ldft;Ldfj;IIIIZ)V access$8100
	U (Ldft;)Z access$3200
	V (Ldft;)I access$8200
	W (Ldft;)I access$8300
	u ()Lvk; access$8400
	X (Ldft;)Ldjw; access$8500
	Y (Ldft;)V access$8600
	<clinit> ()V <clinit>
dft$1 com/mojang/realmsclient/RealmsMainScreen$1
	a this$0
	<init> (Ldft;Ljava/lang/String;)V <init>
	run ()V run
	a (Ldhf;)V lambda$run$3
	a ()V lambda$run$2
	b ()V lambda$run$1
	c ()V lambda$run$0
dft$2 com/mojang/realmsclient/RealmsMainScreen$2
	a this$0
	<init> (Ldft;Ljava/lang/String;)V <init>
	run ()V run
	a (Ldhf;)V lambda$run$1
	a ()V lambda$run$0
dft$3 com/mojang/realmsclient/RealmsMainScreen$3
	a this$0
	<init> (Ldft;Ljava/lang/String;)V <init>
	run ()V run
dft$4 com/mojang/realmsclient/RealmsMainScreen$4
	a this$0
	<init> (Ldft;Ljava/lang/String;)V <init>
	run ()V run
dft$5 com/mojang/realmsclient/RealmsMainScreen$5
	a this$0
	<init> (Ldft;Ljava/lang/String;)V <init>
	run ()V run
	a (Ldhf;)V lambda$run$1
	a (Ldgn;)V lambda$run$0
dft$a com/mojang/realmsclient/RealmsMainScreen$CloseButton
	a this$0
	<init> (Ldft;)V <init>
	b (Ldfj;IIF)V renderButton
	a (Ldft;Ldlg;)V lambda$new$0
dft$b com/mojang/realmsclient/RealmsMainScreen$Entry
	a this$0
	<init> (Ldft;)V <init>
	<init> (Ldft;Ldft$1;)V <init>
dft$c com/mojang/realmsclient/RealmsMainScreen$HoveredElement
	a NONE
	b EXPIRED
	c LEAVE
	d CONFIGURE
	e $VALUES
	values ()[Ldft$c; values
	valueOf (Ljava/lang/String;)Ldft$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dft$d com/mojang/realmsclient/RealmsMainScreen$NewsButton
	a this$0
	<init> (Ldft;)V <init>
	b (Ldfj;IIF)V renderButton
	a (Ldft;Ldlg;)V lambda$new$0
dft$e com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
	a this$0
	<init> (Ldft;)V <init>
	d ()V tick
	b (Ldfj;IIF)V renderButton
	a (Ldft;Ldlg;)V lambda$new$0
dft$f com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	o showingMessage
	a this$0
	<init> (Ldft;)V <init>
	a ()V clear
	a (Ldft$b;)I addMessageEntry
	b ()Z isFocused
	a (III)Z keyPressed
	a (DDI)Z mouseClicked
	a (I)V selectItem
	b (Ldft$b;)V setSelected
	a (IIDDI)V itemClicked
	c ()I getMaxPosition
	d ()I getRowWidth
	a (Ldlc$a;)V setSelected
dft$g com/mojang/realmsclient/RealmsMainScreen$ServerEntry
	c serverData
	b this$0
	<init> (Ldft;Ldgn;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Ldgn;Ldfj;IIII)V renderMcoServerItem
	b (Ldgn;Ldfj;IIII)V renderLegacy
	a (Ldfj;II)V lambda$renderLegacy$0
	a (Ldft$g;)Ldgn; access$8700
dft$h com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton
	a this$0
	<init> (Ldft;)V <init>
	b (Ldfj;IIF)V renderButton
	a (Ldft;Ldlg;)V lambda$new$0
dft$i com/mojang/realmsclient/RealmsMainScreen$TrialEntry
	b this$0
	<init> (Ldft;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Ldfj;IIIII)V renderTrialItem
	<init> (Ldft;Ldft$1;)V <init>
dfu com/mojang/realmsclient/Unit
	a B
	b KB
	c MB
	d GB
	e $VALUES
	values ()[Ldfu; values
	valueOf (Ljava/lang/String;)Ldfu; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (J)Ldfu; getLargest
	a (JLdfu;)D convertTo
	b (J)Ljava/lang/String; humanReadable
	b (JLdfu;)Ljava/lang/String; humanReadable
	<clinit> ()V <clinit>
dfv com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	<init> ()V <init>
	a (Ljava/lang/String;)J contentLength
	a (Ldha;Ljava/lang/String;Ldhs$a;Lcyd;)V download
	a ()V cancel
	b ()Z isFinished
	c ()Z isError
	d ()Z isExtracting
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	a (Ljava/lang/String;Ljava/io/File;Lcyd;)V untarGzipArchive
	a (Ljava/io/File;)V deletePlayerTag
	a (Ldha;Ldhs$a;Ljava/lang/String;Lcyd;)V lambda$download$0
	a (Ldfv;)Z access$000
	b (Ldfv;)Z access$100
	a (Ldfv;Z)Z access$202
	a (Ldfv;Ljava/lang/String;Ljava/io/File;Lcyd;)V access$300
	e ()Lorg/apache/logging/log4j/Logger; access$400
	b (Ldfv;Z)Z access$102
	c (Ldfv;)Ljava/io/File; access$500
	c (Ldfv;Z)Z access$602
	<clinit> ()V <clinit>
dfv$1 com/mojang/realmsclient/client/FileDownload$1
dfv$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	b listener
	a this$0
	<init> (Ldfv;Ljava/io/OutputStream;)V <init>
	a (Ljava/awt/event/ActionListener;)V setListener
	afterWrite (I)V afterWrite
dfv$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
	a this$0
	<init> (Ldfv;Ljava/lang/String;Ljava/io/File;Lcyd;Ldhs$a;)V <init>
	actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
	<init> (Ldfv;Ljava/lang/String;Ljava/io/File;Lcyd;Ldhs$a;Ldfv$1;)V <init>
dfv$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	b tempFile
	c downloadStatus
	d worldDownload
	a this$0
	<init> (Ldfv;Ljava/io/File;Ldhs$a;Ldha;)V <init>
	actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
	<init> (Ldfv;Ljava/io/File;Ldhs$a;Ldha;Ldfv$1;)V <init>
dfw com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b file
	c worldId
	d slotId
	e uploadInfo
	f sessionId
	g username
	h clientVersion
	i uploadStatus
	j cancelled
	k uploadTask
	l requestConfig
	<init> (Ljava/io/File;JILdgy;Ldkj;Ljava/lang/String;Ldgc;)V <init>
	a (Ljava/util/function/Consumer;)V upload
	a ()V cancel
	a (I)Ldil; requestUpload
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/HttpResponse;Ldil$a;)V handleResponse
	a (JI)Z shouldRetry
	b (JI)Ldil; retryUploadAfter
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	b ()Z isFinished
	c ()Ldil; lambda$upload$0
	<clinit> ()V <clinit>
dfw$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
	<init> (Ljava/io/InputStream;JLdgc;)V <init>
	writeTo (Ljava/io/OutputStream;)V writeTo
dfx com/mojang/realmsclient/client/Ping
	a ([Ldfx$a;)Ljava/util/List; ping
	a (Ljava/lang/String;)I ping
	a (Ljava/net/Socket;)V close
	b ()J now
	a ()Ljava/util/List; pingAllRegions
dfx$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
	values ()[Ldfx$a; values
	valueOf (Ljava/lang/String;)Ldfx$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V <init>
	a (Ldfx$a;)Ljava/lang/String; access$000
	b (Ldfx$a;)Ljava/lang/String; access$100
	<clinit> ()V <clinit>
dfy com/mojang/realmsclient/client/RealmsClient
	a currentEnvironment
	b initialized
	c LOGGER
	d sessionId
	e username
	f GSON
	a ()Ldfy; create
	b ()V switchToStage
	c ()V switchToProd
	d ()V switchToLocal
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/net/Proxy;)V <init>
	e ()Ldgp; listWorlds
	a (J)Ldgn; getOwnWorld
	f ()Ldgs; getLiveStats
	b (J)Ldgo; join
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	g ()Ljava/lang/Boolean; mcoEnabled
	h ()Ljava/lang/Boolean; stageAvailable
	i ()Ldfy$a; clientCompatible
	a (JLjava/lang/String;)V uninvite
	c (J)V uninviteMyselfFrom
	b (JLjava/lang/String;)Ldgn; invite
	d (J)Ldge; backupsFor
	b (JLjava/lang/String;Ljava/lang/String;)V update
	a (JILdgt;)V updateSlot
	a (JI)Z switchSlot
	c (JLjava/lang/String;)V restoreWorld
	a (IILdgn$c;)Ldhc; fetchWorldTemplates
	d (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	e (JLjava/lang/String;)Ldgg; op
	f (JLjava/lang/String;)Ldgg; deop
	e (J)Ljava/lang/Boolean; open
	f (J)Ljava/lang/Boolean; close
	a (JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; resetWorldWithSeed
	g (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	g (J)Ldgx; subscriptionFor
	j ()I pendingInvitesCount
	k ()Ldgi; pendingInvites
	a (Ljava/lang/String;)V acceptInvitation
	b (JI)Ldha; requestDownloadInfo
	h (JLjava/lang/String;)Ldgy; requestUploadInfo
	b (Ljava/lang/String;)V rejectInvitation
	l ()V agreeToTos
	m ()Ldgm; getNews
	a (Ldgj;)V sendPingResults
	n ()Ljava/lang/Boolean; trialAvailable
	h (J)V deleteWorld
	c (Ljava/lang/String;)Ljava/lang/String; url
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	a (Ldgb;)Ljava/lang/String; execute
	<clinit> ()V <clinit>
dfy$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
	values ()[Ldfy$a; values
	valueOf (Ljava/lang/String;)Ldfy$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dfy$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
	values ()[Ldfy$b; values
	valueOf (Ljava/lang/String;)Ldfy$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V <init>
	<clinit> ()V <clinit>
dfz com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
dga com/mojang/realmsclient/client/RealmsError
	a LOGGER
	b errorMessage
	c errorCode
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/lang/String;)Ldga; create
	a ()Ljava/lang/String; getErrorMessage
	b ()I getErrorCode
	<clinit> ()V <clinit>
dgb com/mojang/realmsclient/client/Request
	a connection
	c connected
	b url
	<init> (Ljava/lang/String;II)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	a ()I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	b ()I responseCode
	c ()Ljava/lang/String; text
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	f ()V dispose
	d ()Ldgb; connect
	e ()Ldgb; doConnect
	a (Ljava/lang/String;)Ldgb; get
	a (Ljava/lang/String;II)Ldgb; get
	b (Ljava/lang/String;Ljava/lang/String;)Ldgb; post
	a (Ljava/lang/String;Ljava/lang/String;II)Ldgb; post
	b (Ljava/lang/String;)Ldgb; delete
	c (Ljava/lang/String;Ljava/lang/String;)Ldgb; put
	b (Ljava/lang/String;Ljava/lang/String;II)Ldgb; put
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
dgb$a com/mojang/realmsclient/client/Request$Delete
	<init> (Ljava/lang/String;II)V <init>
	f ()Ldgb$a; doConnect
	e ()Ldgb; doConnect
dgb$b com/mojang/realmsclient/client/Request$Get
	<init> (Ljava/lang/String;II)V <init>
	f ()Ldgb$b; doConnect
	e ()Ldgb; doConnect
dgb$c com/mojang/realmsclient/client/Request$Post
	c content
	<init> (Ljava/lang/String;Ljava/lang/String;II)V <init>
	f ()Ldgb$c; doConnect
	e ()Ldgb; doConnect
dgb$d com/mojang/realmsclient/client/Request$Put
	c content
	<init> (Ljava/lang/String;Ljava/lang/String;II)V <init>
	f ()Ldgb$d; doConnect
	e ()Ldgb; doConnect
dgc com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
	<init> ()V <init>
dgd com/mojang/realmsclient/dto/Backup
	f LOGGER
	a backupId
	b lastModifiedDate
	c size
	g uploadedVersion
	d metadata
	e changeList
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;)Ldgd; parse
	a (Ljava/lang/String;)Ljava/lang/String; format
	a ()Z isUploadedVersion
	a (Z)V setUploadedVersion
	<clinit> ()V <clinit>
dge com/mojang/realmsclient/dto/BackupList
	b LOGGER
	a backups
	<init> ()V <init>
	a (Ljava/lang/String;)Ldge; parse
	<clinit> ()V <clinit>
dgf com/mojang/realmsclient/dto/GuardedSerializer
	a gson
	<init> ()V <init>
	a (Ldgv;)Ljava/lang/String; toJson
	a (Ljava/lang/String;Ljava/lang/Class;)Ldgv; fromJson
dgg com/mojang/realmsclient/dto/Ops
	a ops
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgg; parse
dgh com/mojang/realmsclient/dto/PendingInvite
	f LOGGER
	a invitationId
	b worldName
	c worldOwnerName
	d worldOwnerUuid
	e date
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Ldgh; parse
	<clinit> ()V <clinit>
dgi com/mojang/realmsclient/dto/PendingInvitesList
	b LOGGER
	a pendingInvites
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgi; parse
	<clinit> ()V <clinit>
dgj com/mojang/realmsclient/dto/PingResult
	a pingResults
	b worldIds
	<init> ()V <init>
dgk com/mojang/realmsclient/dto/PlayerInfo
	a name
	b uuid
	c operator
	d accepted
	e online
	<init> ()V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)V setName
	b ()Ljava/lang/String; getUuid
	b (Ljava/lang/String;)V setUuid
	c ()Z isOperator
	a (Z)V setOperator
	d ()Z getAccepted
	b (Z)V setAccepted
	e ()Z getOnline
	c (Z)V setOnline
dgl com/mojang/realmsclient/dto/RealmsDescriptionDto
	a name
	b description
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
dgm com/mojang/realmsclient/dto/RealmsNews
	b LOGGER
	a newsLink
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgm; parse
	<clinit> ()V <clinit>
dgn com/mojang/realmsclient/dto/RealmsServer
	s LOGGER
	a id
	b remoteSubscriptionId
	c name
	d motd
	e state
	f owner
	g ownerUUID
	h players
	i slots
	j expired
	k expiredTrial
	l daysLeft
	m worldType
	n activeSlot
	o minigameName
	p minigameId
	q minigameImage
	r serverPing
	<init> ()V <init>
	a ()Ljava/lang/String; getDescription
	b ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getMinigameName
	a (Ljava/lang/String;)V setName
	b (Ljava/lang/String;)V setDescription
	a (Ldgr;)V updateServerPing
	a (Lcom/google/gson/JsonObject;)Ldgn; parse
	a (Ldgn;)V sortInvited
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parseInvited
	b (Lcom/google/gson/JsonArray;)Ljava/util/Map; parseSlots
	e ()Ljava/util/Map; createEmptySlots
	c (Ljava/lang/String;)Ldgn; parse
	d (Ljava/lang/String;)Ldgn$b; getState
	e (Ljava/lang/String;)Ldgn$c; getWorldType
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Ldgn; clone
	a (Ljava/util/Map;)Ljava/util/Map; cloneSlots
	a (I)Ljava/lang/String; getWorldName
	clone ()Ljava/lang/Object; clone
	a (Ldgk;Ldgk;)I lambda$sortInvited$0
	<clinit> ()V <clinit>
dgn$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	<init> (Ljava/lang/String;)V <init>
	a (Ldgn;Ldgn;)I compare
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
dgn$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
	values ()[Ldgn$b; values
	valueOf (Ljava/lang/String;)Ldgn$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dgn$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	values ()[Ldgn$c; values
	valueOf (Ljava/lang/String;)Ldgn$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dgo com/mojang/realmsclient/dto/RealmsServerAddress
	d LOGGER
	a address
	b resourcePackUrl
	c resourcePackHash
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgo; parse
	<clinit> ()V <clinit>
dgp com/mojang/realmsclient/dto/RealmsServerList
	b LOGGER
	a servers
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgp; parse
	<clinit> ()V <clinit>
dgq com/mojang/realmsclient/dto/RealmsServerPing
	a nrOfPlayers
	b playerList
	<init> ()V <init>
dgr com/mojang/realmsclient/dto/RealmsServerPlayerList
	c LOGGER
	d JSON_PARSER
	a serverId
	b players
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Ldgr; parse
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parsePlayers
	<clinit> ()V <clinit>
dgs com/mojang/realmsclient/dto/RealmsServerPlayerLists
	b LOGGER
	a servers
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgs; parse
	<clinit> ()V <clinit>
dgt com/mojang/realmsclient/dto/RealmsWorldOptions
	a pvp
	b spawnAnimals
	c spawnMonsters
	d spawnNPCs
	e spawnProtection
	f commandBlocks
	g forceGameMode
	h difficulty
	i gameMode
	j slotName
	k templateId
	l templateImage
	m adventureMap
	n empty
	o DEFAULT_TEMPLATE_IMAGE
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;)V <init>
	a ()Ldgt; createDefaults
	b ()Ldgt; createEmptyDefaults
	a (Z)V setEmpty
	a (Lcom/google/gson/JsonObject;)Ldgt; parse
	a (I)Ljava/lang/String; getSlotName
	b (I)Ljava/lang/String; getDefaultSlotName
	c ()Ljava/lang/String; toJson
	d ()Ldgt; clone
	clone ()Ljava/lang/Object; clone
	<clinit> ()V <clinit>
dgu com/mojang/realmsclient/dto/RealmsWorldResetDto
	a seed
	b worldTemplateId
	c levelType
	d generateStructures
	<init> (Ljava/lang/String;JIZ)V <init>
dgv com/mojang/realmsclient/dto/ReflectionBasedSerialization
dgw com/mojang/realmsclient/dto/RegionPingResult
	a regionName
	b ping
	<init> (Ljava/lang/String;I)V <init>
	a ()I ping
	toString ()Ljava/lang/String; toString
dgx com/mojang/realmsclient/dto/Subscription
	d LOGGER
	a startDate
	b daysLeft
	c type
	<init> ()V <init>
	a (Ljava/lang/String;)Ldgx; parse
	b (Ljava/lang/String;)Ldgx$a; typeFrom
	<clinit> ()V <clinit>
dgx$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
	values ()[Ldgx$a; values
	valueOf (Ljava/lang/String;)Ldgx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dgy com/mojang/realmsclient/dto/UploadInfo
	a LOGGER
	b URI_SCHEMA_PATTERN
	c worldClosed
	d token
	e uploadEndpoint
	<init> (ZLjava/lang/String;Ljava/net/URI;)V <init>
	a (Ljava/lang/String;)Ldgy; parse
	a (Ljava/lang/String;I)Ljava/net/URI; assembleUri
	a (II)I selectPortOrDefault
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; ensureEndpointSchema
	b (Ljava/lang/String;)Ljava/lang/String; createRequest
	a ()Ljava/lang/String; getToken
	b ()Ljava/net/URI; getUploadEndpoint
	c ()Z isWorldClosed
	<clinit> ()V <clinit>
dgz com/mojang/realmsclient/dto/ValueObject
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/reflect/Field;)Ljava/lang/String; getName
	b (Ljava/lang/reflect/Field;)Z isStatic
dha com/mojang/realmsclient/dto/WorldDownload
	d LOGGER
	a downloadLink
	b resourcePackUrl
	c resourcePackHash
	<init> ()V <init>
	a (Ljava/lang/String;)Ldha; parse
	<clinit> ()V <clinit>
dhb com/mojang/realmsclient/dto/WorldTemplate
	j LOGGER
	a id
	b name
	c version
	d author
	e link
	f image
	g trailer
	h recommendedPlayers
	i type
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Ldhb; parse
	<clinit> ()V <clinit>
dhb$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	values ()[Ldhb$a; values
	valueOf (Ljava/lang/String;)Ldhb$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dhc com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	e LOGGER
	a templates
	b page
	c size
	d total
	<init> ()V <init>
	<init> (I)V <init>
	a (Ljava/lang/String;)Ldhc; parse
	<clinit> ()V <clinit>
dhd com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
	<init> (Lorg/apache/logging/log4j/Logger;)V <init>
	uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
dhe com/mojang/realmsclient/exception/RealmsHttpException
	<init> (Ljava/lang/String;Ljava/lang/Exception;)V <init>
dhf com/mojang/realmsclient/exception/RealmsServiceException
	a httpResultCode
	b httpResponseContent
	c errorCode
	d errorMsg
	<init> (ILjava/lang/String;Ldga;)V <init>
	<init> (ILjava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
dhg com/mojang/realmsclient/exception/RetryCallException
	e delaySeconds
	<init> (I)V <init>
dhh com/mojang/realmsclient/gui/ErrorCallback
	a (Lnr;)V error
	a (Ljava/lang/String;)V error
dhi com/mojang/realmsclient/gui/RealmsDataFetcher
	a LOGGER
	b scheduler
	c stopped
	d serverListUpdateTask
	e pendingInviteUpdateTask
	f trialAvailabilityTask
	g liveStatsTask
	h unreadNewsTask
	i removedServers
	j servers
	k livestats
	l pendingInvitesCount
	m trialAvailable
	n hasUnreadNews
	o newsLink
	p serverListScheduledFuture
	q pendingInviteScheduledFuture
	r trialAvailableScheduledFuture
	s liveStatsScheduledFuture
	t unreadNewsScheduledFuture
	u fetchStatus
	<init> ()V <init>
	a ()Z isStopped
	b ()V init
	c ()V initWithSpecificTaskList
	a (Ldhi$d;)Z isFetchedSinceLastTry
	d ()V markClean
	e ()V forceUpdate
	f ()Ljava/util/List; getServers
	g ()I getPendingInvitesCount
	h ()Z isTrialAvailable
	i ()Ldgs; getLivestats
	j ()Z hasUnreadNews
	k ()Ljava/lang/String; newsLink
	l ()V stop
	n ()V scheduleTasks
	o ()V cancelTasks
	a (Ljava/util/List;)V setServers
	a (Ldgn;)V removeItem
	p ()Z isActive
	a (Ldhi;)Z access$500
	a (Ldhi;Ljava/util/List;)V access$600
	b (Ldhi;)Ljava/util/Map; access$700
	m ()Lorg/apache/logging/log4j/Logger; access$800
	a (Ldhi;I)I access$902
	a (Ldhi;Z)Z access$1002
	a (Ldhi;Ldgs;)Ldgs; access$1102
	b (Ldhi;Z)Z access$1202
	a (Ldhi;Ljava/lang/String;)Ljava/lang/String; access$1302
	<clinit> ()V <clinit>
dhi$1 com/mojang/realmsclient/gui/RealmsDataFetcher$1
dhi$a com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask
	a this$0
	<init> (Ldhi;)V <init>
	run ()V run
	a ()V getLiveStats
	<init> (Ldhi;Ldhi$1;)V <init>
dhi$b com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask
	a this$0
	<init> (Ldhi;)V <init>
	run ()V run
	a ()V updatePendingInvites
	<init> (Ldhi;Ldhi$1;)V <init>
dhi$c com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask
	a this$0
	<init> (Ldhi;)V <init>
	run ()V run
	a ()V updateServersList
	<init> (Ldhi;Ldhi$1;)V <init>
dhi$d com/mojang/realmsclient/gui/RealmsDataFetcher$Task
	a SERVER_LIST
	b PENDING_INVITE
	c TRIAL_AVAILABLE
	d LIVE_STATS
	e UNREAD_NEWS
	f $VALUES
	values ()[Ldhi$d; values
	valueOf (Ljava/lang/String;)Ldhi$d; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dhi$e com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask
	a this$0
	<init> (Ldhi;)V <init>
	run ()V run
	a ()V getTrialAvailable
	<init> (Ldhi;Ldhi$1;)V <init>
dhi$f com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask
	a this$0
	<init> (Ldhi;)V <init>
	run ()V run
	a ()V getUnreadNews
	<init> (Ldhi;Ldhi$1;)V <init>
dhj com/mojang/realmsclient/gui/RealmsWorldSlotButton
	a SLOT_FRAME_LOCATION
	b EMPTY_SLOT_LOCATION
	c DEFAULT_WORLD_SLOT_1
	d DEFAULT_WORLD_SLOT_2
	e DEFAULT_WORLD_SLOT_3
	v SLOT_ACTIVE_TOOLTIP
	w SWITCH_TO_MINIGAME_SLOT_TOOLTIP
	x SWITCH_TO_WORLD_SLOT_TOOLTIP
	y serverDataProvider
	z toolTipSetter
	A slotIndex
	B animTick
	C state
	<init> (IIIILjava/util/function/Supplier;Ljava/util/function/Consumer;ILdlg$a;)V <init>
	a ()Ldhj$b; getState
	d ()V tick
	a (Ldgn;ZZ)Ldhj$a; getAction
	a (Ldgn;Ljava/lang/String;ZZLdhj$a;)Lcom/mojang/datafixers/util/Pair; getTooltipAndNarration
	b (Ldfj;IIF)V renderButton
	a (Ldfj;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLdhj$a;Lnr;)V drawSlotFrame
	<clinit> ()V <clinit>
dhj$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
	values ()[Ldhj$a; values
	valueOf (Ljava/lang/String;)Ldhj$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dhj$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	d isCurrentlyActiveSlot
	e slotName
	f imageId
	g image
	a empty
	b minigame
	c action
	h actionPrompt
	<init> (ZLjava/lang/String;JLjava/lang/String;ZZLdhj$a;Lnr;)V <init>
	a (Ldhj$b;)Z access$000
	b (Ldhj$b;)Ljava/lang/String; access$100
	c (Ldhj$b;)J access$200
	d (Ldhj$b;)Ljava/lang/String; access$300
	e (Ldhj$b;)Lnr; access$400
dhk com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	<init> (IIII)V <init>
	a (Ldfj;IIII)V drawForRowAt
	a (Ldfj;IIZ)V draw
	a ()I getRight
	b ()I getBottom
	a (I)V onClick
	a (Ldfj;Ljava/util/List;Leof;IIII)V drawButtonsInRow
	a (Leof;Ldls$a;Ljava/util/List;IDD)V rowButtonMouseClicked
dhl com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	a lastScreen
	b backup
	c backupInfoList
	<init> (Ldoq;Ldgd;)V <init>
	d ()V tick
	b ()V init
	e ()V removed
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ljava/lang/String;Ljava/lang/String;)Lnr; checkForSpecificMetadata
	b (Ljava/lang/String;)Lnr; gameDifficultyMetadata
	c (Ljava/lang/String;)Lnr; gameModeMetadata
	a (Ldlg;)V lambda$init$0
	a (Ldhl;)Ldjw; access$000
	a (Ldhl;Ljava/lang/String;Ljava/lang/String;)Lnr; access$100
	b (Ldhl;)Ldgd; access$200
dhl$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
	a this$0
	<init> (Ldhl;Ldjw;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$new$0
dhl$b com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry
	b key
	c value
	a this$0
	<init> (Ldhl;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Ldfj;IIIIIIIZF)V render
dhm com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	a LOGGER
	b PLUS_ICON_LOCATION
	c RESTORE_ICON_LOCATION
	p RESTORE_TOOLTIP
	q HAS_CHANGES_TOOLTIP
	r TITLE
	s NO_BACKUPS_LABEL
	t lastScrollPosition
	u lastScreen
	v backups
	w toolTip
	x backupObjectSelectionList
	y selectedBackup
	z slotId
	A downloadButton
	B restoreButton
	C changesButton
	D noBackups
	E serverData
	F titleLabel
	<init> (Ldhp;Ldgn;I)V <init>
	b ()V init
	i ()V generateChangeList
	a (Ldgd;Ljava/lang/String;)V addToChangeList
	k ()V updateButtonStates
	l ()Z shouldChangesButtonBeVisible
	m ()Z shouldRestoreButtonBeVisible
	a (III)Z keyPressed
	b (I)V restoreClicked
	n ()V downloadClicked
	o ()V downloadWorldData
	p ()V restore
	a (Ldfj;IIF)V render
	a (Ldfj;Lnr;II)V renderMousehoverTooltip
	c (Z)V lambda$downloadClicked$5
	d (Z)V lambda$restoreClicked$4
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	a (Ldhm;)Ldgn; access$000
	b (Ldhm;)Ldjw; access$100
	a ()Lorg/apache/logging/log4j/Logger; access$200
	a (Ldhm;Ljava/util/List;)Ljava/util/List; access$302
	a (Ldhm;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$402
	c (Ldhm;)Ljava/util/List; access$300
	d (Ldhm;)Ldhm$a; access$500
	e (Ldhm;)V access$600
	a (Ldhm;I)I access$702
	a (I)I access$802
	b (Ldhm;I)V access$900
	f (Ldhm;)V access$1000
	g (Ldhm;)Ldkr; access$1100
	h (Ldhm;)Ldkr; access$1200
	c ()Lvk; access$1300
	i (Ldhm;)Ldjw; access$1400
	a (Ldhm;Lnr;)Lnr; access$1502
	f ()Lnr; access$1600
	g ()Lvk; access$1700
	j (Ldhm;)Ldjw; access$1800
	h ()Lnr; access$1900
	<clinit> ()V <clinit>
dhm$1 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$1
	a this$0
	<init> (Ldhm;Ljava/lang/String;)V <init>
	run ()V run
	a (Ljava/util/List;)V lambda$run$0
dhm$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a this$0
	<init> (Ldhm;)V <init>
	a (Ldgd;)V addEntry
	d ()I getRowWidth
	b ()Z isFocused
	c ()I getMaxPosition
	a (Ldfj;)V renderBackground
	a (DDI)Z mouseClicked
	e ()I getScrollbarPosition
	a (IIDDI)V itemClicked
	a (I)V selectItem
	b (I)V selectInviteListItem
	a (Ldhm$b;)V setSelected
	a (Ldlc$a;)V setSelected
dhm$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry
	b backup
	a this$0
	<init> (Ldhm;Ldgd;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ldgd;IIII)V renderBackupItem
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	a (Ldfj;IIII)V drawRestore
	b (Ldfj;IIII)V drawInfo
dhn com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	a LOGGER
	b lastScreen
	c mainScreen
	p serverData
	q serverId
	r header
	s message
	t leftX
	u rightX
	v slotsThatHasBeenDownloaded
	w animTick
	<init> (Ldoq;Ldft;JZ)V <init>
	b ()V init
	i ()V addButtons
	d ()V tick
	a (Ldfj;IIF)V render
	a (I)I getFramePositionX
	e ()V removed
	a (III)Z keyPressed
	k ()V backButtonClicked
	a (J)V fetchServerData
	a ()V doSwitchOrReset
	b (I)V downloadWorld
	l ()Z isMinigame
	a (Ldfj;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	a (IZ)V lambda$downloadWorld$11
	m ()V lambda$doSwitchOrReset$10
	n ()V lambda$null$9
	o ()V lambda$null$8
	b (J)V lambda$fetchServerData$7
	a (ILdlg;)V lambda$addButtons$6
	p ()V lambda$null$5
	b (ILdlg;)V lambda$addButtons$4
	b (IZ)V lambda$null$3
	c (ILdlg;)V lambda$addButtons$2
	r ()V lambda$null$1
	a (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dho com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	a OUTDATED_TITLE
	b OUTDATED_MESSAGES
	c INCOMPATIBLE_TITLE
	p INCOMPATIBLE_MESSAGES
	q lastScreen
	r outdated
	<init> (Ldoq;Z)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (III)Z keyPressed
	a (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhp com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	a LOGGER
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	p EXPIRED_ICON_LOCATION
	q EXPIRES_SOON_ICON_LOCATION
	r TITLE
	s WORLD_TITLE
	t MINIGAME_PREFIX
	u SERVER_EXPIRED_TOOLTIP
	v SERVER_EXPIRING_SOON_TOOLTIP
	w SERVER_EXPIRING_IN_DAY_TOOLTIP
	x SERVER_OPEN_TOOLTIP
	y SERVER_CLOSED_TOOLTIP
	z toolTip
	A lastScreen
	B serverData
	C serverId
	D leftX
	E rightX
	F playersButton
	G settingsButton
	H subscriptionButton
	I optionsButton
	J backupButton
	K resetWorldButton
	L switchMinigameButton
	M stateChanged
	N animTick
	O clicks
	<init> (Ldft;J)V <init>
	b ()V init
	a (I)V addSlotButton
	b (I)I leftButton
	b (II)I centerButton
	d ()V tick
	a (Ldfj;IIF)V render
	c (I)I frame
	e ()V removed
	a (III)Z keyPressed
	i ()V backButtonClicked
	a (J)V fetchServerData
	k ()V disableButtons
	a (Ldgn;)V joinRealm
	l ()V switchToMinigame
	a (ILdgn;)V switchToFullSlot
	b (ILdgn;)V switchToEmptySlot
	a (Ldfj;Lnr;II)V renderMousehoverTooltip
	c (Ldfj;IIII)V drawServerStatus
	d (Ldfj;IIII)V drawExpired
	b (Ldfj;IIIII)V drawExpiring
	e (Ldfj;IIII)V drawOpen
	f (Ldfj;IIII)V drawClose
	m ()Z isMinigame
	n ()V hideRegularButtons
	a (Ldlg;)V hide
	b (Ldlg;)V show
	o ()V hideMinigameButtons
	a (Ldgt;)V saveSlotSettings
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (ZLdoq;)V openTheWorld
	a (Ldoq;)V closeTheWorld
	a ()V stateChanged
	a (Ldhb;)V callback
	c ()Ldhp; getNewScreen
	a (Ldgn;IZ)V lambda$switchToEmptySlot$19
	p ()V lambda$null$18
	r ()V lambda$null$17
	b (Ldgn;IZ)V lambda$switchToFullSlot$16
	s ()V lambda$null$15
	b (J)V lambda$fetchServerData$14
	a (Ldhf;)V lambda$null$13
	a (ILdlg;)V lambda$addSlotButton$12
	a (Lnr;)V lambda$addSlotButton$11
	t ()Ldgn; lambda$addSlotButton$10
	c (Ldlg;)V lambda$init$9
	d (Ldlg;)V lambda$init$8
	u ()V lambda$null$7
	B ()V lambda$null$6
	e (Ldlg;)V lambda$init$5
	f (Ldlg;)V lambda$init$4
	g (Ldlg;)V lambda$init$3
	h (Ldlg;)V lambda$init$2
	i (Ldlg;)V lambda$init$1
	j (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhp$1 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$1
	a $SwitchMap$com$mojang$realmsclient$gui$RealmsWorldSlotButton$Action
	<clinit> ()V <clinit>
dhq com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a callback
	b title1
	c title2
	p delayTicker
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lnr;Lnr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	d ()V tick
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
dhr com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c server
	p lastScreen
	q nameBox
	r descriptionBox
	s createButton
	t createRealmLabel
	<init> (Ldgn;Ldft;)V <init>
	d ()V tick
	b ()V init
	e ()V removed
	a (CI)Z charTyped
	a (III)Z keyPressed
	i ()V createWorld
	k ()Z valid
	a (Ldfj;IIF)V render
	l ()V lambda$createWorld$3
	m ()V lambda$createWorld$2
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhs com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	a LOGGER
	b DOWNLOAD_LOCK
	c lastScreen
	p worldDownload
	q downloadTitle
	r narrationRateLimiter
	s cancelButton
	t worldName
	u downloadStatus
	v errorMessage
	w status
	x progress
	y cancelled
	z showDots
	A finished
	B extracting
	C previousWrittenBytes
	D previousTimeSnapshot
	E bytesPersSecond
	F animTick
	G DOTS
	H dotIndex
	I checked
	J callback
	<init> (Ldoq;Ldha;Ljava/lang/String;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)V <init>
	b ()V init
	i ()V checkDownloadSize
	b (Ljava/lang/String;)J getContentLength
	d ()V tick
	a (III)Z keyPressed
	k ()V backButtonClicked
	a (Ldfj;IIF)V render
	b (Ldfj;)V drawDots
	c (Ldfj;)V drawProgressBar
	d (Ldfj;)V drawDownloadSpeed
	a (Ldfj;J)V drawDownloadSpeed0
	l ()V downloadSave
	m ()V downloadCancelled
	n ()V lambda$downloadSave$2
	c (Z)V lambda$checkDownloadSize$1
	a (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhs$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
	c this$0
	<init> (Ldhs;)V <init>
dht com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b line1
	c line2
	<init> (Ldhf;Ldoq;)V <init>
	<init> (Lnr;Ldoq;)V <init>
	<init> (Lnr;Lnr;Ldoq;)V <init>
	a (Ldhf;)V errorMessage
	a (Lnr;)V errorMessage
	a (Lnr;Lnr;)V errorMessage
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
dhu com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	a LOGGER
	b NAME_LABEL
	c NO_SUCH_PLAYER_ERROR_TEXT
	p profileName
	q serverData
	r configureScreen
	s lastScreen
	t errorMsg
	<init> (Ldhp;Ldoq;Ldgn;)V <init>
	d ()V tick
	b ()V init
	e ()V removed
	i ()V onInvite
	a (Lnr;)V showError
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhv com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	b type
	c line2
	p line3
	a callback
	q yesNoQuestion
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldhv$a;Lnr;Lnr;Z)V <init>
	b ()V init
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dhv$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a Warning
	b Info
	c colorCode
	d text
	e $VALUES
	values ()[Ldhv$a; values
	valueOf (Ljava/lang/String;)Ldhv$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dhw com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	b LOGGER
	c lastScreen
	p title
	q errorMessage
	r aborted
	s animTicks
	t task
	u buttonLength
	a SYMBOLS
	<init> (Ldoq;Ldix;)V <init>
	d ()V tick
	a (III)Z keyPressed
	b ()V init
	i ()V cancelOrBackButtonClicked
	a (Ldfj;IIF)V render
	a (Lnr;)V error
	k ()V buttonsClear
	b (Lnr;)V setTitle
	a ()Z aborted
	a (Ldlg;)V lambda$error$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhx com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	a INVITE_ICON_LOCATION
	b TRIAL_ICON_LOCATION
	c NEWS_ICON_LOCATION
	p REALMS_DATA_FETCHER
	q numberOfPendingInvites
	r checkedMcoAvailability
	s trialAvailable
	t validClient
	u hasUnreadNews
	<init> ()V <init>
	b ()V init
	d ()V tick
	i ()Z getRealmsNotificationsEnabled
	k ()Z inTitleScreen
	l ()V checkIfMcoEnabled
	a (Ldfj;IIF)V render
	a (Ldfj;II)V drawIcons
	e ()V removed
	a (Z)Z access$002
	b (Z)Z access$102
	<clinit> ()V <clinit>
dhx$1 com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$1
	a this$0
	<init> (Ldhx;Ljava/lang/String;)V <init>
	run ()V run
dhy com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a MESSAGE
	b nextScreen
	c messageLines
	<init> (Ldoq;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dhz com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	a LOGGER
	b ACCEPT_ICON_LOCATION
	c REJECT_ICON_LOCATION
	p NO_PENDING_INVITES_TEXT
	q ACCEPT_INVITE_TOOLTIP
	r REJECT_INVITE_TOOLTIP
	s lastScreen
	t toolTip
	u loaded
	v pendingInvitationSelectionList
	w titleLabel
	x selectedInvite
	y acceptButton
	z rejectButton
	<init> (Ldoq;)V <init>
	b ()V init
	a (III)Z keyPressed
	a (I)V updateList
	b (I)V reject
	c (I)V accept
	a (Ldfj;IIF)V render
	a (Ldfj;Lnr;II)V renderMousehoverTooltip
	i ()V updateButtonStates
	k (I)Z shouldAcceptAndRejectButtonBeVisible
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	a (Ldhz;)Ldjw; access$000
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (Ldhz;Z)Z access$202
	b (Ldhz;)Ldhz$b; access$300
	c (Ldhz;)Ldjw; access$500
	a (Ldhz;I)V access$600
	d (Ldhz;)Ldjw; access$700
	b (Ldhz;I)I access$802
	e (Ldhz;)V access$900
	c ()Lvk; access$1000
	f (Ldhz;)Ldjw; access$1100
	a (Ldhz;Lnr;)Lnr; access$1202
	f ()Lnr; access$1300
	c (Ldhz;I)V access$1400
	g ()Lvk; access$1500
	g (Ldhz;)Ldjw; access$1600
	h ()Lnr; access$1700
	d (Ldhz;I)V access$1800
	h (Ldhz;)Ldkr; access$1900
	i (Ldhz;)Ldkr; access$2000
	j (Ldhz;)Ldkr; access$2100
	<clinit> ()V <clinit>
dhz$1 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$1
	a this$0
	<init> (Ldhz;Ljava/lang/String;)V <init>
	run ()V run
	a (Ljava/util/List;)V lambda$run$1
	a (Ldgh;)Ldhz$a; lambda$run$0
dhz$2 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$2
	a val$slot
	b this$0
	<init> (Ldhz;Ljava/lang/String;I)V <init>
	run ()V run
	a (I)V lambda$run$0
dhz$3 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$3
	a val$slot
	b this$0
	<init> (Ldhz;Ljava/lang/String;I)V <init>
	run ()V run
	a (I)V lambda$run$0
dhz$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry
	b pendingInvite
	c rowButtons
	a this$0
	<init> (Ldhz;Ldgh;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Ldfj;Ldgh;IIII)V renderPendingInvitationItem
	a (Ldfj;II)V lambda$renderPendingInvitationItem$0
	a (Ldhz$a;)Ldgh; access$400
dhz$a$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton
	e this$1
	<init> (Ldhz$a;)V <init>
	a (Ldfj;IIZ)V draw
	a (I)V onClick
dhz$a$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton
	e this$1
	<init> (Ldhz$a;)V <init>
	a (Ldfj;IIZ)V draw
	a (I)V onClick
dhz$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a this$0
	<init> (Ldhz;)V <init>
	b (I)V removeAtIndex
	c ()I getMaxPosition
	d ()I getRowWidth
	b ()Z isFocused
	a (Ldfj;)V renderBackground
	a (I)V selectItem
	c (I)V selectInviteListItem
	a (Ldhz$a;)V setSelected
	a (Ldlc$a;)V setSelected
dia com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	a LOGGER
	b OP_ICON_LOCATION
	c USER_ICON_LOCATION
	p CROSS_ICON_LOCATION
	q OPTIONS_BACKGROUND
	r NORMAL_USER_TOOLTIP
	s OP_TOOLTIP
	t REMOVE_ENTRY_TOOLTIP
	u INVITED_LABEL
	v toolTip
	w lastScreen
	x serverData
	y invitedObjectSelectionList
	z column1X
	A columnWidth
	B column2X
	C removeButton
	D opdeopButton
	E selectedInvitedIndex
	F selectedInvited
	G player
	H stateChanged
	I titleLabel
	J hoveredUserAction
	<init> (Ldhp;Ldgn;)V <init>
	b ()V init
	i ()V updateButtonStates
	k (I)Z shouldRemoveAndOpdeopButtonBeVisible
	e ()V removed
	a (III)Z keyPressed
	k ()V backButtonClicked
	l (I)V op
	m (I)V deop
	a (Ldgg;)V updateOps
	n (I)V uninvite
	o (I)V deleteFromInvitedList
	a (Ldfj;IIF)V render
	a (Ldfj;Lnr;II)V renderMousehoverTooltip
	c (Ldfj;IIII)V drawRemoveIcon
	d (Ldfj;IIII)V drawOpped
	e (Ldfj;IIII)V drawNormal
	c (Z)V lambda$uninvite$4
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	a (Ldia;)I access$000
	a (I)I access$100
	b (I)I access$200
	c (I)I access$300
	b (Ldia;)I access$400
	c (Ldia;)Ldgn; access$500
	d (Ldia;)Ldia$c; access$600
	a (Ldia;I)V access$700
	b (Ldia;I)V access$800
	c (Ldia;I)V access$900
	d (Ldia;I)I access$1002
	e (Ldia;)V access$1100
	f (Ldia;)Ldkr; access$1200
	a (Ldia;Ldfj;IIII)V access$1300
	b (Ldia;Ldfj;IIII)V access$1400
	c (Ldia;Ldfj;IIII)V access$1500
	<clinit> ()V <clinit>
dia$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry
	b playerInfo
	a this$0
	<init> (Ldia;Ldgk;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ldgk;IIII)V renderInvitedItem
	a (Ldfj;I)V lambda$renderInvitedItem$0
dia$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a this$0
	<init> (Ldia;)V <init>
	a (Ldgk;)V addEntry
	d ()I getRowWidth
	b ()Z isFocused
	a (DDI)Z mouseClicked
	a (IIDDI)V itemClicked
	a (I)V selectItem
	b (I)V selectInviteListItem
	a (Ldia$a;)V setSelected
	a (Ldfj;)V renderBackground
	e ()I getScrollbarPosition
	c ()I getMaxPosition
	a (Ldlc$a;)V setSelected
dia$c com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction
	a TOGGLE_OP
	b REMOVE
	c NONE
	d $VALUES
	values ()[Ldia$c; values
	valueOf (Ljava/lang/String;)Ldia$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dib com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	a SEED_LABEL
	b LEVEL_TYPES
	c lastScreen
	p titleLabel
	q seedEdit
	r generateStructures
	s levelTypeIndex
	t buttonTitle
	<init> (Ldic;Lnr;)V <init>
	d ()V tick
	b ()V init
	e ()V removed
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	i ()Lnr; levelTypeTitle
	k ()Lnr; generateStructuresTitle
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dic com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	b LOGGER
	c lastScreen
	p serverData
	q titleLabel
	r subtitleLabel
	s title
	t subtitle
	u buttonTitle
	v subtitleColor
	w SLOT_FRAME_LOCATION
	x UPLOAD_LOCATION
	y ADVENTURE_MAP_LOCATION
	z SURVIVAL_SPAWN_LOCATION
	A NEW_WORLD_LOCATION
	B EXPERIENCE_LOCATION
	C INSPIRATION_LOCATION
	D templates
	E adventuremaps
	F experiences
	G inspirations
	a slot
	H typeToReset
	I worldInfoToReset
	J worldTemplateToReset
	K resetTitle
	L resetWorldRunnable
	M callback
	<init> (Ldoq;Ldgn;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	<init> (Ldoq;Ldgn;Lnr;Lnr;ILnr;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	a (I)V setSlot
	a (Lnr;)V setResetTitle
	b ()V init
	e ()V removed
	a (III)Z keyPressed
	b (I)I frame
	a (Ldfj;IIF)V render
	a (Ldfj;IILnr;Lvk;ZZ)V drawFrame
	a (Ldhb;)V callback
	i ()V switchSlot
	a (Ljava/lang/Runnable;)V switchSlot
	b (Ldhb;)V resetWorldWithTemplate
	b (Ldic$c;)V triggerResetWorld
	a (Ljava/lang/String;Ldhb;IZ)V resetWorld
	a (Ldic$c;)V resetWorld
	k ()V lambda$switchSlot$7
	a (Ldlg;)V lambda$init$6
	b (Ldlg;)V lambda$init$5
	c (Ldlg;)V lambda$init$4
	d (Ldlg;)V lambda$init$3
	e (Ldlg;)V lambda$init$2
	f (Ldlg;)V lambda$init$1
	g (Ldlg;)V lambda$init$0
	a (Ldic;)Ldjw; access$000
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (Ldic;Ldhc;)Ldhc; access$202
	b (Ldic;Ldhc;)Ldhc; access$302
	c (Ldic;Ldhc;)Ldhc; access$402
	d (Ldic;Ldhc;)Ldhc; access$502
	a (Ldic;Ldfj;IILnr;Lvk;ZZ)V access$900
	<clinit> ()V <clinit>
dic$1 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$1
	a this$0
	<init> (Ldic;Ljava/lang/String;)V <init>
	run ()V run
	a (Ldhc;Ldhc;Ldhc;Ldhc;)V lambda$run$0
dic$2 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$2
	a $SwitchMap$com$mojang$realmsclient$dto$WorldTemplate$WorldTemplateType
	b $SwitchMap$com$mojang$realmsclient$gui$screens$RealmsResetWorldScreen$ResetType
	<clinit> ()V <clinit>
dic$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	b image
	a this$0
	<init> (Ldic;IILnr;Lvk;Ldlg$a;)V <init>
	b (Ldfj;IIF)V renderButton
dic$b com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType
	a NONE
	b GENERATE
	c UPLOAD
	d ADVENTURE
	e SURVIVAL_SPAWN
	f EXPERIENCE
	g INSPIRATION
	h $VALUES
	values ()[Ldic$b; values
	valueOf (Ljava/lang/String;)Ldic$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dic$c com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo
	a seed
	b levelType
	c generateStructures
	<init> (Ljava/lang/String;IZ)V <init>
	a (Ldic$c;)Ljava/lang/String; access$600
	b (Ldic$c;)I access$700
	c (Ldic$c;)Z access$800
did com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback
	<init> ()V <init>
	a (Ldhb;)V callback
die com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	a LOGGER
	b WORLD_TEXT
	c REQUIRES_CONVERSION_TEXT
	p HARDCORE_TEXT
	q CHEATS_TEXT
	r DATE_FORMAT
	s lastScreen
	t worldId
	u slotId
	v uploadButton
	w levelList
	x selectedWorld
	y worldSelectionList
	z titleLabel
	A subtitleLabel
	B noWorldsLabel
	C callback
	<init> (JILdic;Ljava/lang/Runnable;)V <init>
	i ()V loadLevelList
	b ()V init
	e ()V removed
	k ()V upload
	a (Ldfj;IIF)V render
	a (III)Z keyPressed
	c (Lcye;)Lnr; gameModeName
	d (Lcye;)Ljava/lang/String; formatLastPlayed
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	a (Lcye;Lcye;)I lambda$loadLevelList$0
	a (I)I access$000
	a (Ldie;)Ljava/util/List; access$100
	a (Lcye;)Ljava/lang/String; access$200
	b (Lcye;)Lnr; access$300
	a (Ldie;I)I access$402
	b (Ldie;)Ldlg; access$500
	c (Ldie;)I access$400
	a ()Lnr; access$600
	c ()Lnr; access$700
	f ()Lnr; access$800
	d (Ldie;)Ldie$b; access$900
	g ()Lnr; access$1000
	e (Ldie;)Ldkr; access$1100
	f (Ldie;)Ldkr; access$1200
	g (Ldie;)Ldkr; access$1300
	<clinit> ()V <clinit>
die$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry
	b levelSummary
	c name
	d id
	e info
	a this$0
	<init> (Ldie;Lcye;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Ldfj;Lcye;III)V renderItem
die$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a this$0
	<init> (Ldie;)V <init>
	a (Lcye;)V addEntry
	c ()I getMaxPosition
	b ()Z isFocused
	a (Ldfj;)V renderBackground
	a (I)V selectItem
	a (Ldie$a;)V setSelected
	a (Ldlc$a;)V setSelected
dif com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	a LOGGER
	b LINK_ICON
	c TRAILER_ICON
	p SLOT_FRAME_LOCATION
	q PUBLISHER_LINK_TOOLTIP
	r TRAILER_LINK_TOOLTIP
	s lastScreen
	t worldTemplateObjectSelectionList
	u selectedTemplate
	v title
	w selectButton
	x trailerButton
	y publisherButton
	z toolTip
	A currentLink
	B worldType
	C clicks
	D warning
	E warningURL
	F displayWarning
	G hoverWarning
	H noTemplatesMessage
	<init> (Ldid;Ldgn$c;)V <init>
	<init> (Ldid;Ldgn$c;Ldhc;)V <init>
	a (Lnr;)V setTitle
	a ([Lnr;)V setWarning
	a (DDI)Z mouseClicked
	b ()V init
	k ()V updateButtonStates
	l ()Z shouldSelectButtonBeActive
	m ()Z shouldPublisherBeVisible
	n ()Ldhb; getSelectedTemplate
	o ()Z shouldTrailerBeVisible
	d ()V tick
	a (III)Z keyPressed
	p ()V backButtonClicked
	r ()V selectTemplate
	s ()Z hasValidTemplate
	t ()V onTrailer
	u ()V onPublish
	a (Ldhc;)V fetchTemplatesAsync
	a (Ldhc;Ldfy;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a (Ldfj;IIF)V render
	a (Ldfj;IILjava/util/List;)V renderMultilineMessage
	a (Ldfj;Lnr;II)V renderMousehoverTooltip
	a (Ldir$b;)I lambda$renderMultilineMessage$4
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	a (Ldif;Ldhc;Ldfy;)Lcom/mojang/datafixers/util/Either; access$000
	a (Ldif;)Ldjw; access$100
	a ()Lorg/apache/logging/log4j/Logger; access$200
	b (Ldif;)Ldif$b; access$300
	a (Ldif;Ljava/util/List;)Ljava/util/List; access$402
	c (Ldif;)Z access$500
	a (I)I access$600
	d (Ldif;)Ljava/lang/String; access$700
	e (Ldif;)I access$800
	a (Ldif;I)I access$802
	f (Ldif;)V access$900
	b (Ldif;I)I access$1002
	g (Ldif;)V access$1100
	h (Ldif;)Ldkr; access$1300
	i (Ldif;)Ldkr; access$1400
	j (Ldif;)Ldkr; access$1500
	k (Ldif;)Ldkr; access$1600
	c ()Lvk; access$1700
	l (Ldif;)Ldjw; access$1800
	m (Ldif;)Ldkr; access$1900
	n (Ldif;)Ldkr; access$2000
	f ()Lvk; access$2100
	o (Ldif;)Ldjw; access$2200
	g ()Lvk; access$2300
	p (Ldif;)Ldjw; access$2400
	a (Ldif;Lnr;)Lnr; access$2502
	h ()Lnr; access$2600
	a (Ldif;Ljava/lang/String;)Ljava/lang/String; access$702
	i ()Lnr; access$2700
	<clinit> ()V <clinit>
dif$1 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$1
	a val$startPage
	b this$0
	<init> (Ldif;Ljava/lang/String;Ldhc;)V <init>
	run ()V run
	a (Lcom/mojang/datafixers/util/Either;)Ldhc; lambda$run$0
dif$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry
	b template
	a this$0
	<init> (Ldif;Ldhb;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ldhb;IIII)V renderWorldTemplateItem
	a (Ldfj;IIIILdhb;)V drawImage
	a (Ldfj;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V drawIcons
	a (Ldif$a;)Ldhb; access$1200
dif$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a this$0
	<init> (Ldif;)V <init>
	<init> (Ldif;Ljava/lang/Iterable;)V <init>
	a (Ldhb;)V addEntry
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (Ldif$a;)V setSelected
	c ()I getMaxPosition
	d ()I getRowWidth
	a (Ldfj;)V renderBackground
	b ()Z isFocused
	f ()Z isEmpty
	b (I)Ldhb; get
	g ()Ljava/util/List; getTemplates
	a (Ldlc$a;)V setSelected
	b (Ldif$a;)Ldhb; lambda$getTemplates$0
dig com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c configureWorldScreen
	p serverData
	q doneButton
	r descEdit
	s nameEdit
	t titleLabel
	<init> (Ldhp;Ldgn;)V <init>
	d ()V tick
	b ()V init
	e ()V removed
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a ()V save
	a (Ldlg;)V lambda$init$3
	c (Z)V lambda$null$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dih com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	a DIFFICULTIES
	b GAME_MODES
	p TEXT_ON
	q TEXT_OFF
	r GAME_MODE_LABEL
	s NAME_LABEL
	t nameEdit
	c parent
	u column1X
	v columnWidth
	w column2X
	x options
	y worldType
	z activeSlot
	A difficulty
	B gameMode
	C pvp
	D spawnNPCs
	E spawnAnimals
	F spawnMonsters
	G spawnProtection
	H commandBlocks
	I forceGameMode
	J pvpButton
	K spawnAnimalsButton
	L spawnMonstersButton
	M spawnNPCsButton
	N spawnProtectionButton
	O commandBlocksButton
	P forceGameModeButton
	Q titleLabel
	R warningLabel
	<init> (Ldhp;Ldgt;Ldgn$c;I)V <init>
	e ()V removed
	d ()V tick
	a (III)Z keyPressed
	b ()V init
	i ()Lnr; difficultyTitle
	k ()Lnr; gameModeTitle
	l ()Lnr; pvpTitle
	m ()Lnr; spawnAnimalsTitle
	n ()Lnr; spawnMonstersTitle
	o ()Lnr; spawnNPCsTitle
	p ()Lnr; commandBlocksTitle
	r ()Lnr; forceGameModeTitle
	c (Z)Lnr; getOnOff
	a (Ldfj;IIF)V render
	s ()Ljava/lang/String; getSlotName
	t ()V saveSettings
	a (Ldlg;)V lambda$init$9
	b (Ldlg;)V lambda$init$8
	c (Ldlg;)V lambda$init$7
	d (Ldlg;)V lambda$init$6
	e (Ldlg;)V lambda$init$5
	f (Ldlg;)V lambda$init$4
	g (Ldlg;)V lambda$init$3
	h (Ldlg;)V lambda$init$2
	i (Ldlg;)V lambda$init$1
	j (Ldlg;)V lambda$init$0
	a (Ldih;)Ldih$a; access$000
	a (Ldih;Ljava/lang/Integer;)Ljava/lang/Integer; access$102
	b (Ldih;)Ljava/lang/Integer; access$100
	<clinit> ()V <clinit>
dih$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	c minValue
	d maxValue
	a this$0
	<init> (Ldih;IIIIFF)V <init>
	a ()V applyValue
	b ()V updateMessage
	a (DD)V onClick
	a_ (DD)V onRelease
dii com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	a LOGGER
	b SUBSCRIPTION_TITLE
	c SUBSCRIPTION_START_LABEL
	p TIME_LEFT_LABEL
	q DAYS_LEFT_LABEL
	r SUBSCRIPTION_EXPIRED_TEXT
	s SUBSCRIPTION_LESS_THAN_A_DAY_TEXT
	t MONTH_SUFFIX
	u MONTHS_SUFFIX
	v DAY_SUFFIX
	w DAYS_SUFFIX
	x lastScreen
	y serverData
	z mainScreen
	A daysLeft
	B startDate
	C type
	<init> (Ldoq;Ldgn;Ldoq;)V <init>
	b ()V init
	c (Z)V deleteRealm
	a (J)V getSubscription
	b (J)Ljava/lang/String; localPresentation
	e ()V removed
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (I)Lnr; daysLeftPresentation
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	a (Ldii;)Ldgn; access$000
	a ()Lorg/apache/logging/log4j/Logger; access$100
	b (Ldii;)Ldjw; access$200
	c (Ldii;)Ldoq; access$300
	d (Ldii;)Ldjw; access$400
	<clinit> ()V <clinit>
dii$1 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$1
	a this$0
	<init> (Ldii;Ljava/lang/String;)V <init>
	run ()V run
	a ()V lambda$run$0
dij com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	a LOGGER
	b TITLE
	c TERMS_STATIC_TEXT
	p TERMS_LINK_TEXT
	q lastScreen
	r mainScreen
	s realmsServer
	t onLink
	u realmsToSUrl
	<init> (Ldoq;Ldft;Ldgn;)V <init>
	b ()V init
	e ()V removed
	a (III)Z keyPressed
	i ()V agreedToTos
	a (DDI)Z mouseClicked
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dik com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	a LOGGER
	b UPLOAD_LOCK
	c DOTS
	p VERIFYING_TEXT
	q lastScreen
	r selectedLevel
	s worldId
	t slotId
	u uploadStatus
	v narrationRateLimiter
	w errorMessage
	x status
	y progress
	z cancelled
	A uploadFinished
	B showDots
	C uploadStarted
	D backButton
	E cancelButton
	F tickCount
	G previousWrittenBytes
	H previousTimeSnapshot
	I bytesPersSecond
	J callback
	<init> (JILdic;Lcye;Ljava/lang/Runnable;)V <init>
	b ()V init
	e ()V removed
	i ()V onBack
	k ()V onCancel
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	b (Ldfj;)V drawDots
	c (Ldfj;)V drawProgressBar
	d (Ldfj;)V drawUploadSpeed
	a (Ldfj;J)V drawUploadSpeed0
	d ()V tick
	l ()V upload
	a ([Lnr;)V setErrorMessage
	m ()V uploadCancelled
	a (Ljava/io/File;)Z verify
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	n ()V lambda$upload$4
	a (JLdil;)V lambda$null$3
	o ()V lambda$init$2
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dil com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
	<init> (ILjava/lang/String;)V <init>
	<init> (ILjava/lang/String;Ldil$1;)V <init>
dil$1 com/mojang/realmsclient/gui/screens/UploadResult$1
dil$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	<init> ()V <init>
	a (I)Ldil$a; withStatusCode
	a (Ljava/lang/String;)Ldil$a; withErrorMessage
	a ()Ldil; build
dim com/mojang/realmsclient/util/JsonUtils
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
din com/mojang/realmsclient/util/RealmsPersistence
	a GSON
	a ()Ldin$a; readFile
	a (Ldin$a;)V writeFile
	b ()Ljava/io/File; getPathToData
	<clinit> ()V <clinit>
din$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
	<init> ()V <init>
dio com/mojang/realmsclient/util/RealmsTextureManager
	a TEXTURES
	b SKIN_FETCH_STATUS
	c FETCHED_SKINS
	d LOGGER
	e TEMPLATE_ICON_LOCATION
	a (Ljava/lang/String;Ljava/lang/String;)V bindWorldTemplate
	a (Ljava/lang/String;Ljava/lang/Runnable;)V withBoundFace
	a (Ljava/util/UUID;)V bindDefaultFace
	a (Ljava/lang/String;)V bindFace
	b (Ljava/lang/String;Ljava/lang/String;)I getTextureId
	a ()Lorg/apache/logging/log4j/Logger; access$100
	b ()Ljava/util/Map; access$200
	c ()Ljava/util/Map; access$300
	<clinit> ()V <clinit>
dio$1 com/mojang/realmsclient/util/RealmsTextureManager$1
	a val$uuid
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	run ()V run
dio$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
	<init> (Ljava/lang/String;I)V <init>
	a (Ldio$a;)I access$000
	b (Ldio$a;)Ljava/lang/String; access$400
dip com/mojang/realmsclient/util/RealmsUtil
	b AUTHENTICATION_SERVICE
	c SESSION_SERVICE
	a gameProfileCache
	a (Ljava/lang/String;)Ljava/lang/String; uuidToName
	b (Ljava/lang/String;)Ljava/util/Map; getTextures
	a (J)Ljava/lang/String; convertToAgePresentation
	a (Ljava/util/Date;)Ljava/lang/String; convertToAgePresentationFromInstant
	a ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; access$000
	<clinit> ()V <clinit>
dip$1 com/mojang/realmsclient/util/RealmsUtil$1
	<init> ()V <init>
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
diq com/mojang/realmsclient/util/SkinProcessor
	a pixels
	b width
	c height
	<init> ()V <init>
	a (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; process
	a (IIII)V doLegacyTransparencyHack
	b (IIII)V setNoAlpha
dir com/mojang/realmsclient/util/TextRenderingUtils
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;[Ldir$b;)Ljava/util/List; decompose
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
dir$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
	<init> (Ljava/util/List;)V <init>
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
dir$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; renderedText
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
	a (Ljava/lang/String;Ljava/lang/String;)Ldir$b; link
	a (Ljava/lang/String;)Ldir$b; text
dis com/mojang/realmsclient/util/UploadTokenCache
	a TOKEN_CACHE
	a (J)Ljava/lang/String; get
	b (J)V invalidate
	a (JLjava/lang/String;)V put
	<clinit> ()V <clinit>
dit com/mojang/realmsclient/util/task/CloseServerTask
	c serverData
	d configureScreen
	<init> (Ldgn;Ldhp;)V <init>
	run ()V run
diu com/mojang/realmsclient/util/task/ConnectTask
	c realmsConnect
	d address
	<init> (Ldoq;Ldgo;)V <init>
	run ()V run
	a ()V abortTask
	b ()V tick
div com/mojang/realmsclient/util/task/DownloadTask
	c worldId
	d slot
	e lastScreen
	f downloadName
	<init> (JILjava/lang/String;Ldoq;)V <init>
	run ()V run
	a (Z)V lambda$run$0
diw com/mojang/realmsclient/util/task/GetServerDetailsTask
	c server
	d lastScreen
	e mainScreen
	f connectLock
	<init> (Ldft;Ldoq;Ldgn;Ljava/util/concurrent/locks/ReentrantLock;)V <init>
	run ()V run
	b (I)V sleep
	a (Ldgo;Z)V lambda$run$2
	a (Ldgo;)V lambda$null$1
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$null$0
dix com/mojang/realmsclient/util/task/LongRunningTask
	a LOGGER
	b longRunningMcoTaskScreen
	<init> ()V <init>
	a (I)V pause
	a (Ldoq;)V setScreen
	a (Ldhw;)V setScreen
	a (Lnr;)V error
	b (Lnr;)V setTitle
	c ()Z aborted
	b ()V tick
	d ()V init
	a ()V abortTask
	a (Ldjw;Ldoq;)V lambda$setScreen$0
	<clinit> ()V <clinit>
diy com/mojang/realmsclient/util/task/OpenServerTask
	c serverData
	d returnScreen
	e join
	f mainScreen
	<init> (Ldgn;Ldoq;Ldft;Z)V <init>
	run ()V run
diz com/mojang/realmsclient/util/task/ResettingWorldTask
	c seed
	d worldTemplate
	e levelType
	f generateStructures
	g serverId
	h title
	i callback
	<init> (Ljava/lang/String;Ldhb;IZJLnr;Ljava/lang/Runnable;)V <init>
	run ()V run
dja com/mojang/realmsclient/util/task/RestoreTask
	c backup
	d worldId
	e lastScreen
	<init> (Ldgd;JLdhp;)V <init>
	run ()V run
djb com/mojang/realmsclient/util/task/SwitchMinigameTask
	c worldId
	d worldTemplate
	e lastScreen
	<init> (JLdhb;Ldhp;)V <init>
	run ()V run
djc com/mojang/realmsclient/util/task/SwitchSlotTask
	c worldId
	d slot
	e callback
	<init> (JILjava/lang/Runnable;)V <init>
	run ()V run
djd com/mojang/realmsclient/util/task/WorldCreationTask
	c name
	d motd
	e worldId
	f lastScreen
	<init> (JLjava/lang/String;Ljava/lang/String;Ldoq;)V <init>
	run ()V run
i net/minecraft/BlockUtil
	<init> ()V <init>
	a (Lfx;Lgc$a;ILgc$a;ILjava/util/function/Predicate;)Li$a; getLargestRectangleAround
	a (Ljava/util/function/Predicate;Lfx$a;Lgc;I)I getLimit
	a ([I)Lcom/mojang/datafixers/util/Pair; getMaxRectangleLocation
i$a net/minecraft/BlockUtil$FoundRectangle
	a minCorner
	b axis1Size
	c axis2Size
	<init> (Lfx;II)V <init>
i$b net/minecraft/BlockUtil$IntBounds
	a min
	b max
	<init> (II)V <init>
	toString ()Ljava/lang/String; toString
j net/minecraft/CharPredicate
	test (C)Z test
	a (Lj;)Lj; and
	a ()Lj; negate
	b (Lj;)Lj; or
	a (Lj;C)Z lambda$or$2
	a (C)Z lambda$negate$1
	b (Lj;C)Z lambda$and$0
k net/minecraft/ChatFormatting
	a BLACK
	b DARK_BLUE
	c DARK_GREEN
	d DARK_AQUA
	e DARK_RED
	f DARK_PURPLE
	g GOLD
	h GRAY
	i DARK_GRAY
	j BLUE
	k GREEN
	l AQUA
	m RED
	n LIGHT_PURPLE
	o YELLOW
	p WHITE
	q OBFUSCATED
	r BOLD
	s STRIKETHROUGH
	t UNDERLINE
	u ITALIC
	v RESET
	w FORMATTING_BY_NAME
	x STRIP_FORMATTING_PATTERN
	y name
	z code
	A isFormat
	B toString
	C id
	D color
	E $VALUES
	values ()[Lk; values
	valueOf (Ljava/lang/String;)Lk; valueOf
	c (Ljava/lang/String;)Ljava/lang/String; cleanName
	<init> (Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V <init>
	<init> (Ljava/lang/String;ILjava/lang/String;CZ)V <init>
	<init> (Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V <init>
	a ()C getChar
	b ()I getId
	c ()Z isFormat
	d ()Z isColor
	e ()Ljava/lang/Integer; getColor
	f ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	b (Ljava/lang/String;)Lk; getByName
	a (I)Lk; getById
	a (C)Lk; getByCode
	a (ZZ)Ljava/util/Collection; getNames
	a (Lk;)Lk; lambda$static$1
	b (Lk;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
l net/minecraft/CrashReport
	a LOGGER
	b title
	c exception
	d systemDetails
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
	i ()V initDetails
	a ()Ljava/lang/String; getTitle
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	a (Ljava/lang/StringBuilder;)V getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	a (Ljava/io/File;)Z saveToFile
	g ()Lm; getSystemDetails
	a (Ljava/lang/String;)Lm; addCategory
	a (Ljava/lang/String;I)Lm; addCategory
	j ()Ljava/lang/String; getErrorComment
	a (Ljava/lang/Throwable;Ljava/lang/String;)Ll; forThrowable
	h ()V preload
	k ()Ljava/lang/String; lambda$initDetails$6
	l ()Ljava/lang/String; lambda$initDetails$5
	m ()Ljava/lang/String; lambda$initDetails$4
	n ()Ljava/lang/String; lambda$initDetails$3
	o ()Ljava/lang/String; lambda$initDetails$2
	p ()Ljava/lang/String; lambda$initDetails$1
	q ()Ljava/lang/String; lambda$initDetails$0
	<clinit> ()V <clinit>
m net/minecraft/CrashReportCategory
	a report
	b title
	c entries
	d stackTrace
	<init> (Ll;Ljava/lang/String;)V <init>
	a (DDD)Ljava/lang/String; formatLocation
	a (Lfx;)Ljava/lang/String; formatLocation
	a (III)Ljava/lang/String; formatLocation
	a (Ljava/lang/String;Ln;)Lm; setDetail
	a (Ljava/lang/String;Ljava/lang/Object;)Lm; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (I)I fillInStackTrace
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	b (I)V trimStacktrace
	a (Ljava/lang/StringBuilder;)V getDetails
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (Lm;Lfx;Lcee;)V populateBlockDetails
	b (Lfx;)Ljava/lang/String; lambda$populateBlockDetails$0
m$a net/minecraft/CrashReportCategory$Entry
	a key
	b value
	<init> (Ljava/lang/String;Ljava/lang/Object;)V <init>
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
n net/minecraft/CrashReportDetail
o net/minecraft/DefaultUncaughtExceptionHandler
	a logger
	<init> (Lorg/apache/logging/log4j/Logger;)V <init>
	uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
p net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
	<init> (Lorg/apache/logging/log4j/Logger;)V <init>
	uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
q net/minecraft/DetectedVersion
	b LOGGER
	a BUILT_IN
	c id
	d name
	e stable
	f worldVersion
	g protocolVersion
	h packVersion
	i buildTime
	j releaseTarget
	<init> ()V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a ()Lcom/mojang/bridge/game/GameVersion; tryDetectVersion
	getId ()Ljava/lang/String; getId
	getName ()Ljava/lang/String; getName
	getReleaseTarget ()Ljava/lang/String; getReleaseTarget
	getWorldVersion ()I getWorldVersion
	getProtocolVersion ()I getProtocolVersion
	getPackVersion ()I getPackVersion
	getBuildTime ()Ljava/util/Date; getBuildTime
	isStable ()Z isStable
	<clinit> ()V <clinit>
r net/minecraft/FieldsAreNonnullByDefault
s net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b RESERVED_WINDOWS_FILENAMES
	<init> ()V <init>
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	a (Ljava/nio/file/Path;)Z isPathNormalized
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
	<clinit> ()V <clinit>
t net/minecraft/MethodsReturnNonnullByDefault
u net/minecraft/ReportedException
	a report
	<init> (Ll;)V <init>
	a ()Ll; getReport
	getCause ()Ljava/lang/Throwable; getCause
	getMessage ()Ljava/lang/String; getMessage
v net/minecraft/ResourceLocationException
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
w net/minecraft/SharedConstants
	a NETTY_LEAK_DETECTION
	b MAXIMUM_TICK_TIME_NANOS
	c CHECK_DATA_FIXER_SCHEMA
	d IS_RUNNING_IN_IDE
	e ILLEGAL_FILE_CHARACTERS
	f CURRENT_VERSION
	<init> ()V <init>
	a (C)Z isAllowedChatCharacter
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	a (Lcom/mojang/bridge/game/GameVersion;)V setVersion
	a ()Lcom/mojang/bridge/game/GameVersion; getCurrentVersion
	<clinit> ()V <clinit>
x net/minecraft/Util
	c WORKER_COUNT
	d BOOTSTRAP_EXECUTOR
	e BACKGROUND_EXECUTOR
	f IO_POOL
	a timeSource
	b NIL_UUID
	g LOGGER
	<init> ()V <init>
	a ()Ljava/util/stream/Collector; toMap
	a (Lcfg;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	a (Ljava/lang/String;Lvk;)Ljava/lang/String; makeDescriptionId
	b ()J getMillis
	c ()J getNanos
	d ()J getEpochMillis
	a (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; makeExecutor
	e ()Ljava/util/concurrent/Executor; bootstrapExecutor
	f ()Ljava/util/concurrent/Executor; backgroundExecutor
	g ()Ljava/util/concurrent/Executor; ioPool
	h ()V shutdownExecutors
	a (Ljava/util/concurrent/ExecutorService;)V shutdownExecutor
	n ()Ljava/util/concurrent/ExecutorService; makeIoExecutor
	a (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; failedFuture
	b (Ljava/lang/Throwable;)V throwAsRuntime
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V onThreadException
	a (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; fetchChoiceType
	b (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; doFetchChoiceType
	i ()Lx$b; getPlatform
	j ()Ljava/util/stream/Stream; getVmArguments
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	k ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	a (Ljava/util/Optional;)Ljava/util/stream/Stream; toStream
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	c (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
	d (Ljava/lang/Throwable;)Ljava/lang/String; describeError
	a ([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object; getRandom
	a ([ILjava/util/Random;)I getRandom
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createRenamer
	a (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createDeleter
	b (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileDeletedCheck
	c (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileCreatedCheck
	a ([Ljava/util/function/BooleanSupplier;)Z executeInSequence
	a (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z runWithRetries
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V safeReplaceFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V safeReplaceFile
	a (Ljava/lang/String;II)I offsetByCodepoints
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; prefix
	a (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	l ()V startTimerHackThread
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	a (Ljava/lang/String;Lj;)Ljava/lang/String; sanitizeName
	a (Lj;I)Ljava/lang/String; lambda$sanitizeName$7
	a (Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V lambda$prefix$6
	a (Ljava/util/List;Ljava/lang/Void;)Ljava/util/List; lambda$sequence$5
	a (Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V lambda$sequence$4
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V lambda$null$3
	b (Ljava/lang/String;)Z lambda$getVmArguments$2
	a (Ljava/lang/Runnable;)Ljava/lang/Thread; lambda$makeIoExecutor$1
	a (Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread; lambda$makeExecutor$0
	m ()Lorg/apache/logging/log4j/Logger; access$100
	<clinit> ()V <clinit>
x$1 net/minecraft/Util$1
	<init> (Ljava/util/concurrent/ForkJoinPool;)V <init>
	onTermination (Ljava/lang/Throwable;)V onTermination
x$2 net/minecraft/Util$3
	a val$from
	b val$to
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
x$3 net/minecraft/Util$4
	a val$target
	<init> (Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
x$4 net/minecraft/Util$5
	a val$target
	<init> (Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
x$5 net/minecraft/Util$6
	a val$target
	<init> (Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
x$6 net/minecraft/Util$7
	<init> (Ljava/lang/String;)V <init>
	run ()V run
x$a net/minecraft/Util$IdentityStrategy
	a INSTANCE
	b $VALUES
	values ()[Lx$a; values
	valueOf (Ljava/lang/String;)Lx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	hashCode (Ljava/lang/Object;)I hashCode
	equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
	<clinit> ()V <clinit>
x$b net/minecraft/Util$OS
	a LINUX
	b SOLARIS
	c WINDOWS
	d OSX
	e UNKNOWN
	f $VALUES
	values ()[Lx$b; values
	valueOf (Ljava/lang/String;)Lx$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/net/URL;)V openUrl
	a (Ljava/net/URI;)V openUri
	a (Ljava/io/File;)V openFile
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
	a (Ljava/lang/String;)V openUri
	c (Ljava/net/URL;)Ljava/lang/Process; lambda$openUrl$0
	<init> (Ljava/lang/String;ILx$1;)V <init>
	<clinit> ()V <clinit>
x$b$1 net/minecraft/Util$OS$1
	<init> (Ljava/lang/String;I)V <init>
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
x$b$2 net/minecraft/Util$OS$2
	<init> (Ljava/lang/String;I)V <init>
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
y net/minecraft/advancements/Advancement
	a parent
	b display
	c rewards
	d id
	e criteria
	f requirements
	g children
	h chatComponent
	<init> (Lvk;Ly;Lah;Lab;Ljava/util/Map;[[Ljava/lang/String;)V <init>
	a ()Ly$a; deconstruct
	b ()Ly; getParent
	c ()Lah; getDisplay
	d ()Lab; getRewards
	toString ()Ljava/lang/String; toString
	e ()Ljava/lang/Iterable; getChildren
	f ()Ljava/util/Map; getCriteria
	g ()I getMaxCriteraRequired
	a (Ly;)V addChild
	h ()Lvk; getId
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	i ()[[Ljava/lang/String; getRequirements
	j ()Lnr; getChatComponent
	a (Lnr;Lob;)Lob; lambda$new$0
y$1 net/minecraft/advancements/Advancement$1
y$a net/minecraft/advancements/Advancement$Builder
	a parentId
	b parent
	c display
	d rewards
	e criteria
	f requirements
	g requirementsStrategy
	<init> (Lvk;Lah;Lab;Ljava/util/Map;[[Ljava/lang/String;)V <init>
	<init> ()V <init>
	a ()Ly$a; advancement
	a (Ly;)Ly$a; parent
	a (Lvk;)Ly$a; parent
	a (Lbly;Lnr;Lnr;Lvk;Lai;ZZZ)Ly$a; display
	a (Lbrt;Lnr;Lnr;Lvk;Lai;ZZZ)Ly$a; display
	a (Lah;)Ly$a; display
	a (Lab$a;)Ly$a; rewards
	a (Lab;)Ly$a; rewards
	a (Ljava/lang/String;Lag;)Ly$a; addCriterion
	a (Ljava/lang/String;Lad;)Ly$a; addCriterion
	a (Laj;)Ly$a; requirements
	a ([[Ljava/lang/String;)Ly$a; requirements
	a (Ljava/util/function/Function;)Z canBuild
	b (Lvk;)Ly; build
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Ly; save
	b ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lnf;)V serializeToNetwork
	toString ()Ljava/lang/String; toString
	a (Lcom/google/gson/JsonObject;Lax;)Ly$a; fromJson
	b (Lnf;)Ly$a; fromNetwork
	c ()Ljava/util/Map; getCriteria
	c (Lvk;)Ly; lambda$build$0
	<init> (Lvk;Lah;Lab;Ljava/util/Map;[[Ljava/lang/String;Ly$1;)V <init>
z net/minecraft/advancements/AdvancementList
	a LOGGER
	b advancements
	c roots
	d tasks
	e listener
	<init> ()V <init>
	a (Ly;)V remove
	a (Ljava/util/Set;)V remove
	a (Ljava/util/Map;)V add
	a ()V clear
	b ()Ljava/lang/Iterable; getRoots
	c ()Ljava/util/Collection; getAllAdvancements
	a (Lvk;)Ly; get
	a (Lz$a;)V setListener
	<clinit> ()V <clinit>
z$a net/minecraft/advancements/AdvancementList$Listener
	a (Ly;)V onAddAdvancementRoot
	b (Ly;)V onRemoveAdvancementRoot
	c (Ly;)V onAddAdvancementTask
	d (Ly;)V onRemoveAdvancementTask
	a ()V onAdvancementsCleared
aa net/minecraft/advancements/AdvancementProgress
	a criteria
	b requirements
	<init> ()V <init>
	a (Ljava/util/Map;[[Ljava/lang/String;)V update
	a ()Z isDone
	b ()Z hasProgress
	a (Ljava/lang/String;)Z grantProgress
	b (Ljava/lang/String;)Z revokeProgress
	toString ()Ljava/lang/String; toString
	a (Lnf;)V serializeToNetwork
	b (Lnf;)Laa; fromNetwork
	c (Ljava/lang/String;)Lae; getCriterion
	c ()F getPercent
	d ()Ljava/lang/String; getProgressText
	h ()I countCompletedRequirements
	e ()Ljava/lang/Iterable; getRemainingCriteria
	f ()Ljava/lang/Iterable; getCompletedCriteria
	g ()Ljava/util/Date; getFirstProgressDate
	a (Laa;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
	a (Ljava/util/Set;Ljava/util/Map$Entry;)Z lambda$update$0
	b (Laa;)Ljava/util/Map; access$000
aa$a net/minecraft/advancements/AdvancementProgress$Serializer
	<init> ()V <init>
	a (Laa;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Laa; deserialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ab net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	<init> (I[Lvk;[Lvk;Lcy$a;)V <init>
	a ()[Lvk; getRecipes
	a (Laah;)V grant
	toString ()Ljava/lang/String; toString
	b ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lab; deserialize
	a (Lnet/minecraft/server/MinecraftServer;Laah;Lcy;)V lambda$grant$0
	<clinit> ()V <clinit>
ab$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	<init> ()V <init>
	a (I)Lab$a; experience
	b (I)Lab$a; addExperience
	a (Lvk;)Lab$a; loot
	b (Lvk;)Lab$a; addLootTable
	c (Lvk;)Lab$a; recipe
	d (Lvk;)Lab$a; addRecipe
	e (Lvk;)Lab$a; function
	f (Lvk;)Lab$a; runs
	a ()Lab; build
ac net/minecraft/advancements/CriteriaTriggers
	Q CRITERIA
	a IMPOSSIBLE
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J HONEY_BLOCK_SLIDE
	K BEE_NEST_DESTROYED
	L TARGET_BLOCK_HIT
	M ITEM_USED_ON_BLOCK
	N GENERATE_LOOT
	O ITEM_PICKED_UP_BY_ENTITY
	P PLAYER_INTERACTED_WITH_ENTITY
	<init> ()V <init>
	a (Laf;)Laf; register
	a (Lvk;)Laf; getCriterion
	a ()Ljava/lang/Iterable; all
	<clinit> ()V <clinit>
ad net/minecraft/advancements/Criterion
	a trigger
	<init> (Lag;)V <init>
	<init> ()V <init>
	a (Lnf;)V serializeToNetwork
	a (Lcom/google/gson/JsonObject;Lax;)Lad; criterionFromJson
	b (Lnf;)Lad; criterionFromNetwork
	b (Lcom/google/gson/JsonObject;Lax;)Ljava/util/Map; criteriaFromJson
	c (Lnf;)Ljava/util/Map; criteriaFromNetwork
	a (Ljava/util/Map;Lnf;)V serializeToNetwork
	a ()Lag; getTrigger
	b ()Lcom/google/gson/JsonElement; serializeToJson
ae net/minecraft/advancements/CriterionProgress
	a DATE_FORMAT
	b obtained
	<init> ()V <init>
	a ()Z isDone
	b ()V grant
	c ()V revoke
	d ()Ljava/util/Date; getObtained
	toString ()Ljava/lang/String; toString
	a (Lnf;)V serializeToNetwork
	e ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lnf;)Lae; fromNetwork
	a (Ljava/lang/String;)Lae; fromJson
	<clinit> ()V <clinit>
af net/minecraft/advancements/CriterionTrigger
	a ()Lvk; getId
	a (Lvt;Laf$a;)V addPlayerListener
	b (Lvt;Laf$a;)V removePlayerListener
	a (Lvt;)V removePlayerListeners
	a (Lcom/google/gson/JsonObject;Lax;)Lag; createInstance
af$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	<init> (Lag;Ly;Ljava/lang/String;)V <init>
	a ()Lag; getTriggerInstance
	a (Lvt;)V run
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
ag net/minecraft/advancements/CriterionTriggerInstance
	a ()Lvk; getCriterion
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
ah net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	<init> (Lbly;Lnr;Lnr;Lvk;Lai;ZZZ)V <init>
	a (FF)V setLocation
	a ()Lnr; getTitle
	b ()Lnr; getDescription
	c ()Lbly; getIcon
	d ()Lvk; getBackground
	e ()Lai; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	a (Lcom/google/gson/JsonObject;)Lah; fromJson
	b (Lcom/google/gson/JsonObject;)Lbly; getIcon
	a (Lnf;)V serializeToNetwork
	b (Lnf;)Lah; fromNetwork
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
ai net/minecraft/advancements/FrameType
	a TASK
	b CHALLENGE
	c GOAL
	d name
	e texture
	f chatColor
	g displayName
	h $VALUES
	values ()[Lai; values
	valueOf (Ljava/lang/String;)Lai; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;ILk;)V <init>
	a ()Ljava/lang/String; getName
	b ()I getTexture
	a (Ljava/lang/String;)Lai; byName
	c ()Lk; getChatColor
	d ()Lnr; getDisplayName
	<clinit> ()V <clinit>
aj net/minecraft/advancements/RequirementsStrategy
	a AND
	b OR
	createRequirements (Ljava/util/Collection;)[[Ljava/lang/String; createRequirements
	a (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$1
	b (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
ak net/minecraft/advancements/TreeNodePosition
	a advancement
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	<init> (Ly;Lak;Lak;II)V <init>
	a (Ly;Lak;)Lak; addChild
	a ()V firstWalk
	a (FIF)F secondWalk
	a (F)V thirdWalk
	b ()V executeShifts
	c ()Lak; previousOrThread
	d ()Lak; nextOrThread
	a (Lak;)Lak; apportion
	a (Lak;F)V moveSubtree
	a (Lak;Lak;)Lak; getAncestor
	e ()V finalizePosition
	a (Ly;)V run
al net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a criterion
	b player
	<init> (Lvk;Lbg$b;)V <init>
	a ()Lvk; getCriterion
	b ()Lbg$b; getPlayerPredicate
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	toString ()Ljava/lang/String; toString
am net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lam$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lbul; deserializeBlock
	a (Laah;Lbul;Lbly;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbul;Lbly;ILam$a;)Z lambda$trigger$1
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
am$a net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	a block
	b item
	c numBees
	<init> (Lbg$b;Lbul;Lbq;Lbz$d;)V <init>
	a (Lbul;Lbq$a;Lbz$d;)Lam$a; destroyedBeeNest
	a (Lbul;Lbly;I)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
an net/minecraft/advancements/critereon/BlockPredicate
	a ANY
	b tag
	c block
	d properties
	e nbt
	<init> (Laej;Lbul;Lcm;Lcb;)V <init>
	a (Laag;Lfx;)Z matches
	a (Lcom/google/gson/JsonElement;)Lan; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
an$a net/minecraft/advancements/critereon/BlockPredicate$Builder
	a block
	b blocks
	c properties
	d nbt
	<init> ()V <init>
	a ()Lan$a; block
	a (Lbul;)Lan$a; of
	a (Laej;)Lan$a; of
	a (Lmd;)Lan$a; hasNbt
	a (Lcm;)Lan$a; setProperties
	b ()Lan; build
ao net/minecraft/advancements/critereon/BredAnimalsTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lao$a; createInstance
	a (Laah;Lazw;Lazw;Lapv;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcys;Lcys;Lcys;Lao$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ao$a net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	<init> (Lbg$b;Lbg$b;Lbg$b;Lbg$b;)V <init>
	c ()Lao$a; bredAnimals
	a (Lbg$a;)Lao$a; bredAnimals
	a (Lbg;Lbg;Lbg;)Lao$a; bredAnimals
	a (Lcys;Lcys;Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
ap net/minecraft/advancements/critereon/BrewedPotionTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lap$a; createInstance
	a (Laah;Lbnq;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbnq;Lap$a;)Z lambda$trigger$1
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$createInstance$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ap$a net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	<init> (Lbg$b;Lbnq;)V <init>
	c ()Lap$a; brewedPotion
	a (Lbnq;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
aq net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Laq$a; createInstance
	a (Laah;Lvj;Lvj;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lvj;Lvj;Laq$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
aq$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	<init> (Lbg$b;Lvj;Lvj;)V <init>
	c ()Laq$a; changedDimension
	a (Lvj;Lvj;)Laq$a; changedDimension
	a (Lvj;)Laq$a; changedDimensionTo
	b (Lvj;)Laq$a; changedDimensionFrom
	b (Lvj;Lvj;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
ar net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lar$a; createInstance
	a (Laah;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Ljava/util/List;Lar$a;)Z lambda$trigger$1
	a (Laah;Lapx;)Lcys; lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ar$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	<init> (Lbg$b;[Lbg$b;)V <init>
	a ([Lbg;)Lar$a; channeledLightning
	a (Ljava/util/Collection;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	a (I)[Lbg$b; lambda$channeledLightning$0
as net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Las$a; createInstance
	a (Laah;Lccb;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lccb;Las$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
as$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	<init> (Lbg$b;Lbz$d;)V <init>
	c ()Las$a; constructedBeacon
	a (Lbz$d;)Las$a; constructedBeacon
	a (Lccb;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
at net/minecraft/advancements/critereon/ConsumeItemTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lat$a; createInstance
	a (Laah;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;Lat$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
at$a net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	<init> (Lbg$b;Lbq;)V <init>
	c ()Lat$a; usedItem
	a (Lbq;)Lat$a; usedItem
	a (Lbrt;)Lat$a; usedItem
	a (Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
au net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lau$a; createInstance
	a (Laah;Lbeg;Lbfg;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcys;Lcys;Lau$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
au$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	<init> (Lbg$b;Lbg$b;Lbg$b;)V <init>
	c ()Lau$a; curedZombieVillager
	a (Lcys;Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
av net/minecraft/advancements/critereon/DamagePredicate
	a ANY
	b dealtDamage
	c takenDamage
	d sourceEntity
	e blocked
	f type
	<init> ()V <init>
	<init> (Lbz$c;Lbz$c;Lbg;Ljava/lang/Boolean;Law;)V <init>
	a (Laah;Laph;FFZ)Z matches
	a (Lcom/google/gson/JsonElement;)Lav; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
av$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	<init> ()V <init>
	a ()Lav$a; damageInstance
	a (Lbz$c;)Lav$a; dealtDamage
	b (Lbz$c;)Lav$a; takenDamage
	a (Lbg;)Lav$a; sourceEntity
	a (Ljava/lang/Boolean;)Lav$a; blocked
	a (Law;)Lav$a; type
	a (Law$a;)Lav$a; type
	b ()Lav; build
aw net/minecraft/advancements/critereon/DamageSourcePredicate
	a ANY
	b isProjectile
	c isExplosion
	d bypassesArmor
	e bypassesInvulnerability
	f bypassesMagic
	g isFire
	h isMagic
	i isLightning
	j directEntity
	k sourceEntity
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lbg;Lbg;)V <init>
	a (Laah;Laph;)Z matches
	a (Laag;Ldck;Laph;)Z matches
	a (Lcom/google/gson/JsonElement;)Law; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionally
	<clinit> ()V <clinit>
aw$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a isProjectile
	b isExplosion
	c bypassesArmor
	d bypassesInvulnerability
	e bypassesMagic
	f isFire
	g isMagic
	h isLightning
	i directEntity
	j sourceEntity
	<init> ()V <init>
	a ()Law$a; damageType
	a (Ljava/lang/Boolean;)Law$a; isProjectile
	b (Ljava/lang/Boolean;)Law$a; isExplosion
	c (Ljava/lang/Boolean;)Law$a; bypassesArmor
	d (Ljava/lang/Boolean;)Law$a; bypassesInvulnerability
	e (Ljava/lang/Boolean;)Law$a; bypassesMagic
	f (Ljava/lang/Boolean;)Law$a; isFire
	g (Ljava/lang/Boolean;)Law$a; isMagic
	h (Ljava/lang/Boolean;)Law$a; isLightning
	a (Lbg;)Law$a; direct
	a (Lbg$a;)Law$a; direct
	b (Lbg;)Law$a; source
	b (Lbg$a;)Law$a; source
	b ()Law; build
ax net/minecraft/advancements/critereon/DeserializationContext
	a LOGGER
	b id
	c predicateManager
	d predicateGson
	<init> (Lvk;Lcyx;)V <init>
	a (Lcom/google/gson/JsonArray;Ljava/lang/String;Ldax;)[Ldbl; deserializeConditions
	a ()Lvk; getAdvancementId
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V lambda$deserializeConditions$1
	a (Lvk;)Lcyv; lambda$deserializeConditions$0
	<clinit> ()V <clinit>
ay net/minecraft/advancements/critereon/DistancePredicate
	a ANY
	b x
	c y
	d z
	e horizontal
	f absolute
	<init> (Lbz$c;Lbz$c;Lbz$c;Lbz$c;Lbz$c;)V <init>
	a (Lbz$c;)Lay; horizontal
	b (Lbz$c;)Lay; vertical
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Lay; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
az net/minecraft/advancements/critereon/EffectsChangedTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Laz$a; createInstance
	a (Laah;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Laz$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
az$a net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	<init> (Lbg$b;Lca;)V <init>
	a (Lca;)Laz$a; hasEffects
	a (Laah;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
ba net/minecraft/advancements/critereon/EnchantedItemTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lba$a; createInstance
	a (Laah;Lbly;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;ILba$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ba$a net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	<init> (Lbg$b;Lbq;Lbz$d;)V <init>
	c ()Lba$a; enchantedItem
	a (Lbly;I)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bb net/minecraft/advancements/critereon/EnchantmentPredicate
	a ANY
	b NONE
	c enchantment
	d level
	<init> ()V <init>
	<init> (Lbpp;Lbz$d;)V <init>
	a (Ljava/util/Map;)Z containedIn
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lbb; fromJson
	b (Lcom/google/gson/JsonElement;)[Lbb; fromJsonArray
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
bc net/minecraft/advancements/critereon/EnterBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbc$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lbul; deserializeBlock
	a (Laah;Lcee;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcee;Lbc$a;)Z lambda$trigger$2
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	a (Lbul;Ljava/lang/String;)V lambda$createInstance$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bc$a net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	<init> (Lbg$b;Lbul;Lcm;)V <init>
	a (Lbul;)Lbc$a; entersBlock
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lcee;)Z matches
bd net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a ANY
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	<init> (Lbq;Lbq;Lbq;Lbq;Lbq;Lbq;)V <init>
	a (Lapx;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbd; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bd$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	<init> ()V <init>
	a ()Lbd$a; equipment
	a (Lbq;)Lbd$a; head
	b (Lbq;)Lbd$a; chest
	c (Lbq;)Lbd$a; legs
	d (Lbq;)Lbd$a; feet
	e (Lbq;)Lbd$a; mainhand
	f (Lbq;)Lbd$a; offhand
	b ()Lbd; build
be net/minecraft/advancements/critereon/EntityFlagsPredicate
	a ANY
	b isOnFire
	c isCrouching
	d isSprinting
	e isSwimming
	f isBaby
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V <init>
	a (Lapx;)Z matches
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonElement;)Lbe; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionalBoolean
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
be$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isCrouching
	c isSprinting
	d isSwimming
	e isBaby
	<init> ()V <init>
	a ()Lbe$a; flags
	a (Ljava/lang/Boolean;)Lbe$a; setOnFire
	b (Ljava/lang/Boolean;)Lbe$a; setCrouching
	c (Ljava/lang/Boolean;)Lbe$a; setSprinting
	d (Ljava/lang/Boolean;)Lbe$a; setSwimming
	e (Ljava/lang/Boolean;)Lbe$a; setIsBaby
	b ()Lbe; build
bf net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbf$a; createInstance
	a (Laah;Laph;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Laph;FFZLbf$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bf$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	<init> (Lbg$b;Lav;)V <init>
	c ()Lbf$a; entityHurtPlayer
	a (Lav;)Lbf$a; entityHurtPlayer
	a (Lav$a;)Lbf$a; entityHurtPlayer
	a (Laah;Laph;FFZ)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bg net/minecraft/advancements/critereon/EntityPredicate
	a ANY
	b entityType
	c distanceToPlayer
	d location
	e effects
	f nbt
	g flags
	h equipment
	i player
	j fishingHook
	k vehicle
	l targetedEntity
	m team
	n catType
	<init> (Lbh;Lay;Lbw;Lca;Lcb;Lbe;Lbd;Lcg;Lbj;Ljava/lang/String;Lvk;)V <init>
	<init> (Lbh;Lay;Lbw;Lca;Lcb;Lbe;Lbd;Lcg;Lbj;Lbg;Lbg;Ljava/lang/String;Lvk;)V <init>
	a (Laah;Lapx;)Z matches
	a (Laag;Ldck;Lapx;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbg; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	b (Laah;Lapx;)Lcys; createContext
	<init> (Lbh;Lay;Lbw;Lca;Lcb;Lbe;Lbd;Lcg;Lbj;Lbg;Lbg;Ljava/lang/String;Lvk;Lbg$1;)V <init>
	<clinit> ()V <clinit>
bg$1 net/minecraft/advancements/critereon/EntityPredicate$1
bg$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d effects
	e nbt
	f flags
	g equipment
	h player
	i fishingHook
	j vehicle
	k targetedEntity
	l team
	m catType
	<init> ()V <init>
	a ()Lbg$a; entity
	a (Laqb;)Lbg$a; of
	a (Laej;)Lbg$a; of
	a (Lvk;)Lbg$a; of
	a (Lbh;)Lbg$a; entityType
	a (Lay;)Lbg$a; distance
	a (Lbw;)Lbg$a; located
	a (Lca;)Lbg$a; effects
	a (Lcb;)Lbg$a; nbt
	a (Lbe;)Lbg$a; flags
	a (Lbd;)Lbg$a; equipment
	a (Lcg;)Lbg$a; player
	a (Lbj;)Lbg$a; fishingHook
	a (Lbg;)Lbg$a; vehicle
	b (Lbg;)Lbg$a; targetedEntity
	a (Ljava/lang/String;)Lbg$a; team
	b (Lvk;)Lbg$a; catType
	b ()Lbg; build
bg$b net/minecraft/advancements/critereon/EntityPredicate$Composite
	a ANY
	b conditions
	c compositePredicates
	<init> ([Ldbl;)V <init>
	a ([Ldbl;)Lbg$b; create
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lax;)Lbg$b; fromJson
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;Lax;)[Lbg$b; fromJsonArray
	a (Ljava/lang/String;Lax;Lcom/google/gson/JsonElement;)Lbg$b; fromElement
	a (Lbg;)Lbg$b; wrap
	a (Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonElement; toJson
	a ([Lbg$b;Lci;)Lcom/google/gson/JsonElement; toJson
	<clinit> ()V <clinit>
bh net/minecraft/advancements/critereon/EntityTypePredicate
	a ANY
	b COMMA_JOINER
	<init> ()V <init>
	a (Laqb;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lbh; fromJson
	b (Laqb;)Lbh; of
	a (Laej;)Lbh; of
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
bh$1 net/minecraft/advancements/critereon/EntityTypePredicate$1
	<init> ()V <init>
	a (Laqb;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
bh$a net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	b tag
	<init> (Laej;)V <init>
	a (Laqb;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
bh$b net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	b type
	<init> (Laqb;)V <init>
	a (Laqb;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
bi net/minecraft/advancements/critereon/FilledBucketTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbi$a; createInstance
	a (Laah;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;Lbi$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bi$a net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	<init> (Lbg$b;Lbq;)V <init>
	a (Lbq;)Lbi$a; filledBucket
	a (Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bj net/minecraft/advancements/critereon/FishingHookPredicate
	a ANY
	b inOpenWater
	<init> (Z)V <init>
	a (Z)Lbj; inOpenWater
	a (Lcom/google/gson/JsonElement;)Lbj; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lapx;)Z matches
	<clinit> ()V <clinit>
bk net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbk$a; createInstance
	a (Laah;Lbly;Lbgf;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;Lcys;Ljava/util/Collection;Lbk$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bk$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	<init> (Lbg$b;Lbq;Lbg$b;Lbq;)V <init>
	a (Lbq;Lbg;Lbq;)Lbk$a; fishedItem
	a (Lbly;Lcys;Ljava/util/Collection;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bl net/minecraft/advancements/critereon/FluidPredicate
	a ANY
	b tag
	c fluid
	d properties
	<init> (Laej;Lcut;Lcm;)V <init>
	a (Laag;Lfx;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbl; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bl$a net/minecraft/advancements/critereon/FluidPredicate$Builder
	a fluid
	b fluids
	c properties
	<init> ()V <init>
	a ()Lbl$a; fluid
	a (Lcut;)Lbl$a; of
	a (Laej;)Lbl$a; of
	a (Lcm;)Lbl$a; setProperties
	b ()Lbl; build
bm net/minecraft/advancements/critereon/ImpossibleTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lvt;Laf$a;)V addPlayerListener
	b (Lvt;Laf$a;)V removePlayerListener
	a (Lvt;)V removePlayerListeners
	b (Lcom/google/gson/JsonObject;Lax;)Lbm$a; createInstance
	a (Lcom/google/gson/JsonObject;Lax;)Lag; createInstance
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bm$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	<init> ()V <init>
	a ()Lvk; getCriterion
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bn net/minecraft/advancements/critereon/InventoryChangeTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbn$a; createInstance
	a (Laah;Lbfs;Lbly;)V trigger
	a (Laah;Lbfs;Lbly;III)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbfs;Lbly;IIILbn$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bn$a net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	<init> (Lbg$b;Lbz$d;Lbz$d;Lbz$d;[Lbq;)V <init>
	a ([Lbq;)Lbn$a; hasItems
	a ([Lbrt;)Lbn$a; hasItems
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lbfs;Lbly;III)Z matches
	a (Lbly;Lbq;)Z lambda$matches$0
bo net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbo$a; createInstance
	a (Laah;Lbly;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;ILbo$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bo$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	<init> (Lbg$b;Lbq;Lbz$d;Lbz$d;)V <init>
	a (Lbq;Lbz$d;)Lbo$a; changedDurability
	a (Lbg$b;Lbq;Lbz$d;)Lbo$a; changedDurability
	a (Lbly;I)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bp net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbp$a; createInstance
	a (Laah;Lbly;Lapx;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Lbly;Lcys;Lbp$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bp$a net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance
	a item
	b entity
	<init> (Lbg$b;Lbq;Lbg$b;)V <init>
	a (Lbg$b;Lbq$a;Lbg$b;)Lbp$a; itemPickedUpByEntity
	a (Laah;Lbly;Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bq net/minecraft/advancements/critereon/ItemPredicate
	a ANY
	b tag
	c item
	d count
	e durability
	f enchantments
	g storedEnchantments
	h potion
	i nbt
	<init> ()V <init>
	<init> (Laej;Lblu;Lbz$d;Lbz$d;[Lbb;[Lbb;Lbnq;Lcb;)V <init>
	a (Lbly;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbq; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lcom/google/gson/JsonElement;)[Lbq; fromJsonArray
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$1
	b (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
bq$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b storedEnchantments
	c item
	d tag
	e count
	f durability
	g potion
	h nbt
	<init> ()V <init>
	a ()Lbq$a; item
	a (Lbrt;)Lbq$a; of
	a (Laej;)Lbq$a; of
	a (Lbz$d;)Lbq$a; withCount
	b (Lbz$d;)Lbq$a; hasDurability
	a (Lbnq;)Lbq$a; isPotion
	a (Lmd;)Lbq$a; hasNbt
	a (Lbb;)Lbq$a; hasEnchantment
	b (Lbb;)Lbq$a; hasStoredEnchantment
	b ()Lbq; build
br net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbr$a; createInstance
	a (Laah;Lfx;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcee;Laah;Lfx;Lbly;Lbr$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
br$a net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance
	a location
	b item
	<init> (Lbg$b;Lbw;Lbq;)V <init>
	a (Lbw$a;Lbq$a;)Lbr$a; itemUsedOnBlock
	a (Lcee;Laag;Lfx;Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bs net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbs$a; createInstance
	a (Laah;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Ljava/util/List;Ljava/util/Set;Lbs$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bs$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	<init> (Lbg$b;[Lbg$b;Lbz$d;)V <init>
	a ([Lbg$a;)Lbs$a; crossbowKilled
	a (Lbz$d;)Lbs$a; crossbowKilled
	a (Ljava/util/Collection;I)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bt net/minecraft/advancements/critereon/KilledTrigger
	a id
	<init> (Lvk;)V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbt$a; createInstance
	a (Laah;Lapx;Laph;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Lcys;Laph;Lbt$a;)Z lambda$trigger$0
	a (Lbt;)Lvk; access$000
bt$a net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	<init> (Lvk;Lbg$b;Lbg$b;Law;)V <init>
	a (Lbg;)Lbt$a; playerKilledEntity
	a (Lbg$a;)Lbt$a; playerKilledEntity
	c ()Lbt$a; playerKilledEntity
	a (Lbg;Law;)Lbt$a; playerKilledEntity
	a (Lbg$a;Law;)Lbt$a; playerKilledEntity
	a (Lbg;Law$a;)Lbt$a; playerKilledEntity
	a (Lbg$a;Law$a;)Lbt$a; playerKilledEntity
	b (Lbg;)Lbt$a; entityKilledPlayer
	b (Lbg$a;)Lbt$a; entityKilledPlayer
	d ()Lbt$a; entityKilledPlayer
	b (Lbg;Law;)Lbt$a; entityKilledPlayer
	b (Lbg$a;Law;)Lbt$a; entityKilledPlayer
	b (Lbg;Law$a;)Lbt$a; entityKilledPlayer
	b (Lbg$a;Law$a;)Lbt$a; entityKilledPlayer
	a (Laah;Lcys;Laph;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bu net/minecraft/advancements/critereon/LevitationTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbu$a; createInstance
	a (Laah;Ldck;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Ldck;ILbu$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
bu$a net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	<init> (Lbg$b;Lay;Lbz$d;)V <init>
	a (Lay;)Lbu$a; levitated
	a (Laah;Ldck;I)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bv net/minecraft/advancements/critereon/LightPredicate
	a ANY
	b composite
	<init> (Lbz$d;)V <init>
	a (Laag;Lfx;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lbv; fromJson
	<init> (Lbz$d;Lbv$1;)V <init>
	<clinit> ()V <clinit>
bv$1 net/minecraft/advancements/critereon/LightPredicate$1
bv$a net/minecraft/advancements/critereon/LightPredicate$Builder
	a composite
	<init> ()V <init>
	a ()Lbv$a; light
	a (Lbz$d;)Lbv$a; setComposite
	b ()Lbv; build
bw net/minecraft/advancements/critereon/LocationPredicate
	b LOGGER
	a ANY
	c x
	d y
	e z
	f biome
	g feature
	h dimension
	i smokey
	j light
	k block
	l fluid
	<init> (Lbz$c;Lbz$c;Lbz$c;Lvj;Lckx;Lvj;Ljava/lang/Boolean;Lbv;Lan;Lbl;)V <init>
	a (Lvj;)Lbw; inBiome
	b (Lvj;)Lbw; inDimension
	a (Lckx;)Lbw; inFeature
	a (Laag;DDD)Z matches
	a (Laag;FFF)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lbw; fromJson
	a (Lvk;)Lvj; lambda$fromJson$1
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V lambda$serializeToJson$0
	<clinit> ()V <clinit>
bw$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e feature
	f dimension
	g smokey
	h light
	i block
	j fluid
	<init> ()V <init>
	a ()Lbw$a; location
	a (Lbz$c;)Lbw$a; setX
	b (Lbz$c;)Lbw$a; setY
	c (Lbz$c;)Lbw$a; setZ
	a (Lvj;)Lbw$a; setBiome
	a (Lckx;)Lbw$a; setFeature
	b (Lvj;)Lbw$a; setDimension
	a (Lbv;)Lbw$a; setLight
	a (Lan;)Lbw$a; setBlock
	a (Lbl;)Lbw$a; setFluid
	a (Ljava/lang/Boolean;)Lbw$a; setSmokey
	b ()Lbw; build
bx net/minecraft/advancements/critereon/LocationTrigger
	a id
	<init> (Lvk;)V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lbx$a; createInstance
	a (Laah;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Lbx$a;)Z lambda$trigger$0
	a (Lbx;)Lvk; access$000
bx$a net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance
	a location
	<init> (Lvk;Lbg$b;Lbw;)V <init>
	a (Lbw;)Lbx$a; located
	c ()Lbx$a; sleptInBed
	d ()Lbx$a; raidWon
	a (Laag;DDD)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
by net/minecraft/advancements/critereon/LootTableTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lby$a; createInstance
	a (Laah;Lvk;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lvk;Lby$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
by$a net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	a lootTable
	<init> (Lbg$b;Lvk;)V <init>
	a (Lvk;)Lby$a; lootTableUsed
	b (Lvk;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
bz net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	c min
	d max
	<init> (Ljava/lang/Number;Ljava/lang/Number;)V <init>
	a ()Ljava/lang/Number; getMin
	b ()Ljava/lang/Number; getMax
	c ()Z isAny
	d ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;Lbz;Ljava/util/function/BiFunction;Lbz$a;)Lbz; fromJson
	a (Lcom/mojang/brigadier/StringReader;Lbz$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lbz; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; readNumber
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; optionallyFormat
	<clinit> ()V <clinit>
bz$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
	create (Ljava/lang/Number;Ljava/lang/Number;)Lbz; create
bz$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)Lbz; create
bz$c net/minecraft/advancements/critereon/MinMaxBounds$Floats
	e ANY
	f minSq
	g maxSq
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lbz$c; create
	a (Ljava/lang/Float;)Ljava/lang/Double; squareOpt
	<init> (Ljava/lang/Float;Ljava/lang/Float;)V <init>
	a (F)Lbz$c; exactly
	a (FF)Lbz$c; between
	b (F)Lbz$c; atLeast
	c (F)Lbz$c; atMost
	d (F)Z matches
	a (D)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lbz$c; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lbz$c; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lbz$c; fromReader
	b (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	<clinit> ()V <clinit>
bz$d net/minecraft/advancements/critereon/MinMaxBounds$Ints
	e ANY
	f minSq
	g maxSq
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lbz$d; create
	a (Ljava/lang/Integer;)Ljava/lang/Long; squareOpt
	<init> (Ljava/lang/Integer;Ljava/lang/Integer;)V <init>
	a (I)Lbz$d; exactly
	a (II)Lbz$d; between
	b (I)Lbz$d; atLeast
	c (I)Lbz$d; atMost
	d (I)Z matches
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lbz$d; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lbz$d; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lbz$d; fromReader
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$fromReader$0
	<clinit> ()V <clinit>
ca net/minecraft/advancements/critereon/MobEffectsPredicate
	a ANY
	b effects
	<init> (Ljava/util/Map;)V <init>
	a ()Lca; effects
	a (Lapp;)Lca; and
	a (Lapp;Lca$a;)Lca; and
	a (Lapx;)Z matches
	a (Laqj;)Z matches
	a (Ljava/util/Map;)Z matches
	a (Lcom/google/gson/JsonElement;)Lca; fromJson
	b ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
ca$a net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a amplifier
	b duration
	c ambient
	d visible
	<init> (Lbz$d;Lbz$d;Ljava/lang/Boolean;Ljava/lang/Boolean;)V <init>
	<init> ()V <init>
	a (Lapr;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lca$a; fromJson
cb net/minecraft/advancements/critereon/NbtPredicate
	a ANY
	b tag
	<init> (Lmd;)V <init>
	a (Lbly;)Z matches
	a (Lapx;)Z matches
	a (Lmt;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lcb; fromJson
	b (Lapx;)Lmd; getEntityTagToCompare
	<clinit> ()V <clinit>
cc net/minecraft/advancements/critereon/NetherTravelTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcc$a; createInstance
	a (Laah;Ldck;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Ldck;Lcc$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cc$a net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance
	a entered
	b exited
	c distance
	<init> (Lbg$b;Lbw;Lbw;Lay;)V <init>
	a (Lay;)Lcc$a; travelledThroughNether
	a (Laag;Ldck;DDD)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
cd net/minecraft/advancements/critereon/PlacedBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcd$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lbul; deserializeBlock
	a (Laah;Lfx;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcee;Lfx;Laah;Lbly;Lcd$a;)Z lambda$trigger$2
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	a (Lbul;Ljava/lang/String;)V lambda$createInstance$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cd$a net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	a block
	b state
	c location
	d item
	<init> (Lbg$b;Lbul;Lcm;Lbw;Lbq;)V <init>
	a (Lbul;)Lcd$a; placedBlock
	a (Lcee;Lfx;Laag;Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
ce net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lce$a; createInstance
	a (Laah;Lapx;Laph;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Laah;Lcys;Laph;FFZLce$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ce$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	<init> (Lbg$b;Lav;Lbg$b;)V <init>
	c ()Lce$a; playerHurtEntity
	a (Lav;)Lce$a; playerHurtEntity
	a (Lav$a;)Lce$a; playerHurtEntity
	a (Lbg;)Lce$a; playerHurtEntity
	a (Lav;Lbg;)Lce$a; playerHurtEntity
	a (Lav$a;Lbg;)Lce$a; playerHurtEntity
	a (Laah;Lcys;Laph;FFZ)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
cf net/minecraft/advancements/critereon/PlayerInteractTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcf$a; createInstance
	a (Laah;Lbly;Lapx;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;Lcys;Lcf$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cf$a net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	a item
	b entity
	<init> (Lbg$b;Lbq;Lbg$b;)V <init>
	a (Lbg$b;Lbq$a;Lbg$b;)Lcf$a; itemUsedOnEntity
	a (Lbly;Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
cg net/minecraft/advancements/critereon/PlayerPredicate
	a ANY
	b level
	c gameType
	d stats
	e recipes
	f advancements
	b (Lcom/google/gson/JsonElement;)Lcg$c; advancementPredicateFromJson
	<init> (Lbz$d;Lbrr;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;)V <init>
	a (Lapx;)Z matches
	a (Lcom/google/gson/JsonElement;)Lcg; fromJson
	a (Ladx;Lvk;)Ladv; getStat
	a (Ladv;)Lvk; getStatValueId
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;Lvk;Lcg$c;)V lambda$serializeToJson$3
	a (Lcom/google/gson/JsonObject;Lvk;Ljava/lang/Boolean;)V lambda$serializeToJson$2
	a (Lcom/google/gson/JsonArray;Ladv;Lbz$d;)V lambda$serializeToJson$1
	a (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V lambda$advancementPredicateFromJson$0
	<init> (Lbz$d;Lbrr;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Lcg$1;)V <init>
	<clinit> ()V <clinit>
cg$1 net/minecraft/advancements/critereon/PlayerPredicate$1
cg$a net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	a criterions
	<init> (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V <init>
	a ()Lcom/google/gson/JsonElement; toJson
	a (Laa;)Z test
	test (Ljava/lang/Object;)Z test
cg$b net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	a state
	<init> (Z)V <init>
	a ()Lcom/google/gson/JsonElement; toJson
	a (Laa;)Z test
	test (Ljava/lang/Object;)Z test
cg$c net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	a ()Lcom/google/gson/JsonElement; toJson
cg$d net/minecraft/advancements/critereon/PlayerPredicate$Builder
	a level
	b gameType
	c stats
	d recipes
	e advancements
	<init> ()V <init>
	a ()Lcg$d; player
	a (Lbz$d;)Lcg$d; setLevel
	a (Ladv;Lbz$d;)Lcg$d; addStat
	a (Lvk;Z)Lcg$d; addRecipe
	a (Lbrr;)Lcg$d; setGameType
	b (Lvk;Z)Lcg$d; checkAdvancementDone
	a (Lvk;Ljava/util/Map;)Lcg$d; checkAdvancementCriterions
	b ()Lcg; build
ch net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lch$a; createInstance
	a (Laah;Lbon;)V trigger
	a (Lvk;)Lch$a; unlocked
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbon;Lch$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ch$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	<init> (Lbg$b;Lvk;)V <init>
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lbon;)Z matches
ci net/minecraft/advancements/critereon/SerializationContext
	a INSTANCE
	b predicateGson
	<init> ()V <init>
	a ([Ldbl;)Lcom/google/gson/JsonElement; serializeConditions
	<clinit> ()V <clinit>
cj net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcj$a; createInstance
	a (Laah;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;Lcj$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cj$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	<init> (Lbg$b;Lbq;)V <init>
	a (Lbq;)Lcj$a; shotCrossbow
	a (Lbrt;)Lcj$a; shotCrossbow
	a (Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
ck net/minecraft/advancements/critereon/SimpleCriterionTrigger
	a players
	<init> ()V <init>
	a (Lvt;Laf$a;)V addPlayerListener
	b (Lvt;Laf$a;)V removePlayerListener
	a (Lvt;)V removePlayerListeners
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	b (Lcom/google/gson/JsonObject;Lax;)Lal; createInstance
	a (Laah;Ljava/util/function/Predicate;)V trigger
	a (Lcom/google/gson/JsonObject;Lax;)Lag; createInstance
	b (Lvt;)Ljava/util/Set; lambda$addPlayerListener$0
cl net/minecraft/advancements/critereon/SlideDownBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcl$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lbul; deserializeBlock
	a (Laah;Lcee;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcee;Lcl$a;)Z lambda$trigger$2
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	a (Lbul;Ljava/lang/String;)V lambda$createInstance$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cl$a net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	a block
	b state
	<init> (Lbg$b;Lbul;Lcm;)V <init>
	a (Lbul;)Lcl$a; slidesDownBlock
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lcee;)Z matches
cm net/minecraft/advancements/critereon/StatePropertiesPredicate
	a ANY
	b properties
	a (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcm$c; fromJson
	b (Lcom/google/gson/JsonElement;)Ljava/lang/String; getStringOrNull
	<init> (Ljava/util/List;)V <init>
	a (Lcef;Lceg;)Z matches
	a (Lcee;)Z matches
	a (Lcuu;)Z matches
	a (Lcef;Ljava/util/function/Consumer;)V checkState
	a (Lcom/google/gson/JsonElement;)Lcm; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;Lcm$c;)V lambda$serializeToJson$1
	a (Lcef;Ljava/util/function/Consumer;Lcm$c;)V lambda$checkState$0
	<init> (Ljava/util/List;Lcm$1;)V <init>
	<clinit> ()V <clinit>
cm$1 net/minecraft/advancements/critereon/StatePropertiesPredicate$1
cm$a net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	a matchers
	<init> ()V <init>
	a ()Lcm$a; properties
	a (Lcfg;Ljava/lang/String;)Lcm$a; hasProperty
	a (Lcfg;I)Lcm$a; hasProperty
	a (Lcfg;Z)Lcm$a; hasProperty
	a (Lcfg;Ljava/lang/Comparable;)Lcm$a; hasProperty
	b ()Lcm; build
cm$b net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	a value
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lceg;Lcfg;)Z match
	a ()Lcom/google/gson/JsonElement; toJson
cm$c net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	a name
	<init> (Ljava/lang/String;)V <init>
	a (Lcef;Lceg;)Z match
	a (Lceg;Lcfg;)Z match
	a ()Lcom/google/gson/JsonElement; toJson
	b ()Ljava/lang/String; getName
	a (Lcef;Ljava/util/function/Consumer;)V checkState
cm$d net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	a minValue
	b maxValue
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lceg;Lcfg;)Z match
	a ()Lcom/google/gson/JsonElement; toJson
cn net/minecraft/advancements/critereon/SummonedEntityTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcn$a; createInstance
	a (Laah;Lapx;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcys;Lcn$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cn$a net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	<init> (Lbg$b;Lbg$b;)V <init>
	a (Lbg$a;)Lcn$a; summonedEntity
	a (Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
co net/minecraft/advancements/critereon/TameAnimalTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lco$a; createInstance
	a (Laah;Lazw;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcys;Lco$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
co$a net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	<init> (Lbg$b;Lbg$b;)V <init>
	c ()Lco$a; tamedAnimal
	a (Lbg;)Lco$a; tamedAnimal
	a (Lcys;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
cp net/minecraft/advancements/critereon/TargetBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcp$a; createInstance
	a (Laah;Lapx;Ldck;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcys;Ldck;ILcp$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cp$a net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	a signalStrength
	b projectile
	<init> (Lbg$b;Lbz$d;Lbg$b;)V <init>
	a (Lbz$d;Lbg$b;)Lcp$a; targetHit
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lcys;Ldck;I)Z matches
cq net/minecraft/advancements/critereon/TickTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcq$a; createInstance
	a (Laah;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcq$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cq$a net/minecraft/advancements/critereon/TickTrigger$TriggerInstance
	<init> (Lbg$b;)V <init>
cr net/minecraft/advancements/critereon/TradeTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcr$a; createInstance
	a (Laah;Lbfb;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lcys;Lbly;Lcr$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cr$a net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	<init> (Lbg$b;Lbg$b;Lbq;)V <init>
	c ()Lcr$a; tradedWithVillager
	a (Lcys;Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
cs net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lcs$a; createInstance
	a (Laah;Lfx;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (DLcs$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
cs$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	<init> (Lbg$b;Lbz$c;)V <init>
	a (D)Z matches
ct net/minecraft/advancements/critereon/UsedTotemTrigger
	a ID
	<init> ()V <init>
	a ()Lvk; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lct$a; createInstance
	a (Laah;Lbly;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lax;)Lal; createInstance
	a (Lbly;Lct$a;)Z lambda$trigger$0
	b ()Lvk; access$000
	<clinit> ()V <clinit>
ct$a net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	<init> (Lbg$b;Lbq;)V <init>
	a (Lbq;)Lct$a; usedTotem
	a (Lbrt;)Lct$a; usedTotem
	a (Lbly;)Z matches
	a (Lci;)Lcom/google/gson/JsonObject; serializeToJson
cu net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	<init> (Ljava/lang/Float;Ljava/lang/Float;)V <init>
	a (F)Lcu; exactly
	a (FF)Lcu; between
	b (F)Lcu; atLeast
	c (F)Lcu; atMost
	d (F)Z matches
	a (D)Z matchesSqr
	a ()Ljava/lang/Float; getMin
	b ()Ljava/lang/Float; getMax
	c ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lcu; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Lcu; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lcu; fromReader
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	a (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	<clinit> ()V <clinit>
cv net/minecraft/advancements/critereon/package-info
cw net/minecraft/advancements/package-info
dje net/minecraft/client/AmbientOcclusionStatus
	a OFF
	b MIN
	c MAX
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Ldje; values
	valueOf (Ljava/lang/String;)Ldje; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Ldje; byId
	b (I)[Ldje; lambda$static$0
	<clinit> ()V <clinit>
djf net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Ldjf; values
	valueOf (Ljava/lang/String;)Ldjf; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Ldjf; byId
	b (I)[Ldjf; lambda$static$0
	<clinit> ()V <clinit>
djg net/minecraft/client/BooleanOption
	X getter
	Y setter
	<init> (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V <init>
	a (Ldka;Ljava/lang/String;)V set
	a (Ldka;)V toggle
	a (Ldka;Z)V set
	b (Ldka;)Z get
	a (Ldka;III)Ldle; createButton
	c (Ldka;)Lnr; getMessage
	a (Ldka;Ldlg;)V lambda$createButton$0
djh net/minecraft/client/Camera
	a initialized
	b level
	c entity
	d position
	e blockPosition
	f forwards
	g up
	h left
	i xRot
	j yRot
	k rotation
	l detached
	m mirror
	n eyeHeight
	o eyeHeightOld
	<init> ()V <init>
	a (Lbqz;Lapx;ZZF)V setup
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	b (DDD)V setPosition
	a (Ldck;)V setPosition
	b ()Ldck; getPosition
	c ()Lfx; getBlockPosition
	d ()F getXRot
	e ()F getYRot
	f ()Ld; rotation
	g ()Lapx; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Z isMirror
	k ()Lcuu; getFluidInCamera
	l ()Lg; getLookVector
	m ()Lg; getUpVector
	n ()Lg; getLeftVector
	o ()V reset
dji net/minecraft/client/CameraType
	a FIRST_PERSON
	b THIRD_PERSON_BACK
	c THIRD_PERSON_FRONT
	d VALUES
	e firstPerson
	f mirrored
	g $VALUES
	values ()[Ldji; values
	valueOf (Ljava/lang/String;)Ldji; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()Z isFirstPerson
	b ()Z isMirrored
	c ()Ldji; cycle
	<clinit> ()V <clinit>
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	<init> ()V <init>
	getClientModName ()Ljava/lang/String; getClientModName
djj net/minecraft/client/ClientRecipeBook
	c LOGGER
	d collectionsByTab
	e allCollections
	<init> ()V <init>
	a (Ljava/lang/Iterable;)V setupCollections
	b (Ljava/lang/Iterable;)Ljava/util/Map; categorizeAndGroupRecipes
	g (Lbon;)Ldkd; getCategory
	b ()Ljava/util/List; getCollections
	a (Ldkd;)Ljava/util/List; getCollection
	h (Lbon;)Ljava/lang/Object; lambda$getCategory$5
	b (Ldkd;)Ljava/util/List; lambda$categorizeAndGroupRecipes$4
	c (Ldkd;)Ljava/util/List; lambda$categorizeAndGroupRecipes$3
	a (Ljava/util/Map;Ldkd;Ljava/util/List;)V lambda$setupCollections$2
	a (Ljava/util/Map;Ldkd;)Ljava/util/stream/Stream; lambda$null$1
	a (Ljava/util/Map;Lcom/google/common/collect/ImmutableList$Builder;Ldkd;Ljava/util/List;)V lambda$setupCollections$0
	<clinit> ()V <clinit>
djk net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Ldjk; values
	valueOf (Ljava/lang/String;)Ldjk; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Ldjk; byId
	b (I)[Ldjk; lambda$static$0
	<clinit> ()V <clinit>
djl net/minecraft/client/ComponentCollector
	a parts
	<init> ()V <init>
	a (Lnu;)V append
	a ()Lnu; getResult
	b ()Lnu; getResultOrEmpty
	c ()V reset
djm net/minecraft/client/CycleOption
	X setter
	Y toString
	<init> (Ljava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V <init>
	a (Ldka;I)V toggle
	a (Ldka;III)Ldle; createButton
	c (Ldka;)Lnr; getMessage
	a (Ldka;Ldlg;)V lambda$createButton$0
djn net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	<init> (Ldwm;)V <init>
	a (ILmd;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (Lfx;Ljava/util/function/Consumer;)V queryBlockEntityTag
djo net/minecraft/client/FullscreenResolutionProgressOption
	<init> (Ldew;)V <init>
	<init> (Ldew;Ldeo;)V <init>
	a (Ldeo;Ldka;Ldkc;)Lnr; lambda$new$3
	a (Ldeo;Ldew;Ldka;Ljava/lang/Double;)V lambda$new$2
	a (Ldeo;Ldew;Ldka;)Ljava/lang/Double; lambda$new$1
	a (Ldeo;Ldev;)Ljava/lang/Double; lambda$null$0
djp net/minecraft/client/Game
	a minecraft
	b launcher
	c listener
	<init> (Ldjw;)V <init>
	getVersion ()Lcom/mojang/bridge/game/GameVersion; getVersion
	getSelectedLanguage ()Lcom/mojang/bridge/game/Language; getSelectedLanguage
	getCurrentSession ()Lcom/mojang/bridge/game/GameSession; getCurrentSession
	getPerformanceMetrics ()Lcom/mojang/bridge/game/PerformanceMetrics; getPerformanceMetrics
	setSessionEventListener (Lcom/mojang/bridge/launcher/SessionEventListener;)V setSessionEventListener
	a ()V onStartGameSession
	b ()V onLeaveGameSession
djp$a net/minecraft/client/Game$Metrics
	a min
	b max
	c average
	d samples
	<init> (IIII)V <init>
	getMinTime ()I getMinTime
	getMaxTime ()I getMaxTime
	getAverageTime ()I getAverageTime
	getSampleCount ()I getSampleCount
djq net/minecraft/client/GraphicsStatus
	a FAST
	b FANCY
	c FABULOUS
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Ldjq; values
	valueOf (Ljava/lang/String;)Ldjq; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	c ()Ldjq; cycleNext
	toString ()Ljava/lang/String; toString
	a (I)Ldjq; byId
	b (I)[Ldjq; lambda$static$0
	<clinit> ()V <clinit>
djq$1 net/minecraft/client/GraphicsStatus$1
	a $SwitchMap$net$minecraft$client$GraphicsStatus
	<clinit> ()V <clinit>
djr net/minecraft/client/GuiMessage
	a addedTime
	b message
	c id
	<init> (ILjava/lang/Object;I)V <init>
	a ()Ljava/lang/Object; getMessage
	b ()I getAddedTime
	c ()I getId
djs net/minecraft/client/HotbarManager
	a LOGGER
	b optionsFile
	c fixerUpper
	d hotbars
	e loaded
	<init> (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V <init>
	b ()V load
	a ()V save
	a (I)Ldzg; get
	<clinit> ()V <clinit>
djt net/minecraft/client/KeyMapping
	a ALL
	b MAP
	c CATEGORIES
	d CATEGORY_SORT_ORDER
	e name
	f defaultKey
	g category
	h key
	i isDown
	j clickCount
	a (Ldel$a;)V click
	a (Ldel$a;Z)V set
	a ()V setAll
	b ()V releaseAll
	c ()V resetMapping
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ldel$b;ILjava/lang/String;)V <init>
	d ()Z isDown
	e ()Ljava/lang/String; getCategory
	f ()Z consumeClick
	m ()V release
	g ()Ljava/lang/String; getName
	h ()Ldel$a; getDefaultKey
	b (Ldel$a;)V setKey
	a (Ldjt;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	b (Ldjt;)Z same
	i ()Z isUnbound
	a (II)Z matches
	a (I)Z matchesMouse
	j ()Lnr; getTranslatedKeyMessage
	k ()Z isDefault
	l ()Ljava/lang/String; saveString
	a (Z)V setDown
	compareTo (Ljava/lang/Object;)I compareTo
	b (Ljava/lang/String;)Lnr; lambda$createNameSupplier$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
dju net/minecraft/client/KeyboardHandler
	a minecraft
	b sendRepeatsToGui
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	<init> (Ldjw;)V <init>
	a (I)Z handleChunkDebugKeys
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
	b (I)Z handleDebugKeys
	a (ZZ)V copyRecreateCommand
	a (Lcee;Lfx;Lmd;)V copyCreateBlockCommand
	a (Lvk;Ldck;Lmd;)V copyCreateEntityCommand
	a (JIIII)V keyPress
	a (JII)V charTyped
	a (Z)V setSendRepeatsToGui
	a (J)V setup
	a ()Ljava/lang/String; getClipboard
	a (Ljava/lang/String;)V setClipboard
	b ()V tick
	a (IJ)V lambda$getClipboard$11
	b (JII)V lambda$setup$10
	c (JII)V lambda$null$9
	b (JIIII)V lambda$setup$8
	c (JIIII)V lambda$null$7
	a (Ldmf;CI)V lambda$charTyped$6
	a (Ldmf;II)V lambda$charTyped$5
	a (I[ZLdme;III)V lambda$keyPress$4
	a (Lnr;)V lambda$keyPress$3
	b (Lnr;)V lambda$null$2
	a (Lvk;Lapx;Lmd;)V lambda$copyRecreateCommand$1
	b (Lcee;Lfx;Lmd;)V lambda$copyRecreateCommand$0
dju$1 net/minecraft/client/KeyboardHandler$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
	<clinit> ()V <clinit>
djv net/minecraft/client/LogaritmicProgressOption
	<init> (Ljava/lang/String;DDFLjava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V <init>
	a (D)D toPct
	b (D)D toValue
djw net/minecraft/client/Minecraft
	F instance
	G LOGGER
	a ON_OSX
	b DEFAULT_FONT
	c UNIFORM_FONT
	d ALT_FONT
	H RESOURCE_RELOAD_INITIAL_TASK
	I resourcePackDirectory
	J profileProperties
	K textureManager
	L fixerUpper
	M virtualScreen
	N window
	O timer
	P snooper
	Q renderBuffers
	e levelRenderer
	R entityRenderDispatcher
	S itemRenderer
	T itemInHandRenderer
	f particleEngine
	U searchRegistry
	V user
	g font
	h gameRenderer
	i debugRenderer
	W progressListener
	j gui
	k options
	X hotbarManager
	l mouseHandler
	m keyboardHandler
	n gameDirectory
	Y launchedVersion
	Z versionType
	aa proxy
	ab levelSource
	o frameTimer
	ac is64bit
	ad demo
	ae allowsMultiplayer
	af allowsChat
	ag resourceManager
	ah clientPackSource
	ai resourcePackRepository
	aj languageManager
	ak blockColors
	al itemColors
	am mainRenderTarget
	an soundManager
	ao musicManager
	ap fontManager
	aq splashManager
	ar gpuWarnlistManager
	as minecraftSessionService
	at skinManager
	au modelManager
	av blockRenderer
	aw paintingTextures
	ax mobEffectTextures
	ay toast
	az game
	aA tutorial
	p reserve
	q gameMode
	r level
	s player
	aB singleplayerServer
	aC currentServer
	aD pendingConnection
	aE isLocalServer
	t cameraEntity
	u crosshairPickEntity
	v hitResult
	aF rightClickDelay
	w missTime
	aG pause
	aH pausePartialTick
	aI lastNanoTime
	aJ lastTime
	aK frames
	x noRender
	y screen
	z overlay
	aL connectedToRealms
	aM gameThread
	aN running
	aO delayedCrash
	aP fps
	A fpsString
	B wireframe
	C chunkPath
	D chunkVisibility
	E smartCull
	aQ windowActive
	aR progressTasks
	aS pendingReload
	aT profiler
	aU fpsPieRenderTicks
	aV fpsPieProfiler
	aW fpsPieResults
	aX debugPath
	<init> (Ldsr;)V <init>
	c ()V updateTitle
	aD ()Ljava/lang/String; createTitle
	d ()Z isProbablyModded
	a (Ljava/lang/Throwable;)V rollbackResourcePacks
	a (Ljava/lang/Throwable;Lnr;)V clearResourcePacksOnError
	e ()V run
	b (Z)V selectMainFont
	aE ()V createSearchTrees
	a (IJ)V onFullscreenError
	aF ()Z checkIs64Bit
	f ()Lded; getMainRenderTarget
	g ()Ljava/lang/String; getLaunchedVersion
	h ()Ljava/lang/String; getVersionType
	a (Ll;)V delayCrash
	b (Ll;)V crash
	i ()Z isEnforceUnicode
	j ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	aG ()V selfTest
	k ()Lcyd; getLevelSource
	b (Ljava/lang/String;)V openChatScreen
	a (Ldoq;)V setScreen
	a (Ldok;)V setOverlay
	l ()V destroy
	close ()V close
	e (Z)V runTick
	aH ()Z shouldRenderFpsPie
	a (ZLanw;)V startProfilers
	b (ZLanw;)V finishProfilers
	a ()V resizeDisplay
	b ()V cursorEntered
	aI ()I getFramerateLimit
	m ()V emergencySave
	a (I)V debugFpsMeterKeyPress
	a (Ldfj;Lans;)V renderFpsMeter
	n ()V stop
	o ()Z isRunning
	c (Z)V pauseGame
	f (Z)V continueAttack
	aJ ()V startAttack
	aK ()V startUseItem
	p ()Lenh; getMusicManager
	q ()V tick
	aL ()V handleKeybinds
	a (Lcyd$a;)Lbrh; loadDataPacks
	a (Lcyd$a;Lgn$b;Lacf;Lbrh;)Lcyk; loadWorldData
	a (Ljava/lang/String;)V loadLevel
	a (Ljava/lang/String;Lbrx;Lgn$b;Lcht;)V createLevel
	a (Ljava/lang/String;Lgn$b;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLdjw$a;)V doLoadLevel
	a (Ldjw$a;Ljava/lang/String;ZLjava/lang/Runnable;)V displayExperimentalConfirmationDialog
	a (Lgn$b;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLcyd$a;)Ldjw$b; makeServerStem
	a (Ldwl;)V setLevel
	r ()V clearLevel
	b (Ldoq;)V clearLevel
	d (Ldoq;)V updateScreenAndTick
	c (Ldoq;)V forceSetScreen
	b (Ldwl;)V updateLevelInEngines
	s ()Z allowsMultiplayer
	a (Ljava/util/UUID;)Z isBlocked
	t ()Z allowsChat
	u ()Z isDemo
	v ()Ldwm; getConnection
	w ()Z renderNames
	x ()Z useFancyGraphics
	z ()Z useShaderTransparency
	A ()Z useAmbientOcclusion
	aM ()V pickBlock
	a (Lbly;Lccg;)Lbly; addCustomNbtData
	c (Ll;)Ll; fillReport
	a (Lekr;Ljava/lang/String;Ldka;Ll;)V fillReport
	B ()Ldjw; getInstance
	C ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	a (Laoz;)V populateSnooper
	aN ()Ljava/lang/String; getCurrentSnooperAction
	b (Laoz;)V populateSnooperInitial
	c (Laoz;)V populateSnooperWithOpenGL
	T ()Z isSnooperEnabled
	a (Ldwr;)V setCurrentServer
	D ()Ldwr; getCurrentServer
	E ()Z isLocalServer
	F ()Z hasSingleplayerServer
	G ()Lemy; getSingleplayerServer
	H ()Laoz; getSnooper
	I ()Ldkj; getUser
	J ()Lcom/mojang/authlib/properties/PropertyMap; getProfileProperties
	K ()Ljava/net/Proxy; getProxy
	L ()Lejv; getTextureManager
	M ()Lacf; getResourceManager
	N ()Labu; getResourcePackRepository
	O ()Lejz; getClientPackSource
	P ()Ljava/io/File; getResourcePackDirectory
	Q ()Lekr; getLanguageManager
	a (Lvk;)Ljava/util/function/Function; getTextureAtlas
	R ()Z is64Bit
	S ()Z isPaused
	U ()Ldzs; getGpuWarnlistManager
	V ()Lenm; getSoundManager
	W ()Ladl; getSituationalMusic
	X ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	Y ()Lekk; getSkinManager
	Z ()Lapx; getCameraEntity
	a (Lapx;)V setCameraEntity
	b (Lapx;)Z shouldEntityAppearGlowing
	av ()Ljava/lang/Thread; getRunningThread
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Ljava/lang/Runnable;)Z shouldRun
	aa ()Leap; getBlockRenderer
	ab ()Leel; getEntityRenderDispatcher
	ac ()Lefg; getItemRenderer
	ad ()Ldzu; getItemInHandRenderer
	a (Lemt$a;)Lemq; getSearchTree
	ae ()I getAverageFps
	af ()Laez; getFrameTimer
	ag ()Z isConnectedToRealms
	d (Z)V setConnectedToRealms
	ah ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	ai ()F getFrameTime
	aj ()F getDeltaFrameTime
	ak ()Ldkl; getBlockColors
	al ()Z showOnlyReducedInfo
	am ()Ldmo; getToasts
	an ()Lenw; getTutorial
	ao ()Z isWindowActive
	ap ()Ldjs; getHotbarManager
	aq ()Lell; getModelManager
	ar ()Lekj; getPaintingTextures
	as ()Lekh; getMobEffectTextures
	a (Z)V setWindowActive
	a (Ljava/io/File;II)Lnr; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lnr; grabHugeScreenshot
	at ()Lant; getProfiler
	aw ()Ldjp; getGame
	ax ()Laat; getProgressListener
	ay ()Lekl; getSplashManager
	az ()Ldok; getOverlay
	aA ()Z renderOnThread
	aB ()Ldew; getWindow
	aC ()Leae; renderBuffers
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Labh;Labm;Labs$b;Labv;)Labs; createClientPackAdapter
	b (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; adaptV3
	c (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; adaptV4
	b (I)V updateMaxMipLevel
	d (Ljava/util/function/Supplier;)Labh; lambda$adaptV4$41
	e (Ljava/util/function/Supplier;)Labh; lambda$adaptV3$40
	a (Ljava/io/File;Lob;)Lob; lambda$grabHugeScreenshot$39
	b (Ljava/io/File;Lob;)Lob; lambda$grabPanoramixScreenshot$38
	a (Lnr;)V lambda$grabPanoramixScreenshot$37
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$delayTextureReload$36
	a (Lekr;)Ljava/lang/String; lambda$fillReport$35
	a (Ldka;)Ljava/lang/String; lambda$fillReport$34
	aO ()Ljava/lang/String; lambda$fillReport$33
	aP ()Ljava/lang/String; lambda$fillReport$32
	c (Ljava/lang/String;)Ljava/lang/String; lambda$fillReport$31
	a (Ljava/lang/Runnable;Ljava/lang/String;Z)V lambda$displayExperimentalConfirmationDialog$30
	a (Ljava/lang/String;Ljava/lang/Runnable;ZZ)V lambda$displayExperimentalConfirmationDialog$29
	b (Lnr;)V lambda$doLoadLevel$28
	a (Lgn$b;Lcyd$a;Ldjw$b;Lcyk;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Laco;Ljava/lang/Thread;)Lemy; lambda$doLoadLevel$27
	c (I)Laap; lambda$null$26
	a (Ljava/lang/String;Lgn$b;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;Z)V lambda$doLoadLevel$25
	a (Ljava/lang/String;Lgn$b;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;Ldjw$a;)V lambda$doLoadLevel$24
	a (Lgn$b;Lcht;Lbrx;Lcyd$a;Lgn$b;Lacf;Lbrh;)Lcyk; lambda$createLevel$23
	a (Lvh;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$null$22
	a (Lbrx;Lcyd$a;)Lbrh; lambda$createLevel$21
	aQ ()Z lambda$tick$20
	aR ()V lambda$tick$19
	b (Ljava/util/concurrent/CompletableFuture;)V lambda$runTick$18
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/Optional;)V lambda$reloadResourcePacks$17
	c (Ljava/util/concurrent/CompletableFuture;)V lambda$null$16
	a (Ldrq;)Ljava/util/stream/Stream; lambda$createSearchTrees$15
	a (Lbon;)Lvk; lambda$null$14
	b (Ldrq;)Ljava/util/stream/Stream; lambda$createSearchTrees$13
	d (Ljava/lang/String;)Z lambda$null$12
	c (Lnr;)Ljava/lang/String; lambda$null$11
	b (Lbon;)Ljava/util/stream/Stream; lambda$null$10
	a (Lems;Lemr;Lbly;)V lambda$createSearchTrees$9
	a (Lbly;)Ljava/util/stream/Stream; lambda$createSearchTrees$8
	b (Lbly;)Ljava/util/stream/Stream; lambda$createSearchTrees$7
	c (Lbly;)Ljava/util/stream/Stream; lambda$createSearchTrees$6
	e (Ljava/lang/String;)Z lambda$null$5
	d (Lnr;)Ljava/lang/String; lambda$null$4
	e (Lnr;)V lambda$clearResourcePacksOnError$3
	a (Ljava/util/Optional;)V lambda$new$2
	aS ()V lambda$null$1
	aT ()I lambda$new$0
	<clinit> ()V <clinit>
djw$1 net/minecraft/client/Minecraft$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
	<clinit> ()V <clinit>
djw$a net/minecraft/client/Minecraft$ExperimentalDialogType
	a NONE
	b CREATE
	c BACKUP
	d $VALUES
	values ()[Ldjw$a; values
	valueOf (Ljava/lang/String;)Ldjw$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
djw$b net/minecraft/client/Minecraft$ServerStem
	a packRepository
	b serverResources
	c worldData
	<init> (Labu;Lvz;Lcyk;)V <init>
	a ()Labu; packRepository
	b ()Lvz; serverResources
	c ()Lcyk; worldData
	close ()V close
	<init> (Labu;Lvz;Lcyk;Ldjw$1;)V <init>
djx net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScroll
	q lastMouseEventTime
	r mouseGrabbed
	<init> (Ldjw;)V <init>
	a (JIII)V onPress
	a (JDD)V onScroll
	a (JLjava/util/List;)V onDrop
	a (J)V setup
	b (JDD)V onMove
	a ()V turnPlayer
	b ()Z isLeftPressed
	c ()Z isMiddlePressed
	d ()Z isRightPressed
	e ()D xpos
	f ()D ypos
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
	k ()V cursorEntered
	a (Ldmf;DDDD)V lambda$onMove$11
	a (Ldmf;DD)V lambda$onMove$10
	a (JIJ)V lambda$setup$9
	a (J[Ljava/nio/file/Path;)V lambda$null$8
	c (JDD)V lambda$setup$7
	d (JDD)V lambda$null$6
	b (JIII)V lambda$setup$5
	c (JIII)V lambda$null$4
	e (JDD)V lambda$setup$3
	f (JDD)V lambda$null$2
	a ([ZDDI)V lambda$onPress$1
	b ([ZDDI)V lambda$onPress$0
djy net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g name
	h $VALUES
	values ()[Ldjy; values
	valueOf (Ljava/lang/String;)Ldjy; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Lnr; getName
	a (I)Ldjy; byId
	b (I)[Ldjy; lambda$static$0
	<clinit> ()V <clinit>
djz net/minecraft/client/Option
	a BIOME_BLEND_RADIUS
	b CHAT_HEIGHT_FOCUSED
	c CHAT_HEIGHT_UNFOCUSED
	d CHAT_OPACITY
	e CHAT_SCALE
	f CHAT_WIDTH
	g CHAT_LINE_SPACING
	h CHAT_DELAY
	i FOV
	X ACCESSIBILITY_TOOLTIP_FOV_EFFECT
	j FOV_EFFECTS_SCALE
	Y ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT
	k SCREEN_EFFECTS_SCALE
	l FRAMERATE_LIMIT
	m GAMMA
	n MIPMAP_LEVELS
	o MOUSE_WHEEL_SENSITIVITY
	p RAW_MOUSE_INPUT
	q RENDER_DISTANCE
	r ENTITY_DISTANCE_SCALING
	s SENSITIVITY
	t TEXT_BACKGROUND_OPACITY
	u AMBIENT_OCCLUSION
	v ATTACK_INDICATOR
	w CHAT_VISIBILITY
	Z GRAPHICS_TOOLTIP_FAST
	aa GRAPHICS_TOOLTIP_FABULOUS
	ab GRAPHICS_TOOLTIP_FANCY
	x GRAPHICS
	y GUI_SCALE
	z MAIN_HAND
	A NARRATOR
	B PARTICLES
	C RENDER_CLOUDS
	D TEXT_BACKGROUND
	E AUTO_JUMP
	F AUTO_SUGGESTIONS
	G CHAT_COLOR
	H CHAT_LINKS
	I CHAT_LINKS_PROMPT
	J DISCRETE_MOUSE_SCROLL
	K ENABLE_VSYNC
	L ENTITY_SHADOWS
	M FORCE_UNICODE_FONT
	N INVERT_MOUSE
	O REALMS_NOTIFICATIONS
	P REDUCED_DEBUG_INFO
	Q SHOW_SUBTITLES
	R SNOOPER_ENABLED
	S TOGGLE_CROUCH
	T TOGGLE_SPRINT
	U TOUCHSCREEN
	V USE_FULLSCREEN
	W VIEW_BOBBING
	ac caption
	ad toolTip
	<init> (Ljava/lang/String;)V <init>
	a (Ldka;III)Ldle; createButton
	a ()Lnr; getCaption
	a (Ljava/util/List;)V setTooltip
	b ()Ljava/util/Optional; getTooltip
	c (Ldka;)Lnr; getMessage
	a (I)Lnr; pixelValueLabel
	c (D)Lnr; percentValueLabel
	b (I)Lnr; percentAddValueLabel
	a (Lnr;)Lnr; genericValueLabel
	c (I)Lnr; genericValueLabel
	a (Ldka;Ljava/lang/Boolean;)V lambda$static$116
	a (Ldka;)Z lambda$static$115
	b (Ldka;Ljava/lang/Boolean;)V lambda$static$114
	b (Ldka;)Z lambda$static$113
	c (Ldka;Ljava/lang/Boolean;)V lambda$static$112
	d (Ldka;)Z lambda$static$111
	a (Ldka;Ldjm;)Lnr; lambda$static$110
	a (Ldka;Ljava/lang/Integer;)V lambda$static$109
	b (Ldka;Ldjm;)Lnr; lambda$static$108
	b (Ldka;Ljava/lang/Integer;)V lambda$static$107
	d (Ldka;Ljava/lang/Boolean;)V lambda$static$106
	e (Ldka;)Z lambda$static$105
	e (Ldka;Ljava/lang/Boolean;)V lambda$static$104
	f (Ldka;)Z lambda$static$103
	f (Ldka;Ljava/lang/Boolean;)V lambda$static$102
	g (Ldka;)Z lambda$static$101
	g (Ldka;Ljava/lang/Boolean;)V lambda$static$100
	h (Ldka;)Z lambda$static$99
	h (Ldka;Ljava/lang/Boolean;)V lambda$static$98
	i (Ldka;)Z lambda$static$97
	i (Ldka;Ljava/lang/Boolean;)V lambda$static$96
	j (Ldka;)Z lambda$static$95
	j (Ldka;Ljava/lang/Boolean;)V lambda$static$94
	k (Ldka;)Z lambda$static$93
	k (Ldka;Ljava/lang/Boolean;)V lambda$static$92
	l (Ldka;)Z lambda$static$91
	l (Ldka;Ljava/lang/Boolean;)V lambda$static$90
	m (Ldka;)Z lambda$static$89
	m (Ldka;Ljava/lang/Boolean;)V lambda$static$88
	n (Ldka;)Z lambda$static$87
	n (Ldka;Ljava/lang/Boolean;)V lambda$static$86
	o (Ldka;)Z lambda$static$85
	o (Ldka;Ljava/lang/Boolean;)V lambda$static$84
	p (Ldka;)Z lambda$static$83
	p (Ldka;Ljava/lang/Boolean;)V lambda$static$82
	q (Ldka;)Z lambda$static$81
	q (Ldka;Ljava/lang/Boolean;)V lambda$static$80
	r (Ldka;)Z lambda$static$79
	c (Ldka;Ldjm;)Lnr; lambda$static$78
	c (Ldka;Ljava/lang/Integer;)V lambda$static$77
	d (Ldka;Ldjm;)Lnr; lambda$static$76
	d (Ldka;Ljava/lang/Integer;)V lambda$static$75
	e (Ldka;Ldjm;)Lnr; lambda$static$74
	e (Ldka;Ljava/lang/Integer;)V lambda$static$73
	f (Ldka;Ldjm;)Lnr; lambda$static$72
	f (Ldka;Ljava/lang/Integer;)V lambda$static$71
	g (Ldka;Ldjm;)Lnr; lambda$static$70
	g (Ldka;Ljava/lang/Integer;)V lambda$static$69
	h (Ldka;Ldjm;)Lnr; lambda$static$68
	h (Ldka;Ljava/lang/Integer;)V lambda$static$67
	i (Ldka;Ldjm;)Lnr; lambda$static$66
	i (Ldka;Ljava/lang/Integer;)V lambda$static$65
	j (Ldka;Ldjm;)Lnr; lambda$static$64
	j (Ldka;Ljava/lang/Integer;)V lambda$static$63
	k (Ldka;Ldjm;)Lnr; lambda$static$62
	k (Ldka;Ljava/lang/Integer;)V lambda$static$61
	l (Ldka;Ldjm;)Lnr; lambda$static$60
	l (Ldka;Ljava/lang/Integer;)V lambda$static$59
	a (Ldka;Ldkc;)Lnr; lambda$static$58
	a (Ldka;Ljava/lang/Double;)V lambda$static$57
	s (Ldka;)Ljava/lang/Double; lambda$static$56
	b (Ldka;Ldkc;)Lnr; lambda$static$55
	b (Ldka;Ljava/lang/Double;)V lambda$static$54
	t (Ldka;)Ljava/lang/Double; lambda$static$53
	c (Ldka;Ldkc;)Lnr; lambda$static$52
	c (Ldka;Ljava/lang/Double;)V lambda$static$51
	u (Ldka;)Ljava/lang/Double; lambda$static$50
	d (Ldka;Ldkc;)Lnr; lambda$static$49
	d (Ldka;Ljava/lang/Double;)V lambda$static$48
	v (Ldka;)Ljava/lang/Double; lambda$static$47
	r (Ldka;Ljava/lang/Boolean;)V lambda$static$46
	w (Ldka;)Z lambda$static$45
	e (Ldka;Ldkc;)Lnr; lambda$static$44
	e (Ldka;Ljava/lang/Double;)V lambda$static$43
	x (Ldka;)Ljava/lang/Double; lambda$static$42
	f (Ldka;Ldkc;)Lnr; lambda$static$41
	f (Ldka;Ljava/lang/Double;)V lambda$static$40
	y (Ldka;)Ljava/lang/Double; lambda$static$39
	g (Ldka;Ldkc;)Lnr; lambda$static$38
	g (Ldka;Ljava/lang/Double;)V lambda$static$37
	z (Ldka;)Ljava/lang/Double; lambda$static$36
	h (Ldka;Ldkc;)Lnr; lambda$static$35
	h (Ldka;Ljava/lang/Double;)V lambda$static$34
	A (Ldka;)Ljava/lang/Double; lambda$static$33
	i (Ldka;Ldkc;)Lnr; lambda$static$32
	i (Ldka;Ljava/lang/Double;)V lambda$static$31
	B (Ldka;)Ljava/lang/Double; lambda$static$30
	j (Ldka;Ldkc;)Lnr; lambda$static$29
	j (Ldka;Ljava/lang/Double;)V lambda$static$28
	C (Ldka;)Ljava/lang/Double; lambda$static$27
	k (Ldka;Ldkc;)Lnr; lambda$static$26
	k (Ldka;Ljava/lang/Double;)V lambda$static$25
	D (Ldka;)Ljava/lang/Double; lambda$static$24
	l (Ldka;Ldkc;)Lnr; lambda$static$23
	l (Ldka;Ljava/lang/Double;)V lambda$static$22
	E (Ldka;)Ljava/lang/Double; lambda$static$21
	m (Ldka;Ldkc;)Lnr; lambda$static$20
	m (Ldka;Ljava/lang/Double;)V lambda$static$19
	F (Ldka;)Ljava/lang/Double; lambda$static$18
	n (Ldka;Ldkc;)Lnr; lambda$static$17
	n (Ldka;Ljava/lang/Double;)V lambda$static$16
	G (Ldka;)Ljava/lang/Double; lambda$static$15
	o (Ldka;Ldkc;)Lnr; lambda$static$14
	o (Ldka;Ljava/lang/Double;)V lambda$static$13
	H (Ldka;)Ljava/lang/Double; lambda$static$12
	p (Ldka;Ldkc;)Lnr; lambda$static$11
	p (Ldka;Ljava/lang/Double;)V lambda$static$10
	I (Ldka;)Ljava/lang/Double; lambda$static$9
	q (Ldka;Ldkc;)Lnr; lambda$static$8
	q (Ldka;Ljava/lang/Double;)V lambda$static$7
	J (Ldka;)Ljava/lang/Double; lambda$static$6
	r (Ldka;Ldkc;)Lnr; lambda$static$5
	r (Ldka;Ljava/lang/Double;)V lambda$static$4
	K (Ldka;)Ljava/lang/Double; lambda$static$3
	s (Ldka;Ldkc;)Lnr; lambda$static$2
	s (Ldka;Ljava/lang/Double;)V lambda$static$1
	L (Ldka;)Ljava/lang/Double; lambda$static$0
	<clinit> ()V <clinit>
djz$1 net/minecraft/client/Option$1
	a $SwitchMap$net$minecraft$client$GraphicsStatus
	<clinit> ()V <clinit>
dka net/minecraft/client/Options
	aU LOGGER
	aV GSON
	aW RESOURCE_PACK_TYPE
	aX OPTION_SPLITTER
	a sensitivity
	b renderDistance
	c entityDistanceScaling
	d framerateLimit
	e renderClouds
	f graphicsMode
	g ambientOcclusion
	h resourcePacks
	i incompatibleResourcePacks
	j chatVisibility
	k chatOpacity
	l chatLineSpacing
	m textBackgroundOpacity
	n fullscreenVideoModeString
	o hideServerAddress
	p advancedItemTooltips
	q pauseOnLostFocus
	aY modelParts
	r mainHand
	s overrideWidth
	t overrideHeight
	u heldItemTooltips
	v chatScale
	w chatWidth
	x chatHeightUnfocused
	y chatHeightFocused
	z chatDelay
	A mipmapLevels
	aZ sourceVolumes
	B useNativeTransport
	C attackIndicator
	D tutorialStep
	E biomeBlendRadius
	F mouseWheelSensitivity
	G rawMouseInput
	H glDebugVerbosity
	I autoJump
	J autoSuggestions
	K chatColors
	L chatLinks
	M chatLinksPrompt
	N enableVsync
	O entityShadows
	P forceUnicodeFont
	Q invertYMouse
	R discreteMouseScroll
	S realmsNotifications
	T reducedDebugInfo
	U snooperEnabled
	V showSubtitles
	W backgroundForChatOnly
	X touchscreen
	Y fullscreen
	Z bobView
	aa toggleCrouch
	ab toggleSprint
	ac skipMultiplayerWarning
	ad keyUp
	ae keyLeft
	af keyDown
	ag keyRight
	ah keyJump
	ai keyShift
	aj keySprint
	ak keyInventory
	al keySwapOffhand
	am keyDrop
	an keyUse
	ao keyAttack
	ap keyPickItem
	aq keyChat
	ar keyPlayerList
	as keyCommand
	at keyScreenshot
	au keyTogglePerspective
	av keySmoothCamera
	aw keyFullscreen
	ax keySpectatorOutlines
	ay keyAdvancements
	az keyHotbarSlots
	aA keySaveHotbarActivator
	aB keyLoadHotbarActivator
	aC keyMappings
	aD minecraft
	ba optionsFile
	aE difficulty
	aF hideGui
	bb cameraType
	aG renderDebug
	aH renderDebugCharts
	aI renderFpsChart
	aJ lastMpIp
	aK smoothCamera
	aL fov
	aM screenEffectScale
	aN fovEffectScale
	aO gamma
	aP guiScale
	aQ particles
	aR narratorStatus
	aS languageCode
	aT syncWrites
	<init> (Ldjw;Ljava/io/File;)V <init>
	a (F)F getBackgroundOpacity
	b (F)I getBackgroundColor
	a (I)I getBackgroundColor
	a (Ldjt;Ldel$a;)V setKey
	a ()V load
	a (Lmd;)Lmd; dataFix
	a (Ljava/lang/String;)F readFloat
	b ()V save
	a (Ladp;)F getSoundSourceVolume
	a (Ladp;F)V setSoundCategoryVolume
	c ()V broadcastOptions
	d ()Ljava/util/Set; getModelParts
	a (Lbfu;Z)V setModelPart
	a (Lbfu;)V toggleModelPart
	e ()Ldjk; getCloudsType
	f ()Z useNativeTransport
	a (Labu;)V loadSelectedResourcePacks
	g ()Ldji; getCameraType
	a (Ldji;)V setCameraType
	a (Lmd;Ljava/lang/String;)V lambda$load$2
	h ()Z lambda$new$1
	i ()Z lambda$new$0
	<clinit> ()V <clinit>
dka$1 net/minecraft/client/Options$1
	<init> ()V <init>
dka$2 net/minecraft/client/Options$2
	a $SwitchMap$net$minecraft$client$CloudStatus
	<clinit> ()V <clinit>
dkb net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Ldkb; values
	valueOf (Ljava/lang/String;)Ldkb; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getKey
	b ()I getId
	a (I)Ldkb; byId
	b (I)[Ldkb; lambda$static$0
	<clinit> ()V <clinit>
dkc net/minecraft/client/ProgressOption
	X steps
	Y minValue
	Z maxValue
	aa getter
	ab setter
	ac toString
	<init> (Ljava/lang/String;DDFLjava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V <init>
	a (Ldka;III)Ldle; createButton
	a (D)D toPct
	b (D)D toValue
	d (D)D clamp
	c ()D getMinValue
	d ()D getMaxValue
	a (F)V setMaxValue
	a (Ldka;D)V set
	a (Ldka;)D get
	c (Ldka;)Lnr; getMessage
dkd net/minecraft/client/RecipeBookCategories
	a CRAFTING_SEARCH
	b CRAFTING_BUILDING_BLOCKS
	c CRAFTING_REDSTONE
	d CRAFTING_EQUIPMENT
	e CRAFTING_MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p SMITHING
	q CAMPFIRE
	r UNKNOWN
	s SMOKER_CATEGORIES
	t BLAST_FURNACE_CATEGORIES
	u FURNACE_CATEGORIES
	v CRAFTING_CATEGORIES
	w AGGREGATE_CATEGORIES
	x itemIcons
	y $VALUES
	values ()[Ldkd; values
	valueOf (Ljava/lang/String;)Ldkd; valueOf
	<init> (Ljava/lang/String;I[Lbly;)V <init>
	a (Lbjh;)Ljava/util/List; getCategories
	a ()Ljava/util/List; getIconItems
	<clinit> ()V <clinit>
dkd$1 net/minecraft/client/RecipeBookCategories$1
	a $SwitchMap$net$minecraft$world$inventory$RecipeBookType
	<clinit> ()V <clinit>
dke net/minecraft/client/Screenshot
	a LOGGER
	b DATE_FORMAT
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a (Ljava/io/File;IILded;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;IILded;Ljava/util/function/Consumer;)V grab
	b (Ljava/io/File;Ljava/lang/String;IILded;Ljava/util/function/Consumer;)V _grab
	a (IILded;)Ldeq; takeScreenshot
	a (Ljava/io/File;)Ljava/io/File; getFile
	<init> (Ljava/io/File;III)V <init>
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	a ()V saveRow
	b ()Ljava/io/File; close
	a (Ldeq;Ljava/io/File;Ljava/util/function/Consumer;)V lambda$_grab$2
	a (Ljava/io/File;Lob;)Lob; lambda$null$1
	c (Ljava/io/File;Ljava/lang/String;IILded;Ljava/util/function/Consumer;)V lambda$grab$0
	<clinit> ()V <clinit>
dkf net/minecraft/client/Session
	a players
	b isRemoteServer
	c difficulty
	d gameMode
	e id
	<init> (Ldwl;Ldze;Ldwm;)V <init>
	getPlayerCount ()I getPlayerCount
	isRemoteServer ()Z isRemoteServer
	getDifficulty ()Ljava/lang/String; getDifficulty
	getGameMode ()Ljava/lang/String; getGameMode
	getSessionId ()Ljava/util/UUID; getSessionId
dkg net/minecraft/client/StringSplitter
	a widthProvider
	<init> (Ldkg$f;)V <init>
	a (Ljava/lang/String;)F stringWidth
	a (Lnu;)F stringWidth
	a (Laex;)F stringWidth
	a (Ljava/lang/String;ILob;)I plainIndexAtWidth
	b (Ljava/lang/String;ILob;)Ljava/lang/String; plainHeadByWidth
	c (Ljava/lang/String;ILob;)Ljava/lang/String; plainTailByWidth
	d (Ljava/lang/String;ILob;)I formattedIndexByWidth
	a (Lnu;I)Lob; componentStyleAtWidth
	a (Laex;I)Lob; componentStyleAtWidth
	e (Ljava/lang/String;ILob;)Ljava/lang/String; formattedHeadByWidth
	a (Lnu;ILob;)Lnu; headByWidth
	f (Ljava/lang/String;ILob;)I findLineBreak
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;ILob;ZLdkg$d;)V splitLines
	g (Ljava/lang/String;ILob;)Ljava/util/List; splitLines
	b (Lnu;ILob;)Ljava/util/List; splitLines
	a (Lnu;ILob;Lnu;)Ljava/util/List; splitLines
	a (Lnu;ILob;Ljava/util/function/BiConsumer;)V splitLines
	a (Ljava/util/List;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$splitLines$9
	a (Ljava/util/List;Lnu;Lnu;Ljava/lang/Boolean;)V lambda$splitLines$8
	a (Ljava/util/List;Lnu;Ljava/lang/Boolean;)V lambda$splitLines$7
	a (Ljava/util/List;Ljava/lang/String;Lob;II)V lambda$splitLines$6
	a (Ldkg$e;Lorg/apache/commons/lang3/mutable/MutableObject;ILob;I)Z lambda$componentStyleAtWidth$5
	a (Ldkg$e;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$componentStyleAtWidth$4
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;ILorg/apache/commons/lang3/mutable/MutableInt;ILob;I)Z lambda$plainTailByWidth$3
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;ILob;I)Z lambda$stringWidth$2
	b (Lorg/apache/commons/lang3/mutable/MutableFloat;ILob;I)Z lambda$stringWidth$1
	c (Lorg/apache/commons/lang3/mutable/MutableFloat;ILob;I)Z lambda$stringWidth$0
	a (Ldkg;)Ldkg$f; access$000
dkg$1 net/minecraft/client/StringSplitter$1
	c collector
	a val$output
	b this$0
	<init> (Ldkg;Ldkg$e;)V <init>
	accept (Lob;Ljava/lang/String;)Ljava/util/Optional; accept
dkg$a net/minecraft/client/StringSplitter$FlatComponents
	a parts
	b flatParts
	<init> (Ljava/util/List;)V <init>
	a (I)C charAt
	a (IILob;)Lnu; splitAt
	a ()Lnu; getRemainder
	a (Ldkg$c;)Ljava/lang/String; lambda$new$0
	a (Ldkg$a;)Ljava/util/List; access$300
dkg$b net/minecraft/client/StringSplitter$LineBreakFinder
	b maxWidth
	c lineBreak
	d lineBreakStyle
	e hadNonZeroWidthChar
	f width
	g lastSpace
	h lastSpaceStyle
	i nextChar
	j offset
	a this$0
	<init> (Ldkg;F)V <init>
	accept (ILob;I)Z accept
	a (ILob;)Z finishIteration
	c ()Z lineBreakFound
	a ()I getSplitPosition
	b ()Lob; getSplitStyle
	a (I)V addToOffset
dkg$c net/minecraft/client/StringSplitter$LineComponent
	a contents
	d style
	<init> (Ljava/lang/String;Lob;)V <init>
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
	a (Ldkg$c;)Ljava/lang/String; access$100
	b (Ldkg$c;)Lob; access$200
dkg$d net/minecraft/client/StringSplitter$LinePosConsumer
	accept (Lob;II)V accept
dkg$e net/minecraft/client/StringSplitter$WidthLimitedCharSink
	b maxWidth
	c position
	a this$0
	<init> (Ldkg;F)V <init>
	accept (ILob;I)Z accept
	a ()I getPosition
	b ()V resetPosition
dkg$f net/minecraft/client/StringSplitter$WidthProvider
	getWidth (ILob;)F getWidth
dkh net/minecraft/client/Timer
	a partialTick
	b tickDelta
	c lastMs
	d msPerTick
	<init> (FJ)V <init>
	a (J)I advanceTime
dki net/minecraft/client/ToggleKeyMapping
	a needsToggle
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BooleanSupplier;)V <init>
	a (Z)V setDown
dkj net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d type
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/lang/String; getUuid
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Lcom/mojang/authlib/GameProfile; getGameProfile
	f ()Ldkj$a; getType
dkj$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c BY_NAME
	d name
	e $VALUES
	values ()[Ldkj$a; values
	valueOf (Ljava/lang/String;)Ldkj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Ldkj$a; byName
	a (Ldkj$a;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
dkk net/minecraft/client/color/block/BlockColor
	getColor (Lcee;Lbqx;Lfx;I)I getColor
dkl net/minecraft/client/color/block/BlockColors
	a blockColors
	b coloringStates
	<init> ()V <init>
	a ()Ldkl; createDefault
	a (Lcee;Lbru;Lfx;)I getColor
	a (Lcee;Lbqx;Lfx;I)I getColor
	a (Ldkk;[Lbul;)V register
	a (Ljava/util/Set;[Lbul;)V addColoringStates
	a (Lcfg;[Lbul;)V addColoringState
	a (Lbul;)Ljava/util/Set; getColoringProperties
	b (Lcee;Lbqx;Lfx;I)I lambda$createDefault$10
	c (Lcee;Lbqx;Lfx;I)I lambda$createDefault$9
	d (Lcee;Lbqx;Lfx;I)I lambda$createDefault$8
	e (Lcee;Lbqx;Lfx;I)I lambda$createDefault$7
	f (Lcee;Lbqx;Lfx;I)I lambda$createDefault$6
	g (Lcee;Lbqx;Lfx;I)I lambda$createDefault$5
	h (Lcee;Lbqx;Lfx;I)I lambda$createDefault$4
	i (Lcee;Lbqx;Lfx;I)I lambda$createDefault$3
	j (Lcee;Lbqx;Lfx;I)I lambda$createDefault$2
	k (Lcee;Lbqx;Lfx;I)I lambda$createDefault$1
	l (Lcee;Lbqx;Lfx;I)I lambda$createDefault$0
dkm net/minecraft/client/color/block/BlockTintCache
	a latestChunkOnThread
	b cache
	c lock
	<init> ()V <init>
	a (Lfx;Ljava/util/function/IntSupplier;)I getColor
	a (II)V invalidateForChunk
	a ()V invalidateAll
	b (II)[I findOrCreateChunkCache
	b ()Ldkm$a; lambda$new$0
dkm$1 net/minecraft/client/color/block/BlockTintCache$1
dkm$a net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo
	a x
	b z
	c cache
	<init> ()V <init>
	<init> (Ldkm$1;)V <init>
dkn net/minecraft/client/color/block/package-info
dko net/minecraft/client/color/item/ItemColor
	getColor (Lbly;I)I getColor
dkp net/minecraft/client/color/item/ItemColors
	a itemColors
	<init> ()V <init>
	a (Ldkl;)Ldkp; createDefault
	a (Lbly;I)I getColor
	a (Ldko;[Lbrt;)V register
	b (Lbly;I)I lambda$createDefault$7
	c (Lbly;I)I lambda$createDefault$6
	a (Ldkl;Lbly;I)I lambda$createDefault$5
	a (Lbmx;Lbly;I)I lambda$createDefault$4
	d (Lbly;I)I lambda$createDefault$3
	e (Lbly;I)I lambda$createDefault$2
	f (Lbly;I)I lambda$createDefault$1
	g (Lbly;I)I lambda$createDefault$0
dkq net/minecraft/client/color/item/package-info
dkr net/minecraft/client/gui/Font
	c SHADOW_OFFSET
	a lineHeight
	b random
	d fonts
	e splitter
	<init> (Ljava/util/function/Function;)V <init>
	a (Lvk;)Ldmt; getFontSet
	a (Ldfj;Ljava/lang/String;FFI)I drawShadow
	a (Ldfj;Ljava/lang/String;FFIZ)I drawShadow
	b (Ldfj;Ljava/lang/String;FFI)I draw
	a (Ldfj;Laex;FFI)I drawShadow
	a (Ldfj;Lnr;FFI)I drawShadow
	b (Ldfj;Laex;FFI)I draw
	b (Ldfj;Lnr;FFI)I draw
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFILb;ZZ)I drawInternal
	a (Laex;FFILb;Z)I drawInternal
	a (Ljava/lang/String;FFIZLb;Ldzy;ZII)I drawInBatch
	a (Ljava/lang/String;FFIZLb;Ldzy;ZIIZ)I drawInBatch
	a (Lnr;FFIZLb;Ldzy;ZII)I drawInBatch
	a (Laex;FFIZLb;Ldzy;ZII)I drawInBatch
	a (I)I adjustColor
	b (Ljava/lang/String;FFIZLb;Ldzy;ZIIZ)I drawInternal
	b (Laex;FFIZLb;Ldzy;ZII)I drawInternal
	b (Ljava/lang/String;FFIZLb;Ldzy;ZII)F renderText
	c (Laex;FFIZLb;Ldzy;ZII)F renderText
	a (Ldmw;ZZFFFLb;Ldfn;FFFFI)V renderChar
	b (Ljava/lang/String;)I width
	a (Lnu;)I width
	a (Laex;)I width
	a (Ljava/lang/String;IZ)Ljava/lang/String; plainSubstrByWidth
	a (Ljava/lang/String;I)Ljava/lang/String; plainSubstrByWidth
	a (Lnu;I)Lnu; substrByWidth
	a (Lnu;IIII)V drawWordWrap
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Lnu;I)Ljava/util/List; split
	a ()Z isBidirectional
	b ()Ldkg; getSplitter
	a (ILob;)F lambda$new$0
	a (Ldkr;Lvk;)Ldmt; access$000
	a (Ldkr;Ldmw;ZZFFFLb;Ldfn;FFFFI)V access$100
	<clinit> ()V <clinit>
dkr$a net/minecraft/client/gui/Font$StringRenderOutput
	a bufferSource
	c dropShadow
	d dimFactor
	e r
	f g
	g b
	h a
	i pose
	j seeThrough
	k packedLightCoords
	l x
	m y
	n effects
	b this$0
	a (Ldmw$a;)V addEffect
	<init> (Ldkr;Ldzy;FFIZLb;ZI)V <init>
	accept (ILob;I)Z accept
	a (IF)F finish
dks net/minecraft/client/gui/Gui
	b VIGNETTE_LOCATION
	c WIDGETS_LOCATION
	d PUMPKIN_BLUR_LOCATION
	e DEMO_EXPIRED_TEXT
	i random
	j minecraft
	k itemRenderer
	l chat
	m tickCount
	n overlayMessageString
	o overlayMessageTime
	p animateOverlayMessageColor
	a vignetteBrightness
	q toolHighlightTimer
	r lastToolHighlight
	s debugScreen
	t subtitleOverlay
	u spectatorGui
	v tabList
	w bossOverlay
	x titleTime
	y title
	z subtitle
	A titleFadeInTime
	B titleStayTime
	C titleFadeOutTime
	D lastHealth
	E displayHealth
	F lastHealthTime
	G healthBlinkTime
	H screenWidth
	I screenHeight
	J chatListeners
	<init> (Ldjw;)V <init>
	a ()V resetTitleTimes
	a (Ldfj;F)V render
	a (Ldfj;Ldkr;III)V drawBackdrop
	d (Ldfj;)V renderCrosshair
	a (Ldci;)Z canRenderCrosshairForSpectator
	a (Ldfj;)V renderEffects
	a (FLdfj;)V renderHotbar
	a (Ldfj;I)V renderJumpMeter
	b (Ldfj;I)V renderExperienceBar
	b (Ldfj;)V renderSelectedItemName
	c (Ldfj;)V renderDemoOverlay
	a (Ldfj;Lddh;)V displayScoreboardSidebar
	k ()Lbft; getCameraPlayer
	l ()Laqj; getPlayerVehicleWithHealth
	a (Laqj;)I getVehicleMaxHearts
	a (I)I getVisibleVehicleHeartRows
	e (Ldfj;)V renderPlayerHealth
	f (Ldfj;)V renderVehicleHealth
	m ()V renderPumpkin
	a (Lapx;)V updateVignetteBrightness
	b (Lapx;)V renderVignette
	a (F)V renderPortalOverlay
	a (IIFLbft;Lbly;)V renderSlot
	b ()V tick
	a (Lnr;)V setNowPlaying
	a (Lnr;Z)V setOverlayMessage
	a (Lnr;Lnr;III)V setTitles
	a (Lno;Lnr;Ljava/util/UUID;)V handleChat
	c ()Ldlh; getChat
	d ()I getGuiTicks
	e ()Ldkr; getFont
	f ()Ldmi; getSpectatorGui
	g ()Ldlv; getTabList
	h ()V onDisconnected
	i ()Ldlf; getBossOverlay
	j ()V clearCache
	a (Lddj;)Z lambda$displayScoreboardSidebar$1
	a (Leju;FLdfj;II)V lambda$renderEffects$0
	<clinit> ()V <clinit>
dkt net/minecraft/client/gui/GuiComponent
	f BACKGROUND_LOCATION
	g STATS_ICON_LOCATION
	h GUI_ICONS_LOCATION
	a blitOffset
	<init> ()V <init>
	a (Ldfj;IIII)V hLine
	b (Ldfj;IIII)V vLine
	a (Ldfj;IIIII)V fill
	a (Lb;IIIII)V innerFill
	a (Ldfj;IIIIII)V fillGradient
	a (Lb;Ldfe;IIIIIII)V fillGradient
	a (Ldfj;Ldkr;Ljava/lang/String;III)V drawCenteredString
	a (Ldfj;Ldkr;Lnr;III)V drawCenteredString
	a (Ldfj;Ldkr;Laex;III)V drawCenteredString
	b (Ldfj;Ldkr;Ljava/lang/String;III)V drawString
	b (Ldfj;Ldkr;Laex;III)V drawString
	b (Ldfj;Ldkr;Lnr;III)V drawString
	a (IILjava/util/function/BiConsumer;)V blitOutlineBlack
	a (Ldfj;IIIIILeju;)V blit
	b (Ldfj;IIIIII)V blit
	a (Ldfj;IIIFFIIII)V blit
	a (Ldfj;IIIIFFIIII)V blit
	a (Ldfj;IIFFIIII)V blit
	a (Ldfj;IIIIIIIFFII)V innerBlit
	a (Lb;IIIIIFFFF)V innerBlit
	v ()I getBlitOffset
	d (I)V setBlitOffset
	<clinit> ()V <clinit>
dku net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b MAP_ICONS
	c textureManager
	d maps
	<init> (Lejv;)V <init>
	a (Lcxu;)V update
	a (Ldfj;Ldzy;Lcxu;ZI)V render
	b (Lcxu;)Ldku$a; getMapInstance
	a (Ljava/lang/String;)Ldku$a; getMapInstanceIfExists
	a ()V resetData
	a (Ldku$a;)Lcxu; getData
	close ()V close
	a (Ldku;)Lejv; access$400
	b ()Leag; access$500
	<clinit> ()V <clinit>
dku$1 net/minecraft/client/gui/MapRenderer$1
dku$a net/minecraft/client/gui/MapRenderer$MapInstance
	b data
	c texture
	d renderType
	a this$0
	<init> (Ldku;Lcxu;)V <init>
	a ()V updateTexture
	a (Ldfj;Ldzy;ZI)V draw
	close ()V close
	a (Ldku$a;)V access$000
	a (Ldku$a;Ldfj;Ldzy;ZI)V access$100
	<init> (Ldku;Lcxu;Ldku$1;)V <init>
	b (Ldku$a;)Lcxu; access$300
dkv net/minecraft/client/gui/chat/ChatListener
	a (Lno;Lnr;Ljava/util/UUID;)V handle
dkw net/minecraft/client/gui/chat/NarratorChatListener
	a NO_TITLE
	c LOGGER
	b INSTANCE
	d narrator
	<init> ()V <init>
	a (Lno;Lnr;Ljava/util/UUID;)V handle
	a (Ljava/lang/String;)V sayNow
	d ()Ldjy; getStatus
	a (ZLjava/lang/String;)V doSay
	a (Ldjy;)V updateNarratorStatus
	a ()Z isActive
	b ()V clear
	c ()V destroy
	<clinit> ()V <clinit>
dkx net/minecraft/client/gui/chat/OverlayChatListener
	a minecraft
	<init> (Ldjw;)V <init>
	a (Lno;Lnr;Ljava/util/UUID;)V handle
dky net/minecraft/client/gui/chat/StandardChatListener
	a minecraft
	<init> (Ldjw;)V <init>
	a (Lno;Lnr;Ljava/util/UUID;)V handle
dkz net/minecraft/client/gui/chat/package-info
dla net/minecraft/client/gui/components/AbstractButton
	<init> (IIIILnr;)V <init>
	b ()V onPress
	a (DD)V onClick
	a (III)Z keyPressed
dlb net/minecraft/client/gui/components/AbstractOptionSliderButton
	a options
	<init> (Ldka;IIIID)V <init>
dlc net/minecraft/client/gui/components/AbstractSelectionList
	b minecraft
	c itemHeight
	a children
	d width
	e height
	i y0
	j y1
	k x1
	l x0
	m centerListVertically
	o scrollAmount
	p renderSelection
	q renderHeader
	n headerHeight
	r scrolling
	s selected
	<init> (Ldjw;IIIII)V <init>
	a (Z)V setRenderSelection
	a (ZI)V setRenderHeader
	d ()I getRowWidth
	h ()Ldlc$a; getSelected
	a (Ldlc$a;)V setSelected
	i ()Ldlc$a; getFocused
	av_ ()Ljava/util/List; children
	k ()V clearEntries
	a (Ljava/util/Collection;)V replaceEntries
	e (I)Ldlc$a; getEntry
	b (Ldlc$a;)I addEntry
	l ()I getItemCount
	f (I)Z isSelectedItem
	a (DD)Ldlc$a; getEntryAtPosition
	a (IIII)V updateSize
	g (I)V setLeftPos
	c ()I getMaxPosition
	a (II)V clickedHeader
	a (Ldfj;IILdfl;)V renderHeader
	a (Ldfj;)V renderBackground
	a (Ldfj;II)V renderDecorations
	a (Ldfj;IIF)V render
	c (Ldlc$a;)V centerScrollOn
	d (Ldlc$a;)V ensureVisible
	a (I)V scroll
	m ()D getScrollAmount
	a (D)V setScrollAmount
	f ()I getMaxScroll
	n ()I getScrollBottom
	b (DDI)V updateScrollingState
	e ()I getScrollbarPosition
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	a (Ldlc$b;)V moveSelection
	o ()V refreshSelection
	a (Ldlc$b;Ljava/util/function/Predicate;)V moveSelection
	b (DD)Z isMouseOver
	a (Ldfj;IIIIF)V renderList
	p ()I getRowLeft
	h (I)I getRowTop
	b (I)I getRowBottom
	b ()Z isFocused
	i (I)Ldlc$a; remove
	e (Ldlc$a;)Z removeEntry
	f (Ldlc$a;)V bindEntryToSelf
	aw_ ()Ldmf; getFocused
	g (Ldlc$a;)Z lambda$moveSelection$0
	a (Ldlc;Ldlc$a;)V access$200
dlc$1 net/minecraft/client/gui/components/AbstractSelectionList$1
dlc$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
	a list
	<init> ()V <init>
	a (Ldfj;IIIIIIIZF)V render
	b (DD)Z isMouseOver
	a (Ldlc$a;Ldlc;)Ldlc; access$102
dlc$b net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection
	a UP
	b DOWN
	c $VALUES
	values ()[Ldlc$b; values
	valueOf (Ljava/lang/String;)Ldlc$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dlc$c net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	b delegate
	a this$0
	<init> (Ldlc;)V <init>
	a (I)Ldlc$a; get
	size ()I size
	a (ILdlc$a;)Ldlc$a; set
	b (ILdlc$a;)V add
	b (I)Ldlc$a; remove
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<init> (Ldlc;Ldlc$1;)V <init>
dld net/minecraft/client/gui/components/AbstractSliderButton
	b value
	<init> (IIIILnr;D)V <init>
	a (Z)I getYImage
	c ()Lnx; createNarrationMessage
	a (Ldfj;Ldjw;II)V renderBg
	a (DD)V onClick
	a (III)Z keyPressed
	a (D)V setValueFromMouse
	b (D)V setValue
	a (DDDD)V onDrag
	a (Lenm;)V playDownSound
	a_ (DD)V onRelease
	b ()V updateMessage
	a ()V applyValue
dle net/minecraft/client/gui/components/AbstractWidget
	i WIDGETS_LOCATION
	j width
	k height
	l x
	m y
	a message
	b wasHovered
	n isHovered
	o active
	p visible
	q alpha
	r nextNarration
	c focused
	<init> (IIIILnr;)V <init>
	e ()I getHeight
	a (Z)I getYImage
	a (Ldfj;IIF)V render
	f ()V narrate
	c ()Lnx; createNarrationMessage
	b (Ldfj;IIF)V renderButton
	a (Ldfj;Ldjw;II)V renderBg
	a (DD)V onClick
	a_ (DD)V onRelease
	a (DDDD)V onDrag
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (I)Z isValidClickButton
	a (DDIDD)Z mouseDragged
	c (DD)Z clicked
	g ()Z isHovered
	c_ (Z)Z changeFocus
	c (Z)V onFocusedChanged
	b (DD)Z isMouseOver
	a (Ldfj;II)V renderToolTip
	a (Lenm;)V playDownSound
	h ()I getWidth
	b (I)V setWidth
	a (F)V setAlpha
	a (Lnr;)V setMessage
	c (I)V queueNarration
	i ()Lnr; getMessage
	j ()Z isFocused
	d (Z)V setFocused
	<clinit> ()V <clinit>
dlf net/minecraft/client/gui/components/BossHealthOverlay
	a GUI_BARS_LOCATION
	b minecraft
	c events
	<init> (Ldjw;)V <init>
	a (Ldfj;)V render
	a (Ldfj;IILaoh;)V drawBar
	a (Loz;)V update
	a ()V reset
	b ()Z hasBoss
	c ()Z shouldPlayMusic
	d ()Z shouldDarkenScreen
	e ()Z shouldCreateWorldFog
	<clinit> ()V <clinit>
dlg net/minecraft/client/gui/components/Button
	s NO_TOOLTIP
	t onPress
	u onTooltip
	<init> (IIIILnr;Ldlg$a;)V <init>
	<init> (IIIILnr;Ldlg$a;Ldlg$b;)V <init>
	b ()V onPress
	b (Ldfj;IIF)V renderButton
	a (Ldfj;II)V renderToolTip
	a (Ldlg;Ldfj;II)V lambda$static$0
	<clinit> ()V <clinit>
dlg$a net/minecraft/client/gui/components/Button$OnPress
	onPress (Ldlg;)V onPress
dlg$b net/minecraft/client/gui/components/Button$OnTooltip
	onTooltip (Ldlg;Ldfj;II)V onTooltip
dlh net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b minecraft
	c recentChat
	d allMessages
	e trimmedMessages
	i chatQueue
	j chatScrollbarPos
	k newMessageSinceScroll
	l lastMessage
	<init> (Ldjw;)V <init>
	a (Ldfj;I)V render
	h ()Z isChatHidden
	a (I)D getTimeFactor
	a (Z)V clearMessages
	a (Lnr;)V addMessage
	a (Lnr;I)V addMessage
	a (Lnr;IIZ)V addMessage
	a ()V rescaleChat
	b ()Ljava/util/List; getRecentChat
	a (Ljava/lang/String;)V addRecentChat
	c ()V resetChatScroll
	a (D)V scrollChat
	a (DD)Z handleChatQueueClicked
	b (DD)Lob; getClickedComponentStyleAt
	i ()Z isChatFocused
	b (I)V removeById
	d ()I getWidth
	e ()I getHeight
	f ()D getScale
	b (D)I getWidth
	c (D)I getHeight
	g ()I getLinesPerPage
	j ()J getChatRateMillis
	k ()V processPendingMessages
	b (Lnr;)V enqueueMessage
	a (ILdjr;)Z lambda$removeById$1
	b (ILdjr;)Z lambda$removeById$0
	<clinit> ()V <clinit>
dli net/minecraft/client/gui/components/Checkbox
	a TEXTURE
	b selected
	c showLabel
	<init> (IIIILnr;Z)V <init>
	<init> (IIIILnr;ZZ)V <init>
	b ()V onPress
	a ()Z selected
	b (Ldfj;IIF)V renderButton
	<clinit> ()V <clinit>
dlj net/minecraft/client/gui/components/CommandSuggestions
	a WHITESPACE_PATTERN
	b UNPARSED_STYLE
	c LITERAL_STYLE
	d ARGUMENT_STYLES
	e minecraft
	f screen
	g input
	h font
	i commandsOnly
	j onlyShowIfCursorPastError
	k lineStartOffset
	l suggestionLineLimit
	m anchorToBottom
	n fillColor
	o commandUsage
	p commandUsagePosition
	q commandUsageWidth
	r currentParse
	s pendingSuggestions
	t suggestions
	u allowSuggestions
	v keepSuggestions
	<init> (Ldjw;Ldoq;Ldln;Ldkr;ZZIIZI)V <init>
	a (Z)V setAllowSuggestions
	a (III)Z keyPressed
	a (D)Z mouseScrolled
	a (DDI)Z mouseClicked
	b (Z)V showSuggestions
	a (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; sortSuggestions
	a ()V updateCommandInfo
	a (Ljava/lang/String;)I getLastWordIndex
	a (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Laex; getExceptionMessage
	c ()V updateUsageInfo
	a (Lk;)V fillNodeUsage
	a (Ljava/lang/String;I)Laex; formatChat
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Laex; formatText
	a (Ldfj;II)V render
	b ()Ljava/lang/String; getNarrationMessage
	d ()V lambda$updateCommandInfo$0
	a (Ldlj;)Z access$200
	b (Ldlj;)I access$300
	c (Ldlj;)Ldln; access$400
	d (Ldlj;)I access$500
	e (Ldlj;)Ldkr; access$600
	f (Ldlj;)Ldoq; access$700
	g (Ldlj;)Ldjw; access$800
	h (Ldlj;)I access$900
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; access$1000
	a (Ldlj;Z)Z access$1102
	a (Ldlj;Ldlj$a;)Ldlj$a; access$1202
	<clinit> ()V <clinit>
dlj$1 net/minecraft/client/gui/components/CommandSuggestions$1
dlj$a net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList
	b rect
	c originalContents
	d suggestionList
	e offset
	f current
	g lastMouse
	h tabCycles
	i lastNarratedEntry
	a this$0
	<init> (Ldlj;IIILjava/util/List;Z)V <init>
	a (Ldfj;II)V render
	a (III)Z mouseClicked
	a (D)Z mouseScrolled
	b (III)Z keyPressed
	a (I)V cycle
	b (I)V select
	a ()V useSuggestion
	c ()Ljava/lang/String; getNarrationMessage
	b ()V hide
	<init> (Ldlj;IIILjava/util/List;ZLdlj$1;)V <init>
	a (Ldlj$a;)Ljava/lang/String; access$100
dlk net/minecraft/client/gui/components/ComponentRenderUtils
	a INDENT
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Lnu;ILdkr;)Ljava/util/List; wrapComponents
	a (Ljava/util/List;Lnu;Ljava/lang/Boolean;)V lambda$wrapComponents$1
	a (Ldjl;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$wrapComponents$0
	<clinit> ()V <clinit>
dll net/minecraft/client/gui/components/ContainerObjectSelectionList
	<init> (Ldjw;IIIII)V <init>
	c_ (Z)Z changeFocus
	f (I)Z isSelectedItem
dll$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b dragging
	<init> ()V <init>
	ax_ ()Z isDragging
	b_ (Z)V setDragging
	a (Ldmf;)V setFocused
	aw_ ()Ldmf; getFocused
dlm net/minecraft/client/gui/components/DebugScreenOverlay
	a HEIGHTMAP_NAMES
	b minecraft
	c font
	d block
	e liquid
	i lastPos
	j clientChunk
	k serverChunk
	<init> (Ldjw;)V <init>
	a ()V clearChunkCache
	a (Ldfj;)V render
	b (Ldfj;)V drawGameInformation
	c (Ldfj;)V drawSystemInformation
	b ()Ljava/util/List; getGameInformation
	d ()Laag; getServerLevel
	e ()Ljava/lang/String; getServerChunkStats
	f ()Lbru; getLevel
	g ()Lcge; getServerChunk
	h ()Lcge; getClientChunk
	c ()Ljava/util/List; getSystemInformation
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Ldfj;Laez;IIZ)V drawChart
	a (IIII)I getSampleColor
	a (IIF)I colorLerp
	a (J)J bytesToMegabytes
	a (Lcom/mojang/datafixers/util/Either;)Lcge; lambda$getServerChunk$5
	a (Lzr$a;)Lcge; lambda$null$4
	a (Lcft;)Lcge; lambda$null$3
	a (Lemy;)Ljava/util/Optional; lambda$getLevel$2
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Laql;)Ljava/lang/String; lambda$getGameInformation$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
dlm$1 net/minecraft/client/gui/components/DebugScreenOverlay$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dln net/minecraft/client/gui/components/EditBox
	a font
	b value
	c maxLength
	d frame
	e bordered
	s canLoseFocus
	t isEditable
	u shiftPressed
	v displayPos
	w cursorPos
	x highlightPos
	y textColor
	z textColorUneditable
	A suggestion
	B responder
	C filter
	D formatter
	<init> (Ldkr;IIIILnr;)V <init>
	<init> (Ldkr;IIIILdln;Lnr;)V <init>
	a (Ljava/util/function/Consumer;)V setResponder
	a (Ljava/util/function/BiFunction;)V setFormatter
	a ()V tick
	c ()Lnx; createNarrationMessage
	a (Ljava/lang/String;)V setValue
	b ()Ljava/lang/String; getValue
	d ()Ljava/lang/String; getHighlighted
	a (Ljava/util/function/Predicate;)V setFilter
	b (Ljava/lang/String;)V insertText
	d (Ljava/lang/String;)V onValueChange
	q (I)V deleteText
	e (I)V deleteWords
	f (I)V deleteChars
	g (I)I getWordPosition
	a (II)I getWordPosition
	a (IIZ)I getWordPosition
	h (I)V moveCursor
	r (I)I getCursorPos
	i (I)V moveCursorTo
	j (I)V setCursorPosition
	k ()V moveCursorToStart
	l ()V moveCursorToEnd
	a (III)Z keyPressed
	m ()Z canConsumeInput
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	e (Z)V setFocus
	b (Ldfj;IIF)V renderButton
	a (IIII)V renderHighlight
	k (I)V setMaxLength
	q ()I getMaxLength
	n ()I getCursorPosition
	r ()Z isBordered
	f (Z)V setBordered
	l (I)V setTextColor
	m (I)V setTextColorUneditable
	c_ (Z)Z changeFocus
	b (DD)Z isMouseOver
	c (Z)V onFocusedChanged
	s ()Z isEditable
	g (Z)V setEditable
	o ()I getInnerWidth
	n (I)V setHighlightPos
	h (Z)V setCanLoseFocus
	p ()Z isVisible
	i (Z)V setVisible
	c (Ljava/lang/String;)V setSuggestion
	o (I)I getScreenX
	p (I)V setX
	a (Ljava/lang/String;Ljava/lang/Integer;)Laex; lambda$new$0
dlo net/minecraft/client/gui/components/ImageButton
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	v textureHeight
	<init> (IIIIIILvk;Ldlg$a;)V <init>
	<init> (IIIIIIILvk;Ldlg$a;)V <init>
	<init> (IIIIIIILvk;IILdlg$a;)V <init>
	<init> (IIIIIIILvk;IILdlg$a;Lnr;)V <init>
	a (II)V setPosition
	b (Ldfj;IIF)V renderButton
dlp net/minecraft/client/gui/components/LerpingBossEvent
	h targetPercent
	i setTime
	<init> (Loz;)V <init>
	a (F)V setPercent
	k ()F getPercent
	a (Loz;)V update
dlp$1 net/minecraft/client/gui/components/LerpingBossEvent$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
	<clinit> ()V <clinit>
dlq net/minecraft/client/gui/components/LockIconButton
	a locked
	<init> (IILdlg$a;)V <init>
	c ()Lnx; createNarrationMessage
	a ()Z isLocked
	e (Z)V setLocked
	b (Ldfj;IIF)V renderButton
dlq$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g x
	h y
	i $VALUES
	values ()[Ldlq$a; values
	valueOf (Ljava/lang/String;)Ldlq$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a ()I getX
	b ()I getY
	<clinit> ()V <clinit>
dlr net/minecraft/client/gui/components/MultiLineLabel
	a EMPTY
	a (Ldkr;Lnu;I)Ldlr; create
	a (Ldkr;Lnu;II)Ldlr; create
	a (Ldkr;[Lnr;)Ldlr; create
	a (Ldkr;Ljava/util/List;)Ldlr; create
	b (Ldkr;Ljava/util/List;)Ldlr; createFixed
	a (Ldfj;II)I renderCentered
	a (Ldfj;IIII)I renderCentered
	b (Ldfj;IIII)I renderLeftAligned
	c (Ldfj;IIII)I renderLeftAlignedNoShadow
	a ()I getLineCount
	a (Ldkr;Laex;)Ldlr$a; lambda$create$3
	b (Ldkr;Laex;)Ldlr$a; lambda$create$2
	c (Ldkr;Laex;)Ldlr$a; lambda$create$1
	d (Ldkr;Laex;)Ldlr$a; lambda$create$0
	<clinit> ()V <clinit>
dlr$1 net/minecraft/client/gui/components/MultiLineLabel$1
	<init> ()V <init>
	a (Ldfj;II)I renderCentered
	a (Ldfj;IIII)I renderCentered
	b (Ldfj;IIII)I renderLeftAligned
	c (Ldfj;IIII)I renderLeftAlignedNoShadow
	a ()I getLineCount
dlr$2 net/minecraft/client/gui/components/MultiLineLabel$2
	b val$font
	c val$lines
	<init> (Ldkr;Ljava/util/List;)V <init>
	a (Ldfj;II)I renderCentered
	a (Ldfj;IIII)I renderCentered
	b (Ldfj;IIII)I renderLeftAligned
	c (Ldfj;IIII)I renderLeftAlignedNoShadow
	a ()I getLineCount
dlr$a net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth
	a text
	b width
	<init> (Laex;I)V <init>
	a (Ldlr$a;)Laex; access$000
	b (Ldlr$a;)I access$100
	<init> (Laex;ILdlr$1;)V <init>
dls net/minecraft/client/gui/components/ObjectSelectionList
	a inFocus
	<init> (Ldjw;IIIII)V <init>
	c_ (Z)Z changeFocus
dls$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
	<init> ()V <init>
	c_ (Z)Z changeFocus
dlt net/minecraft/client/gui/components/OptionButton
	a option
	<init> (IIIILdjz;Lnr;Ldlg$a;)V <init>
	a ()Ldjz; getOption
	d ()Ljava/util/Optional; getTooltip
dlu net/minecraft/client/gui/components/OptionsList
	<init> (Ldjw;IIIII)V <init>
	a (Ldjz;)I addBig
	a (Ldjz;Ldjz;)V addSmall
	a ([Ldjz;)V addSmall
	d ()I getRowWidth
	e ()I getScrollbarPosition
	b (Ldjz;)Ldle; findOption
	c (DD)Ljava/util/Optional; getMouseOver
dlu$a net/minecraft/client/gui/components/OptionsList$Entry
	a children
	<init> (Ljava/util/List;)V <init>
	a (Ldka;ILdjz;)Ldlu$a; big
	a (Ldka;ILdjz;Ldjz;)Ldlu$a; small
	a (Ldfj;IIIIIIIZF)V render
	av_ ()Ljava/util/List; children
	a (ILdfj;IIFLdle;)V lambda$render$0
	a (Ldlu$a;)Ljava/util/List; access$000
dlv net/minecraft/client/gui/components/PlayerTabOverlay
	a PLAYER_ORDERING
	b minecraft
	c gui
	d footer
	e header
	i visibilityId
	j visible
	<init> (Ldjw;Ldks;)V <init>
	a (Ldwp;)Lnr; getNameForDisplay
	a (Ldwp;Lnx;)Lnr; decorateName
	a (Z)V setVisible
	a (Ldfj;ILddk;Lddh;)V render
	a (Ldfj;IIILdwp;)V renderPingIcon
	a (Lddh;ILjava/lang/String;IILdwp;Ldfj;)V renderTablistScore
	a (Lnr;)V setFooter
	b (Lnr;)V setHeader
	a ()V reset
	<clinit> ()V <clinit>
dlv$1 net/minecraft/client/gui/components/PlayerTabOverlay$1
dlv$a net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator
	<init> ()V <init>
	a (Ldwp;Ldwp;)I compare
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
	<init> (Ldlv$1;)V <init>
dlw net/minecraft/client/gui/components/SliderButton
	c option
	<init> (Ldka;IIIILdkc;)V <init>
	a ()V applyValue
	b ()V updateMessage
	d ()Ljava/util/Optional; getTooltip
dlx net/minecraft/client/gui/components/StateSwitchingButton
	a resourceLocation
	b isStateTriggered
	c xTexStart
	d yTexStart
	e xDiffTex
	s yDiffTex
	<init> (IIIIZ)V <init>
	a (IIIILvk;)V initTextureValues
	e (Z)V setStateTriggered
	a ()Z isStateTriggered
	a (II)V setPosition
	b (Ldfj;IIF)V renderButton
dly net/minecraft/client/gui/components/SubtitleOverlay
	a minecraft
	b subtitles
	c isListening
	<init> (Ldjw;)V <init>
	a (Ldfj;)V render
	a (Leml;Lenn;)V onPlaySound
dly$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	b text
	c time
	d location
	a this$0
	<init> (Ldly;Lnr;Ldck;)V <init>
	a ()Lnr; getText
	b ()J getTime
	c ()Ldck; getLocation
	a (Ldck;)V refresh
dlz net/minecraft/client/gui/components/TickableWidget
	d ()V tick
dma net/minecraft/client/gui/components/TooltipAccessor
	d ()Ljava/util/Optional; getTooltip
dmb net/minecraft/client/gui/components/VolumeSlider
	c source
	<init> (Ldjw;IILadp;I)V <init>
	b ()V updateMessage
	a ()V applyValue
dmc net/minecraft/client/gui/components/Widget
	a (Ldfj;IIF)V render
dmd net/minecraft/client/gui/components/events/AbstractContainerEventHandler
	a focused
	b isDragging
	<init> ()V <init>
	ax_ ()Z isDragging
	b_ (Z)V setDragging
	aw_ ()Ldmf; getFocused
	a (Ldmf;)V setFocused
dme net/minecraft/client/gui/components/events/ContainerEventHandler
	av_ ()Ljava/util/List; children
	d (DD)Ljava/util/Optional; getChildAt
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	ax_ ()Z isDragging
	b_ (Z)V setDragging
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	b (III)Z keyReleased
	a (CI)Z charTyped
	aw_ ()Ldmf; getFocused
	a (Ldmf;)V setFocused
	b (Ldmf;)V setInitialFocus
	c (Ldmf;)V magicalSpecialHackyFocus
	c_ (Z)Z changeFocus
	a (DDDLdmf;)Z lambda$mouseScrolled$1
	a (DDILdmf;)Z lambda$mouseReleased$0
dmf net/minecraft/client/gui/components/events/GuiEventListener
	e (DD)V mouseMoved
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	b (III)Z keyReleased
	a (CI)Z charTyped
	c_ (Z)Z changeFocus
	b (DD)Z isMouseOver
dmg net/minecraft/client/gui/components/events/package-info
dmh net/minecraft/client/gui/components/package-info
dmi net/minecraft/client/gui/components/spectator/SpectatorGui
	b WIDGETS_LOCATION
	a SPECTATOR_LOCATION
	c minecraft
	d lastSelectionTime
	e menu
	<init> (Ldjw;)V <init>
	a (I)V onHotbarSelected
	c ()F getHotbarAlpha
	a (Ldfj;F)V renderHotbar
	a (Ldfj;FIILdsm;)V renderPage
	a (Ldfj;IIFFLdsk;)V renderSlot
	a (Ldfj;)V renderTooltip
	a (Ldsi;)V onSpectatorMenuClosed
	a ()Z isMenuActive
	a (D)V onMouseScrolled
	b ()V onMouseMiddleClick
	<clinit> ()V <clinit>
dmj net/minecraft/client/gui/components/spectator/package-info
dmk net/minecraft/client/gui/components/toasts/AdvancementToast
	c advancement
	d playedSound
	<init> (Ly;)V <init>
	a (Ldfj;Ldmo;J)Ldmn$a; render
dml net/minecraft/client/gui/components/toasts/RecipeToast
	c TITLE_TEXT
	d DESCRIPTION_TEXT
	e recipes
	f lastChanged
	g changed
	<init> (Lbon;)V <init>
	a (Ldfj;Ldmo;J)Ldmn$a; render
	a (Lbon;)V addItem
	a (Ldmo;Lbon;)V addOrUpdate
	<clinit> ()V <clinit>
dmm net/minecraft/client/gui/components/toasts/SystemToast
	c id
	d title
	e messageLines
	f lastChanged
	g changed
	h width
	<init> (Ldmm$a;Lnr;Lnr;)V <init>
	a (Ldjw;Ldmm$a;Lnr;Lnr;)Ldmm; multiline
	<init> (Ldmm$a;Lnr;Ljava/util/List;I)V <init>
	a (Lnr;)Lcom/google/common/collect/ImmutableList; nullToEmpty
	a ()I width
	a (Ldfj;Ldmo;J)Ldmn$a; render
	a (Ldfj;Ldmo;IIII)V renderBackgroundRow
	a (Lnr;Lnr;)V reset
	b ()Ldmm$a; getToken
	a (Ldmo;Ldmm$a;Lnr;Lnr;)V add
	b (Ldmo;Ldmm$a;Lnr;Lnr;)V addOrUpdate
	a (Ldjw;Ljava/lang/String;)V onWorldAccessFailure
	b (Ldjw;Ljava/lang/String;)V onWorldDeleteFailure
	c (Ldjw;Ljava/lang/String;)V onPackCopyFailure
	c ()Ljava/lang/Object; getToken
dmm$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d WORLD_GEN_SETTINGS_TRANSFER
	e PACK_LOAD_FAILURE
	f WORLD_ACCESS_FAILURE
	g PACK_COPY_FAILURE
	h $VALUES
	values ()[Ldmm$a; values
	valueOf (Ljava/lang/String;)Ldmm$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dmn net/minecraft/client/gui/components/toasts/Toast
	a TEXTURE
	b NO_TOKEN
	a (Ldfj;Ldmo;J)Ldmn$a; render
	c ()Ljava/lang/Object; getToken
	a ()I width
	d ()I height
	<clinit> ()V <clinit>
dmn$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	values ()[Ldmn$a; values
	valueOf (Ljava/lang/String;)Ldmn$a; valueOf
	<init> (Ljava/lang/String;ILadn;)V <init>
	a (Lenm;)V playSound
	<clinit> ()V <clinit>
dmo net/minecraft/client/gui/components/toasts/ToastComponent
	a minecraft
	b visible
	c queued
	<init> (Ldjw;)V <init>
	a (Ldfj;)V render
	a (Ljava/lang/Class;Ljava/lang/Object;)Ldmn; getToast
	a ()V clear
	a (Ldmn;)V addToast
	b ()Ldjw; getMinecraft
	a (Ldmo;)Ldjw; access$100
dmo$1 net/minecraft/client/gui/components/toasts/ToastComponent$1
dmo$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	b toast
	c animationTime
	d visibleTime
	e visibility
	a this$0
	<init> (Ldmo;Ldmn;)V <init>
	a ()Ldmn; getToast
	a (J)F getVisibility
	a (IILdfj;)Z render
	<init> (Ldmo;Ldmn;Ldmo$1;)V <init>
dmp net/minecraft/client/gui/components/toasts/TutorialToast
	c icon
	d title
	e message
	f visibility
	g lastProgressTime
	h lastProgress
	i progress
	j progressable
	<init> (Ldmp$a;Lnr;Lnr;Z)V <init>
	a (Ldfj;Ldmo;J)Ldmn$a; render
	b ()V hide
	a (F)V updateProgress
dmp$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f x
	g y
	h $VALUES
	values ()[Ldmp$a; values
	valueOf (Ljava/lang/String;)Ldmp$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a (Ldfj;Ldkt;II)V render
	<clinit> ()V <clinit>
dmq net/minecraft/client/gui/components/toasts/package-info
dmr net/minecraft/client/gui/font/AllMissingGlyphProvider
	<init> ()V <init>
	a (I)Lddz; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
dms net/minecraft/client/gui/font/FontManager
	b LOGGER
	a MISSING_FONT
	c missingFontSet
	d fontSets
	e textureManager
	f renames
	g reloadListener
	<init> (Lejv;)V <init>
	a (Ljava/util/Map;)V setRenames
	a ()Ldkr; createFont
	b ()Laca; getReloadListener
	close ()V close
	a (Lvk;)Ldmt; lambda$createFont$1
	a (Ldmt;)V lambda$new$0
	c ()Lorg/apache/logging/log4j/Logger; access$000
	a (Ldms;)Ljava/util/Map; access$100
	b (Ldms;)Lejv; access$200
	<clinit> ()V <clinit>
dms$1 net/minecraft/client/gui/font/FontManager$1
	a this$0
	<init> (Ldms;)V <init>
	a (Lacf;Lant;)Ljava/util/Map; prepare
	a (Ljava/util/Map;Lacf;Lant;)V apply
	c ()Ljava/lang/String; getName
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	a (Lvk;Ljava/util/List;)V lambda$apply$3
	a (Ljava/util/List;I)V lambda$prepare$2
	a (Lvk;)Ljava/util/List; lambda$prepare$1
	a (Ljava/lang/String;)Z lambda$prepare$0
dmt net/minecraft/client/gui/font/FontSet
	a SPACE_GLYPH
	b SPACE_INFO
	c RANDOM
	d textureManager
	e name
	f missingGlyph
	g whiteGlyph
	h providers
	i glyphs
	j glyphInfos
	k glyphsByWidth
	l textures
	<init> (Lejv;Lvk;)V <init>
	a (Ljava/util/List;)V reload
	close ()V close
	b ()V closeProviders
	c ()V closeTextures
	a (I)Lddx; getGlyphInfo
	c (I)Lddz; getRaw
	b (I)Ldmw; getGlyph
	a (Lddz;)Ldmw; stitch
	a (Lddx;)Ldmw; getRandomGlyph
	a ()Ldmw; whiteGlyph
	d (I)Ldmw; lambda$getGlyph$4
	e (I)Lddx; lambda$getGlyphInfo$3
	a (Ljava/util/List;Ljava/util/Set;I)V lambda$reload$2
	f (I)Lit/unimi/dsi/fastutil/ints/IntList; lambda$null$1
	d ()F lambda$static$0
	<clinit> ()V <clinit>
dmu net/minecraft/client/gui/font/FontTexture
	d name
	e normalType
	f seeThroughType
	g colored
	h root
	<init> (Lvk;Z)V <init>
	a (Lacf;)V load
	close ()V close
	a (Lddz;)Ldmw; add
	a ()Lvk; getName
dmu$1 net/minecraft/client/gui/font/FontTexture$1
dmu$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	<init> (IIII)V <init>
	a (Lddz;)Ldmu$a; insert
	<init> (IIIILdmu$1;)V <init>
	a (Ldmu$a;)I access$100
	b (Ldmu$a;)I access$200
dmv net/minecraft/client/gui/font/TextFieldHelper
	a getMessageFn
	b setMessageFn
	c getClipboardFn
	d setClipboardFn
	e stringValidator
	f cursorPos
	g selectionPos
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/util/function/Predicate;)V <init>
	a (Ldjw;)Ljava/util/function/Supplier; createClipboardGetter
	b (Ldjw;)Ljava/lang/String; getClipboardContents
	c (Ldjw;)Ljava/util/function/Consumer; createClipboardSetter
	a (Ldjw;Ljava/lang/String;)V setClipboardContents
	a (C)Z charTyped
	a (I)Z keyPressed
	g (I)I clampToMsgLength
	a (Ljava/lang/String;Ljava/lang/String;)V insertText
	a (Ljava/lang/String;)V insertText
	a (Z)V resetSelectionIfNeeded
	b (I)V moveByChars
	a (IZ)V moveByChars
	c (I)V moveByWords
	b (IZ)V moveByWords
	d (I)V removeCharsFromCursor
	a ()V cut
	b ()V paste
	c ()V copy
	d ()V selectAll
	b (Ljava/lang/String;)Ljava/lang/String; getSelected
	c (Ljava/lang/String;)Ljava/lang/String; deleteSelection
	e ()V setCursorToStart
	b (Z)V setCursorToStart
	f ()V setCursorToEnd
	c (Z)V setCursorToEnd
	g ()I getCursorPos
	e (I)V setCursorPos
	c (IZ)V setCursorPos
	h ()I getSelectionPos
	f (I)V setSelectionPos
	a (II)V setSelectionRange
	i ()Z isSelecting
	b (Ldjw;Ljava/lang/String;)V lambda$createClipboardSetter$1
	d (Ldjw;)Ljava/lang/String; lambda$createClipboardGetter$0
dmw net/minecraft/client/gui/font/glyphs/BakedGlyph
	a normalType
	b seeThroughType
	c u0
	d u1
	e v0
	f v1
	g left
	h right
	i up
	j down
	<init> (Leag;Leag;FFFFFFFF)V <init>
	a (ZFFLb;Ldfn;FFFFI)V render
	a (Ldmw$a;Lb;Ldfn;I)V renderEffect
	a (Z)Leag; renderType
dmw$a net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect
	a x0
	b y0
	c x1
	d y1
	e depth
	f r
	g g
	h b
	i a
	<init> (FFFFFFFFF)V <init>
dmx net/minecraft/client/gui/font/glyphs/EmptyGlyph
	<init> ()V <init>
	a (ZFFLb;Ldfn;FFFFI)V render
dmy net/minecraft/client/gui/font/glyphs/MissingGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	values ()[Ldmy; values
	valueOf (Ljava/lang/String;)Ldmy; valueOf
	<init> (Ljava/lang/String;I)V <init>
	d ()I getPixelWidth
	e ()I getPixelHeight
	getAdvance ()F getAdvance
	g ()F getOversample
	a (II)V upload
	f ()Z isColored
	a (Ldeq;)V lambda$static$0
	<clinit> ()V <clinit>
dmz net/minecraft/client/gui/font/glyphs/WhiteGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	values ()[Ldmz; values
	valueOf (Ljava/lang/String;)Ldmz; valueOf
	<init> (Ljava/lang/String;I)V <init>
	d ()I getPixelWidth
	e ()I getPixelHeight
	getAdvance ()F getAdvance
	g ()F getOversample
	a (II)V upload
	f ()Z isColored
	a (Ldeq;)V lambda$static$0
	<clinit> ()V <clinit>
dna net/minecraft/client/gui/font/glyphs/package-info
dnb net/minecraft/client/gui/font/package-info
dnc net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	<init> (Ldeq;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V <init>
	close ()V close
	a (I)Lddz; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	b ()Lorg/apache/logging/log4j/Logger; access$100
	<init> (Ldeq;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ldnc$1;)V <init>
	<clinit> ()V <clinit>
dnc$1 net/minecraft/client/gui/font/providers/BitmapProvider$1
dnc$a net/minecraft/client/gui/font/providers/BitmapProvider$Builder
	a texture
	b chars
	c height
	d ascent
	<init> (Lvk;IILjava/util/List;)V <init>
	a (Lcom/google/gson/JsonObject;)Ldnc$a; fromJson
	a (Lacf;)Lddy; create
	a (Ldeq;IIII)I getActualGlyphWidth
dnc$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	<init> (FLdeq;IIIIII)V <init>
	g ()F getOversample
	d ()I getPixelWidth
	e ()I getPixelHeight
	getAdvance ()F getAdvance
	l ()F getBearingY
	a (II)V upload
	f ()Z isColored
	<init> (FLdeq;IIIIIILdnc$1;)V <init>
dnd net/minecraft/client/gui/font/providers/GlyphProviderBuilder
	a (Lacf;)Lddy; create
dne net/minecraft/client/gui/font/providers/GlyphProviderBuilderType
	a BITMAP
	b TTF
	c LEGACY_UNICODE
	d BY_NAME
	e name
	f factory
	g $VALUES
	values ()[Ldne; values
	valueOf (Ljava/lang/String;)Ldne; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ldne; byName
	a (Lcom/google/gson/JsonObject;)Ldnd; create
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
dnf net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider
	a LOGGER
	b resourceManager
	c sizes
	d texturePattern
	e textures
	<init> (Lacf;[BLjava/lang/String;)V <init>
	close ()V close
	b (I)Lvk; getSheetLocation
	a (I)Lddz; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (Lvk;)Ldeq; loadTexture
	a (B)I getLeft
	b (B)I getRight
	b ()Lorg/apache/logging/log4j/Logger; access$100
	<clinit> ()V <clinit>
dnf$1 net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$1
dnf$a net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder
	a metadata
	b texturePattern
	<init> (Lvk;Ljava/lang/String;)V <init>
	a (Lcom/google/gson/JsonObject;)Ldnd; fromJson
	a (Lacf;)Lddy; create
dnf$b net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph
	a width
	b height
	c sourceX
	d sourceY
	e source
	<init> (IIIILdeq;)V <init>
	g ()F getOversample
	d ()I getPixelWidth
	e ()I getPixelHeight
	getAdvance ()F getAdvance
	a (II)V upload
	f ()Z isColored
	c ()F getShadowOffset
	b ()F getBoldOffset
	<init> (IIIILdeq;Ldnf$1;)V <init>
dng net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder
	a LOGGER
	b location
	c size
	d oversample
	e shiftX
	f shiftY
	g skip
	<init> (Lvk;FFFFLjava/lang/String;)V <init>
	a (Lcom/google/gson/JsonObject;)Ldnd; fromJson
	a (Lacf;)Lddy; create
	<clinit> ()V <clinit>
dnh net/minecraft/client/gui/font/providers/package-info
dni net/minecraft/client/gui/package-info
dnj net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	c OPTIONS
	<init> (Ldoq;Ldka;)V <init>
	<clinit> ()V <clinit>
dnk net/minecraft/client/gui/screens/AlertScreen
	c callback
	a text
	p message
	b okButton
	q delayTicker
	<init> (Ljava/lang/Runnable;Lnr;Lnr;)V <init>
	<init> (Ljava/lang/Runnable;Lnr;Lnr;Lnr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (I)V setDelay
	d ()V tick
	a (Ldlg;)V lambda$init$0
dnl net/minecraft/client/gui/screens/BackupConfirmScreen
	b lastScreen
	a listener
	c description
	p promptForCacheErase
	q message
	r eraseCache
	<init> (Ldoq;Ldnl$a;Lnr;Lnr;Z)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	at_ ()Z shouldCloseOnEsc
	a (III)Z keyPressed
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dnl$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
	proceed (ZZ)V proceed
dnm net/minecraft/client/gui/screens/ChatOptionsScreen
	c CHAT_OPTIONS
	<init> (Ldoq;Ldka;)V <init>
	<clinit> ()V <clinit>
dnn net/minecraft/client/gui/screens/ChatScreen
	b historyBuffer
	c historyPos
	a input
	p initial
	q commandSuggestions
	<init> (Ljava/lang/String;)V <init>
	b ()V init
	a (Ldjw;II)V resize
	e ()V removed
	d ()V tick
	b (Ljava/lang/String;)V onEdited
	a (III)Z keyPressed
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (Ljava/lang/String;Z)V insertText
	a (I)V moveInHistory
	a (Ldfj;IIF)V render
	ay_ ()Z isPauseScreen
	c (Ljava/lang/String;)V setChatLine
	a (Ldnn;)Ldlj; access$000
dnn$1 net/minecraft/client/gui/screens/ChatScreen$1
	a this$0
	<init> (Ldnn;Ldkr;IIIILnr;)V <init>
	c ()Lnx; createNarrationMessage
dno net/minecraft/client/gui/screens/ConfirmLinkScreen
	p warning
	q copyButton
	r url
	s showWarning
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ljava/lang/String;Z)V <init>
	b ()V init
	g ()V copyToClipboard
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dnp net/minecraft/client/gui/screens/ConfirmScreen
	p title2
	q message
	a yesButton
	b noButton
	r delayTicker
	c callback
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lnr;Lnr;)V <init>
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lnr;Lnr;Lnr;Lnr;)V <init>
	as_ ()Ljava/lang/String; getNarrationMessage
	b ()V init
	a (Ldfj;IIF)V render
	a (I)V setDelay
	d ()V tick
	at_ ()Z shouldCloseOnEsc
	a (III)Z keyPressed
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
dnq net/minecraft/client/gui/screens/ConnectScreen
	a UNIQUE_THREAD_ID
	b LOGGER
	c connection
	p aborted
	q parent
	r status
	s lastNarration
	<init> (Ldoq;Ldjw;Ldwr;)V <init>
	<init> (Ldoq;Ldjw;Ljava/lang/String;I)V <init>
	a (Ljava/lang/String;I)V connect
	a (Lnr;)V updateStatus
	d ()V tick
	at_ ()Z shouldCloseOnEsc
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	a (Ldnq;)Z access$000
	a (Ldnq;Lnd;)Lnd; access$102
	b (Ldnq;)Lnd; access$100
	c (Ldnq;)Ldoq; access$200
	g ()Lorg/apache/logging/log4j/Logger; access$300
	a (Ldnq;Lnr;)V access$400
	<clinit> ()V <clinit>
dnq$1 net/minecraft/client/gui/screens/ConnectScreen$1
	a val$hostname
	b val$port
	c this$0
	<init> (Ldnq;Ljava/lang/String;Ljava/lang/String;I)V <init>
	run ()V run
	a (Ljava/lang/String;)V lambda$run$2
	a ()V lambda$run$1
	a (Ldnq;Lnr;)V lambda$run$0
dnr net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a BIOME_SELECT_INFO
	b parent
	c applySettings
	p biomes
	q list
	r biome
	s doneButton
	<init> (Ldoq;Lgn;Ljava/util/function/Consumer;Lbss;)V <init>
	au_ ()V onClose
	b ()V init
	i ()V updateButtonValidity
	a (Ldfj;IIF)V render
	a (Ldnr$a$a;)Z lambda$init$2
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	a (Ldnr;)Lgs; access$100
	a (Ldnr;Lbss;)Lbss; access$202
	b (Ldnr;)V access$400
	<clinit> ()V <clinit>
dnr$1 net/minecraft/client/gui/screens/CreateBuffetWorldScreen$1
dnr$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a this$0
	<init> (Ldnr;)V <init>
	b ()Z isFocused
	a (Ldnr$a$a;)V setSelected
	a (Ldlc$a;)V setSelected
	a (Ljava/util/Map$Entry;)V lambda$new$1
	b (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$new$0
	<init> (Ldnr;Ldnr$1;)V <init>
dnr$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	b biome
	c name
	a this$1
	<init> (Ldnr$a;Lbss;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Ldnr$a$a;)Lbss; access$300
dns net/minecraft/client/gui/screens/CreateFlatWorldScreen
	a parent
	b applySettings
	c generator
	p columnType
	q columnHeight
	r list
	s deleteLayerButton
	<init> (Ldrx;Ljava/util/function/Consumer;Lcpc;)V <init>
	i ()Lcpc; settings
	a (Lcpc;)V setConfig
	b ()V init
	k ()V updateButtonValidity
	l ()Z hasValidSelection
	au_ ()V onClose
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	a (Ldns;)Lcpc; access$000
	b (Ldns;)V access$200
dns$1 net/minecraft/client/gui/screens/CreateFlatWorldScreen$1
dns$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	a this$0
	<init> (Ldns;)V <init>
	a (Ldns$a$a;)V setSelected
	b ()Z isFocused
	e ()I getScrollbarPosition
	f ()V resetRows
	a (Ldlc$a;)V setSelected
	a (Ldns$a;)Ldjw; access$300
dns$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a this$1
	<init> (Ldns$a;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Ldfj;IILbly;)V blitSlot
	a (Ldfj;II)V blitSlotBg
	<init> (Ldns$a;Ldns$1;)V <init>
dnt net/minecraft/client/gui/screens/DatapackLoadFailureScreen
	a message
	b callback
	<init> (Ljava/lang/Runnable;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	at_ ()Z shouldCloseOnEsc
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
dnu net/minecraft/client/gui/screens/DeathScreen
	a delayTicker
	b causeOfDeath
	c hardcore
	p deathScore
	<init> (Lnr;Z)V <init>
	b ()V init
	at_ ()Z shouldCloseOnEsc
	c (Z)V confirmResult
	i ()V exitToTitleScreen
	a (Ldfj;IIF)V render
	a (I)Lob; getClickedComponentStyleAt
	a (DDI)Z mouseClicked
	ay_ ()Z isPauseScreen
	d ()V tick
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
dnv net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
	b movementMessage
	c durationMessage
	<init> ()V <init>
	b ()V init
	a (Ldfj;)V renderBackground
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dnw net/minecraft/client/gui/screens/DirectJoinServerScreen
	a ENTER_IP_LABEL
	b selectButton
	c serverData
	p ipEdit
	q callback
	r lastScreen
	<init> (Ldoq;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldwr;)V <init>
	d ()V tick
	a (III)Z keyPressed
	b ()V init
	a (Ldjw;II)V resize
	i ()V onSelect
	au_ ()V onClose
	e ()V removed
	k ()V updateSelectButtonStatus
	a (Ldfj;IIF)V render
	b (Ljava/lang/String;)V lambda$init$2
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dnx net/minecraft/client/gui/screens/DisconnectedScreen
	a reason
	b message
	c parent
	p textHeight
	<init> (Ldoq;Lnr;Lnr;)V <init>
	at_ ()Z shouldCloseOnEsc
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
dny net/minecraft/client/gui/screens/EditServerScreen
	a NAME_LABEL
	b IP_LABEL
	c addButton
	p callback
	q serverData
	r ipEdit
	s nameEdit
	t serverPackButton
	u lastScreen
	v addressFilter
	<init> (Ldoq;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldwr;)V <init>
	d ()V tick
	b ()V init
	a (Ldwr$a;)Lnr; createServerButtonText
	a (Ldjw;II)V resize
	b (Ljava/lang/String;)V onEdited
	e ()V removed
	i ()V onAdd
	au_ ()V onClose
	k ()V cleanUp
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	c (Ljava/lang/String;)Z lambda$new$0
	<clinit> ()V <clinit>
dnz net/minecraft/client/gui/screens/ErrorScreen
	a message
	<init> (Lnr;Lnr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	at_ ()Z shouldCloseOnEsc
	a (Ldlg;)V lambda$init$0
doa net/minecraft/client/gui/screens/GenericDirtMessageScreen
	<init> (Lnr;)V <init>
	at_ ()Z shouldCloseOnEsc
	a (Ldfj;IIF)V render
dob net/minecraft/client/gui/screens/InBedChatScreen
	<init> ()V <init>
	b ()V init
	au_ ()V onClose
	a (III)Z keyPressed
	i ()V sendWakeUp
	a (Ldlg;)V lambda$init$0
doc net/minecraft/client/gui/screens/LanguageSelectScreen
	c WARNING_LABEL
	p packSelectionList
	q languageManager
	r forceUnicodeButton
	s doneButton
	<init> (Ldoq;Ldka;Lekr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	a (Ldoc;)Lekr; access$000
	<clinit> ()V <clinit>
doc$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	a this$0
	<init> (Ldoc;Ldjw;)V <init>
	e ()I getScrollbarPosition
	d ()I getRowWidth
	a (Ldoc$a$a;)V setSelected
	a (Ldfj;)V renderBackground
	b ()Z isFocused
	a (Ldlc$a;)V setSelected
	a (Ldoc$a;)I access$200
doc$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	b language
	a this$1
	<init> (Ldoc$a;Lekq;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a ()V select
	a (Ldoc$a$a;)Lekq; access$100
dod net/minecraft/client/gui/screens/LevelLoadingScreen
	a progressListener
	b lastNarration
	c COLORS
	<init> (Laat;)V <init>
	at_ ()Z shouldCloseOnEsc
	e ()V removed
	a (Ldfj;IIF)V render
	a (Ldfj;Laat;IIII)V renderChunks
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
doe net/minecraft/client/gui/screens/LoadingOverlay
	a MOJANG_STUDIOS_LOGO_LOCATION
	b BRAND_BACKGROUND
	c BRAND_BACKGROUND_NO_ALPHA
	d minecraft
	e reload
	i onFinish
	j fadeIn
	k currentProgress
	l fadeOutStart
	m fadeInStart
	<init> (Ldjw;Lacc;Ljava/util/function/Consumer;Z)V <init>
	a (Ldjw;)V registerTextures
	a (Ldfj;IIF)V render
	a (Ldfj;IIIIF)V drawProgressBar
	a ()Z isPauseScreen
	b ()Lvk; access$000
	<clinit> ()V <clinit>
doe$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	<init> ()V <init>
	b (Lacf;)Lejq$a; getTextureImage
dof net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	<init> ()V <init>
	a (Lbjb;Ldjw;ILnr;)V create
	a (Lbjb;)Ldof$a; getConstructor
	a (Lbjb;Ldof$a;)V register
	a ()Z selfTest
	<clinit> ()V <clinit>
dof$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lnr;Lbjb;Ldjw;I)V fromPacket
	create (Lbhz;Lbfs;Lnr;)Ldoq; create
dog net/minecraft/client/gui/screens/MouseSettingsScreen
	c list
	p OPTIONS
	<init> (Ldoq;Ldka;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	a (I)[Ldjz; lambda$init$0
	<clinit> ()V <clinit>
doh net/minecraft/client/gui/screens/OptionsScreen
	a OPTION_SCREEN_OPTIONS
	b lastScreen
	c options
	p difficultyButton
	q lockButton
	r currentDifficulty
	<init> (Ldoq;Ldka;)V <init>
	b ()V init
	a (Labu;)V updatePackList
	a (Laoo;)Lnr; getDifficultyText
	c (Z)V lockCallback
	e ()V removed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$11
	b (Ldlg;)V lambda$init$10
	c (Ldlg;)V lambda$init$9
	d (Ldlg;)V lambda$init$8
	e (Ldlg;)V lambda$init$7
	f (Ldlg;)V lambda$init$6
	g (Ldlg;)V lambda$init$5
	h (Ldlg;)V lambda$init$4
	i (Ldlg;)V lambda$init$3
	j (Ldlg;)V lambda$init$2
	k (Ldlg;)V lambda$init$1
	l (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
doi net/minecraft/client/gui/screens/OptionsSubScreen
	a lastScreen
	b options
	<init> (Ldoq;Ldka;Lnr;)V <init>
	e ()V removed
	au_ ()V onClose
	a (Ldlu;II)Ljava/util/List; tooltipAt
doj net/minecraft/client/gui/screens/OutOfMemoryScreen
	<init> ()V <init>
	b ()V init
	at_ ()Z shouldCloseOnEsc
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
dok net/minecraft/client/gui/screens/Overlay
	<init> ()V <init>
	a ()Z isPauseScreen
dol net/minecraft/client/gui/screens/PauseScreen
	a showPauseMenu
	<init> (Z)V <init>
	b ()V init
	i ()V createPauseMenu
	d ()V tick
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$createPauseMenu$9
	b (Ldlg;)V lambda$createPauseMenu$8
	c (Ldlg;)V lambda$createPauseMenu$7
	d (Ldlg;)V lambda$createPauseMenu$6
	c (Z)V lambda$null$5
	a (Ljava/lang/String;Ldlg;)V lambda$createPauseMenu$4
	c (Ljava/lang/String;Z)V lambda$null$3
	e (Ldlg;)V lambda$createPauseMenu$2
	f (Ldlg;)V lambda$createPauseMenu$1
	g (Ldlg;)V lambda$createPauseMenu$0
dom net/minecraft/client/gui/screens/PopupScreen
	a message
	b buttonOptions
	c messageLines
	p contentTop
	q buttonWidth
	<init> (Lnr;Ljava/util/List;Lcom/google/common/collect/ImmutableList;)V <init>
	as_ ()Ljava/lang/String; getNarrationMessage
	b (Ldjw;II)V init
	a (Ldfj;IIF)V render
	at_ ()Z shouldCloseOnEsc
dom$a net/minecraft/client/gui/screens/PopupScreen$ButtonOption
	a message
	b onPress
	<init> (Lnr;Ldlg$a;)V <init>
	a (Ldom$a;)Lnr; access$000
	b (Ldom$a;)Ldlg$a; access$100
don net/minecraft/client/gui/screens/PresetFlatWorldScreen
	a LOGGER
	b PRESETS
	c parent
	p shareText
	q listText
	r list
	s selectButton
	t export
	u settings
	<init> (Ldns;)V <init>
	a (Ljava/lang/String;I)Lcpb; getLayerInfoFromString
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	a (Lgm;Ljava/lang/String;Lcpc;)Lcpc; fromString
	b (Lgm;Lcpc;)Ljava/lang/String; save
	b ()V init
	a (DDD)Z mouseScrolled
	a (Ldjw;II)V resize
	au_ ()V onClose
	e ()V removed
	a (Ldfj;IIF)V render
	d ()V tick
	c (Z)V updateButtonValidity
	a (Lnr;Lbrt;Lvj;Ljava/util/List;ZZZ[Lcpb;)V preset
	a (Ljava/util/List;ZZZ[Lcpb;Lvj;Lgm;)Lcpc; lambda$preset$5
	a (Lgm;Lvj;)Lbss; lambda$null$4
	a (Ldlg;)V lambda$init$3
	a (Lgm;Ldlg;)V lambda$init$2
	b (Lgm;Lvj;)Lbss; lambda$fromString$1
	a (Lvk;)Ljava/lang/IllegalArgumentException; lambda$fromString$0
	i ()Ljava/util/List; access$000
	a (Ldon;)Ldns; access$200
	a (Ldon;Lcpc;)Lcpc; access$302
	b (Ldon;)Lcpc; access$300
	a (Lgm;Lcpc;)Ljava/lang/String; access$400
	c (Ldon;)Ldln; access$500
	<clinit> ()V <clinit>
don$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo
	a icon
	b name
	c settings
	<init> (Lblu;Lnr;Ljava/util/function/Function;)V <init>
	a ()Lnr; getName
don$b net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a this$0
	<init> (Ldon;)V <init>
	a (Ldon$b$a;)V setSelected
	b ()Z isFocused
	a (III)Z keyPressed
	a (Ldlc$a;)V setSelected
	a (Ldon$b;)Ldjw; access$600
don$b$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	a this$1
	<init> (Ldon$b;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a ()V select
	a (Ldfj;IILblu;)V blitSlot
	a (Ldfj;II)V blitSlotBg
	a (Ldon$b$a;)V access$100
doo net/minecraft/client/gui/screens/ProgressScreen
	a header
	b stage
	c progress
	p stop
	<init> ()V <init>
	at_ ()Z shouldCloseOnEsc
	a (Lnr;)V progressStartNoAbort
	b (Lnr;)V progressStart
	c (Lnr;)V progressStage
	a (I)V progressStagePercentage
	a ()V stop
	a (Ldfj;IIF)V render
dop net/minecraft/client/gui/screens/ReceivingLevelScreen
	a DOWNLOADING_TERRAIN_TEXT
	<init> ()V <init>
	at_ ()Z shouldCloseOnEsc
	a (Ldfj;IIF)V render
	ay_ ()Z isPauseScreen
	<clinit> ()V <clinit>
doq net/minecraft/client/gui/screens/Screen
	a LOGGER
	b ALLOWED_PROTOCOLS
	d title
	e children
	i minecraft
	j itemRenderer
	k width
	l height
	m buttons
	n passEvents
	o font
	c clickedLink
	<init> (Lnr;)V <init>
	w ()Lnr; getTitle
	as_ ()Ljava/lang/String; getNarrationMessage
	a (Ldfj;IIF)V render
	a (III)Z keyPressed
	at_ ()Z shouldCloseOnEsc
	au_ ()V onClose
	a (Ldle;)Ldle; addButton
	d (Ldmf;)Ldmf; addWidget
	a (Ldfj;Lbly;II)V renderTooltip
	a (Lbly;)Ljava/util/List; getTooltipFromItem
	b (Ldfj;Lnr;II)V renderTooltip
	b (Ldfj;Ljava/util/List;II)V renderComponentTooltip
	c (Ldfj;Ljava/util/List;II)V renderTooltip
	a (Ldfj;Lob;II)V renderComponentHoverEffect
	a (Ljava/lang/String;Z)V insertText
	a (Lob;)Z handleComponentClicked
	b_ (Ljava/lang/String;)V sendMessage
	b (Ljava/lang/String;Z)V sendMessage
	b (Ldjw;II)V init
	a (II)V setSize
	av_ ()Ljava/util/List; children
	b ()V init
	d ()V tick
	e ()V removed
	a (Ldfj;)V renderBackground
	a (Ldfj;I)V renderBackground
	e (I)V renderDirtBackground
	ay_ ()Z isPauseScreen
	c (Z)V confirmLink
	a (Ljava/net/URI;)V openLink
	x ()Z hasControlDown
	y ()Z hasShiftDown
	z ()Z hasAltDown
	f (I)Z isCut
	g (I)Z isPaste
	h (I)Z isCopy
	i (I)Z isSelectAll
	a (Ldjw;II)V resize
	a (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V wrapScreenError
	a (Ljava/lang/String;CI)Z isValidCharacterForName
	b (DD)Z isMouseOver
	a (Ljava/util/List;)V onFilesDrop
	b (Ljava/lang/String;)Ljava/lang/String; lambda$wrapScreenError$0
	<clinit> ()V <clinit>
dor net/minecraft/client/gui/screens/ShareToLanScreen
	a ALLOW_COMMANDS_LABEL
	b GAME_MODE_LABEL
	c INFO_TEXT
	p lastScreen
	q commandsButton
	r modeButton
	s gameModeName
	t commands
	<init> (Ldoq;)V <init>
	b ()V init
	i ()V updateSelectionStrings
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dos net/minecraft/client/gui/screens/SimpleOptionsSubScreen
	c smallOptions
	p narratorButton
	q list
	<init> (Ldoq;Ldka;Lnr;[Ldjz;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	i ()V updateNarratorButton
	a (Ldlg;)V lambda$init$0
dot net/minecraft/client/gui/screens/SkinCustomizationScreen
	<init> (Ldoq;Ldka;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Lbfu;)Lnr; getMessage
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	a (Lbfu;Ldlg;)V lambda$init$0
dou net/minecraft/client/gui/screens/SoundOptionsScreen
	<init> (Ldoq;Ldka;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
dov net/minecraft/client/gui/screens/TitleScreen
	b LOGGER
	a CUBE_MAP
	c PANORAMA_OVERLAY
	p ACCESSIBILITY_TEXTURE
	q minceraftEasterEgg
	r splash
	s resetDemoButton
	t MINECRAFT_LOGO
	u MINECRAFT_EDITION
	v realmsNotificationsInitialized
	w realmsNotificationsScreen
	x copyrightWidth
	y copyrightX
	z panorama
	A fading
	B fadeInStart
	<init> ()V <init>
	<init> (Z)V <init>
	i ()Z realmsNotificationsEnabled
	d ()V tick
	a (Lejv;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	ay_ ()Z isPauseScreen
	at_ ()Z shouldCloseOnEsc
	b ()V init
	b (II)V createNormalMenuOptions
	c (II)V createDemoMenuOptions
	k ()Z checkDemoWorldPresence
	l ()V realmsButtonClicked
	a (Ldfj;IIF)V render
	a (DDI)Z mouseClicked
	e ()V removed
	c (Z)V confirmDemo
	a (Ldfj;Ljava/lang/Integer;Ljava/lang/Integer;)V lambda$render$11
	b (Ldfj;Ljava/lang/Integer;Ljava/lang/Integer;)V lambda$render$10
	a (Ldlg;)V lambda$createDemoMenuOptions$9
	a (ZLdlg;)V lambda$createDemoMenuOptions$8
	b (Ldlg;)V lambda$createNormalMenuOptions$7
	c (Ldlg;)V lambda$createNormalMenuOptions$6
	a (Ldlg;Ldfj;II)V lambda$createNormalMenuOptions$5
	d (Ldlg;)V lambda$createNormalMenuOptions$4
	e (Ldlg;)V lambda$init$3
	f (Ldlg;)V lambda$init$2
	g (Ldlg;)V lambda$init$1
	h (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dow net/minecraft/client/gui/screens/VideoSettingsScreen
	c FABULOUS
	p WARNING_MESSAGE
	q WARNING_TITLE
	r BUTTON_ACCEPT
	s BUTTON_CANCEL
	t NEW_LINE
	u OPTIONS
	v list
	w gpuWarnlistManager
	x oldMipmaps
	<init> (Ldoq;Ldka;)V <init>
	b ()V init
	e ()V removed
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$mouseClicked$2
	b (Ldlg;)V lambda$mouseClicked$1
	c (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dox net/minecraft/client/gui/screens/WinScreen
	a LOGGER
	b LOGO_LOCATION
	c EDITION_LOCATION
	p VIGNETTE_LOCATION
	q OBFUSCATE_TOKEN
	r poem
	s onFinished
	t time
	u lines
	v centeredLines
	w totalScrollLength
	x scrollSpeed
	<init> (ZLjava/lang/Runnable;)V <init>
	d ()V tick
	au_ ()V onClose
	i ()V respawn
	b ()V init
	a (IIF)V renderBg
	a (Ldfj;IIF)V render
	a (Ldfj;Ljava/lang/Integer;Ljava/lang/Integer;)V lambda$render$0
	<clinit> ()V <clinit>
doy net/minecraft/client/gui/screens/achievement/StatsScreen
	c PENDING_TEXT
	a lastScreen
	p statsList
	q itemStatsList
	r mobsStatsList
	s stats
	t activeList
	u isLoading
	<init> (Ldoq;Ladz;)V <init>
	b ()V init
	i ()V initLists
	k ()V initButtons
	a (Ldfj;IIF)V render
	l ()V onStatsUpdated
	ay_ ()Z isPauseScreen
	m ()Ldls; getActiveList
	a (Ldls;)V setActiveList
	b (Ladv;)Ljava/lang/String; getTranslationKey
	a (I)I getColumnX
	a (Ldfj;IILblu;)V blitSlot
	c (Ldfj;IIII)V blitSlotIcon
	a (Ldlg;)V lambda$initButtons$3
	b (Ldlg;)V lambda$initButtons$2
	c (Ldlg;)V lambda$initButtons$1
	d (Ldlg;)V lambda$initButtons$0
	a (Ladv;)Ljava/lang/String; access$100
	a (Ldoy;)Ldkr; access$200
	b (Ldoy;)Ladz; access$300
	c (Ldoy;)Ldkr; access$400
	d (Ldoy;)Ldkr; access$500
	a (Ldoy;I)I access$800
	a (Ldoy;Ldfj;IIII)V access$900
	e (Ldoy;)Ldkr; access$1000
	f (Ldoy;)Ldkr; access$1100
	g (Ldoy;)Ldoy$b; access$1200
	a (Ldoy;Ldfj;IILblu;)V access$1300
	h (Ldoy;)Ldkr; access$1400
	i (Ldoy;)Ldkr; access$1500
	j (Ldoy;)Ldkr; access$1600
	k (Ldoy;)Ldkr; access$1700
	l (Ldoy;)Ldkr; access$1800
	m (Ldoy;)Ldkr; access$1900
	n (Ldoy;)Ldkr; access$2000
	o (Ldoy;)Ldkr; access$2100
	<clinit> ()V <clinit>
doy$1 net/minecraft/client/gui/screens/achievement/StatsScreen$1
doy$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
	a this$0
	<init> (Ldoy;Ldjw;)V <init>
	a (Ldfj;)V renderBackground
	a (Ladv;)Ljava/lang/String; lambda$new$0
doy$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	b stat
	c statDisplay
	a this$1
	<init> (Ldoy$a;Ladv;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	<init> (Ldoy$a;Ladv;Ldoy$1;)V <init>
doy$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	o itemColumns
	v iconOffsets
	p headerPressed
	q statItemList
	r itemStatSorter
	s sortColumn
	t sortOrder
	u this$0
	<init> (Ldoy;Ldjw;)V <init>
	a (Ldfj;IILdfl;)V renderHeader
	d ()I getRowWidth
	e ()I getScrollbarPosition
	a (Ldfj;)V renderBackground
	a (II)V clickedHeader
	a (I)Ladx; getColumn
	b (Ladx;)I getColumnIndex
	a (Ldfj;II)V renderDecorations
	a (Ldfj;Lnr;II)V renderMousehoverTooltip
	a (Lblu;)Lnr; getString
	a (Ladx;)V sortByColumn
doy$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemComparator
	a this$1
	<init> (Ldoy$b;)V <init>
	a (Lblu;Lblu;)I compare
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
	<init> (Ldoy$b;Ldoy$1;)V <init>
doy$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	a this$1
	<init> (Ldoy$b;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ladv;IIZ)V renderStat
	<init> (Ldoy$b;Ldoy$1;)V <init>
doy$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
	a this$0
	<init> (Ldoy;Ldjw;)V <init>
	a (Ldfj;)V renderBackground
doy$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	b type
	c mobName
	d kills
	e hasKills
	f killedBy
	g wasKilledBy
	a this$1
	<init> (Ldoy$c;Laqb;)V <init>
	a (Ldfj;IIIIIIIZF)V render
doz net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	l ()V onStatsUpdated
	<clinit> ()V <clinit>
dpa net/minecraft/client/gui/screens/achievement/package-info
dpb net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e advancement
	i display
	j icon
	k title
	l root
	m widgets
	n scrollX
	o scrollY
	p minX
	q minY
	r maxX
	s maxY
	t fade
	u centered
	<init> (Ldjw;Ldpf;Ldpc;ILy;Lah;)V <init>
	a ()Ldpc; getType
	b ()I getIndex
	c ()Ly; getAdvancement
	d ()Lnr; getTitle
	e ()Lah; getDisplay
	a (Ldfj;IIZ)V drawTab
	a (IILefg;)V drawIcon
	a (Ldfj;)V drawContents
	c (Ldfj;IIII)V drawTooltips
	a (IIDD)Z isMouseOver
	a (Ldjw;Ldpf;ILy;)Ldpb; create
	a (DD)V scroll
	a (Ly;)V addAdvancement
	a (Ldpd;Ly;)V addWidget
	b (Ly;)Ldpd; getWidget
	f ()Ldpf; getScreen
dpc net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e textureX
	f textureY
	g width
	h height
	i max
	j $VALUES
	values ()[Ldpc; values
	valueOf (Ljava/lang/String;)Ldpc; valueOf
	<init> (Ljava/lang/String;IIIIII)V <init>
	a ()I getMax
	a (Ldfj;Ldkt;IIZI)V draw
	a (IIILefg;Lbly;)V drawIcon
	a (I)I getX
	b (I)I getY
	a (IIIDD)Z isMouseOver
	<clinit> ()V <clinit>
dpc$1 net/minecraft/client/gui/screens/advancements/AdvancementTabType$1
	a $SwitchMap$net$minecraft$client$gui$screens$advancements$AdvancementTabType
	<clinit> ()V <clinit>
dpd net/minecraft/client/gui/screens/advancements/AdvancementWidget
	a WIDGETS_LOCATION
	b TEST_SPLIT_OFFSETS
	c tab
	d advancement
	e display
	i title
	j width
	k description
	l minecraft
	m parent
	n children
	o progress
	p x
	q y
	<init> (Ldpb;Ldjw;Ly;Lah;)V <init>
	a (Ldkg;Ljava/util/List;)F getMaxWidth
	a (Lnr;I)Ljava/util/List; findOptimalLines
	a (Ly;)Ldpd; getFirstVisibleParent
	a (Ldfj;IIZ)V drawConnectivity
	a (Ldfj;II)V draw
	a ()I getWidth
	a (Laa;)V setProgress
	a (Ldpd;)V addChild
	a (Ldfj;IIFII)V drawHover
	a (Ldfj;IIIIIIIII)V render9Sprite
	a (Ldfj;IIIIIIII)V renderRepeating
	a (IIII)Z isMouseOver
	b ()V attachToParent
	c ()I getY
	d ()I getX
	<clinit> ()V <clinit>
dpe net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c y
	d $VALUES
	values ()[Ldpe; values
	valueOf (Ljava/lang/String;)Ldpe; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getIndex
	<clinit> ()V <clinit>
dpf net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	a WINDOW_LOCATION
	b TABS_LOCATION
	c VERY_SAD_LABEL
	p NO_ADVANCEMENTS_LABEL
	q TITLE
	r advancements
	s tabs
	t selectedTab
	u isScrolling
	<init> (Ldwi;)V <init>
	b ()V init
	e ()V removed
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (DDIDD)Z mouseDragged
	c (Ldfj;IIII)V renderInside
	a (Ldfj;II)V renderWindow
	d (Ldfj;IIII)V renderTooltips
	a (Ly;)V onAddAdvancementRoot
	b (Ly;)V onRemoveAdvancementRoot
	c (Ly;)V onAddAdvancementTask
	d (Ly;)V onRemoveAdvancementTask
	a (Ly;Laa;)V onUpdateAdvancementProgress
	e (Ly;)V onSelectedTabChanged
	a ()V onAdvancementsCleared
	f (Ly;)Ldpd; getAdvancementWidget
	g (Ly;)Ldpb; getTab
	<clinit> ()V <clinit>
dpg net/minecraft/client/gui/screens/advancements/package-info
dph net/minecraft/client/gui/screens/controls/ControlList
	a controlsScreen
	o maxNameWidth
	<init> (Ldpi;Ldjw;)V <init>
	e ()I getScrollbarPosition
	d ()I getRowWidth
	a (Ldph;)Ldjw; access$100
	b (Ldph;)Ldjw; access$200
	c (Ldph;)Ldjw; access$300
	d (Ldph;)Ldjw; access$400
	e (Ldph;)Ldpi; access$500
	f (Ldph;)I access$600
	g (Ldph;)Ldjw; access$700
	h (Ldph;)Ldjw; access$800
	i (Ldph;)Ldjw; access$900
	j (Ldph;)Ldjw; access$1000
dph$1 net/minecraft/client/gui/screens/controls/ControlList$1
dph$a net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry
	b name
	c width
	a this$0
	<init> (Ldph;Lnr;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	c_ (Z)Z changeFocus
	av_ ()Ljava/util/List; children
dph$b net/minecraft/client/gui/screens/controls/ControlList$Entry
	<init> ()V <init>
dph$c net/minecraft/client/gui/screens/controls/ControlList$KeyEntry
	b key
	c name
	d changeButton
	e resetButton
	a this$0
	<init> (Ldph;Ldjt;Lnr;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	av_ ()Ljava/util/List; children
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (Ldjt;Ldlg;)V lambda$new$1
	b (Ldjt;Ldlg;)V lambda$new$0
	<init> (Ldph;Ldjt;Lnr;Ldph$1;)V <init>
dph$c$1 net/minecraft/client/gui/screens/controls/ControlList$KeyEntry$1
	a val$this$0
	b val$key
	c val$name
	d this$1
	<init> (Ldph$c;IIIILnr;Ldlg$a;Ldph;Ldjt;Lnr;)V <init>
	c ()Lnx; createNarrationMessage
dph$c$2 net/minecraft/client/gui/screens/controls/ControlList$KeyEntry$2
	a val$this$0
	b val$name
	c this$1
	<init> (Ldph$c;IIIILnr;Ldlg$a;Ldph;Lnr;)V <init>
	c ()Lnx; createNarrationMessage
dpi net/minecraft/client/gui/screens/controls/ControlsScreen
	c selectedKey
	p lastKeySelection
	q controlList
	r resetButton
	<init> (Ldoq;Ldka;)V <init>
	b ()V init
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dpj net/minecraft/client/gui/screens/controls/package-info
dpk net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen
	a GAMEMODE_SWITCHER_LOCATION
	b ALL_SLOTS_WIDTH
	c SELECT_KEY
	p previousHovered
	q currentlyHovered
	r firstMouseX
	s firstMouseY
	t setFirstMousePos
	u slots
	<init> ()V <init>
	k ()Lbrr; getDefaultSelected
	b ()V init
	a (Ldfj;IIF)V render
	l ()V switchToHoveredGameMode
	a (Ldjw;Ljava/util/Optional;)V switchToHoveredGameMode
	m ()Z checkToClose
	a (III)Z keyPressed
	ay_ ()Z isPauseScreen
	a (Ldpk$b;Ldpk$a;)V lambda$render$1
	a (Ldfj;Ldpk$a;)V lambda$render$0
	a (Ldpk;)Lefg; access$500
	i ()Lvk; access$700
	<clinit> ()V <clinit>
dpk$1 net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$1
	a $SwitchMap$net$minecraft$client$gui$screens$debug$GameModeSwitcherScreen$GameModeIcon
	b $SwitchMap$net$minecraft$world$level$GameType
	<clinit> ()V <clinit>
dpk$a net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon
	a CREATIVE
	b SURVIVAL
	c ADVENTURE
	d SPECTATOR
	e VALUES
	f name
	g command
	h renderStack
	i $VALUES
	values ()[Ldpk$a; values
	valueOf (Ljava/lang/String;)Ldpk$a; valueOf
	<init> (Ljava/lang/String;ILnr;Ljava/lang/String;Lbly;)V <init>
	a (Lefg;II)V drawIcon
	a ()Lnr; getName
	b ()Ljava/lang/String; getCommand
	c ()Ljava/util/Optional; getNext
	b (Lbrr;)Ljava/util/Optional; getFromGameType
	a (Lbrr;)Ljava/util/Optional; access$000
	a (Ldpk$a;)Ljava/lang/String; access$200
	b (Ldpk$a;)Ljava/util/Optional; access$300
	c (Ldpk$a;)Lnr; access$400
	a (Ldpk$a;Lefg;II)V access$600
	<clinit> ()V <clinit>
dpk$b net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot
	b icon
	c isSelected
	a this$0
	<init> (Ldpk;Ldpk$a;II)V <init>
	b (Ldfj;IIF)V renderButton
	g ()Z isHovered
	e (Z)V setSelected
	a (Ldfj;Lejv;)V drawSlot
	b (Ldfj;Lejv;)V drawSelection
	a (Ldpk$b;)Ldpk$a; access$100
dpl net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	s SET_COMMAND_LABEL
	t COMMAND_LABEL
	u PREVIOUS_OUTPUT_LABEL
	a commandEdit
	b previousEdit
	c doneButton
	p cancelButton
	q outputButton
	r trackOutput
	v commandSuggestions
	<init> ()V <init>
	d ()V tick
	i ()Lbqv; getCommandBlock
	k ()I getPreviousY
	b ()V init
	a (Ldjw;II)V resize
	l ()V updateCommandOutput
	m ()V onDone
	e ()V removed
	a (Lbqv;)V populateAndSendPacket
	au_ ()V onClose
	b (Ljava/lang/String;)V onEdited
	a (III)Z keyPressed
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	a (Ldpl;)Ldlj; access$000
	<clinit> ()V <clinit>
dpl$1 net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen$1
	a this$0
	<init> (Ldpl;Ldkr;IIIILnr;)V <init>
	c ()Lnx; createNarrationMessage
dpm net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	a INVENTORY_LOCATION
	b imageWidth
	c imageHeight
	p titleLabelX
	q titleLabelY
	r inventoryLabelX
	s inventoryLabelY
	t menu
	u inventory
	v hoveredSlot
	A clickedSlot
	B snapbackEnd
	C quickdropSlot
	D lastClickSlot
	w leftPos
	x topPos
	E isSplittingStack
	F draggingItem
	G snapbackStartX
	H snapbackStartY
	I snapbackTime
	J snapbackItem
	K quickdropTime
	y quickCraftSlots
	z isQuickCrafting
	L quickCraftingType
	M quickCraftingButton
	N skipNextRelease
	O quickCraftingRemainder
	P lastClickTime
	Q lastClickButton
	R doubleclick
	S lastQuickMoved
	<init> (Lbhz;Lbfs;Lnr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldfj;II)V renderTooltip
	a (Lbly;IILjava/lang/String;)V renderFloatingItem
	b (Ldfj;II)V renderLabels
	a (Ldfj;FII)V renderBg
	a (Ldfj;Lbjo;)V renderSlot
	m ()V recalculateQuickCraftRemaining
	a (DD)Lbjo; findSlot
	a (DDI)Z mouseClicked
	a (I)V checkHotbarMouseClicked
	a (DDIII)Z hasClickedOutside
	a (DDIDD)Z mouseDragged
	c (DDI)Z mouseReleased
	a (Lbjo;DD)Z isHovering
	a (IIIIDD)Z isHovering
	a (Lbjo;IILbih;)V slotClicked
	a (III)Z keyPressed
	b (II)Z checkHotbarKeyPressed
	e ()V removed
	ay_ ()Z isPauseScreen
	d ()V tick
	i ()Lbhz; getMenu
	au_ ()V onClose
	<clinit> ()V <clinit>
dpn net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	B RECIPE_BUTTON_LOCATION
	A recipeBookComponent
	C widthTooNarrow
	D texture
	<init> (Lbia;Ldri;Lbfs;Lnr;Lvk;)V <init>
	b ()V init
	d ()V tick
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	a (DDI)Z mouseClicked
	a (Lbjo;IILbih;)V slotClicked
	a (III)Z keyPressed
	a (DDIII)Z hasClickedOutside
	a (CI)Z charTyped
	az_ ()V recipesUpdated
	l ()Ldrm; getRecipeBookComponent
	e ()V removed
	a (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dpo net/minecraft/client/gui/screens/inventory/AnvilScreen
	A ANVIL_LOCATION
	B TOO_EXPENSIVE_TEXT
	C name
	<init> (Lbib;Lbfs;Lnr;)V <init>
	k ()V subInit
	a (Ldjw;II)V resize
	e ()V removed
	a (III)Z keyPressed
	b (Ljava/lang/String;)V onNameChanged
	b (Ldfj;II)V renderLabels
	b (Ldfj;IIF)V renderFg
	a (Lbhz;ILbly;)V slotChanged
	<clinit> ()V <clinit>
dpp net/minecraft/client/gui/screens/inventory/BeaconScreen
	A BEACON_LOCATION
	B PRIMARY_EFFECT_LABEL
	C SECONDARY_EFFECT_LABEL
	D confirmButton
	E initPowerButtons
	F primary
	G secondary
	<init> (Lbic;Lbfs;Lnr;)V <init>
	b ()V init
	d ()V tick
	b (Ldfj;II)V renderLabels
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldpp;Lapp;)Lapp; access$002
	b (Ldpp;Lapp;)Lapp; access$102
	a (Ldpp;Z)Z access$202
	k ()Lvk; access$300
	a (Ldpp;)Ljava/util/List; access$400
	b (Ldpp;)Ljava/util/List; access$500
	c (Ldpp;)Lapp; access$000
	d (Ldpp;)Lapp; access$100
	e (Ldpp;)Ldjw; access$600
	f (Ldpp;)Ldjw; access$700
	g (Ldpp;)Ldjw; access$800
	h (Ldpp;)Ldjw; access$900
	i (Ldpp;)Ldjw; access$1000
	j (Ldpp;)Ldjw; access$1100
	k (Ldpp;)Ldjw; access$1200
	<clinit> ()V <clinit>
dpp$1 net/minecraft/client/gui/screens/inventory/BeaconScreen$1
	a val$menu
	b this$0
	<init> (Ldpp;Lbic;)V <init>
	a (Lbhz;Lgj;)V refreshContainer
	a (Lbhz;ILbly;)V slotChanged
	a (Lbhz;II)V setContainerData
dpp$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
	a this$0
	<init> (Ldpp;II)V <init>
	b ()V onPress
	a (Ldfj;II)V renderToolTip
dpp$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
	a this$0
	<init> (Ldpp;II)V <init>
	b ()V onPress
	a (Ldfj;II)V renderToolTip
dpp$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	b effect
	c sprite
	d isPrimary
	e tooltip
	a this$0
	<init> (Ldpp;IILapp;Z)V <init>
	a (Lapp;Z)Lnr; createTooltip
	b ()V onPress
	a (Ldfj;II)V renderToolTip
	a (Ldfj;)V renderIcon
dpp$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	<init> (II)V <init>
	b (Ldfj;IIF)V renderButton
	a (Ldfj;)V renderIcon
	a ()Z isSelected
	e (Z)V setSelected
dpp$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a iconX
	b iconY
	<init> (IIII)V <init>
	a (Ldfj;)V renderIcon
dpq net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	B TEXTURE
	<init> (Lbid;Lbfs;Lnr;)V <init>
	<clinit> ()V <clinit>
dpr net/minecraft/client/gui/screens/inventory/BookEditScreen
	a EDIT_TITLE_LABEL
	b FINALIZE_WARNING_LABEL
	c BLACK_CURSOR
	p GRAY_CURSOR
	q owner
	r book
	s isModified
	t isSigning
	u frameTick
	v currentPage
	w pages
	x title
	y pageEdit
	z titleEdit
	A lastClickTime
	B lastIndex
	C forwardButton
	D backButton
	E doneButton
	F signButton
	G finalizeButton
	H cancelButton
	I hand
	J displayCache
	K pageMsg
	L ownerText
	<init> (Lbft;Lbly;Laoq;)V <init>
	b (Ljava/lang/String;)V setClipboard
	i ()Ljava/lang/String; getClipboard
	k ()I getNumPages
	d ()V tick
	b ()V init
	l ()V pageBack
	m ()V pageForward
	e ()V removed
	n ()V updateButtonVisibility
	o ()V eraseEmptyTrailingPages
	c (Z)V saveChanges
	p ()V appendPageToBook
	a (III)Z keyPressed
	a (CI)Z charTyped
	c (III)Z bookKeyPressed
	r ()V keyUp
	s ()V keyDown
	a (I)V changeLine
	t ()V keyHome
	u ()V keyEnd
	d (III)Z titleKeyPressed
	A ()Ljava/lang/String; getCurrentPageText
	c (Ljava/lang/String;)V setCurrentPageText
	a (Ldfj;IIF)V render
	a (Ldfj;Ldpr$c;Z)V renderCursor
	a ([Lead;)V renderHighlight
	a (Ldpr$c;)Ldpr$c; convertScreenToLocal
	b (Ldpr$c;)Ldpr$c; convertLocalToScreen
	a (DDI)Z mouseClicked
	b (I)V selectWord
	a (DDIDD)Z mouseDragged
	B ()Ldpr$a; getDisplayCache
	C ()V clearDisplayCache
	D ()V clearDisplayCacheAfterPageChange
	E ()Ldpr$a; rebuildDisplayCache
	b ([II)I findLineFromPos
	a (Ljava/lang/String;Ldkg;IIII)Lead; createPartialLineSelection
	a (Ldpr$c;Ldpr$c;)Lead; createSelection
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lit/unimi/dsi/fastutil/ints/IntList;Ljava/util/List;Lob;II)V lambda$rebuildDisplayCache$10
	a (Ldlg;)V lambda$init$9
	b (Ldlg;)V lambda$init$8
	c (Ldlg;)V lambda$init$7
	d (Ldlg;)V lambda$init$6
	e (Ldlg;)V lambda$init$5
	f (Ldlg;)V lambda$init$4
	d (Ljava/lang/String;)Z lambda$new$3
	e (Ljava/lang/String;)V lambda$new$2
	F ()Ljava/lang/String; lambda$new$1
	f (Ljava/lang/String;)Z lambda$new$0
	a ([II)I access$1000
	<clinit> ()V <clinit>
dpr$a net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache
	a EMPTY
	b fullText
	c cursor
	d cursorAtEnd
	e lineStarts
	f lines
	g selection
	<init> (Ljava/lang/String;Ldpr$c;Z[I[Ldpr$b;[Lead;)V <init>
	a (Ldkr;Ldpr$c;)I getIndexAtPosition
	a (II)I changeLine
	a (I)I findLineStart
	b (I)I findLineEnd
	a ()Ldpr$a; access$000
	a (Ldpr$a;)[Ldpr$b; access$100
	b (Ldpr$a;)[Lead; access$500
	c (Ldpr$a;)Ldpr$c; access$600
	d (Ldpr$a;)Z access$700
	<clinit> ()V <clinit>
dpr$b net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo
	a style
	b contents
	c asComponent
	d x
	e y
	<init> (Lob;Ljava/lang/String;II)V <init>
	a (Ldpr$b;)Lnr; access$200
	b (Ldpr$b;)I access$300
	c (Ldpr$b;)I access$400
	d (Ldpr$b;)Ljava/lang/String; access$800
	e (Ldpr$b;)Lob; access$900
dpr$c net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	a x
	b y
	<init> (II)V <init>
dps net/minecraft/client/gui/screens/inventory/BookViewScreen
	a EMPTY_ACCESS
	b BOOK_LOCATION
	c bookAccess
	p currentPage
	q cachedPageComponents
	r cachedPage
	s pageMsg
	t forwardButton
	u backButton
	v playTurnSound
	<init> (Ldps$a;)V <init>
	<init> ()V <init>
	<init> (Ldps$a;Z)V <init>
	a (Ldps$a;)V setBookAccess
	a (I)Z setPage
	b (I)Z forcePage
	b ()V init
	k ()V createMenuControls
	l ()V createPageControlButtons
	i ()I getNumPages
	m ()V pageBack
	n ()V pageForward
	o ()V updateButtonVisibility
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (DDI)Z mouseClicked
	a (Lob;)Z handleComponentClicked
	a (DD)Lob; getClickedComponentStyleAt
	a (Lmd;)Ljava/util/List; convertPages
	a (Ldlg;)V lambda$createPageControlButtons$2
	b (Ldlg;)V lambda$createPageControlButtons$1
	c (Ldlg;)V lambda$createMenuControls$0
	<clinit> ()V <clinit>
dps$1 net/minecraft/client/gui/screens/inventory/BookViewScreen$1
	<init> ()V <init>
	a ()I getPageCount
	a (I)Lnu; getPageRaw
dps$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lnu; getPageRaw
	b (I)Lnu; getPage
	a (Lbly;)Ldps$a; fromItem
dps$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	<init> (Lbly;)V <init>
	b (Lbly;)Ljava/util/List; readPages
	a ()I getPageCount
	a (I)Lnu; getPageRaw
dps$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	<init> (Lbly;)V <init>
	b (Lbly;)Ljava/util/List; readPages
	a ()I getPageCount
	a (I)Lnu; getPageRaw
dpt net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	A BREWING_STAND_LOCATION
	B BUBBLELENGTHS
	<init> (Lbie;Lbfs;Lnr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	<clinit> ()V <clinit>
dpu net/minecraft/client/gui/screens/inventory/CartographyTableScreen
	A BG_LOCATION
	<init> (Lbif;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	a (Ldfj;Lcxu;ZZZZ)V renderResultingMap
	a (Lcxu;IIF)V renderMap
	<clinit> ()V <clinit>
dpv net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	s autoCommandBlock
	t modeButton
	u conditionalButton
	v autoexecButton
	w mode
	x conditional
	y autoexec
	<init> (Lccl;)V <init>
	i ()Lbqv; getCommandBlock
	k ()I getPreviousY
	b ()V init
	n ()V updateGui
	a (Ldjw;II)V resize
	a (Lbqv;)V populateAndSendPacket
	o ()V updateMode
	p ()V nextMode
	r ()V updateConditional
	s ()V updateAutoexec
	a (Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dpv$1 net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	<clinit> ()V <clinit>
dpw net/minecraft/client/gui/screens/inventory/ContainerScreen
	A CONTAINER_BACKGROUND
	B containerRows
	<init> (Lbig;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	<clinit> ()V <clinit>
dpx net/minecraft/client/gui/screens/inventory/CraftingScreen
	A CRAFTING_TABLE_LOCATION
	B RECIPE_BUTTON_LOCATION
	C recipeBookComponent
	D widthTooNarrow
	<init> (Lbim;Lbfs;Lnr;)V <init>
	b ()V init
	d ()V tick
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	a (IIIIDD)Z isHovering
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (Lbjo;IILbih;)V slotClicked
	az_ ()V recipesUpdated
	e ()V removed
	l ()Ldrm; getRecipeBookComponent
	a (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dpy net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	<init> (Ldjw;)V <init>
	a (Lbhz;Lgj;)V refreshContainer
	a (Lbhz;ILbly;)V slotChanged
	a (Lbhz;II)V setContainerData
dpz net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	B CREATIVE_TABS_LOCATION
	C CONTAINER
	D TRASH_SLOT_TOOLTIP
	E selectedTab
	F scrollOffs
	G scrolling
	H searchBox
	I originalSlots
	J destroyItemSlot
	K listener
	L ignoreTextInput
	M hasClickedOutside
	N visibleTags
	<init> (Lbft;)V <init>
	d ()V tick
	a (Lbjo;IILbih;)V slotClicked
	a (Lbjo;)Z isCreativeSlot
	k ()V checkEffectRendering
	b ()V init
	a (Ldjw;II)V resize
	e ()V removed
	a (CI)Z charTyped
	a (III)Z keyPressed
	b (III)Z keyReleased
	n ()V refreshSearchResults
	b (Ljava/lang/String;)V updateVisibleTags
	b (Ldfj;II)V renderLabels
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	o ()Z canScroll
	a (Lbkp;)V selectTab
	a (DDD)Z mouseScrolled
	a (DDIII)Z hasClickedOutside
	a (DD)Z insideScrollbar
	a (DDIDD)Z mouseDragged
	a (Ldfj;IIF)V render
	a (Ldfj;Lbly;II)V renderTooltip
	a (Ldfj;FII)V renderBg
	a (Lbkp;DD)Z checkTabClicked
	a (Ldfj;Lbkp;II)Z checkTabHovering
	a (Ldfj;Lbkp;)V renderTabButton
	l ()I getSelectedTab
	a (Ldjw;IZZ)V handleHotbarLoadOrSave
	a (Lblu;Ljava/util/List;Lvk;Laej;)V lambda$renderTooltip$3
	a (Laek;Lvk;)V lambda$updateVisibleTags$2
	a (Ljava/lang/String;Ljava/lang/String;Lvk;)Z lambda$updateVisibleTags$1
	a (Ljava/lang/String;Lvk;)Z lambda$updateVisibleTags$0
	m ()Laox; access$000
	<clinit> ()V <clinit>
dpz$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	<init> (Laok;III)V <init>
	a (Lbft;)Z mayPickup
dpz$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	c items
	<init> (Lbft;)V <init>
	a (Lbft;)Z stillValid
	a (F)V scrollTo
	e ()Z canScroll
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	b (Lbjo;)Z canDragTo
dpz$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a target
	<init> (Lbjo;III)V <init>
	a (Lbjo;)V swap
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbly;)Z mayPlace
	e ()Lbly; getItem
	f ()Z hasItem
	d (Lbly;)V set
	d ()V setChanged
	a ()I getMaxStackSize
	b (Lbly;)I getMaxStackSize
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	a (I)Lbly; remove
	a (Laok;I)Z isAt
	b ()Z isActive
	a (Lbft;)Z mayPickup
	a (Ldpz$c;)Lbjo; access$100
dqa net/minecraft/client/gui/screens/inventory/DispenserScreen
	A CONTAINER_LOCATION
	<init> (Lbio;Lbfs;Lnr;)V <init>
	b ()V init
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	<clinit> ()V <clinit>
dqb net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	A doRenderEffects
	<init> (Lbhz;Lbfs;Lnr;)V <init>
	b ()V init
	k ()V checkEffectRendering
	a (Ldfj;IIF)V render
	b (Ldfj;)V renderEffects
	a (Ldfj;IILjava/lang/Iterable;)V renderBackgrounds
	b (Ldfj;IILjava/lang/Iterable;)V renderIcons
	c (Ldfj;IILjava/lang/Iterable;)V renderLabels
dqc net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a ALT_FONT
	b ROOT_STYLE
	c INSTANCE
	d random
	e words
	<init> ()V <init>
	a ()Ldqc; getInstance
	a (Ldkr;I)Lnu; getRandomName
	a (J)V initSeed
	<clinit> ()V <clinit>
dqd net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	H ENCHANTING_TABLE_LOCATION
	I ENCHANTING_BOOK_LOCATION
	J BOOK_MODEL
	K random
	A time
	B flip
	C oFlip
	D flipT
	E flipA
	F open
	G oOpen
	L last
	<init> (Lbip;Lbfs;Lnr;)V <init>
	d ()V tick
	a (DDI)Z mouseClicked
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	k ()V tickBook
	<clinit> ()V <clinit>
dqe net/minecraft/client/gui/screens/inventory/FurnaceScreen
	B TEXTURE
	<init> (Lbir;Lbfs;Lnr;)V <init>
	<clinit> ()V <clinit>
dqf net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	A GRINDSTONE_LOCATION
	<init> (Lbit;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	<clinit> ()V <clinit>
dqg net/minecraft/client/gui/screens/inventory/HopperScreen
	A HOPPER_LOCATION
	<init> (Lbiu;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	<clinit> ()V <clinit>
dqh net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	A HORSE_INVENTORY_LOCATION
	B horse
	C xMouse
	D yMouse
	<init> (Lbiv;Lbfs;Lbay;)V <init>
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	<clinit> ()V <clinit>
dqi net/minecraft/client/gui/screens/inventory/InventoryScreen
	B RECIPE_BUTTON_LOCATION
	C xMouse
	D yMouse
	E recipeBookComponent
	F recipeBookComponentInitialized
	G widthTooNarrow
	H buttonClicked
	<init> (Lbft;)V <init>
	d ()V tick
	b ()V init
	b (Ldfj;II)V renderLabels
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	a (IIIFFLaqj;)V renderEntityInInventory
	a (IIIIDD)Z isHovering
	a (DDI)Z mouseClicked
	c (DDI)Z mouseReleased
	a (DDIII)Z hasClickedOutside
	a (Lbjo;IILbih;)V slotClicked
	az_ ()V recipesUpdated
	e ()V removed
	l ()Ldrm; getRecipeBookComponent
	a (Leel;Laqj;Ldfj;Ldzy$a;)V lambda$renderEntityInInventory$1
	a (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dqj net/minecraft/client/gui/screens/inventory/ItemCombinerScreen
	A menuResource
	<init> (Lbix;Lbfs;Lnr;Lvk;)V <init>
	k ()V subInit
	b ()V init
	e ()V removed
	a (Ldfj;IIF)V render
	b (Ldfj;IIF)V renderFg
	a (Ldfj;FII)V renderBg
	a (Lbhz;Lgj;)V refreshContainer
	a (Lbhz;II)V setContainerData
	a (Lbhz;ILbly;)V slotChanged
dqk net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	a JOINT_LABEL
	b POOL_LABEL
	c NAME_LABEL
	p TARGET_LABEL
	q FINAL_STATE_LABEL
	r jigsawEntity
	s nameEdit
	t targetEdit
	u poolEdit
	v finalStateEdit
	w levels
	x keepJigsaws
	y jointButton
	z doneButton
	A joint
	<init> (Lccw;)V <init>
	d ()V tick
	i ()V onDone
	k ()V onCancel
	l ()V sendToServer
	m ()V sendGenerate
	au_ ()V onClose
	b ()V init
	n ()V updateValidity
	a (Ldjw;II)V resize
	o ()Lnr; getJointText
	e ()V removed
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$7
	b (Ldlg;)V lambda$init$6
	c (Ldlg;)V lambda$init$5
	d (Ldlg;)V lambda$init$4
	e (Ldlg;)V lambda$init$3
	b (Ljava/lang/String;)V lambda$init$2
	c (Ljava/lang/String;)V lambda$init$1
	d (Ljava/lang/String;)V lambda$init$0
	a (Ldqk;)I access$000
	a (Ldqk;I)I access$002
	b (Ldqk;)Z access$100
	<clinit> ()V <clinit>
dqk$1 net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen$1
	a this$0
	<init> (Ldqk;IIIILnr;D)V <init>
	b ()V updateMessage
	a ()V applyValue
dqk$2 net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen$2
	a this$0
	<init> (Ldqk;IIIILnr;Ldlg$a;)V <init>
	i ()Lnr; getMessage
dql net/minecraft/client/gui/screens/inventory/LecternScreen
	c menu
	p listener
	<init> (Lbiy;Lbfs;Lnr;)V <init>
	o ()Lbiy; getMenu
	b ()V init
	au_ ()V onClose
	e ()V removed
	k ()V createMenuControls
	m ()V pageBack
	n ()V pageForward
	b (I)Z forcePage
	c (I)V sendButtonClick
	ay_ ()Z isPauseScreen
	p ()V bookChanged
	r ()V pageChanged
	i ()Lbhz; getMenu
	a (Ldlg;)V lambda$createMenuControls$1
	b (Ldlg;)V lambda$createMenuControls$0
	a (Ldql;)V access$000
	b (Ldql;)V access$100
dql$1 net/minecraft/client/gui/screens/inventory/LecternScreen$1
	a this$0
	<init> (Ldql;)V <init>
	a (Lbhz;Lgj;)V refreshContainer
	a (Lbhz;ILbly;)V slotChanged
	a (Lbhz;II)V setContainerData
dqm net/minecraft/client/gui/screens/inventory/LoomScreen
	A BG_LOCATION
	B TOTAL_PATTERN_ROWS
	C flag
	D resultBannerPatterns
	E bannerStack
	F dyeStack
	G patternStack
	H displayPatterns
	I displaySpecialPattern
	J hasMaxPatterns
	K scrollOffs
	L scrolling
	M startIndex
	<init> (Lbiz;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	c (III)V renderPattern
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (DDIII)Z hasClickedOutside
	k ()V containerChanged
	<clinit> ()V <clinit>
dqn net/minecraft/client/gui/screens/inventory/MenuAccess
	i ()Lbhz; getMenu
dqo net/minecraft/client/gui/screens/inventory/MerchantScreen
	A VILLAGER_LOCATION
	B TRADES_LABEL
	C LEVEL_SEPARATOR
	D DEPRECATED_TOOLTIP
	E shopItem
	F tradeOfferButtons
	G scrollOff
	H isDragging
	<init> (Lbjd;Lbfs;Lnr;)V <init>
	k ()V postButtonClick
	b ()V init
	b (Ldfj;II)V renderLabels
	a (Ldfj;FII)V renderBg
	a (Ldfj;IILbqs;)V renderProgressBar
	a (Ldfj;IILbqt;)V renderScroller
	a (Ldfj;IIF)V render
	a (Ldfj;Lbqs;II)V renderButtonArrows
	a (Ldfj;Lbly;Lbly;II)V renderAndDecorateCostA
	a (I)Z canScroll
	a (DDD)Z mouseScrolled
	a (DDIDD)Z mouseDragged
	a (DDI)Z mouseClicked
	a (Ldlg;)V lambda$init$0
	a (Ldqo;)I access$000
	a (Ldqo;Ldfj;Lbly;II)V access$100
	b (Ldqo;Ldfj;Lbly;II)V access$200
	c (Ldqo;Ldfj;Lbly;II)V access$300
	<clinit> ()V <clinit>
dqo$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	b this$0
	<init> (Ldqo;IIILdlg$a;)V <init>
	a ()I getIndex
	a (Ldfj;II)V renderToolTip
dqp net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	s commandBlock
	<init> (Lbqv;)V <init>
	i ()Lbqv; getCommandBlock
	k ()I getPreviousY
	b ()V init
	a (Lbqv;)V populateAndSendPacket
dqq net/minecraft/client/gui/screens/inventory/PageButton
	a isForward
	b playTurnSound
	<init> (IIZLdlg$a;Z)V <init>
	b (Ldfj;IIF)V renderButton
	a (Lenm;)V playDownSound
dqr net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	A CONTAINER_TEXTURE
	<init> (Lbjl;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	<clinit> ()V <clinit>
dqs net/minecraft/client/gui/screens/inventory/SignEditScreen
	a signModel
	b sign
	c frame
	p line
	q signField
	r messages
	<init> (Lcdc;)V <init>
	b ()V init
	e ()V removed
	d ()V tick
	i ()V onDone
	a (CI)Z charTyped
	au_ ()V onClose
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	b (Ljava/lang/String;)Z lambda$init$4
	c (Ljava/lang/String;)V lambda$init$3
	k ()Ljava/lang/String; lambda$init$2
	a (Ldlg;)V lambda$init$1
	a (I)[Ljava/lang/String; lambda$new$0
dqt net/minecraft/client/gui/screens/inventory/SmithingScreen
	A SMITHING_LOCATION
	<init> (Lbjp;Lbfs;Lnr;)V <init>
	b (Ldfj;II)V renderLabels
	<clinit> ()V <clinit>
dqu net/minecraft/client/gui/screens/inventory/SmokerScreen
	B TEXTURE
	<init> (Lbjq;Lbfs;Lnr;)V <init>
	<clinit> ()V <clinit>
dqv net/minecraft/client/gui/screens/inventory/StonecutterScreen
	A BG_LOCATION
	B scrollOffs
	C scrolling
	D startIndex
	E displayRecipes
	<init> (Lbjs;Lbfs;Lnr;)V <init>
	a (Ldfj;IIF)V render
	a (Ldfj;FII)V renderBg
	a (Ldfj;II)V renderTooltip
	b (Ldfj;IIIII)V renderButtons
	c (III)V renderRecipes
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	l ()Z isScrollBarActive
	k ()I getOffscreenRows
	m ()V containerChanged
	<clinit> ()V <clinit>
dqw net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	a NAME_LABEL
	b POSITION_LABEL
	c SIZE_LABEL
	p INTEGRITY_LABEL
	q CUSTOM_DATA_LABEL
	r INCLUDE_ENTITIES_LABEL
	s DETECT_SIZE_LABEL
	t SHOW_AIR_LABEL
	u SHOW_BOUNDING_BOX_LABEL
	v structure
	w initialMirror
	x initialRotation
	y initialMode
	z initialEntityIgnoring
	A initialShowAir
	B initialShowBoundingBox
	C nameEdit
	D posXEdit
	E posYEdit
	F posZEdit
	G sizeXEdit
	H sizeYEdit
	I sizeZEdit
	J integrityEdit
	K seedEdit
	L dataEdit
	M doneButton
	N cancelButton
	O saveButton
	P loadButton
	Q rot0Button
	R rot90Button
	S rot180Button
	T rot270Button
	U modeButton
	V detectButton
	W entitiesButton
	X mirrorButton
	Y toggleAirButton
	Z toggleBoundingBox
	aa decimalFormat
	<init> (Lcdg;)V <init>
	d ()V tick
	i ()V onDone
	k ()V onCancel
	b ()V init
	a (Ldjw;II)V resize
	e ()V removed
	l ()V updateEntitiesButton
	m ()V updateToggleAirButton
	n ()V updateToggleBoundingBox
	o ()V updateMirrorButton
	p ()V updateDirectionButtons
	r ()V updateMode
	a (Lcdg$a;)Z sendToServer
	b (Ljava/lang/String;)J parseSeed
	c (Ljava/lang/String;)F parseIntegrity
	d (Ljava/lang/String;)I parseCoordinate
	au_ ()V onClose
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	ay_ ()Z isPauseScreen
	a (Ldlg;)V lambda$init$13
	b (Ldlg;)V lambda$init$12
	c (Ldlg;)V lambda$init$11
	d (Ldlg;)V lambda$init$10
	e (Ldlg;)V lambda$init$9
	f (Ldlg;)V lambda$init$8
	g (Ldlg;)V lambda$init$7
	h (Ldlg;)V lambda$init$6
	i (Ldlg;)V lambda$init$5
	j (Ldlg;)V lambda$init$4
	k (Ldlg;)V lambda$init$3
	l (Ldlg;)V lambda$init$2
	m (Ldlg;)V lambda$init$1
	n (Ldlg;)V lambda$init$0
	a (Ldqw;Ljava/lang/String;CI)Z access$000
	<clinit> ()V <clinit>
dqw$1 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$1
	a this$0
	<init> (Ldqw;Ldkr;IIIILnr;)V <init>
	a (CI)Z charTyped
dqw$2 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$2
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
	<clinit> ()V <clinit>
dqx net/minecraft/client/gui/screens/inventory/package-info
dqy net/minecraft/client/gui/screens/mco/package-info
dqz net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	b LOGGER
	c pinger
	p lastScreen
	a serverSelectionList
	q servers
	r editButton
	s selectButton
	t deleteButton
	u toolTip
	v editingServer
	w lanServerList
	x lanServerDetector
	y initedOnce
	<init> (Ldoq;)V <init>
	b ()V init
	d ()V tick
	e ()V removed
	n ()V refreshServerList
	c (Z)V deleteCallback
	d (Z)V editServerCallback
	e (Z)V addServerCallback
	f (Z)V directJoinCallback
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	i ()V joinSelectedServer
	a (Ldwr;)V join
	a (Ldrb$a;)V setSelected
	k ()V onSelectedChange
	l ()Ldwt; getPinger
	b (Ljava/util/List;)V setToolTip
	m ()Ldws; getServers
	a (Ldlg;)V lambda$init$6
	b (Ldlg;)V lambda$init$5
	c (Ldlg;)V lambda$init$4
	d (Ldlg;)V lambda$init$3
	e (Ldlg;)V lambda$init$2
	f (Ldlg;)V lambda$init$1
	g (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dra net/minecraft/client/gui/screens/multiplayer/SafetyScreen
	a previous
	b TITLE
	c CONTENT
	p CHECK
	q NARRATION
	r stopShowing
	s message
	<init> (Ldoq;)V <init>
	b ()V init
	as_ ()Ljava/lang/String; getNarrationMessage
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
drb net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	a LOGGER
	o THREAD_POOL
	p ICON_MISSING
	q ICON_OVERLAY_LOCATION
	r SCANNING_LABEL
	s CANT_RESOLVE_TEXT
	t CANT_CONNECT_TEXT
	u CLIENT_OUT_OF_DATE_TOOLTIP
	v SERVER_OUT_OF_DATE_TOOLTIP
	w NO_CONNECTION_TOOLTIP
	x PINGING_TOOLTIP
	y screen
	z onlineServers
	A lanHeader
	B networkServers
	<init> (Ldqz;Ldjw;IIIII)V <init>
	B ()V refreshEntries
	a (Ldrb$a;)V setSelected
	a (III)Z keyPressed
	a (Ldlc$b;)V moveSelection
	a (Ldws;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	e ()I getScrollbarPosition
	d ()I getRowWidth
	b ()Z isFocused
	a (Ldlc$a;)V setSelected
	b (Ldrb$a;)Z lambda$moveSelection$0
	f ()Lnr; access$100
	g ()Ljava/util/concurrent/ThreadPoolExecutor; access$200
	r ()Lnr; access$300
	s ()Lnr; access$400
	t ()Lnr; access$500
	u ()Lnr; access$600
	w ()Lvk; access$700
	x ()Lvk; access$800
	y ()Lorg/apache/logging/log4j/Logger; access$900
	a (Ldrb;Ldlc$a;)V access$1000
	a (Ldrb;)I access$1100
	a (Ldrb;I)I access$1200
	z ()Lnr; access$1300
	A ()Lnr; access$1400
	<clinit> ()V <clinit>
drb$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
	<init> ()V <init>
drb$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
	<init> ()V <init>
	a (Ldfj;IIIIIIIZF)V render
drb$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	c LAN_SERVER_HEADER
	d HIDDEN_ADDRESS_TEXT
	e screen
	a minecraft
	b serverData
	f lastClickTime
	<init> (Ldqz;Lemz;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a ()Lemz; getServerData
	<clinit> ()V <clinit>
drb$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	b screen
	c minecraft
	d serverData
	e iconLocation
	f lastIconB64
	g icon
	h lastClickTime
	a this$0
	<init> (Ldrb;Ldqz;Ldwr;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a ()V updateServerList
	a (Ldfj;IILvk;)V drawIcon
	c ()Z canJoin
	a (Ljava/lang/String;)Z uploadServerIcon
	a (III)Z keyPressed
	a (II)V swap
	a (DDI)Z mouseClicked
	b ()Ldwr; getServerData
	d ()V lambda$render$1
	e ()V lambda$null$0
	a (Ldrb$d;)Ldwr; access$000
drc net/minecraft/client/gui/screens/multiplayer/package-info
drd net/minecraft/client/gui/screens/package-info
dre net/minecraft/client/gui/screens/packs/PackSelectionModel
	a repository
	b selected
	c unselected
	d iconGetter
	e onListChanged
	f output
	<init> (Ljava/lang/Runnable;Ljava/util/function/Function;Labu;Ljava/util/function/Consumer;)V <init>
	a ()Ljava/util/stream/Stream; getUnselected
	b ()Ljava/util/stream/Stream; getSelected
	c ()V commit
	d ()V findNewPacks
	a (Labs;)Ldre$a; lambda$getSelected$1
	b (Labs;)Ldre$a; lambda$getUnselected$0
	a (Ldre;)Ljava/util/function/Function; access$000
	b (Ldre;)Ljava/lang/Runnable; access$100
	c (Ldre;)Ljava/util/List; access$200
	d (Ldre;)Ljava/util/List; access$300
dre$a net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry
	a ()Lvk; getIconTexture
	b ()Labt; getCompatibility
	c ()Lnr; getTitle
	d ()Lnr; getDescription
	e ()Labv; getPackSource
	f ()Lnr; getExtendedDescription
	g ()Z isFixedPosition
	h ()Z isRequired
	i ()V select
	j ()V unselect
	k ()V moveUp
	l ()V moveDown
	m ()Z isSelected
	n ()Z canSelect
	o ()Z canUnselect
	p ()Z canMoveUp
	q ()Z canMoveDown
dre$b net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase
	b pack
	a this$0
	<init> (Ldre;Labs;)V <init>
	r ()Ljava/util/List; getSelfList
	s ()Ljava/util/List; getOtherList
	a ()Lvk; getIconTexture
	b ()Labt; getCompatibility
	c ()Lnr; getTitle
	d ()Lnr; getDescription
	e ()Labv; getPackSource
	g ()Z isFixedPosition
	h ()Z isRequired
	t ()V toggleSelection
	a (I)V move
	p ()Z canMoveUp
	k ()V moveUp
	q ()Z canMoveDown
	l ()V moveDown
dre$c net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry
	b this$0
	<init> (Ldre;Labs;)V <init>
	r ()Ljava/util/List; getSelfList
	s ()Ljava/util/List; getOtherList
	m ()Z isSelected
	i ()V select
	j ()V unselect
dre$d net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry
	b this$0
	<init> (Ldre;Labs;)V <init>
	r ()Ljava/util/List; getSelfList
	s ()Ljava/util/List; getOtherList
	m ()Z isSelected
	i ()V select
	j ()V unselect
drf net/minecraft/client/gui/screens/packs/PackSelectionScreen
	a LOGGER
	b DRAG_AND_DROP
	c DIRECTORY_BUTTON_TOOLTIP
	p DEFAULT_ICON
	q model
	r lastScreen
	s watcher
	t ticksToReload
	u availablePackList
	v selectedPackList
	w packDir
	x doneButton
	y packIcons
	<init> (Ldoq;Labu;Ljava/util/function/Consumer;Ljava/io/File;Lnr;)V <init>
	au_ ()V onClose
	k ()V closeWatcher
	b ()V init
	d ()V tick
	l ()V populateLists
	a (Ldrg;Ljava/util/stream/Stream;)V updateList
	m ()V reload
	a (Ldfj;IIF)V render
	a (Ldjw;Ljava/util/List;Ljava/nio/file/Path;)V copyPacks
	a (Ljava/util/List;)V onFilesDrop
	a (Lejv;Labs;)Lvk; loadPackIcon
	a (Labs;)Lvk; getPackIcon
	a (Labs;Ljava/lang/String;)Lvk; lambda$getPackIcon$7
	a (Ljava/util/List;Z)V lambda$onFilesDrop$6
	a (Ljava/nio/file/Path;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/nio/file/Path;)V lambda$copyPacks$5
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/nio/file/Path;)V lambda$null$4
	a (Ldrg;Ldre$a;)V lambda$updateList$3
	a (Ldlg;Ldfj;II)V lambda$init$2
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	i ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
drf$a net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher
	a watcher
	b packPath
	<init> (Ljava/io/File;)V <init>
	a (Ljava/io/File;)Ldrf$a; create
	a (Ljava/nio/file/Path;)V watchDir
	a ()Z pollForChanges
	close ()V close
drg net/minecraft/client/gui/screens/packs/TransferableSelectionList
	a ICON_OVERLAY_LOCATION
	o INCOMPATIBLE_TITLE
	p INCOMPATIBLE_CONFIRM_TITLE
	q title
	<init> (Ldjw;IILnr;)V <init>
	a (Ldfj;IILdfl;)V renderHeader
	d ()I getRowWidth
	e ()I getScrollbarPosition
	f ()Lnr; access$000
	g ()Lvk; access$100
	a (Ldrg;)I access$200
	a (Ldrg;I)I access$300
	r ()Lnr; access$400
	<clinit> ()V <clinit>
drg$a net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry
	c parent
	a minecraft
	b screen
	d pack
	e nameDisplayCache
	f descriptionDisplayCache
	g incompatibleNameDisplayCache
	h incompatibleDescriptionDisplayCache
	<init> (Ldjw;Ldrg;Ldoq;Ldre$a;)V <init>
	a (Ldjw;Lnr;)Laex; cacheName
	b (Ldjw;Lnr;)Ldlr; cacheDescription
	a (Ldfj;IIIIIIIZF)V render
	a ()Z showHoverOverlay
	a (DDI)Z mouseClicked
	a (Z)V lambda$mouseClicked$0
drh net/minecraft/client/gui/screens/packs/package-info
dri net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	i iterator
	j fuels
	k fuelSlot
	l fuel
	m time
	<init> ()V <init>
	a ()V initFilterButtonTextures
	a (Lbjo;)V slotClicked
	a (Lbon;Ljava/util/List;)V setupGhostRecipe
	b ()Ljava/util/Set; getFuelItems
	a (Ldfj;IIZF)V renderGhostRecipe
	j ()Lblu; getFuel
drj net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	i FILTER_NAME
	<init> ()V <init>
	c ()Lnr; getRecipeFilterName
	b ()Ljava/util/Set; getFuelItems
	<clinit> ()V <clinit>
drk net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	<init> ()V <init>
	a ()V clear
	a (Lbok;II)V addIngredient
	a (I)Ldrk$a; get
	b ()I size
	c ()Lbon; getRecipe
	a (Lbon;)V setRecipe
	a (Ldfj;Ldjw;IIZF)V render
	a (Ldrk;)F access$000
drk$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	b ingredient
	c x
	d y
	a this$0
	<init> (Ldrk;Lbok;II)V <init>
	a ()I getX
	b ()I getY
	c ()Lbly; getItem
drl net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	a RECIPE_BOOK_LOCATION
	b recipeButtons
	c isVisible
	d x
	e y
	i minecraft
	j collection
	k lastRecipeClicked
	l time
	m isFurnaceMenu
	<init> ()V <init>
	a (Ldjw;Ldrq;IIIIF)V init
	c_ (Z)Z changeFocus
	a ()Ldrq; getRecipeCollection
	b ()Lbon; getLastRecipeClicked
	a (DDI)Z mouseClicked
	b (DD)Z isMouseOver
	a (Ldfj;IIF)V render
	c (Ldfj;IIIIII)V nineInchSprite
	a (Z)V setVisible
	c ()Z isVisible
	d ()Lvk; access$100
	a (Ldrl;)Ldjw; access$200
	b (Ldrl;)Z access$300
	c (Ldrl;)F access$400
	<clinit> ()V <clinit>
drl$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	c recipe
	d isCraftable
	a ingredientPos
	b this$0
	<init> (Ldrl;IILbon;Z)V <init>
	a (Lbon;)V calculateIngredientsPositions
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	b (Ldfj;IIF)V renderButton
	a (Ldrl$a;)Lbon; access$000
drl$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
	d this$1
	<init> (Ldrl$a;II[Lbly;)V <init>
drl$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	c this$0
	<init> (Ldrl;IILbon;Z)V <init>
	a (Lbon;)V calculateIngredientsPositions
drm net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	a RECIPE_BOOK_LOCATION
	i SEARCH_HINT
	j ONLY_CRAFTABLES_TOOLTIP
	k ALL_RECIPES_TOOLTIP
	l xOffset
	m width
	n height
	b ghostRecipe
	o tabButtons
	p selectedTab
	c filterButton
	d menu
	e minecraft
	q searchBox
	r lastSearch
	s book
	t recipeBookPage
	u stackedContents
	v timesInventoryChanged
	w ignoreTextInput
	<init> ()V <init>
	a (IILdjw;ZLbjg;)V init
	a (Z)V initVisuals
	c_ (Z)Z changeFocus
	a ()V initFilterButtonTextures
	d ()V removed
	a (ZII)I updateScreenPosition
	e ()V toggleVisibility
	f ()Z isVisible
	c (Z)V setVisible
	a (Lbjo;)V slotClicked
	d (Z)V updateCollections
	b ()V updateTabs
	g ()V tick
	j ()V updateStackedContents
	a (Ldfj;IIF)V render
	c (Ldfj;IIII)V renderTooltip
	k ()Lnr; getFilterButtonTooltip
	c ()Lnr; getRecipeFilterName
	d (Ldfj;IIII)V renderGhostRecipeTooltip
	a (Ldfj;IIZF)V renderGhostRecipe
	a (DDI)Z mouseClicked
	l ()Z toggleFiltering
	a (DDIIIII)Z hasClickedOutside
	a (III)Z keyPressed
	b (III)Z keyReleased
	a (CI)Z charTyped
	b (DD)Z isMouseOver
	m ()V checkSearchStringUpdate
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	n ()Z isOffsetNextToMainGUI
	h ()V recipesUpdated
	a (Ljava/util/List;)V recipesShown
	a (Lbon;Ljava/util/List;)V setupGhostRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	i ()V sendUpdateSettings
	a (Ldrq;)Z lambda$updateCollections$5
	a (Lit/unimi/dsi/fastutil/objects/ObjectSet;Ldrq;)Z lambda$updateCollections$4
	b (Ldrq;)Z lambda$updateCollections$3
	c (Ldrq;)Z lambda$updateCollections$2
	d (Ldrq;)V lambda$updateCollections$1
	a (Ldro;)Z lambda$initVisuals$0
	<clinit> ()V <clinit>
drn net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a buttons
	b hoveredButton
	c overlay
	d minecraft
	e showListeners
	f recipeCollections
	g forwardButton
	h backButton
	i totalPages
	j currentPage
	k recipeBook
	l lastClickedRecipe
	m lastClickedRecipeCollection
	<init> ()V <init>
	a (Ldjw;II)V init
	a (Ldrm;)V addListener
	a (Ljava/util/List;Z)V updateCollections
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
	a (Ldfj;IIIIF)V render
	a (Ldfj;II)V renderTooltip
	a ()Lbon; getLastClickedRecipe
	b ()Ldrq; getLastClickedRecipeCollection
	c ()V setInvisible
	a (DDIIIII)Z mouseClicked
	a (Ljava/util/List;)V recipesShown
	d ()Ldjw; getMinecraft
	e ()Ladr; getRecipeBook
dro net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	t category
	u animationTime
	<init> (Ldkd;)V <init>
	a (Ldjw;)V startAnimation
	b (Ldfj;IIF)V renderButton
	a (Lefg;)V renderIcon
	b ()Ldkd; getCategory
	a (Ldjj;)Z updateVisibility
drp net/minecraft/client/gui/screens/recipebook/RecipeButton
	a RECIPE_BOOK_LOCATION
	b MORE_RECIPES_TOOLTIP
	c menu
	d book
	e collection
	s time
	t animationTime
	u currentIndex
	<init> ()V <init>
	a (Ldrq;Ldrn;)V init
	a ()Ldrq; getCollection
	a (II)V setPosition
	b (Ldfj;IIF)V renderButton
	k ()Ljava/util/List; getOrderedRecipes
	b ()Z isOnlyOption
	d ()Lbon; getRecipe
	a (Ldoq;)Ljava/util/List; getTooltipText
	h ()I getWidth
	a (I)Z isValidClickButton
	<clinit> ()V <clinit>
drq net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a recipes
	b singleResultItem
	c craftable
	d fitsDimensions
	e known
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)Z allRecipesHaveSameResult
	a ()Z hasKnownRecipes
	a (Ladr;)V updateKnownRecipes
	a (Lbfv;IILadr;)V canCraft
	a (Lbon;)Z isCraftable
	b ()Z hasCraftable
	c ()Z hasFitting
	d ()Ljava/util/List; getRecipes
	a (Z)Ljava/util/List; getRecipes
	b (Z)Ljava/util/List; getDisplayRecipes
	e ()Z hasSingleResultItem
drr net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
drs net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	az_ ()V recipesUpdated
	l ()Ldrm; getRecipeBookComponent
drt net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	i FILTER_NAME
	<init> ()V <init>
	c ()Lnr; getRecipeFilterName
	b ()Ljava/util/Set; getFuelItems
	<clinit> ()V <clinit>
dru net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	i FILTER_NAME
	<init> ()V <init>
	c ()Lnr; getRecipeFilterName
	b ()Ljava/util/Set; getFuelItems
	<clinit> ()V <clinit>
drv net/minecraft/client/gui/screens/recipebook/package-info
drw net/minecraft/client/gui/screens/stream/package-info
drx net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	p LOGGER
	q GAME_MODEL_LABEL
	r SEED_LABEL
	s SEED_INFO
	t NAME_LABEL
	u OUTPUT_DIR_INFO
	v COMMANDS_INFO
	w lastScreen
	x nameEdit
	y resultFolder
	z gameMode
	A oldGameMode
	B selectedDifficulty
	C effectiveDifficulty
	D commands
	E commandsChanged
	a hardCore
	b dataPacks
	F tempDataPackDir
	G tempDataPackRepository
	H displayOptions
	I createButton
	J modeButton
	K difficultyButton
	L moreOptionsButton
	M gameRulesButton
	N dataPacksButton
	O commandsButton
	P gameModeHelp1
	Q gameModeHelp2
	R initName
	S gameRules
	c worldGenSettingsComponent
	<init> (Ldoq;Lbrx;Lcht;Ljava/nio/file/Path;Lbrh;Lgn$b;)V <init>
	a (Ldoq;)Ldrx; create
	<init> (Ldoq;Lbrh;Ldsc;)V <init>
	d ()V tick
	b ()V init
	n ()V updateGameModeHelp
	o ()V updateResultFolder
	e ()V removed
	p ()V onCreate
	r ()V toggleDisplayOptions
	a (Ldrx$b;)V setGameMode
	i ()V updateDisplayOptions
	c (Z)V setDisplayOptions
	a (III)Z keyPressed
	au_ ()V onClose
	k ()V popScreen
	s ()V cleanupTempResources
	a (Ldfj;IIF)V render
	d (Ldmf;)Ldmf; addWidget
	a (Ldle;)Ldle; addButton
	l ()Ljava/nio/file/Path; getTempDataPackDir
	t ()V openDataPackSelectionScreen
	a (Labu;)V tryApplyNewDataPacks
	u ()V removeTempDataPackDir
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	A ()Z copyTempDataPackDirToNewWorld
	a (Ljava/nio/file/Path;Ldjw;)Ljava/nio/file/Path; createTempDataPackDirFromExistingWorld
	B ()Lcom/mojang/datafixers/util/Pair; getDataPackSelectionSettings
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$createTempDataPackDirFromExistingWorld$21
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z lambda$createTempDataPackDirFromExistingWorld$20
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$copyTempDataPackDirToNewWorld$19
	a (Ljava/nio/file/Path;)Z lambda$copyTempDataPackDirToNewWorld$18
	b (Ljava/nio/file/Path;)V lambda$removeTempDataPackDir$17
	a (Lbrh;Lvz;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$tryApplyNewDataPacks$16
	a (Lbrh;Lvz;)V lambda$null$15
	C ()V lambda$null$14
	d (Z)V lambda$null$13
	D ()V lambda$tryApplyNewDataPacks$12
	a (Ljava/util/List;Ljava/lang/String;)Z lambda$tryApplyNewDataPacks$11
	a (Ldlg;)V lambda$init$10
	b (Ldlg;)V lambda$init$9
	c (Ldlg;)V lambda$init$8
	d (Ldlg;)V lambda$init$7
	a (Ljava/util/Optional;)V lambda$null$6
	a (Lbrq;)V lambda$null$5
	e (Ldlg;)V lambda$init$4
	f (Ldlg;)V lambda$init$3
	g (Ldlg;)V lambda$init$2
	h (Ldlg;)V lambda$init$1
	b (Ljava/lang/String;)V lambda$init$0
	a (Ldrx;)Ljava/lang/String; access$000
	m ()Lnr; access$100
	b (Ldrx;)Ldrx$b; access$200
	c (Ldrx;)Lnr; access$400
	d (Ldrx;)Lnr; access$500
	e (Ldrx;)Laoo; access$600
	f (Ldrx;)Z access$700
	<clinit> ()V <clinit>
drx$1 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$1
	a this$0
	<init> (Ldrx;Ldkr;IIIILnr;)V <init>
	c ()Lnx; createNarrationMessage
drx$2 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$2
	a this$0
	<init> (Ldrx;IIIILnr;Ldlg$a;)V <init>
	i ()Lnr; getMessage
	c ()Lnx; createNarrationMessage
drx$3 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$3
	a this$0
	<init> (Ldrx;IIIILnr;Ldlg$a;)V <init>
	i ()Lnr; getMessage
drx$4 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$4
	a this$0
	<init> (Ldrx;IIIILnr;Ldlg$a;)V <init>
	i ()Lnr; getMessage
	c ()Lnx; createNarrationMessage
drx$5 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$5
	a $SwitchMap$net$minecraft$client$gui$screens$worldselection$CreateWorldScreen$SelectedGameMode
	<clinit> ()V <clinit>
drx$a net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$OperationFailedException
	<init> (Ljava/lang/Throwable;)V <init>
drx$b net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode
	a SURVIVAL
	b HARDCORE
	c CREATIVE
	d DEBUG
	e name
	f gameType
	g $VALUES
	values ()[Ldrx$b; values
	valueOf (Ljava/lang/String;)Ldrx$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lbrr;)V <init>
	a (Ldrx$b;)Ljava/lang/String; access$300
	b (Ldrx$b;)Lbrr; access$800
	<clinit> ()V <clinit>
dry net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen
	a exitCallback
	b rules
	c invalidEntries
	p doneButton
	q tooltip
	r gameRules
	<init> (Lbrq;Ljava/util/function/Consumer;)V <init>
	b ()V init
	e ()V removed
	au_ ()V onClose
	a (Ldfj;IIF)V render
	b (Ljava/util/List;)V setTooltip
	i ()V updateDoneButton
	a (Ldry$f;)V markInvalid
	b (Ldry$f;)V clearInvalid
	a (Ldlg;)V lambda$init$1
	b (Ldlg;)V lambda$init$0
	a (Ldry;)Ldjw; access$000
	b (Ldry;)Ldjw; access$100
	c (Ldry;)Ldjw; access$200
	d (Ldry;)Ldjw; access$300
	e (Ldry;)Ldjw; access$400
	f (Ldry;)Ldjw; access$500
	a (Ldry;Ldry$f;)V access$600
	b (Ldry;Ldry$f;)V access$700
	g (Ldry;)Ldjw; access$800
	h (Ldry;)Ldkr; access$900
	a (Ldry;Ljava/util/List;)V access$1100
dry$a net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry
	e checkbox
	a this$0
	<init> (Ldry;Lnr;Ljava/util/List;Ljava/lang/String;Lbrq$a;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (Lbrq$a;Ldlg;)V lambda$new$0
dry$a$1 net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry$1
	a val$this$0
	b val$name
	c val$value
	d val$narration
	e this$1
	<init> (Ldry$a;IIIILnr;Ldlg$a;Ldry;Lnr;Lbrq$a;Ljava/lang/String;)V <init>
	c ()Lnx; createNarrationMessage
dry$b net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry
	b label
	a this$0
	<init> (Ldry;Lnr;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	av_ ()Ljava/util/List; children
dry$c net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory
	create (Lnr;Ljava/util/List;Ljava/lang/String;Lbrq$g;)Ldry$f; create
dry$d net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry
	a label
	b children
	c this$0
	<init> (Ldry;Ljava/util/List;Lnr;)V <init>
	av_ ()Ljava/util/List; children
	a (Ldfj;II)V renderLabel
dry$e net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry
	e input
	a this$0
	<init> (Ldry;Lnr;Ljava/util/List;Ljava/lang/String;Lbrq$d;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (Lbrq$d;Ljava/lang/String;)V lambda$new$0
dry$f net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry
	a tooltip
	d this$0
	<init> (Ldry;Ljava/util/List;)V <init>
	a (Ldry$f;)Ljava/util/List; access$1000
dry$g net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList
	a this$0
	<init> (Ldry;Lbrq;)V <init>
	a (Ldfj;IIF)V render
	a (Ljava/util/Map$Entry;)V lambda$new$1
	b (Ljava/util/Map$Entry;)V lambda$null$0
dry$g$1 net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList$1
	a val$this$0
	b val$gameRules
	c val$entries
	d this$1
	<init> (Ldry$g;Ldry;Lbrq;Ljava/util/Map;)V <init>
	b (Lbrq$e;Lbrq$f;)V visitBoolean
	c (Lbrq$e;Lbrq$f;)V visitInteger
	a (Lbrq$e;Ldry$c;)V addEntry
	a (Lbrq$b;)Ljava/util/Map; lambda$addEntry$2
	a (Lnr;Ljava/util/List;Ljava/lang/String;Lbrq$d;)Ldry$f; lambda$visitInteger$1
	a (Lnr;Ljava/util/List;Ljava/lang/String;Lbrq$a;)Ldry$f; lambda$visitBoolean$0
drz net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a LOGGER
	b WORLD_GEN_SETTINGS_GSON
	c NAME_LABEL
	p renameButton
	q callback
	r nameEdit
	s levelAccess
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcyd$a;)V <init>
	d ()V tick
	b ()V init
	a (Ldjw;II)V resize
	au_ ()V onClose
	e ()V removed
	i ()V onRename
	a (Lcyd;Ljava/lang/String;)V makeBackupAndShowToast
	a (Lcyd$a;)Z makeBackupAndShowToast
	a (Ldfj;IIF)V render
	b (Ljava/lang/String;)V lambda$init$11
	a (Ldlg;)V lambda$init$10
	b (Ldlg;)V lambda$init$9
	c (Ldlg;)V lambda$init$8
	a (Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$null$7
	a (Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$null$6
	d (Ldlg;)V lambda$init$5
	a (ZZ)V lambda$null$4
	e (Ldlg;)V lambda$init$3
	f (Ldlg;)V lambda$init$2
	g (Ldlg;)V lambda$init$1
	h (Ldlg;)V lambda$init$0
	<clinit> ()V <clinit>
dsa net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a LOGGER
	b DIMENSION_COLORS
	c callback
	p upgrader
	a (Ldjw;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lcyd$a;Z)Ldsa; create
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lcyd$a;Lbrx;ZLcom/google/common/collect/ImmutableSet;)V <init>
	b ()V init
	d ()V tick
	au_ ()V onClose
	e ()V removed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
dsb net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	a lastScreen
	c toolTip
	p deleteButton
	q selectButton
	r renameButton
	s copyButton
	b searchBox
	t list
	<init> (Ldoq;)V <init>
	a (DDD)Z mouseScrolled
	d ()V tick
	b ()V init
	a (III)Z keyPressed
	au_ ()V onClose
	a (CI)Z charTyped
	a (Ldfj;IIF)V render
	b (Ljava/util/List;)V setToolTip
	c (Z)V updateButtonStatus
	e ()V removed
	a (Ldlg;)V lambda$init$8
	b (Ldlg;)V lambda$init$7
	c (Ldlg;)V lambda$init$6
	d (Ldlg;)V lambda$init$5
	e (Ldlg;)V lambda$init$4
	f (Ldlg;)V lambda$init$3
	i ()Ljava/lang/String; lambda$init$2
	b (Ljava/lang/String;)V lambda$init$1
	c (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
dsc net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent
	b LOGGER
	c CUSTOM_WORLD_DESCRIPTION
	d AMPLIFIED_HELP_TEXT
	e MAP_FEATURES_INFO
	f amplifiedWorldInfo
	g font
	h width
	i seedEdit
	j featuresButton
	a bonusItemsButton
	k typeButton
	l customizeTypeButton
	m importSettingsButton
	n registryHolder
	o settings
	p preset
	q seed
	<init> (Lgn$b;Lcht;Ljava/util/Optional;Ljava/util/OptionalLong;)V <init>
	a (Ldrx;Ldjw;Ldkr;)V init
	a (Lgn$b;Lcht;)V importSettings
	d ()V tick
	a (Ldfj;IIF)V render
	a (Lcht;)V updateSettings
	a (Ljava/util/OptionalLong;)Ljava/lang/String; toString
	a (Ljava/lang/String;)Ljava/util/OptionalLong; parseLong
	a (Z)Lcht; makeSettings
	f ()Ljava/util/OptionalLong; parseSeed
	a ()Z isDebug
	b (Z)V setDisplayOptions
	b ()Lgn$b; registryHolder
	a (Lvz;)V updateDataPacks
	b (Lgn$b;Lcht;)V lambda$updateDataPacks$9
	a (Lvh;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$updateDataPacks$8
	a (Ldrx;Ldjw;Ldlg;)V lambda$init$7
	a (Ldjw;Ldrx;Lgn$b;Lcom/mojang/serialization/Lifecycle;Lcht;)V lambda$null$6
	a (Ldjw;Ldrx;Lgn$b;Lcht;Z)V lambda$null$5
	a (Ldlg;)V lambda$init$4
	a (Ldjw;Ldrx;Ldlg;)V lambda$init$3
	a (Ldrx;Ldlg;)V lambda$init$2
	b (Ldlg;)V lambda$init$1
	b (Ljava/lang/String;)V lambda$init$0
	a (Ldsc;)Lcht; access$000
	c ()Lnr; access$100
	b (Ldsc;)Ljava/util/Optional; access$200
	e ()Lnr; access$300
	<clinit> ()V <clinit>
dsc$1 net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent$1
	a this$0
	<init> (Ldsc;IIIILnr;Ldlg$a;)V <init>
	i ()Lnr; getMessage
	c ()Lnx; createNarrationMessage
dsc$2 net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent$2
	a this$0
	<init> (Ldsc;IIIILnr;Ldlg$a;)V <init>
	i ()Lnr; getMessage
	c ()Lnx; createNarrationMessage
dsc$3 net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent$3
	a val$parent
	b this$0
	<init> (Ldsc;IIIILnr;Ldlg$a;Ldrx;)V <init>
	i ()Lnr; getMessage
dsd net/minecraft/client/gui/screens/worldselection/WorldPreset
	a NORMAL
	e FLAT
	f LARGE_BIOMES
	b AMPLIFIED
	g SINGLE_BIOME_SURFACE
	h SINGLE_BIOME_CAVES
	i SINGLE_BIOME_FLOATING_ISLANDS
	j DEBUG
	c PRESETS
	d EDITORS
	k description
	<init> (Ljava/lang/String;)V <init>
	a (Lgn;Lcht;Ldsd;Lbss;)Lcht; fromBuffetSettings
	a (Lgn;Lcht;)Lbss; parseBuffetSettings
	a (Lcht;)Ljava/util/Optional; of
	a ()Lnr; description
	a (Lgn$b;JZZ)Lcht; create
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$fromBuffetSettings$10
	b (Lgm;)Lchm; lambda$fromBuffetSettings$9
	c (Lgm;)Lchm; lambda$fromBuffetSettings$8
	a (Ldrx;Lcht;)Ldoq; lambda$static$7
	a (Ldrx;Lcht;Lbss;)V lambda$null$6
	b (Ldrx;Lcht;)Ldoq; lambda$static$5
	b (Ldrx;Lcht;Lbss;)V lambda$null$4
	c (Ldrx;Lcht;)Ldoq; lambda$static$3
	c (Ldrx;Lcht;Lbss;)V lambda$null$2
	d (Ldrx;Lcht;)Ldoq; lambda$static$1
	a (Ldrx;Lcht;Lcpc;)V lambda$null$0
	<init> (Ljava/lang/String;Ldsd$1;)V <init>
	<clinit> ()V <clinit>
dsd$1 net/minecraft/client/gui/screens/worldselection/WorldPreset$1
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$generator$0
dsd$2 net/minecraft/client/gui/screens/worldselection/WorldPreset$2
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
dsd$3 net/minecraft/client/gui/screens/worldselection/WorldPreset$3
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$generator$0
dsd$4 net/minecraft/client/gui/screens/worldselection/WorldPreset$4
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$generator$0
dsd$5 net/minecraft/client/gui/screens/worldselection/WorldPreset$5
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$generator$0
dsd$6 net/minecraft/client/gui/screens/worldselection/WorldPreset$6
	<init> (Ljava/lang/String;)V <init>
	a (Lgn$b;JZZ)Lcht; create
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$generator$1
	b (Lgm;)Lcha; lambda$create$0
dsd$7 net/minecraft/client/gui/screens/worldselection/WorldPreset$7
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
	a (Lgm;)Lchm; lambda$generator$0
dsd$8 net/minecraft/client/gui/screens/worldselection/WorldPreset$8
	<init> (Ljava/lang/String;)V <init>
	a (Lgm;Lgm;J)Lcfv; generator
dsd$a net/minecraft/client/gui/screens/worldselection/WorldPreset$PresetEditor
	createEditScreen (Ldrx;Lcht;)Ldoq; createEditScreen
dse net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	a LOGGER
	o DATE_FORMAT
	p ICON_MISSING
	q ICON_OVERLAY_LOCATION
	r FROM_NEWER_TOOLTIP_1
	s FROM_NEWER_TOOLTIP_2
	t SNAPSHOT_TOOLTIP_1
	u SNAPSHOT_TOOLTIP_2
	v WORLD_LOCKED_TOOLTIP
	w screen
	x cachedList
	<init> (Ldsb;Ldjw;IIIIILjava/util/function/Supplier;Ldse;)V <init>
	a (Ljava/util/function/Supplier;Z)V refreshList
	e ()I getScrollbarPosition
	d ()I getRowWidth
	b ()Z isFocused
	a (Ldse$a;)V setSelected
	a (Ldlc$b;)V moveSelection
	f ()Ljava/util/Optional; getSelectedOpt
	g ()Ldsb; getScreen
	a (Ldlc$a;)V setSelected
	b (Ldse$a;)Z lambda$moveSelection$0
	r ()Ljava/text/DateFormat; access$100
	s ()Lvk; access$200
	t ()Lvk; access$300
	u ()Lnr; access$400
	w ()Lnr; access$500
	x ()Lnr; access$600
	y ()Lnr; access$700
	z ()Lnr; access$800
	a (Ldse;)I access$900
	A ()Lorg/apache/logging/log4j/Logger; access$1000
	<clinit> ()V <clinit>
dse$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	b minecraft
	c screen
	d summary
	e iconLocation
	f iconFile
	g icon
	h lastClickTime
	a this$0
	<init> (Ldse;Ldse;Lcye;)V <init>
	a (Ldfj;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a ()V joinWorld
	b ()V deleteWorld
	c ()V editWorld
	d ()V recreateWorld
	e ()V loadWorld
	f ()V queueLoadScreen
	g ()Lejk; loadServerIcon
	close ()V close
	h ()V lambda$recreateWorld$9
	a (Lbrx;Lcht;Ljava/nio/file/Path;Lbrh;Lgn$b;Z)V lambda$recreateWorld$8
	i ()Ljava/lang/String; lambda$editWorld$7
	a (Lcyd$a;Ljava/lang/String;Z)V lambda$editWorld$6
	j ()Ljava/lang/String; lambda$null$5
	a (Z)V lambda$deleteWorld$4
	k ()Ljava/lang/String; lambda$null$3
	c (Z)V lambda$joinWorld$2
	l ()V lambda$null$1
	a (ZZ)V lambda$joinWorld$0
	a (Ldse$a;)Lcye; access$000
dsf net/minecraft/client/gui/screens/worldselection/package-info
dsg net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b location
	c name
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
dsh net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a PROMPT_TEXT
	b items
	<init> ()V <init>
	a ()Ljava/util/List; getItems
	b ()Lnr; getPrompt
	<clinit> ()V <clinit>
dsi net/minecraft/client/gui/spectator/SpectatorMenu
	b CLOSE_ITEM
	c SCROLL_LEFT
	d SCROLL_RIGHT_ENABLED
	e SCROLL_RIGHT_DISABLED
	f CLOSE_MENU_TEXT
	g PREVIOUS_PAGE_TEXT
	h NEXT_PAGE_TEXT
	a EMPTY_SLOT
	i listener
	j category
	k selectedSlot
	l page
	<init> (Ldsl;)V <init>
	a (I)Ldsk; getItem
	a ()Ljava/util/List; getItems
	b ()Ldsk; getSelectedItem
	c ()Ldsj; getSelectedCategory
	b (I)V selectSlot
	d ()V exit
	e ()I getSelectedSlot
	a (Ldsj;)V selectCategory
	f ()Ldsm; getCurrentPage
	g ()Lnr; access$100
	a (Ldsi;)I access$200
	a (Ldsi;I)I access$202
	h ()Lnr; access$300
	i ()Lnr; access$400
	<clinit> ()V <clinit>
dsi$1 net/minecraft/client/gui/spectator/SpectatorMenu$1
	<init> ()V <init>
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
dsi$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	<init> ()V <init>
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
	<init> (Ldsi$1;)V <init>
dsi$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	<init> (IZ)V <init>
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
dsj net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lnr; getPrompt
dsk net/minecraft/client/gui/spectator/SpectatorMenuItem
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
dsl net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Ldsi;)V onSpectatorMenuClosed
dsm net/minecraft/client/gui/spectator/categories/SpectatorPage
	a category
	b items
	c selection
	<init> (Ldsj;Ljava/util/List;I)V <init>
	a ()Ldsj; getCategory
	a (I)Ldsk; getItem
	b ()I getSelectedSlot
dsn net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a PROFILE_ORDER
	b TELEPORT_TEXT
	c TELEPORT_PROMPT
	d items
	<init> ()V <init>
	<init> (Ljava/util/Collection;)V <init>
	a ()Ljava/util/List; getItems
	b ()Lnr; getPrompt
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
	a (Ldwp;Ldwp;)I lambda$static$0
	<clinit> ()V <clinit>
dso net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a TELEPORT_TEXT
	b TELEPORT_PROMPT
	c items
	<init> ()V <init>
	a ()Ljava/util/List; getItems
	b ()Lnr; getPrompt
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
	<clinit> ()V <clinit>
dso$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	b team
	c location
	d players
	a this$0
	<init> (Ldso;Lddi;)V <init>
	a (Ldsi;)V selectItem
	aA_ ()Lnr; getName
	a (Ldfj;FI)V renderIcon
	aB_ ()Z isEnabled
dsp net/minecraft/client/gui/spectator/categories/package-info
dsq net/minecraft/client/gui/spectator/package-info
dsr net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e server
	<init> (Ldsr$d;Ldeg;Ldsr$a;Ldsr$b;Ldsr$c;)V <init>
dsr$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	<init> (Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V <init>
	a ()Lejy; getAssetIndex
dsr$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
	d disableMultiplayer
	e disableChat
	<init> (ZLjava/lang/String;Ljava/lang/String;ZZ)V <init>
dsr$c net/minecraft/client/main/GameConfig$ServerData
	a hostname
	b port
	<init> (Ljava/lang/String;I)V <init>
dsr$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
	<init> (Ldkj;Lcom/mojang/authlib/properties/PropertyMap;Lcom/mojang/authlib/properties/PropertyMap;Ljava/net/Proxy;)V <init>
net/minecraft/client/main/Main net/minecraft/client/main/Main
	a LOGGER
	<init> ()V <init>
	main ([Ljava/lang/String;)V main
	a (Ljava/lang/Integer;)Ljava/util/OptionalInt; ofNullable
	a (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; parseArgument
	a (Ljava/lang/String;)Z stringHasValue
	a ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
net/minecraft/client/main/Main$1 net/minecraft/client/main/Main$1
	a val$proxyUser
	b val$proxyPass
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	getPasswordAuthentication ()Ljava/net/PasswordAuthentication; getPasswordAuthentication
net/minecraft/client/main/Main$2 net/minecraft/client/main/Main$2
	<init> (Ljava/lang/String;)V <init>
	run ()V run
net/minecraft/client/main/Main$3 net/minecraft/client/main/Main$3
	a val$minecraft
	<init> (Ljava/lang/String;Ldjw;)V <init>
	run ()V run
dss net/minecraft/client/main/SilentInitException
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
dst net/minecraft/client/main/package-info
dsu net/minecraft/client/map/Map
	e LOGGER
	f image
	g w
	h h
	i scale
	j newScale
	k xMouse
	l yMouse
	a xCam
	b yCam
	m seed
	n updates
	o hovered
	p teleportCommand
	c COLOR
	d ODD_COLOR
	q distCount
	r lastDistData
	a (Lvj;I)V setColor
	a (Lvj;II)V setColor
	<init> (IID)V <init>
	a ()D getNewScale
	setSize (II)V setSize
	b ()V invalidateAndUpdate
	a (J)Lbsv; makeBiomeSource
	a (Lbss;)I getColor
	b (Lbss;)I getOddColor
	paint (Ljava/awt/Graphics;)V paint
	a ([Ljava/lang/String;)V main
	lostOwnership (Ljava/awt/datatransfer/Clipboard;Ljava/awt/datatransfer/Transferable;)V lostOwnership
	actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
	a (Lgm;)Lbss; lambda$makeBiomeSource$8
	b (Lgm;)Lbss; lambda$makeBiomeSource$7
	c (Lgm;)Lbss; lambda$makeBiomeSource$6
	d (Lgm;)Lbss; lambda$makeBiomeSource$5
	e (Lgm;)Lbss; lambda$makeBiomeSource$4
	a (IILbsv;II[I)Lcom/mojang/datafixers/util/Pair; lambda$invalidateAndUpdate$3
	a ([I[III)V lambda$null$2
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$invalidateAndUpdate$1
	a (Ljava/awt/event/MouseWheelEvent;)V lambda$new$0
	a (Ldsu;)Ljava/lang/String; access$000
	a (Ldsu;Ljava/lang/String;)Ljava/lang/String; access$102
	b (Ldsu;)Ljava/lang/String; access$100
	a (Ldsu;J)J access$202
	c (Ldsu;)V access$300
	a (Ldsu;D)D access$402
	b (Ldsu;D)D access$502
	a (Ldsu;I)I access$602
	d (Ldsu;)D access$400
	b (Ldsu;I)I access$702
	e (Ldsu;)I access$600
	f (Ldsu;)I access$700
	<clinit> ()V <clinit>
dsu$1 net/minecraft/client/map/Map$1
	a this$0
	<init> (Ldsu;)V <init>
	mouseClicked (Ljava/awt/event/MouseEvent;)V mouseClicked
	mousePressed (Ljava/awt/event/MouseEvent;)V mousePressed
dsu$2 net/minecraft/client/map/Map$2
	a this$0
	<init> (Ldsu;)V <init>
	mouseDragged (Ljava/awt/event/MouseEvent;)V mouseDragged
	mouseMoved (Ljava/awt/event/MouseEvent;)V mouseMoved
dsu$3 net/minecraft/client/map/Map$3
	a this$0
	<init> (Ldsu;)V <init>
	componentResized (Ljava/awt/event/ComponentEvent;)V componentResized
dsv net/minecraft/client/map/package-info
dsw net/minecraft/client/model/AbstractZombieModel
	<init> (FFII)V <init>
	a (Lbdn;FFFFF)V setupAnim
	a (Lbdn;)Z isAggressive
	a (Laqj;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dsx net/minecraft/client/model/AgeableListModel
	a scaleHead
	b yHeadOffset
	f zHeadOffset
	g babyHeadScale
	h babyBodyScale
	i bodyYOffset
	<init> (ZFF)V <init>
	<init> (ZFFFFF)V <init>
	<init> (Ljava/util/function/Function;ZFFFFF)V <init>
	<init> ()V <init>
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$3
	b (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$2
	c (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$1
	d (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
dsy net/minecraft/client/model/AnimationUtils
	<init> ()V <init>
	a (Ldwf;Ldwf;Ldwf;Z)V animateCrossbowHold
	a (Ldwf;Ldwf;Laqj;Z)V animateCrossbowCharge
	a (Ldwf;Ldwf;Laqk;FF)V swingWeaponDown
	a (Ldwf;Ldwf;F)V bobArms
	a (Ldwf;Ldwf;ZFF)V animateZombieArms
dsz net/minecraft/client/model/ArmedModel
	a (Laqf;Ldfj;)V translateToHand
dta net/minecraft/client/model/ArmorStandArmorModel
	<init> (F)V <init>
	<init> (FII)V <init>
	a (Lbck;FFFFF)V setupAnim
	a (Laqj;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dtb net/minecraft/client/model/ArmorStandModel
	a bodyStick1
	b bodyStick2
	t shoulderStick
	u basePlate
	<init> ()V <init>
	<init> (F)V <init>
	a (Lbck;FFF)V prepareMobModel
	a (Lbck;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	a (Laqf;Ldfj;)V translateToHand
	a (Laqj;FFFFF)V setupAnim
	a (Laqj;FFF)V prepareMobModel
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dtc net/minecraft/client/model/BatModel
	a head
	b body
	f rightWing
	g leftWing
	h rightWingTip
	i leftWingTip
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lazr;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dtd net/minecraft/client/model/BeeModel
	a bone
	b body
	f rightWing
	g leftWing
	h frontLeg
	i midLeg
	j backLeg
	k stinger
	l leftAntenna
	m rightAntenna
	n rollAmount
	<init> ()V <init>
	a (Lazx;FFF)V prepareMobModel
	a (Lazx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dte net/minecraft/client/model/BlazeModel
	a upperBodyParts
	b head
	f parts
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dtf net/minecraft/client/model/BoatModel
	a paddles
	b waterPatch
	f parts
	<init> ()V <init>
	a (Lbhk;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
	c ()Ldwf; waterPatch
	a (Z)Ldwf; makePaddle
	a (Lbhk;IF)V animatePaddle
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dtg net/minecraft/client/model/BookModel
	a leftLid
	b rightLid
	c leftPages
	d rightPages
	e flipPage1
	f flipPage2
	g seam
	h parts
	<init> ()V <init>
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	b (Ldfj;Ldfn;IIFFFF)V render
	a (FFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$render$0
dth net/minecraft/client/model/CatModel
	m lieDownAmount
	n lieDownAmountTail
	o relaxStateOneAmount
	<init> (F)V <init>
	a (Lazy;FFF)V prepareMobModel
	a (Lazy;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dti net/minecraft/client/model/ChestedHorseModel
	f boxL
	g boxR
	<init> (F)V <init>
	a (Ldwf;)V addEarModels
	a (Lbax;FFFFF)V setupAnim
	a (Lbay;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dtj net/minecraft/client/model/ChickenModel
	a head
	b body
	f leg0
	g leg1
	h wing0
	i wing1
	j beak
	k redThing
	<init> ()V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lapx;FFFFF)V setupAnim
dtk net/minecraft/client/model/CodModel
	a body
	b topFin
	f head
	g nose
	h sideFin0
	i sideFin1
	j tailFin
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dtl net/minecraft/client/model/ColorableAgeableListModel
	a r
	b g
	f b
	<init> ()V <init>
	a (FFF)V setColor
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dtm net/minecraft/client/model/ColorableListModel
	a r
	b g
	f b
	<init> ()V <init>
	a (FFF)V setColor
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dtn net/minecraft/client/model/CowModel
	<init> ()V <init>
	c ()Ldwf; getHead
dto net/minecraft/client/model/CreeperModel
	a head
	b hair
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	<init> ()V <init>
	<init> (F)V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dtp net/minecraft/client/model/DolphinModel
	a body
	b tail
	f tailFin
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dtq net/minecraft/client/model/DrownedModel
	<init> (FFII)V <init>
	<init> (FZ)V <init>
	a (Lbeg;FFF)V prepareMobModel
	a (Lbeg;FFFFF)V setupAnim
	a (Lbdn;FFFFF)V setupAnim
	a (Laqj;FFFFF)V setupAnim
	a (Laqj;FFF)V prepareMobModel
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dtr net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	<init> ()V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Laqj;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dts net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	<init> (F)V <init>
	a (Laqj;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dtt net/minecraft/client/model/EndermiteModel
	a BODY_SIZES
	b BODY_TEXS
	f BODY_COUNT
	g bodyParts
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
	<clinit> ()V <clinit>
dtu net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	<init> ()V <init>
	<init> (Ljava/util/function/Function;)V <init>
	a (Lapx;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
	a (Ldtu;)V copyPropertiesTo
dtv net/minecraft/client/model/EvokerFangsModel
	a base
	b upperJaw
	f lowerJaw
	<init> ()V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
dtw net/minecraft/client/model/FoxModel
	a head
	b earL
	f earR
	g nose
	h body
	i leg0
	j leg1
	k leg2
	l leg3
	m tail
	n legMotionPos
	<init> ()V <init>
	a (Lbae;FFF)V prepareMobModel
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbae;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dtx net/minecraft/client/model/GhastModel
	a tentacles
	b parts
	<init> ()V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
dty net/minecraft/client/model/GiantZombieModel
	<init> ()V <init>
	<init> (FZ)V <init>
	a (Lbdi;)Z isAggressive
	a (Lbdn;)Z isAggressive
dtz net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j head
	k eye
	l spikeParts
	m tailParts
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lbdj;FFFFF)V setupAnim
	a (FF)V setupSpikes
	a (Lapx;FFFFF)V setupAnim
	<clinit> ()V <clinit>
dua net/minecraft/client/model/HeadedModel
	c ()Ldwf; getHead
dub net/minecraft/client/model/HoglinModel
	a head
	b rightEar
	f leftEar
	g body
	h frontRightLeg
	i frontLeftLeg
	j backRightLeg
	k backLeftLeg
	l mane
	<init> ()V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Laqk;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
duc net/minecraft/client/model/HorseModel
	a body
	b headParts
	f leg1
	g leg2
	h leg3
	i leg4
	j babyLeg1
	k babyLeg2
	l babyLeg3
	m babyLeg4
	n tail
	o saddleParts
	p ridingParts
	<init> (F)V <init>
	a (Ldwf;)V addEarModels
	a (Lbay;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbay;FFF)V prepareMobModel
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dud net/minecraft/client/model/HumanoidHeadModel
	b hat
	<init> ()V <init>
	a (FFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
due net/minecraft/client/model/HumanoidModel
	f head
	g hat
	h body
	i rightArm
	j leftArm
	k rightLeg
	l leftLeg
	m leftArmPose
	n rightArmPose
	o crouching
	p swimAmount
	<init> (F)V <init>
	<init> (FFII)V <init>
	<init> (Ljava/util/function/Function;FFII)V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Laqj;FFF)V prepareMobModel
	a (Laqj;FFFFF)V setupAnim
	b (Laqj;)V poseRightArm
	c (Laqj;)V poseLeftArm
	a (Laqj;F)V setupAttackAnimation
	a (FFF)F rotlerpRad
	a (F)F quadraticArmUpdate
	a (Ldue;)V copyPropertiesTo
	d_ (Z)V setAllVisible
	a (Laqf;Ldfj;)V translateToHand
	a (Laqf;)Ldwf; getArm
	c ()Ldwf; getHead
	a (Laqj;)Laqf; getAttackArm
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
due$1 net/minecraft/client/model/HumanoidModel$1
	a $SwitchMap$net$minecraft$client$model$HumanoidModel$ArmPose
	<clinit> ()V <clinit>
due$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h twoHanded
	i $VALUES
	values ()[Ldue$a; values
	valueOf (Ljava/lang/String;)Ldue$a; valueOf
	<init> (Ljava/lang/String;IZ)V <init>
	a ()Z isTwoHanded
	<clinit> ()V <clinit>
duf net/minecraft/client/model/IllagerModel
	a head
	b hat
	f body
	g arms
	h leftLeg
	i rightLeg
	j rightArm
	k leftArm
	<init> (FFII)V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lbcv;FFFFF)V setupAnim
	a (Laqf;)Ldwf; getArm
	b ()Ldwf; getHat
	c ()Ldwf; getHead
	a (Laqf;Ldfj;)V translateToHand
	a (Lapx;FFFFF)V setupAnim
dug net/minecraft/client/model/IronGolemModel
	a head
	b body
	f arm0
	g arm1
	h leg0
	i leg1
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lbaf;FFFFF)V setupAnim
	a (Lbaf;FFF)V prepareMobModel
	b ()Ldwf; getFlowerHoldingArm
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
duh net/minecraft/client/model/LavaSlimeModel
	a bodyCubes
	b insideCube
	f parts
	<init> ()V <init>
	a (Lbdw;FFFFF)V setupAnim
	a (Lbdw;FFF)V prepareMobModel
	b ()Lcom/google/common/collect/ImmutableList; parts
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dui net/minecraft/client/model/LeashKnotModel
	a knot
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
duj net/minecraft/client/model/ListModel
	<init> ()V <init>
	<init> (Ljava/util/function/Function;)V <init>
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a ()Ljava/lang/Iterable; parts
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
duk net/minecraft/client/model/LlamaModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	j chest1
	k chest2
	<init> (F)V <init>
	a (Lbax;FFFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Lapx;FFFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$1
	b (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
dul net/minecraft/client/model/LlamaSpitModel
	a main
	<init> ()V <init>
	<init> (F)V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
dum net/minecraft/client/model/MinecartModel
	a cubes
	<init> ()V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
dun net/minecraft/client/model/Model
	q renderType
	r texWidth
	s texHeight
	<init> (Ljava/util/function/Function;)V <init>
	b (Ldwf;)V accept
	a (Lvk;)Leag; renderType
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	accept (Ljava/lang/Object;)V accept
duo net/minecraft/client/model/ModelUtils
	<init> ()V <init>
	a (FFF)F rotlerpRad
dup net/minecraft/client/model/OcelotModel
	a backLegL
	b backLegR
	f frontLegL
	g frontLegR
	h tail1
	i tail2
	j head
	k body
	l state
	<init> (F)V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lapx;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
duq net/minecraft/client/model/PandaModel
	j sitAmount
	k lieOnBackAmount
	l rollAmount
	<init> (IF)V <init>
	a (Lbai;FFF)V prepareMobModel
	a (Lbai;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
dur net/minecraft/client/model/ParrotModel
	a body
	b tail
	f wingLeft
	g wingRight
	h head
	i head2
	j beak1
	k beak2
	l feather
	m legLeft
	n legRight
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lbaj;FFFFF)V setupAnim
	a (Lbaj;FFF)V prepareMobModel
	a (Ldfj;Ldfn;IIFFFFI)V renderOnShoulder
	a (Ldur$a;IFFFFF)V setupAnim
	a (Ldur$a;)V prepare
	a (Lbaj;)Ldur$a; getState
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
	a (Ldfj;Ldfn;IILdwf;)V lambda$renderOnShoulder$0
dur$1 net/minecraft/client/model/ParrotModel$1
	a $SwitchMap$net$minecraft$client$model$ParrotModel$State
	<clinit> ()V <clinit>
dur$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
	values ()[Ldur$a; values
	valueOf (Ljava/lang/String;)Ldur$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dus net/minecraft/client/model/PhantomModel
	a body
	b leftWingBase
	f leftWingTip
	g rightWingBase
	h rightWingTip
	i tailBase
	j tailTip
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dut net/minecraft/client/model/PigModel
	<init> ()V <init>
	<init> (F)V <init>
duu net/minecraft/client/model/PiglinModel
	a earRight
	b earLeft
	y bodyDefault
	z headDefault
	A leftArmDefault
	B rightArmDefault
	<init> (FII)V <init>
	a (Laqk;FFFFF)V setupAnim
	a (Laqk;F)V setupAttackAnimation
	a (Laqk;)V holdWeaponHigh
	a (Laqj;FFFFF)V setupAnim
	a (Laqj;F)V setupAttackAnimation
	a (Lapx;FFFFF)V setupAnim
duv net/minecraft/client/model/PlayerModel
	a cubes
	t leftSleeve
	u rightSleeve
	v leftPants
	w rightPants
	x jacket
	b cloak
	y ear
	z slim
	<init> (FZ)V <init>
	b ()Ljava/lang/Iterable; bodyParts
	a (Ldfj;Ldfn;II)V renderEars
	b (Ldfj;Ldfn;II)V renderCloak
	a (Laqj;FFFFF)V setupAnim
	d_ (Z)V setAllVisible
	a (Laqf;Ldfj;)V translateToHand
	a (Ljava/util/Random;)Ldwf; getRandomModelPart
	b (Ldwf;)V accept
	a (Lapx;FFFFF)V setupAnim
	accept (Ljava/lang/Object;)V accept
duw net/minecraft/client/model/PolarBearModel
	<init> ()V <init>
	a (Lbal;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dux net/minecraft/client/model/PufferfishBigModel
	a cube
	b blueFin0
	f blueFin1
	g topFrontFin
	h topMidFin
	i topBackFin
	j sideFrontFin0
	k sideFrontFin1
	l bottomFrontFin
	m bottomBackFin
	n bottomMidFin
	o sideBackFin0
	p sideBackFin1
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
duy net/minecraft/client/model/PufferfishMidModel
	a cube
	b finBlue0
	f finBlue1
	g finTop0
	h finTop1
	i finSide0
	j finSide1
	k finSide2
	l finSide3
	m finBottom0
	n finBottom1
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
duz net/minecraft/client/model/PufferfishSmallModel
	a cube
	b eye0
	f eye1
	g fin0
	h fin1
	i finBack
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dva net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	<init> (IFZFFFFI)V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lapx;FFFFF)V setupAnim
dvb net/minecraft/client/model/RabbitModel
	a rearFootLeft
	b rearFootRight
	f haunchLeft
	g haunchRight
	h body
	i frontLegLeft
	j frontLegRight
	k head
	l earRight
	m earLeft
	n tail
	o nose
	p jumpRotation
	<init> ()V <init>
	a (Ldwf;FFF)V setRotation
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Lban;FFFFF)V setupAnim
	a (Lban;FFF)V prepareMobModel
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$2
	b (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$1
	c (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
dvc net/minecraft/client/model/RavagerModel
	a head
	b mouth
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k neck
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lbds;FFFFF)V setupAnim
	a (Lbds;FFF)V prepareMobModel
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dvd net/minecraft/client/model/SalmonModel
	a bodyFront
	b bodyBack
	f head
	g sideFin0
	h sideFin1
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dve net/minecraft/client/model/SheepFurModel
	j headXRot
	<init> ()V <init>
	a (Lbap;FFF)V prepareMobModel
	a (Lbap;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
dvf net/minecraft/client/model/SheepModel
	j headXRot
	<init> ()V <init>
	a (Lbap;FFF)V prepareMobModel
	a (Lbap;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
dvg net/minecraft/client/model/ShieldModel
	a plate
	b handle
	<init> ()V <init>
	a ()Ldwf; plate
	b ()Ldwf; handle
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dvh net/minecraft/client/model/ShulkerBulletModel
	a main
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dvi net/minecraft/client/model/ShulkerModel
	a base
	b lid
	f head
	<init> ()V <init>
	a (Lbdt;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
	b ()Ldwf; getBase
	c ()Ldwf; getLid
	d ()Ldwf; getHead
	a (Lapx;FFFFF)V setupAnim
dvj net/minecraft/client/model/SilverfishModel
	a bodyParts
	b bodyLayers
	f parts
	g zPlacement
	h BODY_SIZES
	i BODY_TEXS
	<init> ()V <init>
	b ()Lcom/google/common/collect/ImmutableList; parts
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
	<clinit> ()V <clinit>
dvk net/minecraft/client/model/SkeletonModel
	<init> ()V <init>
	<init> (FZ)V <init>
	a (Laqk;FFF)V prepareMobModel
	a (Laqk;FFFFF)V setupAnim
	a (Laqf;Ldfj;)V translateToHand
	a (Laqj;FFFFF)V setupAnim
	a (Laqj;FFF)V prepareMobModel
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dvl net/minecraft/client/model/SkullModel
	a head
	<init> ()V <init>
	<init> (IIII)V <init>
	a (FFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dvm net/minecraft/client/model/SlimeModel
	a cube
	b eye0
	f eye1
	g mouth
	<init> (I)V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
dvn net/minecraft/client/model/SnowGolemModel
	a piece1
	b piece2
	f head
	g arm1
	h arm2
	<init> ()V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
	b ()Ldwf; getHead
dvo net/minecraft/client/model/SpiderModel
	a head
	b body0
	f body1
	g leg0
	h leg1
	i leg2
	j leg3
	k leg4
	l leg5
	m leg6
	n leg7
	<init> ()V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dvp net/minecraft/client/model/SquidModel
	a body
	b tentacles
	f parts
	<init> ()V <init>
	a (Lapx;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; parts
dvq net/minecraft/client/model/StriderModel
	a rightLeg
	b leftLeg
	f body
	g bristle0
	h bristle1
	i bristle2
	j bristle3
	k bristle4
	l bristle5
	<init> ()V <init>
	a (Lbea;FFFFF)V setupAnim
	a (Ldwf;FFF)V setRotationAngle
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dvr net/minecraft/client/model/TridentModel
	a TEXTURE
	b pole
	<init> ()V <init>
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	<clinit> ()V <clinit>
dvs net/minecraft/client/model/TropicalFishModelA
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	<init> (F)V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dvt net/minecraft/client/model/TropicalFishModelB
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	i bottomFin
	<init> (F)V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
dvu net/minecraft/client/model/TurtleModel
	j eggBelly
	<init> (F)V <init>
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbau;FFFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Lapx;FFFFF)V setupAnim
dvv net/minecraft/client/model/VexModel
	a leftWing
	b rightWing
	<init> ()V <init>
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbeb;FFFFF)V setupAnim
	a (Laqj;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dvw net/minecraft/client/model/VillagerHeadModel
	a (Z)V hatVisible
dvx net/minecraft/client/model/VillagerModel
	a head
	b hat
	f hatRim
	g body
	h jacket
	i arms
	j leg0
	k leg1
	l nose
	<init> (F)V <init>
	<init> (FII)V <init>
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFFFF)V setupAnim
	c ()Ldwf; getHead
	a (Z)V hatVisible
dvy net/minecraft/client/model/WitchModel
	m holdingItem
	n mole
	<init> (F)V <init>
	a (Lapx;FFFFF)V setupAnim
	b ()Ldwf; getNose
	b (Z)V setHoldingItem
dvz net/minecraft/client/model/WitherBossModel
	a upperBodyParts
	b heads
	f parts
	<init> (F)V <init>
	b ()Lcom/google/common/collect/ImmutableList; parts
	a (Lbci;FFFFF)V setupAnim
	a (Lbci;FFF)V prepareMobModel
	a ()Ljava/lang/Iterable; parts
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dwa net/minecraft/client/model/WolfModel
	a head
	b realHead
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k tail
	l realTail
	m upperBody
	<init> ()V <init>
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbaw;FFF)V prepareMobModel
	a (Lbaw;FFFFF)V setupAnim
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
dwb net/minecraft/client/model/ZombieModel
	<init> (FZ)V <init>
	<init> (FFII)V <init>
	a (Lbeg;)Z isAggressive
	a (Lbdn;)Z isAggressive
dwc net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	<init> (FZ)V <init>
	a (Lbeg;FFFFF)V setupAnim
	a (Z)V hatVisible
	a (Laqj;FFFFF)V setupAnim
	a (Lapx;FFFFF)V setupAnim
dwd net/minecraft/client/model/dragon/DragonHeadModel
	b head
	c jaw
	<init> (F)V <init>
	a (FFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dwe net/minecraft/client/model/dragon/package-info
dwf net/minecraft/client/model/geom/ModelPart
	i xTexSize
	j yTexSize
	k xTexOffs
	l yTexOffs
	a x
	b y
	c z
	d xRot
	e yRot
	f zRot
	g mirror
	h visible
	m cubes
	n children
	<init> (Ldun;)V <init>
	<init> (Ldun;II)V <init>
	<init> (IIII)V <init>
	<init> ()V <init>
	a ()Ldwf; createShallowCopy
	a (Ldwf;)V copyFrom
	b (Ldwf;)V addChild
	a (II)Ldwf; texOffs
	a (Ljava/lang/String;FFFIIIFII)Ldwf; addBox
	a (FFFFFF)Ldwf; addBox
	a (FFFFFFZ)Ldwf; addBox
	a (FFFFFFF)V addBox
	a (FFFFFFFFF)V addBox
	a (FFFFFFFZ)V addBox
	a (IIFFFFFFFFFZZ)V addBox
	a (FFF)V setPos
	a (Ldfj;Ldfn;II)V render
	a (Ldfj;Ldfn;IIFFFF)V render
	a (Ldfj;)V translateAndRotate
	a (Ldfj$a;Ldfn;IIFFFF)V compile
	b (II)Ldwf; setTexSize
	a (Ljava/util/Random;)Ldwf$a; getRandomCube
dwf$a net/minecraft/client/model/geom/ModelPart$Cube
	g polygons
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	<init> (IIFFFFFFFFFZFF)V <init>
	a (Ldwf$a;)[Ldwf$b; access$000
dwf$b net/minecraft/client/model/geom/ModelPart$Polygon
	a vertices
	b normal
	<init> ([Ldwf$c;FFFFFFZLgc;)V <init>
dwf$c net/minecraft/client/model/geom/ModelPart$Vertex
	a pos
	b u
	c v
	<init> (FFFFF)V <init>
	a (FF)Ldwf$c; remap
	<init> (Lg;FF)V <init>
dwg net/minecraft/client/model/geom/package-info
dwh net/minecraft/client/model/package-info
dwi net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c advancements
	d progress
	e listener
	f selectedTab
	<init> (Ldjw;)V <init>
	a (Lrt;)V update
	a ()Lz; getAdvancements
	b ()Ljava/util/Map; getProgress
	a (Ly;Z)V setSelectedTab
	a (Ldwi$a;)V setListener
	<clinit> ()V <clinit>
dwi$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Ly;Laa;)V onUpdateAdvancementProgress
	e (Ly;)V onSelectedTabChanged
dwj net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	<init> (Ldwl;I)V <init>
	l ()Lcul; getLightEngine
	a (Lcge;II)Z isValidChunk
	d (II)V drop
	b (IILcfx;Z)Lcge; getChunk
	m ()Lbqz; getLevel
	a (IILcfu;Lnf;Lmd;IZ)Lcge; replaceWithPacketData
	a (Ljava/util/function/BooleanSupplier;)V tick
	e (II)V updateViewCenter
	a (I)V updateViewRadius
	b (I)I calculateStorageRange
	e ()Ljava/lang/String; gatherStats
	h ()I getLoadedChunksCount
	a (Lbsc;Lgp;)V onLightUpdate
	a (Lfx;)Z isTickingChunk
	a (Lbra;)Z isEntityTickingChunk
	a (Lapx;)Z isEntityTickingChunk
	a (IILcfx;Z)Lcft; getChunk
	a (Ldwj;)Ldwl; access$800
	b (Ldwj;)Ldwj$a; access$900
	a ()Lorg/apache/logging/log4j/Logger; access$1000
	<clinit> ()V <clinit>
dwj$1 net/minecraft/client/multiplayer/ClientChunkCache$1
dwj$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a this$0
	<init> (Ldwj;I)V <init>
	a (II)I getIndex
	a (ILcge;)V replace
	a (ILcge;Lcge;)Lcge; replace
	b (II)Z inRange
	a (I)Lcge; getChunk
	a (Ljava/lang/String;)V dumpChunks
	<init> (Ldwj;ILdwj$1;)V <init>
	a (Ldwj$a;II)Z access$100
	b (Ldwj$a;II)I access$200
	a (Ldwj$a;)Ljava/util/concurrent/atomic/AtomicReferenceArray; access$300
	a (Ldwj$a;I)I access$402
	b (Ldwj$a;I)I access$502
	b (Ldwj$a;)I access$600
	c (Ldwj$a;)I access$400
	d (Ldwj$a;)I access$500
	e (Ldwj$a;)I access$700
dwk net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c parent
	d updateStatus
	e connection
	f localGameProfile
	<init> (Lnd;Ldjw;Ldoq;Ljava/util/function/Consumer;)V <init>
	a (Lub;)V handleHello
	a (Ljava/lang/String;)Lnr; authenticateServer
	b ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	a (Lua;)V handleGameProfile
	a (Lnr;)V onDisconnect
	a ()Lnd; getConnection
	a (Lud;)V handleDisconnect
	a (Luc;)V handleCompression
	a (Ltz;)V handleCustomQuery
	a (Ljava/lang/String;Luh;Ljavax/crypto/SecretKey;)V lambda$handleHello$1
	a (Ljavax/crypto/SecretKey;Lio/netty/util/concurrent/Future;)V lambda$null$0
	<clinit> ()V <clinit>
dwl net/minecraft/client/multiplayer/ClientLevel
	a entitiesById
	b connection
	c levelRenderer
	d clientLevelData
	x effects
	y minecraft
	z players
	A scoreboard
	B mapData
	C skyFlashTime
	D tintCaches
	E chunkSource
	<init> (Ldwm;Ldwl$a;Lvj;Lcha;ILjava/util/function/Supplier;Ldzw;ZJ)V <init>
	a ()Ldzn; effects
	a (Ljava/util/function/BooleanSupplier;)V tick
	y ()V tickTime
	a (J)V setGameTime
	b (J)V setDayTime
	b ()Ljava/lang/Iterable; entitiesForRendering
	g ()V tickEntities
	a (Lapx;)V tickNonPassenger
	a (Lapx;Lapx;)V tickPassenger
	b (Lapx;)V updateChunkPos
	a (Lcge;)V unload
	e (II)V onChunkLoaded
	i ()V clearTintCaches
	b (II)Z hasChunk
	j ()I getEntityCount
	a (ILdzb;)V addPlayer
	a (ILapx;)V putNonPlayerEntity
	b (ILapx;)V addEntity
	d (I)V removeEntity
	d (Lapx;)V onEntityRemoved
	b (Lcge;)V reAddEntitiesToChunk
	a (I)Lapx; getEntity
	b (Lfx;Lcee;)V setKnownState
	R ()V disconnect
	c (III)V animateTick
	a (IIIILjava/util/Random;ZLfx$a;)V doAnimateTick
	a (Lfx;Lcee;Lhf;Z)V trySpawnDripParticles
	a (Lfx;Lhf;Ldde;D)V spawnParticle
	a (DDDDDLhf;)V spawnFluidParticle
	m ()V removeAllPendingEntityRemovals
	a (Ll;)Lm; fillReportDetails
	a (Lbft;DDDLadn;Ladp;FF)V playSound
	a (Lbft;Lapx;Ladn;Ladp;FF)V playSound
	a (Lfx;Ladn;Ladp;FFZ)V playLocalSound
	a (DDDLadn;Ladp;FFZ)V playLocalSound
	a (DDDDDDLmd;)V createFireworks
	a (Loj;)V sendPacketToServer
	o ()Lboo; getRecipeManager
	a (Lddk;)V setScoreboard
	I ()Lbsl; getBlockTicks
	H ()Lbsl; getLiquidTicks
	n ()Ldwj; getChunkSource
	a (Ljava/lang/String;)Lcxu; getMapData
	a (Lcxu;)V setMapData
	t ()I getFreeMapId
	F ()Lddk; getScoreboard
	p ()Lael; getTagManager
	r ()Lgn; registryAccess
	a (Lfx;Lcee;Lcee;I)V sendBlockUpdated
	b (Lfx;Lcee;Lcee;)V setBlocksDirty
	d (III)V setSectionDirtyWithNeighbors
	a (ILfx;I)V destroyBlockProgress
	b (ILfx;I)V globalLevelEvent
	a (Lbft;ILfx;I)V levelEvent
	a (Lhf;DDDDDD)V addParticle
	a (Lhf;ZDDDDDD)V addParticle
	b (Lhf;DDDDDD)V addAlwaysVisibleParticle
	b (Lhf;ZDDDDDD)V addAlwaysVisibleParticle
	x ()Ljava/util/List; players
	a (III)Lbss; getUncachedNoiseBiome
	g (F)F getSkyDarken
	a (Lfx;F)Ldck; getSkyColor
	h (F)Ldck; getCloudColor
	i (F)F getStarBrightness
	s ()I getSkyFlashTime
	c (I)V setSkyFlashTime
	a (Lgc;Z)F getShade
	a (Lfx;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	b (Lfx;Lnet/minecraft/world/level/ColorResolver;)I calculateBlockTint
	u ()Lfx; getSharedSpawnPos
	v ()F getSharedSpawnAngle
	b (Lfx;F)V setDefaultSpawnPos
	toString ()Ljava/lang/String; toString
	w ()Ldwl$a; getLevelData
	h ()Lcya; getLevelData
	G ()Lcfw; getChunkSource
	c (Lfx;Lnet/minecraft/world/level/ColorResolver;)I lambda$getBlockTint$7
	z ()Ljava/lang/String; lambda$fillReportDetails$6
	A ()Ljava/lang/String; lambda$fillReportDetails$5
	a (Lfx$a;Lbsr;)V lambda$doAnimateTick$4
	a (Lnet/minecraft/world/level/ColorResolver;Ldkm;)V lambda$clearTintCaches$3
	a (IILnet/minecraft/world/level/ColorResolver;Ldkm;)V lambda$onChunkLoaded$2
	e (Lapx;)Ljava/lang/String; lambda$tickNonPassenger$1
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;)V lambda$new$0
dwl$1 net/minecraft/client/multiplayer/ClientLevel$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dwl$a net/minecraft/client/multiplayer/ClientLevel$ClientLevelData
	a hardcore
	b gameRules
	c isFlat
	d xSpawn
	e ySpawn
	f zSpawn
	g spawnAngle
	h gameTime
	i dayTime
	j raining
	k difficulty
	l difficultyLocked
	<init> (Laoo;ZZ)V <init>
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	b (J)V setDayTime
	a (Lfx;F)V setSpawn
	i ()Z isThundering
	k ()Z isRaining
	b (Z)V setRaining
	n ()Z isHardcore
	q ()Lbrq; getGameRules
	s ()Laoo; getDifficulty
	t ()Z isDifficultyLocked
	a (Lm;)V fillCrashReportCategory
	a (Laoo;)V setDifficulty
	a (Z)V setDifficultyLocked
	g ()D getHorizonHeight
	h ()D getClearColorScale
dwm net/minecraft/client/multiplayer/ClientPacketListener
	a LOGGER
	b GENERIC_DISCONNECT_MESSAGE
	c connection
	d localGameProfile
	e callbackScreen
	f minecraft
	g level
	h levelData
	i started
	j playerInfoMap
	k advancements
	l suggestionsProvider
	m tags
	n debugQueryHandler
	o serverChunkRadius
	p random
	q commands
	r recipeManager
	s id
	t levels
	u registryAccess
	<init> (Ldjw;Ldoq;Lnd;Lcom/mojang/authlib/GameProfile;)V <init>
	b ()Ldwn; getSuggestionsProvider
	c ()V cleanup
	d ()Lboo; getRecipeManager
	a (Lpx;)V handleLogin
	a (Lon;)V handleAddEntity
	a (Loo;)V handleAddExperienceOrb
	a (Loq;)V handleAddPainting
	a (Lrc;)V handleSetEntityMotion
	a (Lra;)V handleSetEntityData
	a (Lor;)V handleAddPlayer
	a (Lrs;)V handleTeleportEntity
	a (Lqv;)V handleSetCarriedItem
	a (Lqa;)V handleMoveEntity
	a (Lqq;)V handleRotateMob
	a (Lqm;)V handleRemoveEntity
	a (Lqk;)V handleMovePlayer
	a (Lqr;)V handleChunkBlocksUpdate
	a (Lpt;)V handleLevelChunk
	a (Lpp;)V handleForgetLevelChunk
	a (Loy;)V handleBlockUpdate
	a (Lpm;)V handleDisconnect
	a (Lnr;)V onDisconnect
	a (Loj;)V send
	a (Lrr;)V handleTakeItemEntity
	a (Lpb;)V handleChat
	a (Los;)V handleAnimate
	a (Lop;)V handleAddMob
	a (Lrk;)V handleSetTime
	a (Lqy;)V handleSetSpawn
	a (Lrh;)V handleSetEntityPassengersPacket
	a (Lrb;)V handleEntityLinkPacket
	a (Lbft;)Lbly; findTotem
	a (Lpn;)V handleEntityEvent
	a (Lrf;)V handleSetHealth
	a (Lre;)V handleSetExperience
	a (Lqp;)V handleRespawn
	a (Lpo;)V handleExplosion
	a (Lpr;)V handleHorseScreenOpen
	a (Lqd;)V handleOpenScreen
	a (Lpi;)V handleContainerSetSlot
	a (Lpe;)V handleContainerAck
	a (Lpg;)V handleContainerContent
	a (Lqe;)V handleOpenSignEditor
	a (Low;)V handleBlockEntityData
	a (Lph;)V handleContainerSetData
	a (Lrd;)V handleSetEquipment
	a (Lpf;)V handleContainerClose
	a (Lox;)V handleBlockEvent
	a (Lov;)V handleBlockDestruction
	a (Lpq;)V handleGameEvent
	a (Lpy;)V handleMapItemData
	a (Lpu;)V handleLevelEvent
	a (Lrt;)V handleUpdateAdvancementsPacket
	a (Lqs;)V handleSelectAdvancementsTab
	a (Lpd;)V handleCommands
	a (Lro;)V handleStopSoundEvent
	a (Lpc;)V handleCommandSuggestions
	a (Lrw;)V handleUpdateRecipes
	a (Lqj;)V handleLookAt
	a (Lrq;)V handleTagQueryPacket
	a (Lot;)V handleAwardStats
	a (Lql;)V handleAddOrRemoveRecipes
	a (Lrv;)V handleUpdateMobEffect
	a (Lrx;)V handleUpdateTags
	a (Lqh;)V handlePlayerCombat
	a (Lpa;)V handleChangeDifficulty
	a (Lqu;)V handleSetCamera
	a (Lqt;)V handleSetBorder
	a (Lrl;)V handleSetTitles
	a (Lrp;)V handleTabListCustomisation
	a (Lqn;)V handleRemoveMobEffect
	a (Lqi;)V handlePlayerInfo
	a (Lps;)V handleKeepAlive
	a (Lqg;)V handlePlayerAbilities
	a (Lrn;)V handleSoundEvent
	a (Lrm;)V handleSoundEntityEvent
	a (Lpl;)V handleCustomSoundEvent
	a (Lqo;)V handleResourcePack
	b (Ljava/lang/String;)Z validateResourcePackUrl
	a (Ljava/util/concurrent/CompletableFuture;)V downloadCallback
	a (Ltf$a;)V send
	a (Loz;)V handleBossUpdate
	a (Lpj;)V handleItemCooldown
	a (Lqb;)V handleMoveVehicle
	a (Lqc;)V handleOpenBook
	a (Lpk;)V handleCustomPayload
	a (Lrg;)V handleAddObjective
	a (Lrj;)V handleSetScore
	a (Lqz;)V handleSetDisplayObjective
	a (Lri;)V handleSetPlayerTeamPacket
	a (Lpv;)V handleParticleEvent
	a (Lru;)V handleUpdateAttributes
	a (Lqf;)V handlePlaceRecipe
	a (Lpw;)V handleLightUpdatePacked
	a (Lpz;)V handleMerchantOffers
	a (Lqx;)V handleSetChunkCacheRadius
	a (Lqw;)V handleSetChunkCacheCenter
	a (Lou;)V handleBlockBreakAck
	a (IILcul;Lbsc;IILjava/util/Iterator;Z)V readSectionList
	a ()Lnd; getConnection
	e ()Ljava/util/Collection; getOnlinePlayers
	a (Ljava/util/UUID;)Ldwp; getPlayerInfo
	a (Ljava/lang/String;)Ldwp; getPlayerInfo
	f ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	g ()Ldwi; getAdvancements
	h ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	i ()Ldwl; getLevel
	j ()Lael; getTags
	k ()Ldjn; getDebugQueryHandler
	l ()Ljava/util/UUID; getId
	m ()Ljava/util/Set; levels
	n ()Lgn; registryAccess
	a (Lbhz;Lbon;)V lambda$handlePlaceRecipe$9
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$downloadCallback$8
	o ()V lambda$downloadCallback$7
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$handleResourcePack$6
	a (Ljava/lang/String;Ljava/lang/String;Z)V lambda$null$5
	a (Ldjj;Ldrq;)V lambda$handleAddOrRemoveRecipes$4
	a (Ldjj;Lbon;)V lambda$handleAddOrRemoveRecipes$3
	p ()V lambda$handleGameEvent$2
	a (Lapx;Lcom/mojang/datafixers/util/Pair;)V lambda$handleSetEquipment$1
	a (ILfx;Lcee;)V lambda$handleChunkBlocksUpdate$0
	<clinit> ()V <clinit>
dwm$1 net/minecraft/client/multiplayer/ClientPacketListener$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundRecipePacket$State
	b $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetTitlesPacket$Type
	c $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
	d $SwitchMap$net$minecraft$server$ServerScoreboard$Method
	<clinit> ()V <clinit>
dwn net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	<init> (Ldwm;Ldjw;)V <init>
	l ()Ljava/util/Collection; getOnlinePlayerNames
	r ()Ljava/util/Collection; getSelectedEntities
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	c (I)Z hasPermission
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	s ()Ljava/util/Collection; getRelevantCoordinates
	t ()Ljava/util/Collection; getAbsoluteCoordinates
	p ()Ljava/util/Set; levels
	q ()Lgn; registryAccess
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
dwo net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k previousLocalPlayerMode
	l unAckedActions
	m carriedIndex
	<init> (Ldjw;Ldwm;)V <init>
	a (Lbft;)V adjustPlayer
	a (Lbrr;)V setPreviousLocalMode
	b (Lbrr;)V setLocalMode
	a ()Z canHurtPlayer
	a (Lfx;)Z destroyBlock
	a (Lfx;Lgc;)Z startDestroyBlock
	b ()V stopDestroyBlock
	b (Lfx;Lgc;)Z continueDestroyBlock
	c ()F getPickRange
	d ()V tick
	b (Lfx;)Z sameDestroyTarget
	n ()V ensureHasSentCarriedItem
	a (Ldze;Ldwl;Laoq;Ldcg;)Laor; useItemOn
	a (Lbft;Lbru;Laoq;)Laor; useItem
	a (Ldwl;Ladz;Ldjj;)Ldze; createPlayer
	a (Ldwl;Ladz;Ldjj;ZZ)Ldze; createPlayer
	a (Lbft;Lapx;)V attack
	a (Lbft;Lapx;Laoq;)Laor; interact
	a (Lbft;Lapx;Ldch;Laoq;)Laor; interactAt
	a (IIILbih;Lbft;)Lbly; handleInventoryMouseClick
	a (ILbon;Z)V handlePlaceRecipe
	a (II)V handleInventoryButtonClick
	a (Lbly;I)V handleCreativeModeItemAdd
	a (Lbly;)V handleCreativeModeItemDrop
	b (Lbft;)V releaseUsingItem
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lbrr; getPreviousPlayerMode
	l ()Lbrr; getPlayerMode
	m ()Z isDestroying
	a (I)V handlePickItem
	a (Lsz$a;Lfx;Lgc;)V sendBlockAction
	a (Ldwl;Lfx;Lcee;Lsz$a;Z)V handleBlockBreakAck
	<clinit> ()V <clinit>
dwp net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b textureLocations
	c gameMode
	d latency
	e pendingTextures
	f skinModel
	g tabListDisplayName
	h lastHealth
	i displayHealth
	j lastHealthTime
	k healthBlinkTime
	l renderVisibilityId
	<init> (Lqi$b;)V <init>
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()Lbrr; getGameMode
	a (Lbrr;)V setGameMode
	c ()I getLatency
	a (I)V setLatency
	d ()Z isCapeLoaded
	e ()Z isSkinLoaded
	f ()Ljava/lang/String; getModelName
	g ()Lvk; getSkinLocation
	h ()Lvk; getCapeLocation
	i ()Lvk; getElytraLocation
	j ()Lddi; getTeam
	k ()V registerTextures
	a (Lnr;)V setTabListDisplayName
	l ()Lnr; getTabListDisplayName
	m ()I getLastHealth
	b (I)V setLastHealth
	n ()I getDisplayHealth
	c (I)V setDisplayHealth
	o ()J getLastHealthTime
	a (J)V setLastHealthTime
	p ()J getHealthBlinkTime
	b (J)V setHealthBlinkTime
	q ()J getRenderVisibilityId
	c (J)V setRenderVisibilityId
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lvk;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTextures$0
dwq net/minecraft/client/multiplayer/ServerAddress
	a host
	b port
	<init> (Ljava/lang/String;I)V <init>
	a ()Ljava/lang/String; getHost
	b ()I getPort
	a (Ljava/lang/String;)Ldwq; parseString
	b (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lookupSrv
	a (Ljava/lang/String;I)I parseInt
dwr net/minecraft/client/multiplayer/ServerData
	a name
	b ip
	c status
	d motd
	e ping
	f protocol
	g version
	h pinged
	i playerList
	j packStatus
	k iconB64
	l lan
	<init> (Ljava/lang/String;Ljava/lang/String;Z)V <init>
	a ()Lmd; write
	b ()Ldwr$a; getResourcePackStatus
	a (Ldwr$a;)V setResourcePackStatus
	a (Lmd;)Ldwr; read
	c ()Ljava/lang/String; getIconB64
	a (Ljava/lang/String;)V setIconB64
	d ()Z isLan
	a (Ldwr;)V copyFrom
dwr$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	values ()[Ldwr$a; values
	valueOf (Ljava/lang/String;)Ldwr$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Lnr; getName
	<clinit> ()V <clinit>
dws net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b minecraft
	c serverList
	<init> (Ldjw;)V <init>
	a ()V load
	b ()V save
	a (I)Ldwr; get
	a (Ldwr;)V remove
	b (Ldwr;)V add
	c ()I size
	a (II)V swap
	a (ILdwr;)V replace
	c (Ldwr;)V saveSingleServer
	<clinit> ()V <clinit>
dwt net/minecraft/client/multiplayer/ServerStatusPinger
	a SPLITTER
	b LOGGER
	c connections
	<init> ()V <init>
	a (Ldwr;Ljava/lang/Runnable;)V pingServer
	a (Ldwr;)V pingLegacyServer
	b (II)Lnr; formatPlayerCount
	a ()V tick
	b ()V removeAll
	a (II)Lnr; access$000
	c ()Lorg/apache/logging/log4j/Logger; access$100
	a (Ldwt;Ldwr;)V access$200
	d ()Lcom/google/common/base/Splitter; access$300
	<clinit> ()V <clinit>
dwt$1 net/minecraft/client/multiplayer/ServerStatusPinger$1
	e success
	f receivedPing
	g pingStart
	a val$connection
	b val$data
	c val$onPersistentDataChange
	d this$0
	<init> (Ldwt;Lnd;Ldwr;Ljava/lang/Runnable;)V <init>
	a (Lum;)V handleStatusResponse
	a (Lul;)V handlePongResponse
	a (Lnr;)V onDisconnect
	a ()Lnd; getConnection
dwt$2 net/minecraft/client/multiplayer/ServerStatusPinger$2
	a val$address
	b val$data
	c this$0
	<init> (Ldwt;Ldwq;Ldwr;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
dwt$2$1 net/minecraft/client/multiplayer/ServerStatusPinger$2$1
	a this$1
	<init> (Ldwt$2;)V <init>
	channelActive (Lio/netty/channel/ChannelHandlerContext;)V channelActive
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V channelRead0
	exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V exceptionCaught
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead0
dwu net/minecraft/client/multiplayer/package-info
dwv net/minecraft/client/package-info
dww net/minecraft/client/particle/AshParticle
	<init> (Ldwl;DDDDDDFLdyo;)V <init>
dww$a net/minecraft/client/particle/AshParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dwx net/minecraft/client/particle/AttackSweepParticle
	a sprites
	<init> (Ldwl;DDDDLdyo;)V <init>
	a (F)I getLightColor
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDLdyo;Ldwx$1;)V <init>
dwx$1 net/minecraft/client/particle/AttackSweepParticle$1
dwx$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dwy net/minecraft/client/particle/BarrierParticle
	<init> (Ldwl;DDDLbrt;)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	<init> (Ldwl;DDDLbrt;Ldwy$1;)V <init>
dwy$1 net/minecraft/client/particle/BarrierParticle$1
dwy$a net/minecraft/client/particle/BarrierParticle$Provider
	<init> ()V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dwz net/minecraft/client/particle/BaseAshSmokeParticle
	a sprites
	b fallSpeed
	<init> (Ldwl;DDDFFFDDDFLdyo;FIDZ)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	a ()V tick
dxa net/minecraft/client/particle/BreakingItemParticle
	a uo
	b vo
	<init> (Ldwl;DDDDDDLbly;)V <init>
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDLbly;)V <init>
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	<init> (Ldwl;DDDDDDLbly;Ldxa$1;)V <init>
dxa$1 net/minecraft/client/particle/BreakingItemParticle$1
dxa$a net/minecraft/client/particle/BreakingItemParticle$Provider
	<init> ()V <init>
	a (Lhe;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxa$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	<init> ()V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxa$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	<init> ()V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxb net/minecraft/client/particle/BubbleColumnUpParticle
	<init> (Ldwl;DDDDDD)V <init>
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDDDLdxb$1;)V <init>
dxb$1 net/minecraft/client/particle/BubbleColumnUpParticle$1
dxb$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxc net/minecraft/client/particle/BubbleParticle
	<init> (Ldwl;DDDDDD)V <init>
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDDDLdxc$1;)V <init>
dxc$1 net/minecraft/client/particle/BubbleParticle$1
dxc$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxd net/minecraft/client/particle/BubblePopParticle
	a sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDDDLdyo;Ldxd$1;)V <init>
dxd$1 net/minecraft/client/particle/BubblePopParticle$1
dxd$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxe net/minecraft/client/particle/CampfireSmokeParticle
	<init> (Ldwl;DDDDDDZ)V <init>
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDDDZLdxe$1;)V <init>
dxe$1 net/minecraft/client/particle/CampfireSmokeParticle$1
dxe$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxe$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxf net/minecraft/client/particle/CritParticle
	<init> (Ldwl;DDDDDD)V <init>
	b (F)F getQuadSize
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDDDLdxf$1;)V <init>
dxf$1 net/minecraft/client/particle/CritParticle$1
dxf$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxf$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxf$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxg net/minecraft/client/particle/DragonBreathParticle
	a hasHitGround
	b sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	<init> (Ldwl;DDDDDDLdyo;Ldxg$1;)V <init>
dxg$1 net/minecraft/client/particle/DragonBreathParticle$1
dxg$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh net/minecraft/client/particle/DripParticle
	b type
	a isGlowing
	<init> (Ldwl;DDDLcut;)V <init>
	b ()Ldyc; getRenderType
	a (F)I getLightColor
	a ()V tick
	g ()V preMoveUpdate
	h ()V postMoveUpdate
	<init> (Ldwl;DDDLcut;Ldxh$1;)V <init>
dxh$1 net/minecraft/client/particle/DripParticle$1
dxh$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	<init> (Ldwl;DDDLcut;Lhf;)V <init>
	g ()V preMoveUpdate
	<init> (Ldwl;DDDLcut;Lhf;Ldxh$1;)V <init>
dxh$b net/minecraft/client/particle/DripParticle$DripHangParticle
	b fallingParticle
	<init> (Ldwl;DDDLcut;Lhf;)V <init>
	g ()V preMoveUpdate
	h ()V postMoveUpdate
	<init> (Ldwl;DDDLcut;Lhf;Ldxh$1;)V <init>
dxh$c net/minecraft/client/particle/DripParticle$DripLandParticle
	<init> (Ldwl;DDDLcut;)V <init>
	<init> (Ldwl;DDDLcut;Ldxh$1;)V <init>
dxh$d net/minecraft/client/particle/DripParticle$FallAndLandParticle
	b landParticle
	<init> (Ldwl;DDDLcut;Lhf;)V <init>
	h ()V postMoveUpdate
	<init> (Ldwl;DDDLcut;Lhf;Ldxh$1;)V <init>
dxh$e net/minecraft/client/particle/DripParticle$FallingParticle
	<init> (Ldwl;DDDLcut;)V <init>
	h ()V postMoveUpdate
	<init> (Ldwl;DDDLcut;Ldxh$1;)V <init>
dxh$f net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle
	<init> (Ldwl;DDDLcut;Lhf;)V <init>
	h ()V postMoveUpdate
	<init> (Ldwl;DDDLcut;Lhf;Ldxh$1;)V <init>
dxh$g net/minecraft/client/particle/DripParticle$HoneyFallProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$h net/minecraft/client/particle/DripParticle$HoneyHangProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$i net/minecraft/client/particle/DripParticle$HoneyLandProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$j net/minecraft/client/particle/DripParticle$LavaFallProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$k net/minecraft/client/particle/DripParticle$LavaHangProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$l net/minecraft/client/particle/DripParticle$LavaLandProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$m net/minecraft/client/particle/DripParticle$NectarFallProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$n net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$o net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$p net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$q net/minecraft/client/particle/DripParticle$WaterFallProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxh$r net/minecraft/client/particle/DripParticle$WaterHangProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxi net/minecraft/client/particle/DustParticle
	a sprites
	<init> (Ldwl;DDDDDDLhd;Ldyo;)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDDDDLhd;Ldyo;Ldxi$1;)V <init>
dxi$1 net/minecraft/client/particle/DustParticle$1
dxi$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhd;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxj net/minecraft/client/particle/EnchantmentTableParticle
	a xStart
	b yStart
	D zStart
	<init> (Ldwl;DDDDDD)V <init>
	b ()Ldyc; getRenderType
	a (DDD)V move
	a (F)I getLightColor
	a ()V tick
	<init> (Ldwl;DDDDDDLdxj$1;)V <init>
dxj$1 net/minecraft/client/particle/EnchantmentTableParticle$1
dxj$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxj$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxk net/minecraft/client/particle/EndRodParticle
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	a (DDD)V move
	<init> (Ldwl;DDDDDDLdyo;Ldxk$1;)V <init>
dxk$1 net/minecraft/client/particle/EndRodParticle$1
dxk$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxl net/minecraft/client/particle/ExplodeParticle
	a sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
dxl$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxm net/minecraft/client/particle/FallingDustParticle
	a rotSpeed
	b sprites
	<init> (Ldwl;DDDFFFLdyo;)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDFFFLdyo;Ldxm$1;)V <init>
dxm$1 net/minecraft/client/particle/FallingDustParticle$1
dxm$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhc;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxn net/minecraft/client/particle/FireworkParticles
	<init> ()V <init>
dxn$1 net/minecraft/client/particle/FireworkParticles$1
	a $SwitchMap$net$minecraft$world$item$FireworkRocketItem$Shape
	<clinit> ()V <clinit>
dxn$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxn$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	<init> (Ldwl;DDD)V <init>
	b ()Ldyc; getRenderType
	a (Ldfn;Ldjh;F)V render
	b (F)F getQuadSize
	<init> (Ldwl;DDDLdxn$1;)V <init>
dxn$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	b trail
	D flicker
	E engine
	F fadeR
	G fadeG
	H fadeB
	I hasFade
	<init> (Ldwl;DDDDDDLdya;Ldyo;)V <init>
	a (Z)V setTrail
	b (Z)V setFlicker
	a (Ldfn;Ldjh;F)V render
	a ()V tick
	<init> (Ldwl;DDDDDDLdya;Ldyo;Ldxn$1;)V <init>
dxn$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxn$e net/minecraft/client/particle/FireworkParticles$Starter
	a life
	b engine
	B explosions
	C twinkleDelay
	<init> (Ldwl;DDDDDDLdya;Lmd;)V <init>
	a ()V tick
	c ()Z isFarAwayFromCamera
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
dxo net/minecraft/client/particle/FlameParticle
	<init> (Ldwl;DDDDDD)V <init>
	b ()Ldyc; getRenderType
	a (DDD)V move
	b (F)F getQuadSize
	a (F)I getLightColor
	<init> (Ldwl;DDDDDDLdxo$1;)V <init>
dxo$1 net/minecraft/client/particle/FlameParticle$1
dxo$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxp net/minecraft/client/particle/HeartParticle
	<init> (Ldwl;DDD)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDLdxp$1;)V <init>
dxp$1 net/minecraft/client/particle/HeartParticle$1
dxp$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxp$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxq net/minecraft/client/particle/HugeExplosionParticle
	a sprites
	<init> (Ldwl;DDDDLdyo;)V <init>
	a (F)I getLightColor
	a ()V tick
	b ()Ldyc; getRenderType
	<init> (Ldwl;DDDDLdyo;Ldxq$1;)V <init>
dxq$1 net/minecraft/client/particle/HugeExplosionParticle$1
dxq$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxr net/minecraft/client/particle/HugeExplosionSeedParticle
	a life
	b lifeTime
	<init> (Ldwl;DDD)V <init>
	a ()V tick
	<init> (Ldwl;DDDLdxr$1;)V <init>
dxr$1 net/minecraft/client/particle/HugeExplosionSeedParticle$1
dxr$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	<init> ()V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxs net/minecraft/client/particle/ItemPickupParticle
	a renderBuffers
	b itemEntity
	B target
	C life
	D entityRenderDispatcher
	<init> (Leel;Leae;Ldwl;Lapx;Lapx;)V <init>
	<init> (Leel;Leae;Ldwl;Lapx;Lapx;Ldck;)V <init>
	a (Lapx;)Lapx; getSafeCopy
	b ()Ldyc; getRenderType
	a (Ldfn;Ldjh;F)V render
	a ()V tick
dxt net/minecraft/client/particle/LargeSmokeParticle
	<init> (Ldwl;DDDDDDLdyo;)V <init>
dxt$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxu net/minecraft/client/particle/LavaParticle
	<init> (Ldwl;DDD)V <init>
	b ()Ldyc; getRenderType
	a (F)I getLightColor
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDLdxu$1;)V <init>
dxu$1 net/minecraft/client/particle/LavaParticle$1
dxu$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxv net/minecraft/client/particle/MobAppearanceParticle
	a model
	b renderType
	<init> (Ldwl;DDD)V <init>
	b ()Ldyc; getRenderType
	a (Ldfn;Ldjh;F)V render
	<init> (Ldwl;DDDLdxv$1;)V <init>
dxv$1 net/minecraft/client/particle/MobAppearanceParticle$1
dxv$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	<init> ()V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxw net/minecraft/client/particle/NoRenderParticle
	<init> (Ldwl;DDD)V <init>
	<init> (Ldwl;DDDDDD)V <init>
	a (Ldfn;Ldjh;F)V render
	b ()Ldyc; getRenderType
dxx net/minecraft/client/particle/NoteParticle
	<init> (Ldwl;DDDD)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDDLdxx$1;)V <init>
dxx$1 net/minecraft/client/particle/NoteParticle$1
dxx$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dxy net/minecraft/client/particle/Particle
	a INITIAL_AABB
	c level
	d xo
	e yo
	f zo
	g x
	h y
	i z
	j xd
	k yd
	l zd
	b bb
	m onGround
	n hasPhysics
	B stoppedByCollision
	o removed
	p bbWidth
	q bbHeight
	r random
	s age
	t lifetime
	u gravity
	v rCol
	w gCol
	x bCol
	y alpha
	z roll
	A oRoll
	<init> (Ldwl;DDD)V <init>
	<init> (Ldwl;DDDDDD)V <init>
	c (F)Ldxy; setPower
	d (F)Ldxy; scale
	a (FFF)V setColor
	e (F)V setAlpha
	a (I)V setLifetime
	i ()I getLifetime
	a ()V tick
	a (Ldfn;Ldjh;F)V render
	b ()Ldyc; getRenderType
	toString ()Ljava/lang/String; toString
	j ()V remove
	a (FF)V setSize
	b (DDD)V setPos
	a (DDD)V move
	k ()V setLocationFromBoundingbox
	a (F)I getLightColor
	l ()Z isAlive
	m ()Ldcf; getBoundingBox
	a (Ldcf;)V setBoundingBox
	<clinit> ()V <clinit>
dxz net/minecraft/client/particle/ParticleDescription
	a textures
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonObject;)Ldxz; fromJson
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; lambda$fromJson$0
dya net/minecraft/client/particle/ParticleEngine
	b RENDER_ORDER
	a level
	c particles
	d trackingEmitters
	e textureManager
	f random
	g providers
	h particlesToAdd
	i spriteSets
	j textureAtlas
	<init> (Ldwl;Lejv;)V <init>
	e ()V registerProviders
	a (Lhg;Ldyb;)V register
	a (Lhg;Ldya$b;)V register
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a ()V close
	a (Lacf;Lvk;Ljava/util/Map;)V loadParticleDescription
	a (Lapx;Lhf;)V createTrackingEmitter
	a (Lapx;Lhf;I)V createTrackingEmitter
	a (Lhf;DDDDDD)Ldxy; createParticle
	b (Lhf;DDDDDD)Ldxy; makeParticle
	a (Ldxy;)V add
	b ()V tick
	a (Ljava/util/Collection;)V tickParticleList
	b (Ldxy;)V tickParticle
	a (Ldfj;Ldzy$a;Ldzx;Ldjh;F)V render
	a (Ldwl;)V setLevel
	a (Lfx;Lcee;)V destroy
	a (Lfx;Lgc;)V crack
	d ()Ljava/lang/String; countParticles
	a (Lfx;Lcee;DDDDDD)V lambda$destroy$9
	a (Ldyc;)Ljava/util/Queue; lambda$tick$8
	a (Ldyc;Ljava/util/Queue;)V lambda$tick$7
	a (Lvk;)Lvk; lambda$loadParticleDescription$6
	a (Lant;Ljava/util/Map;Lejt$a;)V lambda$reload$5
	a (Leju;Lvk;Ljava/util/List;)V lambda$null$4
	a (Lant;Lacf;Ljava/util/Map;Ljava/lang/Void;)Lejt$a; lambda$reload$3
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$reload$2
	a (Lacf;Ljava/util/Map;Ljava/util/concurrent/Executor;Lvk;)Ljava/util/concurrent/CompletableFuture; lambda$reload$1
	b (Lacf;Lvk;Ljava/util/Map;)V lambda$null$0
	<clinit> ()V <clinit>
dya$1 net/minecraft/client/particle/ParticleEngine$1
dya$a net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	b sprites
	a this$0
	<init> (Ldya;)V <init>
	a (II)Leju; get
	a (Ljava/util/Random;)Leju; get
	a (Ljava/util/List;)V rebind
	<init> (Ldya;Ldya$1;)V <init>
dya$b net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
	create (Ldyo;)Ldyb; create
dyb net/minecraft/client/particle/ParticleProvider
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyc net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	<clinit> ()V <clinit>
dyc$1 net/minecraft/client/particle/ParticleRenderType$1
	<init> ()V <init>
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	toString ()Ljava/lang/String; toString
dyc$2 net/minecraft/client/particle/ParticleRenderType$2
	<init> ()V <init>
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	toString ()Ljava/lang/String; toString
dyc$3 net/minecraft/client/particle/ParticleRenderType$3
	<init> ()V <init>
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	toString ()Ljava/lang/String; toString
dyc$4 net/minecraft/client/particle/ParticleRenderType$4
	<init> ()V <init>
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	toString ()Ljava/lang/String; toString
dyc$5 net/minecraft/client/particle/ParticleRenderType$5
	<init> ()V <init>
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	toString ()Ljava/lang/String; toString
dyc$6 net/minecraft/client/particle/ParticleRenderType$6
	<init> ()V <init>
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
	toString ()Ljava/lang/String; toString
dyd net/minecraft/client/particle/PlayerCloudParticle
	a sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDDDDLdyo;Ldyd$1;)V <init>
dyd$1 net/minecraft/client/particle/PlayerCloudParticle$1
dyd$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyd$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dye net/minecraft/client/particle/PortalParticle
	a xStart
	b yStart
	D zStart
	<init> (Ldwl;DDDDDD)V <init>
	b ()Ldyc; getRenderType
	a (DDD)V move
	b (F)F getQuadSize
	a (F)I getLightColor
	a ()V tick
dye$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyf net/minecraft/client/particle/ReversePortalParticle
	<init> (Ldwl;DDDDDD)V <init>
	b (F)F getQuadSize
	a ()V tick
	<init> (Ldwl;DDDDDDLdyf$1;)V <init>
dyf$1 net/minecraft/client/particle/ReversePortalParticle$1
dyf$a net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyg net/minecraft/client/particle/RisingParticle
	<init> (Ldwl;DDDDDD)V <init>
	a ()V tick
dyh net/minecraft/client/particle/SimpleAnimatedParticle
	a sprites
	b baseGravity
	D baseAirFriction
	E fadeR
	F fadeG
	G fadeB
	H hasFade
	<init> (Ldwl;DDDLdyo;F)V <init>
	b (I)V setColor
	c (I)V setFadeColor
	b ()Ldyc; getRenderType
	a ()V tick
	a (F)I getLightColor
	f (F)V setBaseAirFriction
dyi net/minecraft/client/particle/SingleQuadParticle
	B quadSize
	<init> (Ldwl;DDD)V <init>
	<init> (Ldwl;DDDDDD)V <init>
	a (Ldfn;Ldjh;F)V render
	b (F)F getQuadSize
	d (F)Ldxy; scale
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
dyj net/minecraft/client/particle/SmokeParticle
	<init> (Ldwl;DDDDDDFLdyo;)V <init>
dyj$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyk net/minecraft/client/particle/SoulParticle
	a sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
	<init> (Ldwl;DDDDDDLdyo;Ldyk$1;)V <init>
dyk$1 net/minecraft/client/particle/SoulParticle$1
dyk$a net/minecraft/client/particle/SoulParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyl net/minecraft/client/particle/SpellParticle
	a RANDOM
	b sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
	<init> (Ldwl;DDDDDDLdyo;Ldyl$1;)V <init>
	<clinit> ()V <clinit>
dyl$1 net/minecraft/client/particle/SpellParticle$1
dyl$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyl$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyl$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyl$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyl$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dym net/minecraft/client/particle/SpitParticle
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	a ()V tick
	<init> (Ldwl;DDDDDDLdyo;Ldym$1;)V <init>
dym$1 net/minecraft/client/particle/SpitParticle$1
dym$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyn net/minecraft/client/particle/SplashParticle
	<init> (Ldwl;DDDDDD)V <init>
	<init> (Ldwl;DDDDDDLdyn$1;)V <init>
dyn$1 net/minecraft/client/particle/SplashParticle$1
dyn$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyo net/minecraft/client/particle/SpriteSet
	a (II)Leju; get
	a (Ljava/util/Random;)Leju; get
dyp net/minecraft/client/particle/SquidInkParticle
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	a ()V tick
	<init> (Ldwl;DDDDDDLdyo;Ldyp$1;)V <init>
dyp$1 net/minecraft/client/particle/SquidInkParticle$1
dyp$a net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyq net/minecraft/client/particle/SuspendedParticle
	<init> (Ldwl;DDD)V <init>
	<init> (Ldwl;DDDDDD)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
	<init> (Ldwl;DDDLdyq$1;)V <init>
	<init> (Ldwl;DDDDDDLdyq$1;)V <init>
dyq$1 net/minecraft/client/particle/SuspendedParticle$1
dyq$a net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyq$b net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyq$c net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyr net/minecraft/client/particle/SuspendedTownParticle
	<init> (Ldwl;DDDDDD)V <init>
	b ()Ldyc; getRenderType
	a (DDD)V move
	a ()V tick
	<init> (Ldwl;DDDDDDLdyr$1;)V <init>
dyr$1 net/minecraft/client/particle/SuspendedTownParticle$1
dyr$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyr$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyr$c net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyr$d net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dys net/minecraft/client/particle/TerrainParticle
	a blockState
	b pos
	D uo
	E vo
	<init> (Ldwl;DDDDDDLcee;)V <init>
	b ()Ldyc; getRenderType
	a (Lfx;)Ldys; init
	g ()Ldys; init
	b (Lfx;)V multiplyColor
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	a (F)I getLightColor
dys$a net/minecraft/client/particle/TerrainParticle$Provider
	<init> ()V <init>
	a (Lhc;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyt net/minecraft/client/particle/TextureSheetParticle
	C sprite
	<init> (Ldwl;DDD)V <init>
	<init> (Ldwl;DDDDDD)V <init>
	a (Leju;)V setSprite
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	a (Ldyo;)V pickSprite
	b (Ldyo;)V setSpriteFromAge
dyu net/minecraft/client/particle/TotemParticle
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	<init> (Ldwl;DDDDDDLdyo;Ldyu$1;)V <init>
dyu$1 net/minecraft/client/particle/TotemParticle$1
dyu$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyv net/minecraft/client/particle/TrackingEmitter
	a entity
	b life
	B lifeTime
	C particleType
	<init> (Ldwl;Lapx;Lhf;)V <init>
	<init> (Ldwl;Lapx;Lhf;I)V <init>
	<init> (Ldwl;Lapx;Lhf;ILdck;)V <init>
	a ()V tick
dyw net/minecraft/client/particle/WakeParticle
	a sprites
	<init> (Ldwl;DDDDDDLdyo;)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
	<init> (Ldwl;DDDDDDLdyo;Ldyw$1;)V <init>
dyw$1 net/minecraft/client/particle/WakeParticle$1
dyw$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyx net/minecraft/client/particle/WaterCurrentDownParticle
	a angle
	<init> (Ldwl;DDD)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
	<init> (Ldwl;DDDLdyx$1;)V <init>
dyx$1 net/minecraft/client/particle/WaterCurrentDownParticle$1
dyx$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyy net/minecraft/client/particle/WaterDropParticle
	<init> (Ldwl;DDD)V <init>
	b ()Ldyc; getRenderType
	a ()V tick
dyy$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dyz net/minecraft/client/particle/WhiteAshParticle
	<init> (Ldwl;DDDDDDFLdyo;)V <init>
dyz$a net/minecraft/client/particle/WhiteAshParticle$Provider
	a sprites
	<init> (Ldyo;)V <init>
	a (Lhi;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lhf;Ldwl;DDDDDD)Ldxy; createParticle
dza net/minecraft/client/particle/package-info
dzb net/minecraft/client/player/AbstractClientPlayer
	e playerInfo
	a elytraRotX
	b elytraRotY
	c elytraRotZ
	d clientLevel
	<init> (Ldwl;Lcom/mojang/authlib/GameProfile;)V <init>
	a_ ()Z isSpectator
	b_ ()Z isCreative
	c ()Z isCapeLoaded
	f ()Ldwp; getPlayerInfo
	n ()Z isSkinLoaded
	o ()Lvk; getSkinTextureLocation
	p ()Lvk; getCloakTextureLocation
	q ()Z isElytraLoaded
	r ()Lvk; getElytraTextureLocation
	a (Lvk;Ljava/lang/String;)Lejl; registerSkinTexture
	d (Ljava/lang/String;)Lvk; getSkinLocation
	e (Ljava/lang/String;)Lvk; getSkullPath
	u ()Ljava/lang/String; getModelName
	v ()F getFieldOfViewModifier
dzc net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h shiftKeyDown
	<init> ()V <init>
	a (Z)V tick
	a ()Ldcj; getMoveVector
	b ()Z hasForwardImpulse
dzd net/minecraft/client/player/KeyboardInput
	i options
	<init> (Ldka;)V <init>
	a (Z)V tick
dze net/minecraft/client/player/LocalPlayer
	e connection
	bR stats
	bS recipeBook
	bT ambientSoundHandlers
	bU permissionLevel
	bV xLast
	bW yLast1
	bX zLast
	bY yRotLast
	bZ xRotLast
	ca lastOnGround
	cb crouching
	cc wasShiftKeyDown
	cd wasSprinting
	ce positionReminder
	cf flashOnSetHealth
	cg serverBrand
	f input
	g minecraft
	bJ sprintTriggerTime
	bK sprintTime
	bL yBob
	bM xBob
	bN yBobO
	bO xBobO
	ch jumpRidingTicks
	ci jumpRidingScale
	bP portalTime
	bQ oPortalTime
	cj startedUsingItem
	ck usingItemHand
	cl handsBusy
	cm autoJumpEnabled
	cn autoJumpTime
	co wasFallFlying
	cp waterVisionTime
	cq showDeathScreen
	<init> (Ldjw;Ldwl;Ldwm;Ladz;Ldjj;ZZ)V <init>
	a (Laph;F)Z hurt
	b (F)V heal
	a (Lapx;Z)Z startRiding
	be ()V removeVehicle
	g (F)F getViewXRot
	h (F)F getViewYRot
	j ()V tick
	w ()F getCurrentMood
	O ()V sendPosition
	a (Z)Z drop
	f (Ljava/lang/String;)V chat
	a (Laoq;)V swing
	ex ()V respawn
	e (Laph;F)V actuallyHurt
	m ()V closeContainer
	x ()V clientSideCloseContainer
	v (F)V hurtTo
	t ()V onUpdateAbilities
	ey ()Z isLocalPlayer
	ed ()Z isSuppressingSlidingDownLadder
	aN ()Z canSpawnSprintParticle
	cM ()Z canSpawnSoulSpeedParticle
	z ()V sendRidingJump
	A ()V sendOpenInventory
	g (Ljava/lang/String;)V setServerBrand
	B ()Ljava/lang/String; getServerBrand
	D ()Ladz; getStats
	F ()Ldjj; getRecipeBook
	a (Lbon;)V removeRecipeHighlight
	y ()I getPermissionLevel
	a (I)V setPermissionLevel
	a (Lnr;Z)V displayClientMessage
	b (DD)V moveTowardsClosestSpace
	g (Lfx;)Z suffocatesAt
	g (Z)V setSprinting
	a (FII)V setExperienceValues
	a (Lnr;Ljava/util/UUID;)V sendMessage
	a (B)V handleEntityEvent
	b (Z)V setShowDeathScreen
	G ()Z shouldShowDeathScreen
	a (Ladn;FF)V playSound
	a (Ladn;Ladp;FF)V playNotifySound
	dR ()Z isEffectiveAi
	c (Laoq;)V startUsingItem
	dV ()Z isUsingItem
	eb ()V stopUsingItem
	dW ()Laoq; getUsedItemHand
	a (Lus;)V onSyncedDataUpdated
	H ()Z isRidingJumpable
	I ()F getJumpRidingScale
	a (Lcdc;)V openTextEdit
	a (Lbqv;)V openMinecartCommandBlock
	a (Lccl;)V openCommandBlock
	a (Lcdg;)V openStructureBlock
	a (Lccw;)V openJigsawBlock
	a (Lbly;Laoq;)V openItemGui
	a (Lapx;)V crit
	b (Lapx;)V magicCrit
	bt ()Z isShiftKeyDown
	by ()Z isCrouching
	J ()Z isMovingSlowly
	dO ()V serverAiStep
	K ()Z isControlledCamera
	k ()V aiStep
	eV ()V handleNetherPortalClient
	aZ ()V rideTick
	L ()Z isHandsBusy
	c (Lapp;)Lapr; removeEffectNoUpdate
	a (Laqo;Ldck;)V move
	M ()Z isAutoJumpEnabled
	g (FF)V updateAutoJump
	eW ()Z canAutoJump
	eX ()Z isMoving
	eY ()Z hasEnoughImpulseToStartSprinting
	N ()F getWaterVision
	aH ()Z isUnderWater
	es ()Z updateIsUnderwater
	o (F)Ldck; getRopeHoldPosition
	a (Ldde;)Ljava/util/stream/Stream; lambda$updateAutoJump$2
	c (Lapx;)Z lambda$updateAutoJump$1
	a (Lcee;Lfx;)Z lambda$suffocatesAt$0
dzf net/minecraft/client/player/RemotePlayer
	<init> (Ldwl;Lcom/mojang/authlib/GameProfile;)V <init>
	a (D)Z shouldRenderAtSqrDistance
	a (Laph;F)Z hurt
	j ()V tick
	k ()V aiStep
	et ()V updatePlayerPose
	a (Lnr;Ljava/util/UUID;)V sendMessage
dzg net/minecraft/client/player/inventory/Hotbar
	a items
	<init> ()V <init>
	delegate ()Ljava/util/List; delegate
	a ()Lmj; createTag
	a (Lmj;)V fromTag
	isEmpty ()Z isEmpty
	delegate ()Ljava/util/Collection; delegate
	delegate ()Ljava/lang/Object; delegate
dzh net/minecraft/client/player/inventory/package-info
dzi net/minecraft/client/player/package-info
dzj net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	<init> ()V <init>
	a (Lbqx;Lfx;Lnet/minecraft/world/level/ColorResolver;)I getAverageColor
	a (Lbqx;Lfx;)I getAverageGrassColor
	b (Lbqx;Lfx;)I getAverageFoliageColor
	c (Lbqx;Lfx;)I getAverageWaterColor
	a (Lbss;DD)I lambda$static$1
	b (Lbss;DD)I lambda$static$0
	<clinit> ()V <clinit>
dzk net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer
	b SHULKER_BOXES
	c DEFAULT_SHULKER_BOX
	a instance
	d chest
	e trappedChest
	f enderChest
	g banner
	h bed
	i conduit
	j shieldModel
	k tridentModel
	<init> ()V <init>
	a (Lbly;Lebe$b;Ldfj;Ldzy;II)V renderByItem
	a (I)[Lcdb; lambda$static$0
	<clinit> ()V <clinit>
dzl net/minecraft/client/renderer/ChunkBufferBuilderPack
	a builders
	<init> ()V <init>
	a (Leag;)Ldfe; builder
	a ()V clearAll
	b ()V discardAll
	b (Leag;)Ldfe; lambda$new$1
	c (Leag;)Leag; lambda$new$0
dzm net/minecraft/client/renderer/CubeMap
	a images
	<init> (Lvk;)V <init>
	a (Ldjw;FFF)V render
	a (Lejv;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
dzn net/minecraft/client/renderer/DimensionSpecialEffects
	a EFFECTS
	b sunriseCol
	c cloudLevel
	d hasGround
	e skyType
	f forceBrightLightmap
	g constantAmbientLight
	<init> (FZLdzn$d;ZZ)V <init>
	a (Lcha;)Ldzn; forType
	a (FF)[F getSunriseColor
	a ()F getCloudHeight
	b ()Z hasGround
	a (Ldck;F)Ldck; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
	c ()Ldzn$d; skyType
	d ()Z forceBrightLightmap
	e ()Z constantAmbientLight
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;)V lambda$static$0
	<clinit> ()V <clinit>
dzn$a net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects
	<init> ()V <init>
	a (Ldck;F)Ldck; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
	a (FF)[F getSunriseColor
dzn$b net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects
	<init> ()V <init>
	a (Ldck;F)Ldck; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
dzn$c net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects
	<init> ()V <init>
	a (Ldck;F)Ldck; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
dzn$d net/minecraft/client/renderer/DimensionSpecialEffects$SkyType
	a NONE
	b NORMAL
	c END
	d $VALUES
	values ()[Ldzn$d; values
	valueOf (Ljava/lang/String;)Ldzn$d; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dzo net/minecraft/client/renderer/EffectInstance
	a LOGGER
	b DUMMY_UNIFORM
	c lastAppliedEffect
	d lastProgramId
	e samplerMap
	f samplerNames
	g samplerLocations
	h uniforms
	i uniformLocations
	j uniformMap
	k programId
	l name
	m dirty
	n blend
	o attributes
	p attributeNames
	q vertexProgram
	r fragmentProgram
	<init> (Lacf;Ljava/lang/String;)V <init>
	a (Lacf;Ldfb$a;Ljava/lang/String;)Ldfb; getOrCreate
	a (Lcom/google/gson/JsonObject;)Ldez; parseBlendNode
	close ()V close
	e ()V clear
	f ()V apply
	b ()V markDirty
	a (Ljava/lang/String;)Ldfd; getUniform
	b (Ljava/lang/String;)Ldey; safeGetUniform
	h ()V updateLocations
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;)V setSampler
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	c ()Ldfb; getVertexProgram
	d ()Ldfb; getFragmentProgram
	g ()Ljava/lang/String; getName
	a ()I getId
	<clinit> ()V <clinit>
dzp net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	values ()[Ldzp; values
	valueOf (Ljava/lang/String;)Ldzp; valueOf
	a (Lgc;)Ldzp; fromFacing
	<init> (Ljava/lang/String;I[Ldzp$b;)V <init>
	a (I)Ldzp$b; getVertexInfo
	a ([Ldzp;)V lambda$static$0
	<clinit> ()V <clinit>
dzp$1 net/minecraft/client/renderer/FaceInfo$1
dzp$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
	<init> ()V <init>
	<clinit> ()V <clinit>
dzp$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
	<init> (III)V <init>
	<init> (IIILdzp$1;)V <init>
dzq net/minecraft/client/renderer/FogRenderer
	a fogRed
	b fogGreen
	c fogBlue
	d targetBiomeFog
	e previousBiomeFog
	f biomeChangedTime
	<init> ()V <init>
	a (Ldjh;FLdwl;IF)V setupColor
	a ()V setupNoFog
	a (Ldjh;Ldzq$a;FZ)V setupFog
	b ()V levelFogColor
	a (Ldwl;Lbsu;FIII)Ldck; lambda$setupColor$0
	<clinit> ()V <clinit>
dzq$a net/minecraft/client/renderer/FogRenderer$FogMode
	a FOG_SKY
	b FOG_TERRAIN
	c $VALUES
	values ()[Ldzq$a; values
	valueOf (Ljava/lang/String;)Ldzq$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dzr net/minecraft/client/renderer/GameRenderer
	c NAUSEA_LOCATION
	d LOGGER
	e minecraft
	f resourceManager
	g random
	h renderDistance
	a itemInHandRenderer
	i mapRenderer
	j renderBuffers
	k tick
	l fov
	m oldFov
	n darkenWorldAmount
	o darkenWorldAmountO
	p renderHand
	q renderBlockOutline
	r lastScreenshotAttempt
	s lastActiveTime
	t lightTexture
	u overlayTexture
	v panoramicMode
	w zoom
	x zoomX
	y zoomY
	z itemActivationItem
	A itemActivationTicks
	B itemActivationOffX
	C itemActivationOffY
	D postEffect
	E EFFECTS
	b EFFECT_NONE
	F effectIndex
	G effectActive
	H mainCamera
	<init> (Ldjw;Lacf;Leae;)V <init>
	close ()V close
	a (Z)V setRenderHand
	b (Z)V setRenderBlockOutline
	c (Z)V setPanoramicMode
	a ()V shutdownEffect
	b ()V togglePostEffect
	a (Lapx;)V checkEntityPostEffect
	d ()V cycleEffect
	a (Lvk;)V loadEffect
	a (Lacf;)V onResourceManagerReload
	e ()V tick
	f ()Leab; currentEffect
	a (II)V resize
	a (F)V pick
	n ()V tickFov
	b (Ldjh;FZ)D getFov
	a (Ldfj;F)V bobHurt
	b (Ldfj;F)V bobView
	a (FFF)V renderZoomed
	a (Ldfj;Ldjh;F)V renderItemInHand
	a (Lb;)V resetProjectionMatrix
	a (Ldjh;FZ)Lb; getProjectionMatrix
	a (Laqj;F)F getNightVisionScale
	a (FJZ)V render
	o ()V takeAutoScreenshot
	p ()Z shouldRenderBlockOutline
	a (FJLdfj;)V renderLevel
	g ()V resetData
	h ()Ldku; getMapRenderer
	a (Lbly;)V displayItemActivation
	a (IIF)V renderItemActivationAnimation
	c (F)V renderConfusionOverlay
	i ()Ldjw; getMinecraft
	b (F)F getDarkenWorldAmount
	j ()F getRenderDistance
	k ()Ldjh; getMainCamera
	l ()Ldzx; lightTexture
	m ()Lejo; overlayTexture
	a (Ldeq;)V lambda$takeAutoScreenshot$5
	q ()Ljava/lang/String; lambda$render$4
	b (II)Ljava/lang/String; lambda$render$3
	r ()Ljava/lang/String; lambda$render$2
	s ()Ljava/lang/String; lambda$render$1
	b (Lapx;)Z lambda$pick$0
	<clinit> ()V <clinit>
dzs net/minecraft/client/renderer/GpuWarnlistManager
	a LOGGER
	b GPU_WARNLIST_LOCATION
	c warnings
	d showWarning
	e warningDismissed
	f skipFabulous
	<init> ()V <init>
	a ()Z hasWarnings
	b ()Z willShowWarning
	d ()V showWarning
	e ()V dismissWarning
	f ()V dismissWarningAndSkipFabulous
	g ()Z isShowingWarning
	h ()Z isSkippingFabulous
	i ()V resetWarnings
	j ()Ljava/lang/String; getRendererWarnings
	k ()Ljava/lang/String; getVersionWarnings
	l ()Ljava/lang/String; getVendorWarnings
	m ()Ljava/lang/String; getAllWarnings
	a (Lacf;Lant;)Ldzs$a; prepare
	a (Ldzs$a;Lacf;Lant;)V apply
	a (Lcom/google/gson/JsonArray;Ljava/util/List;)V compilePatterns
	c (Lacf;Lant;)Lcom/google/gson/JsonObject; parseJson
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	a (Ljava/util/List;Lcom/google/gson/JsonElement;)V lambda$compilePatterns$1
	a (Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V lambda$getAllWarnings$0
	<clinit> ()V <clinit>
dzs$1 net/minecraft/client/renderer/GpuWarnlistManager$1
dzs$a net/minecraft/client/renderer/GpuWarnlistManager$Preparations
	a rendererPatterns
	b versionPatterns
	c vendorPatterns
	<init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;)V <init>
	a (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; matchAny
	a ()Lcom/google/common/collect/ImmutableMap; apply
	<init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldzs$1;)V <init>
	a (Ldzs$a;)Lcom/google/common/collect/ImmutableMap; access$100
dzt net/minecraft/client/renderer/ItemBlockRenderTypes
	a TYPE_BY_BLOCK
	b TYPE_BY_FLUID
	c renderCutout
	<init> ()V <init>
	a (Lcee;)Leag; getChunkRenderType
	b (Lcee;)Leag; getMovingBlockRenderType
	a (Lcee;Z)Leag; getRenderType
	a (Lbly;Z)Leag; getRenderType
	a (Lcuu;)Leag; getRenderLayer
	a (Z)V setFancy
	a (Ljava/util/HashMap;)V lambda$static$1
	b (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
dzu net/minecraft/client/renderer/ItemInHandRenderer
	a MAP_BACKGROUND
	b MAP_BACKGROUND_CHECKERBOARD
	c minecraft
	d mainHandItem
	e offHandItem
	f mainHandHeight
	g oMainHandHeight
	h offHandHeight
	i oOffHandHeight
	j entityRenderDispatcher
	k itemRenderer
	<init> (Ldjw;)V <init>
	a (Laqj;Lbly;Lebe$b;ZLdfj;Ldzy;I)V renderItem
	a (F)F calculateMapTilt
	a (Ldfj;Ldzy;ILaqf;)V renderMapHand
	a (Ldfj;Ldzy;IFLaqf;FLbly;)V renderOneHandedMap
	a (Ldfj;Ldzy;IFFF)V renderTwoHandedMap
	a (Ldfj;Ldzy;ILbly;)V renderMap
	a (Ldfj;Ldzy;IFFLaqf;)V renderPlayerArm
	a (Ldfj;FLaqf;Lbly;)V applyEatTransform
	a (Ldfj;Laqf;F)V applyItemArmAttackTransform
	b (Ldfj;Laqf;F)V applyItemArmTransform
	a (FLdfj;Ldzy$a;Ldze;I)V renderHandsWithItems
	a (Ldzb;FFLaoq;FLbly;FLdfj;Ldzy;I)V renderArmWithItem
	a ()V tick
	a (Laoq;)V itemUsed
	<clinit> ()V <clinit>
dzu$1 net/minecraft/client/renderer/ItemInHandRenderer$1
	a $SwitchMap$net$minecraft$world$item$UseAnim
	<clinit> ()V <clinit>
dzv net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	<init> (Lell;)V <init>
	a (Lbrt;)Leju; getParticleIcon
	a (Lbly;)Leju; getParticleIcon
	b (Lbly;)Lelg; getItemModel
	a (Lblu;)Lelg; getItemModel
	b (Lblu;)I getIndex
	a (Lblu;Lelm;)V register
	a ()Lell; getModelManager
	b ()V rebuildCache
dzw net/minecraft/client/renderer/LevelRenderer
	b LOGGER
	c MOON_LOCATION
	d SUN_LOCATION
	e CLOUDS_LOCATION
	f END_SKY_LOCATION
	g FORCEFIELD_LOCATION
	h RAIN_LOCATION
	i SNOW_LOCATION
	a DIRECTIONS
	j minecraft
	k textureManager
	l entityRenderDispatcher
	m renderBuffers
	n level
	o chunksToCompile
	p renderChunks
	q globalBlockEntities
	r viewArea
	s skyFormat
	t starBuffer
	u skyBuffer
	v darkBuffer
	w generateClouds
	x cloudBuffer
	y frameTimes
	z ticks
	A destroyingBlocks
	B destructionProgress
	C playingRecords
	D entityTarget
	E entityEffect
	F translucentTarget
	G itemEntityTarget
	H particlesTarget
	I weatherTarget
	J cloudsTarget
	K transparencyChain
	L lastCameraX
	M lastCameraY
	N lastCameraZ
	O lastCameraChunkX
	P lastCameraChunkY
	Q lastCameraChunkZ
	R prevCamX
	S prevCamY
	T prevCamZ
	U prevCamRotX
	V prevCamRotY
	W prevCloudX
	X prevCloudY
	Y prevCloudZ
	Z prevCloudColor
	aa prevCloudsType
	ab chunkRenderDispatcher
	ac format
	ad lastViewDistance
	ae renderedEntities
	af culledEntities
	ag captureFrustum
	ah capturedFrustum
	ai frustumPoints
	aj frustumPos
	ak xTransparentOld
	al yTransparentOld
	am zTransparentOld
	an needsUpdate
	ao frameId
	ap rainSoundTime
	aq rainSizeX
	ar rainSizeZ
	<init> (Ldjw;Leae;)V <init>
	a (Ldzx;FDDD)V renderSnowAndRain
	a (Ldjh;)V tickRain
	close ()V close
	a (Lacf;)V onResourceManagerReload
	a ()V initOutline
	v ()V initTransparency
	w ()V deinitTransparency
	b ()V doEntityOutline
	d ()Z shouldShowEntityOutlines
	x ()V createDarkSky
	y ()V createLightSky
	a (Ldfe;FZ)V drawSkyHemisphere
	z ()V createStars
	a (Ldfe;)V drawStars
	a (Ldwl;)V setLevel
	e ()V allChanged
	f ()V resetChunksToCompile
	a (II)V resize
	g ()Ljava/lang/String; getChunkStatistics
	h ()I countRenderedChunks
	i ()Ljava/lang/String; getEntityStatistics
	a (Ldjh;Lecr;ZIZ)V setupRender
	a (Lfx;Lecm$c;)Z isAdjacentChunk
	a (Lfx;Lecm$c;Lgc;)Lecm$c; getRelativeFrom
	a (Lb;Lb;DDDLecr;)V captureFrustum
	a (Lapx;D)Lg; getViewVector
	a (Lgc;Lfx;Lfx;)Z canSee
	a (Lgc;Lg;)Z canSee
	a (Ldfj;FJZLdjh;Ldzr;Ldzx;Lb;)V renderLevel
	a (Ldfj;)V checkPoseStack
	a (Lapx;DDDFLdfj;Ldzy;)V renderEntity
	a (Leag;Ldfj;DDD)V renderChunkLayer
	b (Ldjh;)V renderDebug
	a (Ldfn;I)V addFrustumVertex
	a (Ldfn;IIIIIII)V addFrustumQuad
	j ()V captureFrustum
	k ()V killFrustum
	l ()V tick
	a (Lzq;)V removeProgress
	b (Ldfj;)V renderEndSky
	a (Ldfj;F)V renderSky
	a (Ldfj;FDDD)V renderClouds
	a (Ldfe;DDDLdck;)V buildClouds
	a (J)V compileChunksUntil
	c (Ldjh;)V renderWorldBounds
	a (Ldfe;DDDDIDFF)V vertex
	a (Ldfj;Ldfn;Lapx;DDDLfx;Lcee;)V renderHitOutline
	a (Ldfj;Ldfn;Ldde;DDDFFFF)V renderVoxelShape
	b (Ldfj;Ldfn;Ldde;DDDFFFF)V renderShape
	a (Ldfn;DDDDDDFFFF)V renderLineBox
	a (Ldfj;Ldfn;Ldcf;FFFF)V renderLineBox
	a (Ldfj;Ldfn;DDDDDDFFFF)V renderLineBox
	a (Ldfj;Ldfn;DDDDDDFFFFFFF)V renderLineBox
	a (Ldfe;DDDDDDFFFF)V addChainedFilledBoxVertices
	a (Lbqz;Lfx;Lcee;Lcee;I)V blockChanged
	a (Lfx;Z)V setBlockDirty
	a (IIIIII)V setBlocksDirty
	a (Lfx;Lcee;Lcee;)V setBlockDirty
	a (III)V setSectionDirtyWithNeighbors
	b (III)V setSectionDirty
	a (IIIZ)V setSectionDirty
	a (Ladn;Lfx;)V playStreamingMusic
	a (Lbru;Lfx;Z)V notifyNearbyEntities
	a (Lhf;ZDDDDDD)V addParticle
	a (Lhf;ZZDDDDDD)V addParticle
	a (Lhf;DDDDDD)V addParticle
	b (Lhf;ZDDDDDD)Ldxy; addParticleInternal
	b (Lhf;ZZDDDDDD)Ldxy; addParticleInternal
	a (Z)Ldkb; calculateParticleLevel
	m ()V clear
	a (ILfx;I)V globalLevelEvent
	a (Lbft;ILfx;I)V levelEvent
	b (ILfx;I)V destroyBlockProgress
	n ()Z hasRenderedAllChunks
	o ()V needsUpdate
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lbqx;Lfx;)I getLightColor
	a (Lbqx;Lcee;Lfx;)I getLightColor
	p ()Lded; entityTarget
	q ()Lded; getTranslucentTarget
	r ()Lded; getItemEntityTarget
	s ()Lded; getParticlesTarget
	t ()Lded; getWeatherTarget
	u ()Lded; getCloudsTarget
	b (J)Ljava/util/SortedSet; lambda$destroyBlockProgress$5
	a (DDD)Ljava/lang/String; lambda$addParticle$4
	a (Ldfn;Lb;DDDFFFFDDDDDD)V lambda$renderShape$3
	a (Leag;)Ljava/lang/String; lambda$renderChunkLayer$2
	a (Ldzy$a;Ldfn;Leag;)Ldfn; lambda$renderLevel$1
	a (Lfx;Ldzw$a;)D lambda$setupRender$0
	<clinit> ()V <clinit>
dzw$1 net/minecraft/client/renderer/LevelRenderer$1
dzw$a net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo
	b chunk
	c sourceDirection
	d directions
	e step
	a this$0
	<init> (Ldzw;Lecm$c;Lgc;I)V <init>
	a (BLgc;)V setDirections
	a (Lgc;)Z hasDirection
	a (Ldzw$a;)Lecm$c; access$000
	<init> (Ldzw;Lecm$c;Lgc;ILdzw$1;)V <init>
	b (Ldzw$a;)Lgc; access$200
	c (Ldzw$a;)I access$300
	d (Ldzw$a;)B access$400
dzw$b net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
dzx net/minecraft/client/renderer/LightTexture
	a lightTexture
	b lightPixels
	c lightTextureLocation
	d updateLightTexture
	e blockLightRedFlicker
	f renderer
	g minecraft
	<init> (Ldzr;Ldjw;)V <init>
	close ()V close
	a ()V tick
	b ()V turnOffLightLayer
	c ()V turnOnLightLayer
	a (F)V updateLightTexture
	b (F)F notGamma
	a (Lbru;I)F getBrightness
	a (II)I pack
	a (I)I block
	b (I)I sky
dzy net/minecraft/client/renderer/MultiBufferSource
	a (Ldfe;)Ldzy$a; immediate
	a (Ljava/util/Map;Ldfe;)Ldzy$a; immediateWithBuffers
	getBuffer (Leag;)Ldfn; getBuffer
dzy$a net/minecraft/client/renderer/MultiBufferSource$BufferSource
	a builder
	b fixedBuffers
	c lastState
	d startedBuffers
	<init> (Ldfe;Ljava/util/Map;)V <init>
	getBuffer (Leag;)Ldfn; getBuffer
	b (Leag;)Ldfe; getBuilderRaw
	a ()V endBatch
	a (Leag;)V endBatch
	c (Leag;)V lambda$endBatch$0
dzz net/minecraft/client/renderer/OutlineBufferSource
	a bufferSource
	b outlineBufferSource
	c teamR
	d teamG
	e teamB
	f teamA
	<init> (Ldzy$a;)V <init>
	getBuffer (Leag;)Ldfn; getBuffer
	a (IIII)V setColor
	a ()V endOutlineBatch
dzz$1 net/minecraft/client/renderer/OutlineBufferSource$1
dzz$a net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator
	g delegate
	h x
	i y
	j z
	k u
	l v
	<init> (Ldfn;IIII)V <init>
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (DDD)Ldfn; vertex
	a (IIII)Ldfn; color
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	b (FFF)Ldfn; normal
	a (FFFFFFFFFIIFFF)V vertex
	d ()V endVertex
	<init> (Ldfn;IIIILdzz$1;)V <init>
eaa net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c time
	<init> (Ldzm;)V <init>
	a (FF)V render
eab net/minecraft/client/renderer/PostChain
	a screenTarget
	b resourceManager
	c name
	d passes
	e customRenderTargets
	f fullSizedTargets
	g shaderOrthoMatrix
	h screenWidth
	i screenHeight
	j time
	k lastStamp
	<init> (Lejv;Lacf;Lded;Lvk;)V <init>
	a (Lejv;Lvk;)V load
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Lejv;Lcom/google/gson/JsonElement;)V parsePassNode
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	a (Ljava/lang/String;)Lded; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	close ()V close
	a (Ljava/lang/String;Lded;Lded;)Leac; addPass
	b ()V updateOrthoMatrix
	a (II)V resize
	a (F)V process
	a ()Ljava/lang/String; getName
	b (Ljava/lang/String;)Lded; getRenderTarget
eac net/minecraft/client/renderer/PostPass
	c effect
	a inTarget
	b outTarget
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	<init> (Lacf;Ljava/lang/String;Lded;Lded;)V <init>
	close ()V close
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V addAuxAsset
	a (Lb;)V setOrthoMatrix
	a (F)V process
	b ()Ldzo; getEffect
ead net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	<init> (IIII)V <init>
	a (Lead;)Lead; intersect
	a ()I getX
	b ()I getY
	a (I)V setX
	b (I)V setY
	c ()I getWidth
	d ()I getHeight
	c (I)V setWidth
	d (I)V setHeight
	a (II)V setPosition
	b (II)Z contains
eae net/minecraft/client/renderer/RenderBuffers
	a fixedBufferPack
	b fixedBuffers
	c bufferSource
	d crumblingBufferSource
	e outlineBufferSource
	<init> ()V <init>
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Leag;)V put
	a ()Ldzl; fixedBufferPack
	b ()Ldzy$a; bufferSource
	c ()Ldzy$a; crumblingBufferSource
	d ()Ldzz; outlineBufferSource
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;)V lambda$new$1
	b (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Leag;)V lambda$null$0
eaf net/minecraft/client/renderer/RenderStateShard
	a name
	V setupState
	W clearState
	b NO_TRANSPARENCY
	c ADDITIVE_TRANSPARENCY
	d LIGHTNING_TRANSPARENCY
	e GLINT_TRANSPARENCY
	f CRUMBLING_TRANSPARENCY
	g TRANSLUCENT_TRANSPARENCY
	h NO_ALPHA
	i DEFAULT_ALPHA
	j MIDWAY_ALPHA
	k FLAT_SHADE
	l SMOOTH_SHADE
	m BLOCK_SHEET_MIPPED
	n BLOCK_SHEET
	o NO_TEXTURE
	p DEFAULT_TEXTURING
	q OUTLINE_TEXTURING
	r GLINT_TEXTURING
	s ENTITY_GLINT_TEXTURING
	t LIGHTMAP
	u NO_LIGHTMAP
	v OVERLAY
	w NO_OVERLAY
	x DIFFUSE_LIGHTING
	y NO_DIFFUSE_LIGHTING
	z CULL
	A NO_CULL
	B NO_DEPTH_TEST
	C EQUAL_DEPTH_TEST
	D LEQUAL_DEPTH_TEST
	E COLOR_DEPTH_WRITE
	F COLOR_WRITE
	G DEPTH_WRITE
	H NO_LAYERING
	I POLYGON_OFFSET_LAYERING
	J VIEW_OFFSET_Z_LAYERING
	K NO_FOG
	L FOG
	M BLACK_FOG
	N MAIN_TARGET
	O OUTLINE_TARGET
	P TRANSLUCENT_TARGET
	Q PARTICLES_TARGET
	R WEATHER_TARGET
	S CLOUDS_TARGET
	T ITEM_ENTITY_TARGET
	U DEFAULT_LINE
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	a ()V setupRenderState
	b ()V clearRenderState
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (F)V setupGlintTexturing
	c ()V lambda$static$44
	d ()V lambda$static$43
	e ()V lambda$static$42
	f ()V lambda$static$41
	g ()V lambda$static$40
	h ()V lambda$static$39
	i ()V lambda$static$38
	j ()V lambda$static$37
	k ()V lambda$static$36
	l ()V lambda$static$35
	m ()V lambda$static$34
	n ()V lambda$static$33
	o ()V lambda$static$32
	p ()V lambda$static$31
	q ()V lambda$static$30
	r ()V lambda$static$29
	s ()V lambda$static$28
	t ()V lambda$static$27
	u ()V lambda$static$26
	v ()V lambda$static$25
	w ()V lambda$static$24
	x ()V lambda$static$23
	y ()V lambda$static$22
	z ()V lambda$static$21
	A ()V lambda$static$20
	B ()V lambda$static$19
	C ()V lambda$static$18
	D ()V lambda$static$17
	E ()V lambda$static$16
	F ()V lambda$static$15
	G ()V lambda$static$14
	H ()V lambda$static$13
	I ()V lambda$static$12
	J ()V lambda$static$11
	K ()V lambda$static$10
	L ()V lambda$static$9
	M ()V lambda$static$8
	N ()V lambda$static$7
	O ()V lambda$static$6
	P ()V lambda$static$5
	Q ()V lambda$static$4
	R ()V lambda$static$3
	S ()V lambda$static$2
	T ()V lambda$static$1
	U ()V lambda$static$0
	<clinit> ()V <clinit>
eaf$a net/minecraft/client/renderer/RenderStateShard$AlphaStateShard
	V cutoff
	<init> (F)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	c ()V lambda$new$1
	a (F)V lambda$new$0
eaf$b net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
	V enabled
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;Z)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
eaf$c net/minecraft/client/renderer/RenderStateShard$CullStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
eaf$d net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
	V functionName
	W function
	<init> (Ljava/lang/String;I)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (I)V lambda$new$1
	b (I)V lambda$new$0
eaf$e net/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
eaf$f net/minecraft/client/renderer/RenderStateShard$FogStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
eaf$g net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
eaf$h net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
eaf$i net/minecraft/client/renderer/RenderStateShard$LineStateShard
	V width
	<init> (Ljava/util/OptionalDouble;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Ljava/util/OptionalDouble;)V lambda$new$1
	b (Ljava/util/OptionalDouble;)V lambda$new$0
eaf$j net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
	V uOffset
	W vOffset
	<init> (FF)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	c ()V lambda$new$1
	a (FF)V lambda$new$0
eaf$k net/minecraft/client/renderer/RenderStateShard$OutputStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
eaf$l net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
eaf$m net/minecraft/client/renderer/RenderStateShard$PortalTexturingStateShard
	V iteration
	<init> (I)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	c ()V lambda$new$1
	a (I)V lambda$new$0
eaf$n net/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard
	V smooth
	<init> (Z)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	c ()V lambda$new$1
	a (Z)V lambda$new$0
eaf$o net/minecraft/client/renderer/RenderStateShard$TextureStateShard
	V texture
	W blur
	X mipmap
	<init> (Lvk;ZZ)V <init>
	<init> ()V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	c ()Ljava/util/Optional; texture
	d ()V lambda$new$3
	e ()V lambda$new$2
	f ()V lambda$new$1
	a (Lvk;ZZ)V lambda$new$0
eaf$p net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
eaf$q net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
eaf$r net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
	V writeColor
	W writeDepth
	<init> (ZZ)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (ZZ)V lambda$new$1
	b (ZZ)V lambda$new$0
eag net/minecraft/client/renderer/RenderType
	W SOLID
	X CUTOUT_MIPPED
	Y CUTOUT
	Z TRANSLUCENT
	aa TRANSLUCENT_MOVING_BLOCK
	ab TRANSLUCENT_NO_CRUMBLING
	ac LEASH
	ad WATER_MASK
	ae ARMOR_GLINT
	af ARMOR_ENTITY_GLINT
	ag GLINT_TRANSLUCENT
	ah GLINT
	ai GLINT_DIRECT
	aj ENTITY_GLINT
	ak ENTITY_GLINT_DIRECT
	al LIGHTNING
	am TRIPWIRE
	V LINES
	an format
	ao mode
	ap bufferSize
	aq affectsCrumbling
	ar sortOnUpload
	as asOptional
	c ()Leag; solid
	d ()Leag; cutoutMipped
	e ()Leag; cutout
	C ()Leag$b; translucentState
	f ()Leag; translucent
	D ()Leag$b; translucentMovingBlockState
	g ()Leag; translucentMovingBlock
	h ()Leag; translucentNoCrumbling
	a (Lvk;)Leag; armorCutoutNoCull
	b (Lvk;)Leag; entitySolid
	c (Lvk;)Leag; entityCutout
	a (Lvk;Z)Leag; entityCutoutNoCull
	d (Lvk;)Leag; entityCutoutNoCull
	b (Lvk;Z)Leag; entityCutoutNoCullZOffset
	e (Lvk;)Leag; entityCutoutNoCullZOffset
	f (Lvk;)Leag; itemEntityTranslucentCull
	g (Lvk;)Leag; entityTranslucentCull
	c (Lvk;Z)Leag; entityTranslucent
	h (Lvk;)Leag; entityTranslucent
	i (Lvk;)Leag; entitySmoothCutout
	d (Lvk;Z)Leag; beaconBeam
	j (Lvk;)Leag; entityDecal
	k (Lvk;)Leag; entityNoOutline
	l (Lvk;)Leag; entityShadow
	a (Lvk;F)Leag; dragonExplosionAlpha
	m (Lvk;)Leag; eyes
	a (Lvk;FF)Leag; energySwirl
	i ()Leag; leash
	j ()Leag; waterMask
	n (Lvk;)Leag; outline
	a (Lvk;Leaf$c;)Leag; outline
	k ()Leag; armorGlint
	l ()Leag; armorEntityGlint
	m ()Leag; glintTranslucent
	n ()Leag; glint
	o ()Leag; glintDirect
	p ()Leag; entityGlint
	q ()Leag; entityGlintDirect
	o (Lvk;)Leag; crumbling
	p (Lvk;)Leag; text
	q (Lvk;)Leag; textSeeThrough
	r ()Leag; lightning
	E ()Leag$b; tripwireState
	s ()Leag; tripwire
	a (I)Leag; endPortal
	t ()Leag; lines
	<init> (Ljava/lang/String;Ldfo;IIZZLjava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	a (Ljava/lang/String;Ldfo;IILeag$b;)Leag$a; create
	a (Ljava/lang/String;Ldfo;IIZZLeag$b;)Leag$a; create
	a (Ldfe;III)V end
	toString ()Ljava/lang/String; toString
	u ()Ljava/util/List; chunkBufferLayers
	v ()I bufferSize
	w ()Ldfo; format
	x ()I mode
	y ()Ljava/util/Optional; outline
	z ()Z isOutline
	A ()Z affectsCrumbling
	B ()Ljava/util/Optional; asOptional
	<clinit> ()V <clinit>
eag$1 net/minecraft/client/renderer/RenderType$1
eag$a net/minecraft/client/renderer/RenderType$CompositeRenderType
	W INSTANCES
	X state
	Y hashCode
	Z outline
	aa isOutline
	<init> (Ljava/lang/String;Ldfo;IIZZLeag$b;)V <init>
	c (Ljava/lang/String;Ldfo;IIZZLeag$b;)Leag$a; memoize
	y ()Ljava/util/Optional; outline
	z ()Z isOutline
	C ()Leag$b; state
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Leag$b;Lvk;)Leag; lambda$new$2
	a (Leag$b;)V lambda$new$1
	b (Leag$b;)V lambda$new$0
	b (Ljava/lang/String;Ldfo;IIZZLeag$b;)Leag$a; access$000
	a (Leag$a;)I access$500
	b (Leag$a;)Leag$b; access$600
	<clinit> ()V <clinit>
eag$a$a net/minecraft/client/renderer/RenderType$CompositeRenderType$EqualsStrategy
	a INSTANCE
	b $VALUES
	values ()[Leag$a$a; values
	valueOf (Ljava/lang/String;)Leag$a$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Leag$a;)I hashCode
	a (Leag$a;Leag$a;)Z equals
	equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
	hashCode (Ljava/lang/Object;)I hashCode
	<clinit> ()V <clinit>
eag$b net/minecraft/client/renderer/RenderType$CompositeState
	a textureState
	b transparencyState
	c diffuseLightingState
	d shadeModelState
	e alphaState
	f depthTestState
	g cullState
	h lightmapState
	i overlayState
	j fogState
	k layeringState
	l outputState
	m texturingState
	n writeMaskState
	o lineState
	p outlineProperty
	q states
	<init> (Leaf$o;Leaf$q;Leaf$e;Leaf$n;Leaf$a;Leaf$d;Leaf$c;Leaf$h;Leaf$l;Leaf$f;Leaf$g;Leaf$k;Leaf$p;Leaf$r;Leaf$i;Leag$c;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Leag$b$a; builder
	<init> (Leaf$o;Leaf$q;Leaf$e;Leaf$n;Leaf$a;Leaf$d;Leaf$c;Leaf$h;Leaf$l;Leaf$f;Leaf$g;Leaf$k;Leaf$p;Leaf$r;Leaf$i;Leag$c;Leag$1;)V <init>
	a (Leag$b;)Leag$c; access$300
	b (Leag$b;)Leaf$o; access$400
	c (Leag$b;)Leaf$c; access$700
	d (Leag$b;)Lcom/google/common/collect/ImmutableList; access$800
eag$b$a net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder
	a textureState
	b transparencyState
	c diffuseLightingState
	d shadeModelState
	e alphaState
	f depthTestState
	g cullState
	h lightmapState
	i overlayState
	j fogState
	k layeringState
	l outputState
	m texturingState
	n writeMaskState
	o lineState
	<init> ()V <init>
	a (Leaf$o;)Leag$b$a; setTextureState
	a (Leaf$q;)Leag$b$a; setTransparencyState
	a (Leaf$e;)Leag$b$a; setDiffuseLightingState
	a (Leaf$n;)Leag$b$a; setShadeModelState
	a (Leaf$a;)Leag$b$a; setAlphaState
	a (Leaf$d;)Leag$b$a; setDepthTestState
	a (Leaf$c;)Leag$b$a; setCullState
	a (Leaf$h;)Leag$b$a; setLightmapState
	a (Leaf$l;)Leag$b$a; setOverlayState
	a (Leaf$f;)Leag$b$a; setFogState
	a (Leaf$g;)Leag$b$a; setLayeringState
	a (Leaf$k;)Leag$b$a; setOutputState
	a (Leaf$p;)Leag$b$a; setTexturingState
	a (Leaf$r;)Leag$b$a; setWriteMaskState
	a (Leaf$i;)Leag$b$a; setLineState
	a (Z)Leag$b; createCompositeState
	a (Leag$c;)Leag$b; createCompositeState
	<init> (Leag$1;)V <init>
eag$c net/minecraft/client/renderer/RenderType$OutlineProperty
	a NONE
	b IS_OUTLINE
	c AFFECTS_OUTLINE
	d name
	e $VALUES
	values ()[Leag$c; values
	valueOf (Ljava/lang/String;)Leag$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
eah net/minecraft/client/renderer/RunningTrimmedMean
	a values
	b count
	c cursor
	<init> (I)V <init>
	a (J)J registerValueAndGetMean
eai net/minecraft/client/renderer/ScreenEffectRenderer
	a UNDERWATER_LOCATION
	<init> ()V <init>
	a (Ldjw;Ldfj;)V renderScreenEffect
	a (Lbft;)Lcee; getViewBlockingState
	a (Ldjw;Leju;Ldfj;)V renderTex
	b (Ldjw;Ldfj;)V renderWater
	c (Ldjw;Ldfj;)V renderFire
	<clinit> ()V <clinit>
eaj net/minecraft/client/renderer/Sheets
	a SHULKER_SHEET
	b BED_SHEET
	c BANNER_SHEET
	d SHIELD_SHEET
	e SIGN_SHEET
	f CHEST_SHEET
	u SHULKER_BOX_SHEET_TYPE
	v BED_SHEET_TYPE
	w BANNER_SHEET_TYPE
	x SHIELD_SHEET_TYPE
	y SIGN_SHEET_TYPE
	z CHEST_SHEET_TYPE
	A SOLID_BLOCK_SHEET
	B CUTOUT_BLOCK_SHEET
	C TRANSLUCENT_ITEM_CULL_BLOCK_SHEET
	D TRANSLUCENT_CULL_BLOCK_SHEET
	g DEFAULT_SHULKER_TEXTURE_LOCATION
	h SHULKER_TEXTURE_LOCATION
	i SIGN_MATERIALS
	j BED_TEXTURES
	k CHEST_TRAP_LOCATION
	l CHEST_TRAP_LOCATION_LEFT
	m CHEST_TRAP_LOCATION_RIGHT
	n CHEST_XMAS_LOCATION
	o CHEST_XMAS_LOCATION_LEFT
	p CHEST_XMAS_LOCATION_RIGHT
	q CHEST_LOCATION
	r CHEST_LOCATION_LEFT
	s CHEST_LOCATION_RIGHT
	t ENDER_CHEST_LOCATION
	<init> ()V <init>
	a ()Leag; bannerSheet
	b ()Leag; shieldSheet
	c ()Leag; bedSheet
	d ()Leag; shulkerBoxSheet
	e ()Leag; signSheet
	f ()Leag; chestSheet
	g ()Leag; solidBlockSheet
	h ()Leag; cutoutBlockSheet
	i ()Leag; translucentItemSheet
	j ()Leag; translucentCullBlockSheet
	a (Ljava/util/function/Consumer;)V getAllMaterials
	a (Lcfn;)Lelj; signTexture
	a (Ljava/lang/String;)Lelj; chestMaterial
	a (Lccg;Lcew;Z)Lelj; chooseMaterial
	a (Lcew;Lelj;Lelj;Lelj;)Lelj; chooseMaterial
	a (I)[Lelj; lambda$static$2
	a (Lbku;)Lelj; lambda$static$1
	b (Ljava/lang/String;)Lelj; lambda$static$0
	<clinit> ()V <clinit>
eaj$1 net/minecraft/client/renderer/Sheets$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
	<clinit> ()V <clinit>
eak net/minecraft/client/renderer/SpriteCoordinateExpander
	a delegate
	b sprite
	<init> (Ldfn;Leju;)V <init>
	a (DDD)Ldfn; vertex
	a (IIII)Ldfn; color
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	b (FFF)Ldfn; normal
	d ()V endVertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (FFFFFFFFFIIFFF)V vertex
eal net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c chunkGridSizeY
	d chunkGridSizeX
	e chunkGridSizeZ
	f chunks
	<init> (Lecm;Lbru;ILdzw;)V <init>
	a (Lecm;)V createChunks
	a ()V releaseAllBuffers
	a (III)I getChunkIndex
	a (I)V setViewDistance
	a (DD)V repositionCamera
	a (IIIZ)V setDirty
	a (Lfx;)Lecm$c; getRenderChunkAt
eam net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	<init> (Ldjw;)V <init>
	a (Ldeg;Ljava/lang/String;Ljava/lang/String;)Ldew; newWindow
	close ()V close
ean net/minecraft/client/renderer/banner/package-info
eao net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	<init> (Lell;)V <init>
	a (Lcee;)Leju; getParticleIcon
	b (Lcee;)Lelg; getBlockModel
	a ()Lell; getModelManager
	b ()V rebuildCache
	c (Lcee;)Lelm; stateToModelLocation
	a (Lvk;Lcee;)Lelm; stateToModelLocation
	a (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	a (Lcfg;Ljava/lang/Comparable;)Ljava/lang/String; getValue
	d (Lcee;)V lambda$rebuildCache$0
eap net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c liquidBlockRenderer
	d random
	e blockColors
	<init> (Leao;Ldkl;)V <init>
	a ()Leao; getBlockModelShaper
	a (Lcee;Lfx;Lbqx;Ldfj;Ldfn;)V renderBreakingTexture
	a (Lcee;Lfx;Lbqx;Ldfj;Ldfn;ZLjava/util/Random;)Z renderBatched
	a (Lfx;Lbqx;Ldfn;Lcuu;)Z renderLiquid
	b ()Lear; getModelRenderer
	a (Lcee;)Lelg; getBlockModel
	a (Lcee;Ldfj;Ldzy;II)V renderSingleBlock
	a (Lacf;)V onResourceManagerReload
eap$1 net/minecraft/client/renderer/block/BlockRenderDispatcher$1
	a $SwitchMap$net$minecraft$world$level$block$RenderShape
	<clinit> ()V <clinit>
eaq net/minecraft/client/renderer/block/LiquidBlockRenderer
	a lavaIcons
	b waterIcons
	c waterOverlay
	<init> ()V <init>
	a ()V setupSprites
	a (Lbqz;Lfx;Lgc;Lcuu;)Z isNeighborSameFluid
	a (Lbqz;Lgc;FLfx;Lcee;)Z isFaceOccludedByState
	a (Lbqz;Lfx;Lgc;F)Z isFaceOccludedByNeighbor
	a (Lbqz;Lfx;Lcee;Lgc;)Z isFaceOccludedBySelf
	a (Lbqx;Lfx;Lcuu;Lcee;Lgc;)Z shouldRenderFace
	a (Lbqx;Lfx;Ldfn;Lcuu;)Z tesselate
	a (Ldfn;DDDFFFFFI)V vertex
	a (Lbqx;Lfx;)I getLightColor
	a (Lbqz;Lfx;Lcut;)F getWaterHeight
ear net/minecraft/client/renderer/block/ModelBlockRenderer
	a blockColors
	b CACHE
	<init> (Ldkl;)V <init>
	a (Lbqx;Lelg;Lcee;Lfx;Ldfj;Ldfn;ZLjava/util/Random;JI)Z tesselateBlock
	b (Lbqx;Lelg;Lcee;Lfx;Ldfj;Ldfn;ZLjava/util/Random;JI)Z tesselateWithAO
	c (Lbqx;Lelg;Lcee;Lfx;Ldfj;Ldfn;ZLjava/util/Random;JI)Z tesselateWithoutAO
	a (Lbqx;Lcee;Lfx;Ldfj;Ldfn;Ljava/util/List;[FLjava/util/BitSet;Lear$b;I)V renderModelFaceAO
	a (Lbqx;Lcee;Lfx;Ldfn;Ldfj$a;Leas;FFFFIIIII)V putQuadData
	a (Lbqx;Lcee;Lfx;[ILgc;[FLjava/util/BitSet;)V calculateShape
	a (Lbqx;Lcee;Lfx;IIZLdfj;Ldfn;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Ldfj$a;Ldfn;Lcee;Lelg;FFFII)V renderModel
	a (Ldfj$a;Ldfn;FFFLjava/util/List;II)V renderQuadList
	a ()V enableCaching
	b ()V clearCache
	d ()Lear$d; lambda$static$0
	c ()Ljava/lang/ThreadLocal; access$200
	<clinit> ()V <clinit>
ear$1 net/minecraft/client/renderer/block/ModelBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
ear$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	values ()[Lear$a; values
	valueOf (Ljava/lang/String;)Lear$a; valueOf
	<init> (Ljava/lang/String;I[Lgc;FZ[Lear$e;[Lear$e;[Lear$e;[Lear$e;)V <init>
	a (Lgc;)Lear$a; fromFacing
	a ([Lear$a;)V lambda$static$0
	a (Lear$a;)[Lgc; access$300
	b (Lear$a;)Z access$400
	c (Lear$a;)[Lear$e; access$900
	d (Lear$a;)[Lear$e; access$1100
	e (Lear$a;)[Lear$e; access$1200
	f (Lear$a;)[Lear$e; access$1300
	<clinit> ()V <clinit>
ear$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	b brightness
	c lightmap
	a this$0
	<init> (Lear;)V <init>
	a (Lbqx;Lcee;Lfx;Lgc;[FLjava/util/BitSet;Z)V calculate
	a (IIII)I blend
	a (IIIIFFFF)I blend
	a (Lear$b;)[F access$000
	b (Lear$b;)[I access$100
ear$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	values ()[Lear$c; values
	valueOf (Ljava/lang/String;)Lear$c; valueOf
	<init> (Ljava/lang/String;IIIII)V <init>
	a (Lgc;)Lear$c; fromFacing
	a ([Lear$c;)V lambda$static$0
	a (Lear$c;)I access$500
	b (Lear$c;)I access$600
	c (Lear$c;)I access$700
	d (Lear$c;)I access$800
	<clinit> ()V <clinit>
ear$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	<init> ()V <init>
	a ()V enable
	b ()V disable
	a (Lcee;Lbqx;Lfx;)I getLightColor
	b (Lcee;Lbqx;Lfx;)F getShadeBrightness
	c ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$1
	d ()Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap; lambda$new$0
	<init> (Lear$1;)V <init>
ear$d$1 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$1
	a this$0
	<init> (Lear$d;IF)V <init>
	rehash (I)V rehash
ear$d$2 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$2
	a this$0
	<init> (Lear$d;IF)V <init>
	rehash (I)V rehash
ear$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
	values ()[Lear$e; values
	valueOf (Ljava/lang/String;)Lear$e; valueOf
	<init> (Ljava/lang/String;ILgc;Z)V <init>
	a (Lear$e;)I access$1000
	<clinit> ()V <clinit>
eas net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	e shade
	<init> ([IILgc;Leju;Z)V <init>
	a ()Leju; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lgc; getDirection
	f ()Z isShade
eat net/minecraft/client/renderer/block/model/BlockElement
	a from
	b to
	c faces
	d rotation
	e shade
	<init> (Lg;Lg;Ljava/util/Map;Leav;Z)V <init>
	a ()V fillUvs
	a (Lgc;)[F uvsByFace
eat$1 net/minecraft/client/renderer/block/model/BlockElement$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
eat$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leat; deserialize
	a (Lcom/google/gson/JsonObject;)Leav; getRotation
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lgc$a; getAxis
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	a (Ljava/lang/String;)Lgc; getFacing
	d (Lcom/google/gson/JsonObject;)Lg; getTo
	e (Lcom/google/gson/JsonObject;)Lg; getFrom
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lg; getVector3f
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
eau net/minecraft/client/renderer/block/model/BlockElementFace
	a cullForDirection
	b tintIndex
	c texture
	d uv
	<init> (Lgc;ILjava/lang/String;Leaw;)V <init>
eau$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leau; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lgc; getCullFacing
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
eav net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
	<init> (Lg;Lgc$a;FZ)V <init>
eaw net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	<init> ([FI)V <init>
	a (I)F getU
	b (I)F getV
	d (I)I getShiftedIndex
	c (I)I getReverseIndex
	a ([F)V setMissingUv
eaw$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leaw; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
eax net/minecraft/client/renderer/block/model/BlockModel
	f LOGGER
	g FACE_BAKERY
	a GSON
	h elements
	i guiLight
	j hasAmbientOcclusion
	k transforms
	l overrides
	b name
	c textureMap
	d parent
	e parentLocation
	a (Ljava/io/Reader;)Leax; fromStream
	a (Ljava/lang/String;)Leax; fromString
	<init> (Lvk;Ljava/util/List;Ljava/util/Map;ZLeax$b;Lebe;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getElements
	b ()Z hasAmbientOcclusion
	c ()Leax$b; getGuiLight
	d ()Z isResolved
	e ()Ljava/util/List; getOverrides
	a (Lelk;Leax;)Lebc; getItemOverrides
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Lelk;Ljava/util/function/Function;Leln;Lvk;)Lelg; bake
	a (Lelk;Leax;Ljava/util/function/Function;Leln;Lvk;Z)Lelg; bake
	a (Leat;Leau;Leju;Lgc;Leln;Lvk;)Leas; bakeFace
	b (Ljava/lang/String;)Z hasTexture
	c (Ljava/lang/String;)Lelj; getMaterial
	e (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; findTextureEntry
	f (Ljava/lang/String;)Z isTextureReference
	g ()Leax; getRootModel
	h ()Lebe; getTransforms
	a (Lebe$b;)Lebd; getTransform
	toString ()Ljava/lang/String; toString
	a (Ljava/util/Set;Ljava/lang/String;)V lambda$getMaterials$1
	a (Ljava/util/function/Function;Ljava/util/Set;Ljava/util/Set;Lebb;)V lambda$getMaterials$0
	d (Ljava/lang/String;)Z access$000
	<clinit> ()V <clinit>
eax$a net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leax; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	a (Lvk;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; parseTextureLocationOrReference
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
	a (Lcom/google/gson/JsonObject;)Z getAmbientOcclusion
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
eax$b net/minecraft/client/renderer/block/model/BlockModel$GuiLight
	a FRONT
	b SIDE
	c name
	d $VALUES
	values ()[Leax$b; values
	valueOf (Ljava/lang/String;)Leax$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Leax$b; getByName
	a ()Z lightLikeBlock
	<clinit> ()V <clinit>
eax$c net/minecraft/client/renderer/block/model/BlockModel$LoopException
	<init> (Ljava/lang/String;)V <init>
eay net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a (Leay$a;Ljava/io/Reader;)Leay; fromStream
	<init> (Ljava/util/Map;Lebk;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/lang/String;)Z hasVariant
	b (Ljava/lang/String;)Lebf; getVariant
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/util/Map; getVariants
	b ()Ljava/util/Set; getMultiVariants
	c ()Z isMultiPart
	d ()Lebk; getMultiPart
eay$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	<init> ()V <init>
	a ()Lcef; getDefinition
	a (Lcef;)V setDefinition
eay$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leay; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lebk; getMultiPart
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
eay$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
	a this$0
	<init> (Leay;)V <init>
eaz net/minecraft/client/renderer/block/model/FaceBakery
	a RESCALE_22_5
	b RESCALE_45
	<init> ()V <init>
	a (Lg;Lg;Leau;Leju;Lgc;Leln;Leav;ZLvk;)Leas; bakeQuad
	a (Leaw;Lgc;Lf;Lvk;)Leaw; recomputeUVs
	a (Leaw;Leju;Lgc;[FLf;Leav;Z)[I makeVertices
	a (Lg;Lg;)[F setupShape
	a ([IILgc;Leaw;[FLeju;Lf;Leav;Z)V bakeVertex
	a ([IILg;Leju;Leaw;)V fillVertex
	a (Lg;Leav;)V applyElementRotation
	a (Lg;Lf;)V applyModelRotation
	a (Lg;Lg;Lb;Lg;)V rotateVertexBy
	a ([I)Lgc; calculateFacing
	a ([ILgc;)V recalculateWinding
	a (Lvk;)Ljava/lang/String; lambda$recomputeUVs$0
	<clinit> ()V <clinit>
eaz$1 net/minecraft/client/renderer/block/model/FaceBakery$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
eba net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	<init> ()V <init>
	a (Ljava/util/function/Function;Leax;)Leax; generateBlockModel
	a (ILjava/lang/String;Leju;)Ljava/util/List; processFrames
	a (Leju;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Leju;)Ljava/util/List; getSpans
	a (Leba$b;Ljava/util/List;Leju;IIIIIZ)V checkTransition
	a (Ljava/util/List;Leba$b;II)V createOrExpandSpan
	a (Leju;IIIII)Z isTransparent
	<clinit> ()V <clinit>
eba$1 net/minecraft/client/renderer/block/model/ItemModelGenerator$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemModelGenerator$SpanFacing
	<clinit> ()V <clinit>
eba$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	<init> (Leba$b;II)V <init>
	a (I)V expand
	a ()Leba$b; getFacing
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
eba$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	values ()[Leba$b; values
	valueOf (Ljava/lang/String;)Leba$b; valueOf
	<init> (Ljava/lang/String;ILgc;II)V <init>
	a ()Lgc; getDirection
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
	a (Leba$b;)Z access$000
	<clinit> ()V <clinit>
ebb net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	<init> (Lvk;Ljava/util/Map;)V <init>
	a ()Lvk; getModel
	a (Lbly;Ldwl;Laqj;)Z test
ebb$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebb; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/Map; getPredicates
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ebc net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b overrides
	c overrideModels
	<init> ()V <init>
	<init> (Lelk;Leax;Ljava/util/function/Function;Ljava/util/List;)V <init>
	a (Lelg;Lbly;Ldwl;Laqj;)Lelg; resolve
	a (Ljava/util/function/Function;Leax;Lelk;Lebb;)Lelg; lambda$new$0
	<clinit> ()V <clinit>
ebd net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
	<init> (Lg;Lg;Lg;)V <init>
	a (ZLdfj;)V apply
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<clinit> ()V <clinit>
ebd$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	a DEFAULT_ROTATION
	b DEFAULT_TRANSLATION
	c DEFAULT_SCALE
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebd; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lg;)Lg; getVector3f
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	<clinit> ()V <clinit>
ebe net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b thirdPersonLeftHand
	c thirdPersonRightHand
	d firstPersonLeftHand
	e firstPersonRightHand
	f head
	g gui
	h ground
	i fixed
	<init> ()V <init>
	<init> (Lebe;)V <init>
	<init> (Lebd;Lebd;Lebd;Lebd;Lebd;Lebd;Lebd;Lebd;)V <init>
	a (Lebe$b;)Lebd; getTransform
	b (Lebe$b;)Z hasTransform
	<clinit> ()V <clinit>
ebe$1 net/minecraft/client/renderer/block/model/ItemTransforms$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemTransforms$TransformType
	<clinit> ()V <clinit>
ebe$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebe; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lebd; getTransform
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ebe$b net/minecraft/client/renderer/block/model/ItemTransforms$TransformType
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j $VALUES
	values ()[Lebe$b; values
	valueOf (Ljava/lang/String;)Lebe$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z firstPerson
	<clinit> ()V <clinit>
ebf net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; getVariants
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Lelk;Ljava/util/function/Function;Leln;Lvk;)Lelg; bake
	a (Ljava/util/function/Function;Ljava/util/Set;Lvk;)Ljava/util/stream/Stream; lambda$getMaterials$0
ebf$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebf; deserialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ebg net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	<init> (Lvk;Lf;ZI)V <init>
	a ()Lvk; getModelLocation
	b ()Lf; getRotation
	c ()Z isUvLocked
	d ()I getWeight
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
ebg$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebg; deserialize
	d (Lcom/google/gson/JsonObject;)Z getUvLock
	a (Lcom/google/gson/JsonObject;)Lelh; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lvk; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ebh net/minecraft/client/renderer/block/model/multipart/AndCondition
	c conditions
	<init> (Ljava/lang/Iterable;)V <init>
	getPredicate (Lcef;)Ljava/util/function/Predicate; getPredicate
	a (Ljava/util/List;Lcee;)Z lambda$getPredicate$2
	a (Lcee;Ljava/util/function/Predicate;)Z lambda$null$1
	a (Lcef;Lebi;)Ljava/util/function/Predicate; lambda$getPredicate$0
ebi net/minecraft/client/renderer/block/model/multipart/Condition
	a TRUE
	b FALSE
	getPredicate (Lcef;)Ljava/util/function/Predicate; getPredicate
	a (Lcef;)Ljava/util/function/Predicate; lambda$static$3
	a (Lcee;)Z lambda$null$2
	b (Lcef;)Ljava/util/function/Predicate; lambda$static$1
	b (Lcee;)Z lambda$null$0
	<clinit> ()V <clinit>
ebj net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	c PIPE_SPLITTER
	d key
	e value
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	getPredicate (Lcef;)Ljava/util/function/Predicate; getPredicate
	a (Lcef;Lcfg;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
	toString ()Ljava/lang/String; toString
	a (Lcfg;Ljava/util/Optional;Lcee;)Z lambda$getBlockStatePredicate$3
	a (Ljava/util/List;Lcee;)Z lambda$getPredicate$2
	a (Lcee;Ljava/util/function/Predicate;)Z lambda$null$1
	b (Lcef;Lcfg;Ljava/lang/String;)Ljava/util/function/Predicate; lambda$getPredicate$0
	<clinit> ()V <clinit>
ebk net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	<init> (Lcef;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getSelectors
	b ()Ljava/util/Set; getMultiVariants
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Lelk;Ljava/util/function/Function;Leln;Lvk;)Lelg; bake
	a (Ljava/util/function/Function;Ljava/util/Set;Lebm;)Ljava/util/stream/Stream; lambda$getMaterials$1
	a (Lebm;)Ljava/util/stream/Stream; lambda$getDependencies$0
ebk$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	<init> (Leay$a;)V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebk; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ebl net/minecraft/client/renderer/block/model/multipart/OrCondition
	c conditions
	<init> (Ljava/lang/Iterable;)V <init>
	getPredicate (Lcef;)Ljava/util/function/Predicate; getPredicate
	a (Ljava/util/List;Lcee;)Z lambda$getPredicate$2
	a (Lcee;Ljava/util/function/Predicate;)Z lambda$null$1
	a (Lcef;Lebi;)Ljava/util/function/Predicate; lambda$getPredicate$0
ebm net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	<init> (Lebi;Lebf;)V <init>
	a ()Lebf; getVariant
	a (Lcef;)Ljava/util/function/Predicate; getPredicate
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
ebm$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebm; deserialize
	b (Lcom/google/gson/JsonObject;)Lebi; getSelector
	a (Lcom/google/gson/JsonObject;)Lebi; getCondition
	a (Ljava/util/Map$Entry;)Lebi; getKeyValueCondition
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonElement;)Lebi; lambda$getCondition$1
	b (Lcom/google/gson/JsonElement;)Lebi; lambda$getCondition$0
ebn net/minecraft/client/renderer/block/model/multipart/package-info
ebo net/minecraft/client/renderer/block/model/package-info
ebp net/minecraft/client/renderer/block/package-info
ebq net/minecraft/client/renderer/block/statemap/package-info
ebr net/minecraft/client/renderer/blockentity/BannerRenderer
	a flag
	c pole
	d bar
	<init> (Lebv;)V <init>
	a ()Ldwf; makeFlag
	a (Lcbx;FLdfj;Ldzy;II)V render
	a (Ldfj;Ldzy;IILdwf;Lelj;ZLjava/util/List;)V renderPatterns
	a (Ldfj;Ldzy;IILdwf;Lelj;ZLjava/util/List;Z)V renderPatterns
	a (Lccg;FLdfj;Ldzy;II)V render
ebs net/minecraft/client/renderer/blockentity/BeaconRenderer
	a BEAM_LOCATION
	<init> (Lebv;)V <init>
	a (Lccb;FLdfj;Ldzy;II)V render
	a (Ldfj;Ldzy;FJII[F)V renderBeaconBeam
	a (Ldfj;Ldzy;Lvk;FFJII[FFF)V renderBeaconBeam
	a (Ldfj;Ldfn;FFFFIIFFFFFFFFFFFF)V renderPart
	a (Lb;La;Ldfn;FFFFIIFFFFFFFF)V renderQuad
	a (Lb;La;Ldfn;FFFFIFFFF)V addVertex
	a (Lccb;)Z shouldRenderOffScreen
	a (Lccg;)Z shouldRenderOffScreen
	a (Lccg;FLdfj;Ldzy;II)V render
	<clinit> ()V <clinit>
ebt net/minecraft/client/renderer/blockentity/BedRenderer
	a headPiece
	c footPiece
	d legs
	<init> (Lebv;)V <init>
	a (Lccc;FLdfj;Ldzy;II)V render
	a (Ldfj;Ldzy;ZLgc;Lelj;IIZ)V renderPiece
	a (Lccg;FLdfj;Ldzy;II)V render
	a (Lbrv;Lfx;)Z lambda$render$0
ebu net/minecraft/client/renderer/blockentity/BellRenderer
	a BELL_RESOURCE_LOCATION
	c bellBody
	<init> (Lebv;)V <init>
	a (Lcce;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
	<clinit> ()V <clinit>
ebv net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	f renderers
	a instance
	g singleRenderBuffer
	h font
	b textureManager
	c level
	d camera
	e cameraHitResult
	<init> ()V <init>
	a (Lcch;Lebw;)V register
	a (Lccg;)Lebw; getRenderer
	a (Lbru;Lejv;Ldkr;Ldjh;Ldci;)V prepare
	a (Lccg;FLdfj;Ldzy;)V render
	a (Lebw;Lccg;FLdfj;Ldzy;)V setupAndRender
	a (Lccg;Ldfj;)V renderItem
	a (Lccg;Ldfj;Ldzy;II)Z renderItem
	a (Lccg;Ljava/lang/Runnable;)V tryRender
	a (Lbru;)V setLevel
	a ()Ldkr; getFont
	a (Lebw;Lccg;Ldfj;Ldzy;II)V lambda$renderItem$1
	b (Lebw;Lccg;FLdfj;Ldzy;)V lambda$render$0
	<clinit> ()V <clinit>
ebw net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	b renderer
	<init> (Lebv;)V <init>
	a (Lccg;FLdfj;Ldzy;II)V render
	a (Lccg;)Z shouldRenderOffScreen
ebx net/minecraft/client/renderer/blockentity/BrightnessCombiner
	<init> ()V <init>
	a (Lccg;Lccg;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptDouble
	a (Lccg;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptSingle
	a ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (I)I lambda$acceptNone$2
	b (I)I lambda$acceptSingle$1
	a (Lccg;Lccg;I)I lambda$acceptDouble$0
eby net/minecraft/client/renderer/blockentity/CampfireRenderer
	<init> (Lebv;)V <init>
	a (Lccj;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
ebz net/minecraft/client/renderer/blockentity/ChestRenderer
	a lid
	c bottom
	d lock
	e doubleLeftLid
	f doubleLeftBottom
	g doubleLeftLock
	h doubleRightLid
	i doubleRightBottom
	j doubleRightLock
	k xmasTextures
	<init> (Lebv;)V <init>
	a (Lccg;FLdfj;Ldzy;II)V render
	a (Ldfj;Ldfn;Ldwf;Ldwf;Ldwf;FII)V render
eca net/minecraft/client/renderer/blockentity/ConduitRenderer
	a SHELL_TEXTURE
	c ACTIVE_SHELL_TEXTURE
	d WIND_TEXTURE
	e VERTICAL_WIND_TEXTURE
	f OPEN_EYE_TEXTURE
	g CLOSED_EYE_TEXTURE
	h eye
	i wind
	j shell
	k cage
	<init> (Lebv;)V <init>
	a (Lccn;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
	<clinit> ()V <clinit>
ecb net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	a BOOK_LOCATION
	c bookModel
	<init> (Lebv;)V <init>
	a (Lccr;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
	<clinit> ()V <clinit>
ecc net/minecraft/client/renderer/blockentity/LecternRenderer
	a bookModel
	<init> (Lebv;)V <init>
	a (Lccy;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
ecd net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	a blockRenderer
	<init> (Lebv;)V <init>
	a (Lcea;FLdfj;Ldzy;II)V render
	a (Lfx;Lcee;Ldfj;Ldzy;Lbru;ZI)V renderBlock
	a (Lccg;FLdfj;Ldzy;II)V render
ece net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	a model
	<init> (Ldvi;Lebv;)V <init>
	a (Lcdb;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
ecf net/minecraft/client/renderer/blockentity/SignRenderer
	a signModel
	<init> (Lebv;)V <init>
	a (Lcdc;FLdfj;Ldzy;II)V render
	a (Lbul;)Lelj; getMaterial
	a (Lccg;FLdfj;Ldzy;II)V render
	a (Ldkr;Lnr;)Laex; lambda$render$0
ecf$a net/minecraft/client/renderer/blockentity/SignRenderer$SignModel
	a sign
	b stick
	<init> ()V <init>
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
ecg net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	a MODEL_BY_TYPE
	c SKIN_BY_TYPE
	<init> (Lebv;)V <init>
	a (Lcdd;FLdfj;Ldzy;II)V render
	a (Lgc;FLbzs$a;Lcom/mojang/authlib/GameProfile;FLdfj;Ldzy;I)V renderSkull
	a (Lbzs$a;Lcom/mojang/authlib/GameProfile;)Leag; getRenderType
	a (Lccg;FLdfj;Ldzy;II)V render
	a (Ljava/util/HashMap;)V lambda$static$1
	b (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ech net/minecraft/client/renderer/blockentity/SpawnerRenderer
	<init> (Lebv;)V <init>
	a (Lcdf;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
eci net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	<init> (Lebv;)V <init>
	a (Lcdg;FLdfj;Ldzy;II)V render
	a (Lcdg;Ldfn;Lfx;ZLdfj;)V renderInvisibleBlocks
	a (Lcdg;)Z shouldRenderOffScreen
	a (Lccg;)Z shouldRenderOffScreen
	a (Lccg;FLdfj;Ldzy;II)V render
eci$1 net/minecraft/client/renderer/blockentity/StructureBlockRenderer$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
ecj net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	d BEAM_LOCATION
	<init> (Lebv;)V <init>
	a (Lcdh;FLdfj;Ldzy;II)V render
	a (D)I getPasses
	a ()F getOffset
	a (Lcdi;FLdfj;Ldzy;II)V render
	a (Lccg;FLdfj;Ldzy;II)V render
	<clinit> ()V <clinit>
eck net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	a END_SKY_LOCATION
	c END_PORTAL_LOCATION
	d RANDOM
	e RENDER_TYPES
	<init> (Lebv;)V <init>
	a (Lcdi;FLdfj;Ldzy;II)V render
	a (Lcdi;FFLb;Ldfn;)V renderCube
	a (Lcdi;Lb;Ldfn;FFFFFFFFFFFLgc;)V renderFace
	a (D)I getPasses
	a ()F getOffset
	a (Lccg;FLdfj;Ldzy;II)V render
	a (I)Leag; lambda$static$0
	<clinit> ()V <clinit>
ecl net/minecraft/client/renderer/blockentity/package-info
ecm net/minecraft/client/renderer/chunk/ChunkRenderDispatcher
	a LOGGER
	b toBatch
	c freeBuffers
	d toUpload
	e toBatchCount
	f freeBufferCount
	g fixedBuffers
	h mailbox
	i executor
	j level
	k renderer
	l camera
	<init> (Lbru;Ldzw;Ljava/util/concurrent/Executor;ZLdzl;)V <init>
	a ()Ldzl; fixedBuffers
	a (Lbru;)V setLevel
	h ()V runTask
	b ()Ljava/lang/String; getStats
	a (Ldck;)V setCamera
	c ()Ldck; getCameraPosition
	d ()Z uploadAllPendingUploads
	a (Lecm$c;)V rebuildChunkSync
	e ()V blockUntilClear
	a (Lecm$c$a;)V schedule
	a (Ldfe;Ldfm;)Ljava/util/concurrent/CompletableFuture; uploadChunkLayer
	b (Ldfe;Ldfm;)Ljava/util/concurrent/CompletableFuture; doUploadChunkLayer
	i ()V clearBatchQueue
	f ()Z isQueueEmpty
	g ()V dispose
	a (Ldfe;Ldfm;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$uploadChunkLayer$6
	j ()V lambda$uploadChunkLayer$5
	b (Lecm$c$a;)V lambda$schedule$4
	a (Ldzl;Lecm$a;Ljava/lang/Throwable;)V lambda$runTask$3
	a (Lecm$a;Ldzl;)V lambda$null$2
	a (Lecm$c$a;Ldzl;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$runTask$1
	k ()V lambda$runTask$0
	a (Lecm;)Lbru; access$000
	b (Lecm;)Ldzw; access$200
	c (Lecm;)Ldzl; access$300
	<clinit> ()V <clinit>
ecm$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult
	a SUCCESSFUL
	b CANCELLED
	c $VALUES
	values ()[Lecm$a; values
	valueOf (Ljava/lang/String;)Lecm$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ecm$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk
	a UNCOMPILED
	b hasBlocks
	c hasLayer
	d isCompletelyEmpty
	e renderableBlockEntities
	f visibilitySet
	g transparencyState
	<init> ()V <init>
	a ()Z hasNoRenderableLayers
	a (Leag;)Z isEmpty
	b ()Ljava/util/List; getRenderableBlockEntities
	a (Lgc;Lgc;)Z facesCanSeeEachother
	a (Lecm$b;)Ljava/util/Set; access$100
	a (Lecm$b;Z)Z access$702
	b (Lecm$b;)Ljava/util/Set; access$800
	a (Lecm$b;Ldfe$b;)Ldfe$b; access$902
	a (Lecm$b;Lecp;)Lecp; access$1002
	c (Lecm$b;)Ljava/util/List; access$1100
	d (Lecm$b;)Ldfe$b; access$900
	<clinit> ()V <clinit>
ecm$b$1 net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk$1
	<init> ()V <init>
	a (Lgc;Lgc;)Z facesCanSeeEachother
ecm$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk
	a compiled
	d lastRebuildTask
	e lastResortTransparencyTask
	f globalBlockEntities
	g buffers
	b bb
	h lastFrame
	i dirty
	j origin
	k relativeOrigins
	l playerChanged
	c this$0
	<init> (Lecm;)V <init>
	a (Lfx;)Z doesChunkExistAt
	a ()Z hasAllNeighbors
	a (I)Z setFrame
	a (Leag;)Ldfm; getBuffer
	a (III)V setOrigin
	b ()D getDistToPlayerSqr
	a (Ldfe;)V beginLayer
	c ()Lecm$b; getCompiledChunk
	l ()V reset
	d ()V releaseBuffers
	e ()Lfx; getOrigin
	a (Z)V setDirty
	f ()V setNotDirty
	g ()Z isDirty
	h ()Z isDirtyFromPlayer
	a (Lgc;)Lfx; getRelativeOrigin
	a (Leag;Lecm;)Z resortTransparency
	i ()V cancelTasks
	j ()Lecm$c$a; createCompileTask
	a (Lecm;)V rebuildChunkAsync
	a (Ljava/util/Set;)V updateGlobalBlockEntities
	k ()V compileSync
	a ([Lfx$a;)V lambda$new$2
	b (Leag;)Ldfm; lambda$new$1
	c (Leag;)Leag; lambda$new$0
	a (Lecm$c;Ljava/util/Set;)V access$400
	a (Lecm$c;)Lfx$a; access$500
	a (Lecm$c;Ldfe;)V access$600
ecm$c$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask
	a distAtCreation
	b isCancelled
	c this$1
	<init> (Lecm$c;D)V <init>
	a (Ldzl;)Ljava/util/concurrent/CompletableFuture; doTask
	a ()V cancel
	a (Lecm$c$a;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
ecm$c$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask
	d region
	e this$1
	<init> (Lecm$c;DLecn;)V <init>
	a (Ldzl;)Ljava/util/concurrent/CompletableFuture; doTask
	a (FFFLecm$b;Ldzl;)Ljava/util/Set; compile
	a (Lecm$b;Ljava/util/Set;Lccg;)V handleBlockEntity
	a ()V cancel
	a (Lecm$b;Ljava/util/List;Ljava/lang/Throwable;)Lecm$a; lambda$doTask$1
	a (Ljava/util/List;Ldzl;Leag;)V lambda$doTask$0
ecm$c$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask
	e compiledChunk
	d this$1
	<init> (Lecm$c;DLecm$b;)V <init>
	a (Ldzl;)Ljava/util/concurrent/CompletableFuture; doTask
	a ()V cancel
	a (Lecm$a;Ljava/lang/Throwable;)Lecm$a; lambda$doTask$1
	a (Ljava/lang/Void;)Lecm$a; lambda$doTask$0
ecn net/minecraft/client/renderer/chunk/RenderChunkRegion
	a centerX
	b centerZ
	c start
	d xLength
	e yLength
	f zLength
	g chunks
	h blockStates
	i fluidStates
	j level
	a (Lbru;Lfx;Lfx;I)Lecn; createIfNotEmpty
	a (Lfx;Lfx;II[[Lcge;)Z isAllEmpty
	<init> (Lbru;II[[Lcge;Lfx;Lfx;)V <init>
	a (Lfx;)I index
	a (III)I index
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	a (Lgc;Z)F getShade
	e ()Lcul; getLightEngine
	c (Lfx;)Lccg; getBlockEntity
	a (Lfx;Lcge$a;)Lccg; getBlockEntity
	a (Lfx;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
eco net/minecraft/client/renderer/chunk/VisGraph
	a DX
	b DZ
	c DY
	d DIRECTIONS
	e bitSet
	f INDEX_OF_EDGES
	g empty
	<init> ()V <init>
	a (Lfx;)V setOpaque
	c (Lfx;)I getIndex
	a (III)I getIndex
	a ()Lecp; resolve
	b (Lfx;)Ljava/util/Set; floodFill
	a (I)Ljava/util/Set; floodFill
	a (ILjava/util/Set;)V addEdges
	a (ILgc;)I getNeighborIndexAtFace
	a ([I)V lambda$static$0
	<clinit> ()V <clinit>
eco$1 net/minecraft/client/renderer/chunk/VisGraph$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
ecp net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	<init> ()V <init>
	a (Ljava/util/Set;)V add
	a (Lgc;Lgc;Z)V set
	a (Z)V setAll
	a (Lgc;Lgc;)Z visibilityBetween
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
ecq net/minecraft/client/renderer/chunk/package-info
ecr net/minecraft/client/renderer/culling/Frustum
	a frustumData
	b camX
	c camY
	d camZ
	<init> (Lb;Lb;)V <init>
	a (DDD)V prepare
	a (Lb;Lb;)V calculateFrustum
	a (Lb;IIII)V getPlane
	a (Ldcf;)Z isVisible
	a (DDDDDD)Z cubeInFrustum
	a (FFFFFF)Z cubeInFrustum
ecs net/minecraft/client/renderer/culling/package-info
ect net/minecraft/client/renderer/debug/BeeDebugRenderer
	a minecraft
	b hives
	c beeInfosPerEntity
	d lastLookedAtUuid
	<init> (Ldjw;)V <init>
	a ()V clear
	a (Lect$b;)V addOrUpdateHiveInfo
	a (Lect$a;)V addOrUpdateBeeInfo
	a (I)V removeBeeInfo
	a (Ldfj;Ldzy;DDD)V render
	b ()V clearRemovedBees
	c ()V clearRemovedHives
	d ()V doRender
	e ()Ljava/util/Map; createHiveBlacklistMap
	f ()V renderFlowerInfos
	a (Ljava/util/Collection;)Ljava/lang/String; getBeeUuidsAsString
	a (Lfx;)V highlightHive
	a (Lfx;Ljava/util/List;)V renderGhostHive
	a (Lfx;FFFFF)V renderTransparentFilledBox
	a (Lect$b;Ljava/util/Collection;)V renderHiveInfo
	b (Lect$a;)V renderPath
	c (Lect$a;)V renderBeeInfo
	a (Ljava/lang/String;Lect$b;II)V renderTextOverHive
	a (Ljava/lang/String;Lfx;II)V renderTextOverPos
	a (Lgk;ILjava/lang/String;IF)V renderTextOverMob
	g ()Ldjh; getCamera
	b (Lect$b;)Ljava/util/Set; getHiveMemberNames
	a (Lect$a;Lfx;)Ljava/lang/String; getPosDescription
	d (Lect$a;)Z isBeeSelected
	e (Lect$a;)Z isPlayerCloseEnoughToMob
	b (Lfx;)Ljava/util/Collection; getHiveMembers
	h ()Ljava/util/Map; getGhostHives
	i ()V updateLastLookedAtUuid
	a (Lapx;)V lambda$updateLastLookedAtUuid$14
	c (Lfx;)Ljava/util/List; lambda$getGhostHives$13
	a (Lfx;Lect$a;)Z lambda$getHiveMembers$12
	a (Ljava/util/Map$Entry;)V lambda$renderFlowerInfos$11
	a (Ljava/util/Map;Lect$a;)V lambda$renderFlowerInfos$10
	d (Lfx;)Ljava/util/Set; lambda$null$9
	b (Ljava/util/Map;Lect$a;)V lambda$createHiveBlacklistMap$8
	a (Ljava/util/Map;Lect$a;Lfx;)V lambda$null$7
	e (Lfx;)Ljava/util/Set; lambda$null$6
	a (Lfx;Lfx;Ljava/util/List;)V lambda$doRender$5
	a (Lfx;Ljava/util/Map;Lect$b;)V lambda$doRender$4
	f (Lect$a;)V lambda$doRender$3
	a (JLjava/util/Map$Entry;)Z lambda$clearRemovedHives$2
	b (Ljava/util/Map$Entry;)Z lambda$clearRemovedBees$1
	a (ILect$a;)Z lambda$removeBeeInfo$0
ect$a net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo
	a uuid
	b id
	c pos
	d path
	e hivePos
	f flowerPos
	g travelTicks
	h goals
	i blacklistedHives
	<init> (Ljava/util/UUID;ILgk;Lcxa;Lfx;Lfx;I)V <init>
	a (Lfx;)Z hasHive
	a ()Ljava/util/UUID; getUuid
	b ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	c ()Z hasFlower
ect$b net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo
	a pos
	b hiveType
	c occupantCount
	d honeyLevel
	e sedated
	f lastSeen
	<init> (Lfx;Ljava/lang/String;IIZJ)V <init>
ecu net/minecraft/client/renderer/debug/BrainDebugRenderer
	a LOGGER
	b minecraft
	c pois
	d brainDumpsPerEntity
	e lastLookedAtUuid
	<init> (Ldjw;)V <init>
	a ()V clear
	a (Lecu$b;)V addPoi
	a (Lfx;)V removePoi
	a (Lfx;I)V setFreeTicketCount
	a (Lecu$a;)V addOrUpdateBrainDump
	a (I)V removeBrainDump
	a (Ldfj;Ldzy;DDD)V render
	b ()V clearRemovedEntities
	a (DDD)V doRender
	b (Lfx;)V highlightPoi
	a (Lfx;Ljava/util/List;)V renderGhostPoi
	b (Lecu$b;)V renderPoiInfo
	a (Lecu$a;DDD)V renderPath
	b (Lecu$a;DDD)V renderBrainInfo
	a (Ljava/lang/String;Lecu$b;II)V renderTextOverPoi
	a (Ljava/lang/String;Lfx;II)V renderTextOverPos
	a (Lgk;ILjava/lang/String;IF)V renderTextOverMob
	c (Lecu$b;)Ljava/util/Set; getTicketHolderNames
	d (Lecu$b;)Ljava/util/Set; getPotentialTicketHolderNames
	b (Lecu$a;)Z isMobSelected
	c (Lecu$a;)Z isPlayerCloseEnoughToMob
	c (Lfx;)Ljava/util/Collection; getTicketHolders
	d (Lfx;)Ljava/util/Collection; getPotentialTicketHolders
	c ()Ljava/util/Map; getGhostPois
	d ()V updateLastLookedAtUuid
	a (Lapx;)V lambda$updateLastLookedAtUuid$8
	e (Lfx;)Ljava/util/List; lambda$getGhostPois$7
	a (Lfx;Lecu$a;)Z lambda$getPotentialTicketHolders$6
	b (Lfx;Lecu$a;)Z lambda$getTicketHolders$5
	a (Lfx;Lfx;Ljava/util/List;)V lambda$doRender$4
	a (Lfx;Lecu$b;)V lambda$doRender$3
	a (DDDLecu$a;)V lambda$doRender$2
	a (Ljava/util/Map$Entry;)Z lambda$clearRemovedEntities$1
	a (ILecu$a;)Z lambda$removeBrainDump$0
	<clinit> ()V <clinit>
ecu$a net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f health
	g maxHealth
	h pos
	i inventory
	j path
	k wantsGolem
	l activities
	m behaviors
	n memories
	o gossips
	p pois
	q potentialPois
	<init> (Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLgk;Ljava/lang/String;Lcxa;Z)V <init>
	a (Lfx;)Z hasPoi
	b (Lfx;)Z hasPotentialPoi
	a ()Ljava/util/UUID; getUuid
	a (Lecu$a;Lfx;)Z access$000
	b (Lecu$a;Lfx;)Z access$100
ecu$b net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
	<init> (Lfx;Ljava/lang/String;I)V <init>
ecv net/minecraft/client/renderer/debug/CaveDebugRenderer
	a tunnelsList
	b thicknessMap
	c startPoses
	<init> ()V <init>
	a (Lfx;Ljava/util/List;Ljava/util/List;)V addTunnel
	a (Ldfj;Ldzy;DDD)V render
ecw net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
ecx net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
	a (Lecx;)Ldjw; access$300
ecx$1 net/minecraft/client/renderer/debug/ChunkDebugRenderer$1
ecx$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	b clientData
	c serverData
	a this$0
	<init> (Lecx;Lemy;DD)V <init>
	a (Lemy;Lvj;II)Ljava/util/Map; lambda$new$0
	<init> (Lecx;Lemy;DDLecx$1;)V <init>
	a (Lecx$a;)Ljava/util/concurrent/CompletableFuture; access$100
	b (Lecx$a;)Ljava/util/Map; access$200
ecy net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
	a (Lapx;)Z lambda$render$0
ecz net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f neighborsUpdateRenderer
	g caveRenderer
	h structureRenderer
	i lightDebugRenderer
	j worldGenAttemptRenderer
	k solidFaceRenderer
	l chunkRenderer
	m brainDebugRenderer
	n villageSectionsDebugRenderer
	o beeDebugRenderer
	p raidDebugRenderer
	q goalSelectorRenderer
	r gameTestDebugRenderer
	s renderChunkborder
	<init> (Ldjw;)V <init>
	a ()V clear
	b ()Z switchRenderChunkborder
	a (Ldfj;Ldzy$a;DDD)V render
	a (Lapx;I)Ljava/util/Optional; getTargetedEntity
	a (Lfx;Lfx;FFFF)V renderFilledBox
	a (Lfx;FFFFF)V renderFilledBox
	a (Ldcf;FFFF)V renderFilledBox
	a (DDDDDDFFFF)V renderFilledBox
	a (Ljava/lang/String;IIII)V renderFloatingText
	a (Ljava/lang/String;DDDI)V renderFloatingText
	a (Ljava/lang/String;DDDIF)V renderFloatingText
	a (Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Lapx;)Z lambda$getTargetedEntity$0
ecz$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a (Ldfj;Ldzy;DDD)V render
	a ()V clear
eda net/minecraft/client/renderer/debug/GameTestDebugRenderer
	a markers
	<init> ()V <init>
	a (Lfx;ILjava/lang/String;I)V addMarker
	a ()V clear
	a (Ldfj;Ldzy;DDD)V render
	a (Lfx;Leda$a;)V renderMarker
	a (JLjava/util/Map$Entry;)Z lambda$render$0
eda$a net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker
	a color
	b text
	c removeAtTime
	<init> (ILjava/lang/String;J)V <init>
	a ()F getR
	b ()F getG
	c ()F getB
	d ()F getA
edb net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a minecraft
	b goalSelectors
	a ()V clear
	a (ILjava/util/List;)V addGoalSelector
	a (I)V removeGoalSelector
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
	a (Lfx;Ljava/lang/Integer;Ljava/util/List;)V lambda$render$0
edb$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal
	a pos
	b priority
	c name
	d isRunning
	<init> (Lfx;ILjava/lang/String;Z)V <init>
edc net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
	a (Lchk$a;)Lg; getColor
edc$1 net/minecraft/client/renderer/debug/HeightMapRenderer$1
	a $SwitchMap$net$minecraft$world$level$levelgen$Heightmap$Types
	<clinit> ()V <clinit>
edd net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
ede net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	<init> (Ldjw;)V <init>
	a (JLfx;)V addUpdate
	a (Ldfj;Ldzy;DDD)V render
	a (Ljava/lang/Long;)Ljava/util/Map; lambda$addUpdate$0
edf net/minecraft/client/renderer/debug/PathfindingRenderer
	a pathMap
	b pathMaxDist
	c creationMap
	<init> ()V <init>
	a (ILcxa;F)V addPath
	a (Ldfj;Ldzy;DDD)V render
	a (Lcxa;FZZDDD)V renderPath
	b (Lcxa;FZZDDD)V doRenderPath
	a (Lcxa;DDD)V renderPathLine
	a (Lfx;DDD)F distanceToCamera
edg net/minecraft/client/renderer/debug/RaidDebugRenderer
	a minecraft
	b raidCenters
	<init> (Ldjw;)V <init>
	a (Ljava/util/Collection;)V setRaidCenters
	a (Ldfj;Ldzy;DDD)V render
	a (Lfx;)V highlightRaidCenter
	a (Ljava/lang/String;Lfx;I)V renderTextOverBlock
	b ()Ldjh; getCamera
edh net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
edi net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPiecesBoxes
	d startPiecesMap
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
	a (Lcqx;Ljava/util/List;Ljava/util/List;Lcha;)V addBoundingBox
	a ()V clear
edj net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer
	a villageSections
	<init> ()V <init>
	a ()V clear
	a (Lgp;)V setVillageSection
	b (Lgp;)V setNotVillageSection
	a (Ldfj;Ldzy;DDD)V render
	a (DDD)V doRender
	c (Lgp;)V highlightVillageSection
	a (Lfx;Lgp;)V lambda$doRender$0
edk net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	<init> (Ldjw;)V <init>
	a (Ldfj;Ldzy;DDD)V render
edl net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a toRender
	b scales
	c alphas
	d reds
	e greens
	f blues
	<init> ()V <init>
	a (Lfx;FFFFF)V addPos
	a (Ldfj;Ldzy;DDD)V render
edm net/minecraft/client/renderer/debug/package-info
edn net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	<init> (Leel;Lduc;F)V <init>
	a (Lbay;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
edo net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	<init> (Leel;Ldwb;Ldwb;Ldwb;)V <init>
	a (Lbeg;)Lvk; getTextureLocation
	b (Lbeg;)Z isShaking
	a (Laqk;)Lvk; getTextureLocation
	a (Laqj;)Z isShaking
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
edp net/minecraft/client/renderer/entity/AreaEffectCloudRenderer
	<init> (Leel;)V <init>
	a (Lapw;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
edq net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	<init> (Leel;)V <init>
	a (Lbck;)Lvk; getTextureLocation
	a (Lbck;Ldfj;FFF)V setupRotations
	b (Lbck;)Z shouldShowName
	a (Lbck;ZZZ)Leag; getRenderType
	b (Laqj;)Z shouldShowName
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Laqj;ZZZ)Leag; getRenderType
	a (Lapx;)Lvk; getTextureLocation
	b (Lapx;)Z shouldShowName
	<clinit> ()V <clinit>
edr net/minecraft/client/renderer/entity/ArrowRenderer
	<init> (Leel;)V <init>
	a (Lbfx;FFLdfj;Ldzy;I)V render
	a (Lb;La;Ldfn;IIIFFIIII)V vertex
	a (Lapx;FFLdfj;Ldzy;I)V render
eds net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	<init> (Leel;)V <init>
	a (Lazr;)Lvk; getTextureLocation
	a (Lazr;Ldfj;F)V scale
	a (Lazr;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;F)V scale
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
edt net/minecraft/client/renderer/entity/BeeRenderer
	a ANGRY_BEE_TEXTURE
	g ANGRY_NECTAR_BEE_TEXTURE
	h BEE_TEXTURE
	i NECTAR_BEE_TEXTURE
	<init> (Leel;)V <init>
	a (Lazx;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
edu net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	<init> (Leel;)V <init>
	a (Lbcx;Lfx;)I getBlockLightLevel
	a (Lbcx;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
edv net/minecraft/client/renderer/entity/BoatRenderer
	e BOAT_TEXTURE_LOCATIONS
	a model
	<init> (Leel;)V <init>
	a (Lbhk;FFLdfj;Ldzy;I)V render
	a (Lbhk;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
edw net/minecraft/client/renderer/entity/CatRenderer
	<init> (Leel;)V <init>
	a (Lazy;)Lvk; getTextureLocation
	a (Lazy;Ldfj;F)V scale
	a (Lazy;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;F)V scale
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
edx net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	<init> (Leel;)V <init>
	a (Lbcy;Ldfj;F)V scale
	a (Lbcy;)Lvk; getTextureLocation
	a (Lbdy;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
edy net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	<init> (Leel;F)V <init>
	a (Lbax;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
edz net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	<init> (Leel;)V <init>
	a (Lazz;)Lvk; getTextureLocation
	a (Lazz;F)F getBob
	a (Laqj;F)F getBob
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eea net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	<init> (Leel;)V <init>
	a (Lbaa;)Lvk; getTextureLocation
	a (Lbaa;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eeb net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	<init> (Leel;)V <init>
	a (Lbab;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eec net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	<init> (Leel;)V <init>
	a (Lbcz;Ldfj;F)V scale
	a (Lbcz;F)F getWhiteOverlayProgress
	a (Lbcz;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	b (Laqj;F)F getWhiteOverlayProgress
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eed net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	<init> (Leel;)V <init>
	a (Lbac;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eee net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	<init> (Leel;)V <init>
	a (Lbga;Lfx;)I getBlockLightLevel
	a (Lbga;FFLdfj;Ldzy;I)V render
	a (Ldfn;Lb;La;IFIII)V vertex
	a (Lbga;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
eef net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	<init> (Leel;)V <init>
	a (Lbeg;)Lvk; getTextureLocation
	a (Lbdb;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;FFF)V setupRotations
	<clinit> ()V <clinit>
eeg net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	<init> (Leel;)V <init>
	a (Lbdj;Ldfj;F)V scale
	a (Lbdj;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eeh net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	e RENDER_TYPE
	f SIN_45
	g cube
	h glass
	i base
	<init> (Leel;)V <init>
	a (Lbbn;FFLdfj;Ldzy;I)V render
	a (Lbbn;F)F getY
	a (Lbbn;)Lvk; getTextureLocation
	a (Lbbn;Lecr;DDD)Z shouldRender
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lecr;DDD)Z shouldRender
	<clinit> ()V <clinit>
eei net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	e DRAGON_EXPLODING_LOCATION
	f DRAGON_LOCATION
	g DRAGON_EYES_LOCATION
	h RENDER_TYPE
	i DECAL
	j EYES
	k BEAM
	l HALF_SQRT_3
	m model
	<init> (Leel;)V <init>
	a (Lbbo;FFLdfj;Ldzy;I)V render
	a (Ldfn;Lb;I)V vertex01
	a (Ldfn;Lb;FF)V vertex2
	b (Ldfn;Lb;FF)V vertex3
	c (Ldfn;Lb;FF)V vertex4
	a (FFFFILdfj;Ldzy;I)V renderCrystalBeams
	a (Lbbo;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
eei$a net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel
	a head
	b neck
	f jaw
	g body
	h leftWing
	i leftWingTip
	j leftFrontLeg
	k leftFrontLegTip
	l leftFrontFoot
	m leftRearLeg
	n leftRearLegTip
	o leftRearFoot
	p rightWing
	t rightWingTip
	u rightFrontLeg
	v rightFrontLegTip
	w rightFrontFoot
	x rightRearLeg
	y rightRearLegTip
	z rightRearFoot
	A entity
	B a
	<init> ()V <init>
	a (Lbbo;FFF)V prepareMobModel
	a (Lbbo;FFFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFLdwf;Ldwf;Ldwf;Ldwf;Ldwf;Ldwf;Ldwf;)V renderSide
	a (Lapx;FFF)V prepareMobModel
	a (Lapx;FFFFF)V setupAnim
eej net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	g random
	<init> (Leel;)V <init>
	a (Lbdd;FFLdfj;Ldzy;I)V render
	a (Lbdd;F)Ldck; getRenderOffset
	a (Lbdd;)Lvk; getTextureLocation
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;F)Ldck; getRenderOffset
	<clinit> ()V <clinit>
eek net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	<init> (Leel;)V <init>
	a (Lbde;)F getFlipDegrees
	b (Lbde;)Lvk; getTextureLocation
	c (Laqj;)F getFlipDegrees
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eel net/minecraft/client/renderer/entity/EntityRenderDispatcher
	e SHADOW_RENDER_TYPE
	f renderers
	g playerRenderers
	h defaultPlayerRenderer
	i font
	a textureManager
	j level
	b camera
	k cameraOrientation
	c crosshairPickEntity
	d options
	l shouldRenderShadow
	m renderHitBoxes
	a (Lapx;F)I getPackedLightCoords
	a (Laqb;Leem;)V register
	a (Lefg;Lacd;)V registerRenderers
	<init> (Lejv;Lefg;Lacd;Ldkr;Ldka;)V <init>
	a (Lapx;)Leem; getRenderer
	a (Lbru;Ldjh;Lapx;)V prepare
	a (Ld;)V overrideCameraOrientation
	a (Z)V setRenderShadow
	b (Z)V setRenderHitBoxes
	a ()Z shouldRenderHitBoxes
	a (Lapx;Lecr;DDD)Z shouldRender
	a (Lapx;DDDFFLdfj;Ldzy;I)V render
	a (Ldfj;Ldfn;Lapx;F)V renderHitbox
	a (Ldfj;Ldfn;Lapx;FFF)V renderBox
	a (Ldfj;Ldzy;Lapx;)V renderFlame
	a (Ldfj$a;Ldfn;FFFFF)V fireVertex
	a (Ldfj;Ldzy;Lapx;FFLbrw;F)V renderShadow
	a (Ldfj$a;Ldfn;Lbrw;Lfx;DDDFF)V renderBlockShadow
	a (Ldfj$a;Ldfn;FFFFFF)V shadowVertex
	a (Lbru;)V setLevel
	b (Lapx;)D distanceToSqr
	a (DDD)D distanceToSqr
	b ()Ld; cameraOrientation
	c ()Ldkr; getFont
	<clinit> ()V <clinit>
eem net/minecraft/client/renderer/entity/EntityRenderer
	b entityRenderDispatcher
	c shadowRadius
	d shadowStrength
	<init> (Leel;)V <init>
	b (Lapx;F)I getPackedLightCoords
	b (Lapx;Lfx;)I getSkyLightLevel
	a (Lapx;Lfx;)I getBlockLightLevel
	a (Lapx;Lecr;DDD)Z shouldRender
	a (Lapx;F)Ldck; getRenderOffset
	a (Lapx;FFLdfj;Ldzy;I)V render
	b (Lapx;)Z shouldShowName
	a (Lapx;)Lvk; getTextureLocation
	a ()Ldkr; getFont
	a (Lapx;Lnr;Ldfj;Ldzy;I)V renderNameTag
	b ()Leel; getDispatcher
een net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	e model
	<init> (Leel;)V <init>
	a (Lbgb;FFLdfj;Ldzy;I)V render
	a (Lbgb;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
eeo net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	<init> (Leel;)V <init>
	a (Lbdx;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eeo$1 net/minecraft/client/renderer/entity/EvokerRenderer$1
	a this$0
	<init> (Leeo;Legc;)V <init>
	a (Ldfj;Ldzy;ILbdx;FFFFFF)V render
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eep net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	e RENDER_TYPE
	<init> (Leel;)V <init>
	a (Laqd;Lfx;)I getBlockLightLevel
	a (Laqd;FFLdfj;Ldzy;I)V render
	a (Ldfn;Lb;La;FFIIIFFI)V vertex
	a (Laqd;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
eeq net/minecraft/client/renderer/entity/FallingBlockRenderer
	<init> (Leel;)V <init>
	a (Lbcr;FFLdfj;Ldzy;I)V render
	a (Lbcr;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
eer net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	<init> (Leel;Lefg;)V <init>
	a (Lbge;FFLdfj;Ldzy;I)V render
	a (Lbge;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
ees net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	<init> (Leel;)V <init>
	a (Lbgf;FFLdfj;Ldzy;I)V render
	a (II)F fraction
	a (Ldfn;Lb;La;IFIII)V vertex
	a (FFFLdfn;Lb;F)V stringVertex
	a (Lbgf;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
eet net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	g RED_FOX_SLEEP_TEXTURE
	h SNOW_FOX_TEXTURE
	i SNOW_FOX_SLEEP_TEXTURE
	<init> (Leel;)V <init>
	a (Lbae;Ldfj;FFF)V setupRotations
	a (Lbae;)Lvk; getTextureLocation
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eeu net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	g GHAST_SHOOTING_LOCATION
	<init> (Leel;)V <init>
	a (Lbdh;)Lvk; getTextureLocation
	a (Lbdh;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eev net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	g scale
	<init> (Leel;F)V <init>
	a (Lbdi;Ldfj;F)V scale
	a (Lbdi;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eew net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	g GUARDIAN_BEAM_LOCATION
	h BEAM_RENDER_TYPE
	<init> (Leel;)V <init>
	<init> (Leel;F)V <init>
	a (Lbdj;Lecr;DDD)Z shouldRender
	a (Laqj;DF)Ldck; getPosition
	a (Lbdj;FFLdfj;Ldzy;I)V render
	a (Ldfn;Lb;La;FFFIIIFF)V vertex
	a (Lbdj;)Lvk; getTextureLocation
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqk;Lecr;DDD)Z shouldRender
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lecr;DDD)Z shouldRender
	<clinit> ()V <clinit>
eex net/minecraft/client/renderer/entity/HoglinRenderer
	a HOGLIN_LOCATION
	<init> (Leel;)V <init>
	a (Lbej;)Lvk; getTextureLocation
	b (Lbej;)Z isShaking
	a (Laqj;)Z isShaking
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eey net/minecraft/client/renderer/entity/HorseRenderer
	a LOCATION_BY_VARIANT
	<init> (Leel;)V <init>
	a (Lbba;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
eez net/minecraft/client/renderer/entity/HumanoidMobRenderer
	a DEFAULT_LOCATION
	<init> (Leel;Ldue;F)V <init>
	<init> (Leel;Ldue;FFFF)V <init>
	a (Laqk;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efa net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	<init> (Leel;)V <init>
	a (Lbeg;Ldfj;F)V scale
	a (Lbeg;)Lvk; getTextureLocation
	a (Laqk;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efb net/minecraft/client/renderer/entity/IllagerRenderer
	<init> (Leel;Lduf;F)V <init>
	a (Lbcv;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
efc net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	<init> (Leel;)V <init>
	a (Lbdl;)Lvk; getTextureLocation
	a (Lbdl;FFLdfj;Ldzy;I)V render
	b (Lbdl;)Z isBodyVisible
	a (Laqk;FFLdfj;Ldzy;I)V render
	d (Laqj;)Z isBodyVisible
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
efc$1 net/minecraft/client/renderer/entity/IllusionerRenderer$1
	a this$0
	<init> (Lefc;Legc;)V <init>
	a (Ldfj;Ldzy;ILbdl;FFFFFF)V render
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
efd net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	<init> (Leel;)V <init>
	a (Lbaf;)Lvk; getTextureLocation
	a (Lbaf;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efe net/minecraft/client/renderer/entity/ItemEntityRenderer
	a itemRenderer
	e random
	<init> (Leel;Lefg;)V <init>
	a (Lbly;)I getRenderAmount
	a (Lbcs;FFLdfj;Ldzy;I)V render
	a (Lbcs;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
eff net/minecraft/client/renderer/entity/ItemFrameRenderer
	a FRAME_LOCATION
	e MAP_FRAME_LOCATION
	f minecraft
	g itemRenderer
	<init> (Leel;Lefg;)V <init>
	a (Lbcm;FFLdfj;Ldzy;I)V render
	a (Lbcm;F)Ldck; getRenderOffset
	a (Lbcm;)Lvk; getTextureLocation
	b (Lbcm;)Z shouldShowName
	a (Lbcm;Lnr;Ldfj;Ldzy;I)V renderNameTag
	a (Lapx;Lnr;Ldfj;Ldzy;I)V renderNameTag
	a (Lapx;)Lvk; getTextureLocation
	b (Lapx;)Z shouldShowName
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;F)Ldck; getRenderOffset
	<clinit> ()V <clinit>
efg net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANT_GLINT_LOCATION
	c IGNORED
	b blitOffset
	d itemModelShaper
	e textureManager
	f itemColors
	<init> (Lejv;Lell;Ldkp;)V <init>
	a ()Ldzv; getItemModelShaper
	a (Lelg;Lbly;IILdfj;Ldfn;)V renderModelLists
	a (Lbly;Lebe$b;ZLdfj;Ldzy;IILelg;)V render
	a (Ldzy;Leag;ZZ)Ldfn; getArmorFoilBuffer
	a (Ldzy;Leag;Ldfj$a;)Ldfn; getCompassFoilBuffer
	b (Ldzy;Leag;Ldfj$a;)Ldfn; getCompassFoilBufferDirect
	b (Ldzy;Leag;ZZ)Ldfn; getFoilBuffer
	c (Ldzy;Leag;ZZ)Ldfn; getFoilBufferDirect
	a (Ldfj;Ldfn;Ljava/util/List;Lbly;II)V renderQuadList
	a (Lbly;Lbru;Laqj;)Lelg; getModel
	a (Lbly;Lebe$b;IILdfj;Ldzy;)V renderStatic
	a (Laqj;Lbly;Lebe$b;ZLdfj;Ldzy;Lbru;II)V renderStatic
	a (Lbly;II)V renderGuiItem
	a (Lbly;IILelg;)V renderGuiItem
	b (Lbly;II)V renderAndDecorateItem
	c (Lbly;II)V renderAndDecorateFakeItem
	a (Laqj;Lbly;II)V renderAndDecorateItem
	b (Laqj;Lbly;II)V tryRenderGuiItem
	a (Ldkr;Lbly;II)V renderGuiItemDecorations
	a (Ldkr;Lbly;IILjava/lang/String;)V renderGuiItemDecorations
	a (Ldfe;IIIIIIII)V fillRect
	a (Lacf;)V onResourceManagerReload
	a (Lbly;)Ljava/lang/String; lambda$tryRenderGuiItem$3
	b (Lbly;)Ljava/lang/String; lambda$tryRenderGuiItem$2
	c (Lbly;)Ljava/lang/String; lambda$tryRenderGuiItem$1
	d (Lbly;)Ljava/lang/String; lambda$tryRenderGuiItem$0
	<clinit> ()V <clinit>
efh net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	e model
	<init> (Leel;)V <init>
	a (Lbcn;FFLdfj;Ldzy;I)V render
	a (Lbcn;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
efi net/minecraft/client/renderer/entity/LightningBoltRenderer
	<init> (Leel;)V <init>
	a (Laqi;FFLdfj;Ldzy;I)V render
	a (Lb;Ldfn;FFIFFFFFFFZZZZ)V quad
	a (Laqi;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
efj net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	e model
	f layers
	<init> (Leel;Ldtu;F)V <init>
	a (Leil;)Z addLayer
	c ()Ldtu; getModel
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Laqj;ZZZ)Leag; getRenderType
	c (Laqj;F)I getOverlayCoords
	d (Laqj;)Z isBodyVisible
	a (Lgc;)F sleepDirectionToRotation
	a (Laqj;)Z isShaking
	a (Laqj;Ldfj;FFF)V setupRotations
	d (Laqj;F)F getAttackAnim
	a (Laqj;F)F getBob
	c (Laqj;)F getFlipDegrees
	b (Laqj;F)F getWhiteOverlayProgress
	a (Laqj;Ldfj;F)V scale
	b (Laqj;)Z shouldShowName
	b (Lapx;)Z shouldShowName
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
efj$1 net/minecraft/client/renderer/entity/LivingEntityRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$scores$Team$Visibility
	<clinit> ()V <clinit>
efk net/minecraft/client/renderer/entity/LlamaRenderer
	a LLAMA_LOCATIONS
	<init> (Leel;)V <init>
	a (Lbbb;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efl net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	e model
	<init> (Leel;)V <init>
	a (Lbgi;FFLdfj;Ldzy;I)V render
	a (Lbgi;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
efm net/minecraft/client/renderer/entity/MagmaCubeRenderer
	a MAGMACUBE_LOCATION
	<init> (Leel;)V <init>
	a (Lbdm;Lfx;)I getBlockLightLevel
	a (Lbdm;)Lvk; getTextureLocation
	a (Lbdm;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
efn net/minecraft/client/renderer/entity/MinecartRenderer
	e MINECART_LOCATION
	a model
	<init> (Leel;)V <init>
	a (Lbhi;FFLdfj;Ldzy;I)V render
	a (Lbhi;)Lvk; getTextureLocation
	a (Lbhi;FLcee;Ldfj;Ldzy;I)V renderMinecartContents
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
efo net/minecraft/client/renderer/entity/MobRenderer
	<init> (Leel;Ldtu;F)V <init>
	b (Laqk;)Z shouldShowName
	a (Laqk;Lecr;DDD)Z shouldRender
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqk;FLdfj;Ldzy;Lapx;)V renderLeash
	a (Ldfn;Lb;FFFIIIIFFFF)V renderSide
	a (Ldfn;Lb;IFFFFFIIZFF)V addVertexPair
	b (Laqj;)Z shouldShowName
	a (Laqj;FFLdfj;Ldzy;I)V render
	b (Lapx;)Z shouldShowName
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lecr;DDD)Z shouldRender
efp net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	<init> (Leel;)V <init>
	a (Lbag;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
efq net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	<init> (Leel;)V <init>
	a (Lbah;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efr net/minecraft/client/renderer/entity/PaintingRenderer
	<init> (Leel;)V <init>
	a (Lbcp;FFLdfj;Ldzy;I)V render
	a (Lbcp;)Lvk; getTextureLocation
	a (Ldfj;Ldfn;Lbcp;IILeju;Leju;)V renderPainting
	a (Lb;La;Ldfn;FFFFFIIII)V vertex
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
efs net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	<init> (Leel;)V <init>
	a (Lbai;)Lvk; getTextureLocation
	a (Lbai;Ldfj;FFF)V setupRotations
	a (FFIFF)F getAngle
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
eft net/minecraft/client/renderer/entity/ParrotRenderer
	a PARROT_LOCATIONS
	<init> (Leel;)V <init>
	a (Lbaj;)Lvk; getTextureLocation
	a (Lbaj;F)F getBob
	a (Laqj;F)F getBob
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efu net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	<init> (Leel;)V <init>
	a (Lbdp;)Lvk; getTextureLocation
	a (Lbdp;Ldfj;F)V scale
	a (Lbdp;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;F)V scale
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efv net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	<init> (Leel;)V <init>
	a (Lbak;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efw net/minecraft/client/renderer/entity/PiglinRenderer
	a resourceLocations
	<init> (Leel;Z)V <init>
	a (Z)Lduu; createModel
	a (Laqk;)Lvk; getTextureLocation
	c (Laqk;)Z isShaking
	a (Laqj;)Z isShaking
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efx net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	<init> (Leel;)V <init>
	a (Lbdq;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efy net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	<init> (Leel;)V <init>
	a (Lbal;)Lvk; getTextureLocation
	a (Lbal;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
efz net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	g puffStateO
	h small
	i mid
	j big
	<init> (Leel;)V <init>
	a (Lbam;)Lvk; getTextureLocation
	a (Lbam;FFLdfj;Ldzy;I)V render
	a (Lbam;Ldfj;FFF)V setupRotations
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
ega net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	g RABBIT_WHITE_LOCATION
	h RABBIT_BLACK_LOCATION
	i RABBIT_GOLD_LOCATION
	j RABBIT_SALT_LOCATION
	k RABBIT_WHITE_SPLOTCHED_LOCATION
	l RABBIT_TOAST_LOCATION
	m RABBIT_EVIL_LOCATION
	<init> (Leel;)V <init>
	a (Lban;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egb net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	<init> (Leel;)V <init>
	a (Lbds;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egc net/minecraft/client/renderer/entity/RenderLayerParent
	c ()Ldtu; getModel
	a (Lapx;)Lvk; getTextureLocation
egd net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	<init> (Leel;)V <init>
	a (Lbao;)Lvk; getTextureLocation
	a (Lbao;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
ege net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	<init> (Leel;)V <init>
	a (Lbap;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egf net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	f model
	<init> (Leel;)V <init>
	a (Lbgl;Lfx;)I getBlockLightLevel
	a (Lbgl;FFLdfj;Ldzy;I)V render
	a (Lbgl;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
egg net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	g TEXTURE_LOCATION
	<init> (Leel;)V <init>
	a (Lbdt;F)Ldck; getRenderOffset
	a (Lbdt;Lecr;DDD)Z shouldRender
	a (Lbdt;)Lvk; getTextureLocation
	a (Lbdt;Ldfj;FFF)V setupRotations
	a (Laqk;Lecr;DDD)Z shouldRender
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;F)Ldck; getRenderOffset
	a (Lapx;Lecr;DDD)Z shouldRender
	a (I)[Lvk; lambda$static$1
	a (Lelj;)Lvk; lambda$static$0
	<clinit> ()V <clinit>
egh net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	<init> (Leel;)V <init>
	a (Lbdu;)F getFlipDegrees
	b (Lbdu;)Lvk; getTextureLocation
	c (Laqj;)F getFlipDegrees
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egi net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	<init> (Leel;)V <init>
	a (Lbcw;)Lvk; getTextureLocation
	a (Laqk;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egj net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	<init> (Leel;)V <init>
	a (Lbdw;FFLdfj;Ldzy;I)V render
	a (Lbdw;Ldfj;F)V scale
	a (Lbdw;)Lvk; getTextureLocation
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;Ldfj;F)V scale
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
egk net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	<init> (Leel;)V <init>
	a (Lbar;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egl net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	<init> (Leel;)V <init>
	a (Lbgo;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egm net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	<init> (Leel;)V <init>
	b (Lbdy;)F getFlipDegrees
	a (Lbdy;)Lvk; getTextureLocation
	c (Laqj;)F getFlipDegrees
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egn net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	<init> (Leel;)V <init>
	a (Lbas;)Lvk; getTextureLocation
	a (Lbas;Ldfj;FFF)V setupRotations
	a (Lbas;F)F getBob
	a (Laqj;F)F getBob
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
ego net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	<init> (Leel;)V <init>
	a (Lbcw;)Lvk; getTextureLocation
	a (Laqk;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egp net/minecraft/client/renderer/entity/StriderRenderer
	a STRIDER_LOCATION
	g COLD_LOCATION
	<init> (Leel;)V <init>
	a (Lbea;)Lvk; getTextureLocation
	a (Lbea;Ldfj;F)V scale
	b (Lbea;)Z isShaking
	a (Laqj;Ldfj;F)V scale
	a (Laqj;)Z isShaking
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egq net/minecraft/client/renderer/entity/ThrownItemRenderer
	a itemRenderer
	e scale
	f fullBright
	<init> (Leel;Lefg;FZ)V <init>
	<init> (Leel;Lefg;)V <init>
	a (Lapx;Lfx;)I getBlockLightLevel
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
egr net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	e model
	<init> (Leel;)V <init>
	a (Lbgv;FFLdfj;Ldzy;I)V render
	a (Lbgv;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
egs net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	e TIPPED_ARROW_LOCATION
	<init> (Leel;)V <init>
	a (Lbfz;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egt net/minecraft/client/renderer/entity/TntMinecartRenderer
	<init> (Leel;)V <init>
	a (Lbhs;FLcee;Ldfj;Ldzy;I)V renderMinecartContents
	a (Lcee;Ldfj;Ldzy;IZ)V renderWhiteSolidBlock
	a (Lbhi;FLcee;Ldfj;Ldzy;I)V renderMinecartContents
egu net/minecraft/client/renderer/entity/TntRenderer
	<init> (Leel;)V <init>
	a (Lbct;FFLdfj;Ldzy;I)V render
	a (Lbct;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
egv net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	g modelB
	<init> (Leel;)V <init>
	a (Lbat;)Lvk; getTextureLocation
	a (Lbat;FFLdfj;Ldzy;I)V render
	a (Lbat;Ldfj;FFF)V setupRotations
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
egw net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	<init> (Leel;)V <init>
	a (Lbau;FFLdfj;Ldzy;I)V render
	a (Lbau;)Lvk; getTextureLocation
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
egx net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	<init> (Leel;)V <init>
	a (Lbay;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
egy net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	g VEX_CHARGING_LOCATION
	<init> (Leel;)V <init>
	a (Lbeb;Lfx;)I getBlockLightLevel
	a (Lbeb;)Lvk; getTextureLocation
	a (Lbeb;Ldfj;F)V scale
	a (Laqk;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
egz net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	<init> (Leel;Lacd;)V <init>
	a (Lbfg;)Lvk; getTextureLocation
	a (Lbfg;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eha net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	<init> (Leel;)V <init>
	a (Lbec;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
eha$1 net/minecraft/client/renderer/entity/VindicatorRenderer$1
	a this$0
	<init> (Leha;Legc;)V <init>
	a (Ldfj;Ldzy;ILbec;FFFFFF)V render
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
ehb net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	<init> (Leel;)V <init>
	a (Lbfm;)Lvk; getTextureLocation
	a (Lbfm;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
ehc net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	<init> (Leel;)V <init>
	a (Lbed;FFLdfj;Ldzy;I)V render
	a (Lbed;)Lvk; getTextureLocation
	a (Lbed;Ldfj;F)V scale
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;Ldfj;F)V scale
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
ehd net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	g WITHER_LOCATION
	<init> (Leel;)V <init>
	a (Lbci;Lfx;)I getBlockLightLevel
	a (Lbci;)Lvk; getTextureLocation
	a (Lbci;Ldfj;F)V scale
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
ehe net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	<init> (Leel;)V <init>
	a (Lbcw;)Lvk; getTextureLocation
	a (Lbcw;Ldfj;F)V scale
	a (Laqk;)Lvk; getTextureLocation
	a (Laqj;Ldfj;F)V scale
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
ehf net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	e WITHER_LOCATION
	f model
	<init> (Leel;)V <init>
	a (Lbgw;Lfx;)I getBlockLightLevel
	a (Lbgw;FFLdfj;Ldzy;I)V render
	a (Lbgw;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;Lfx;)I getBlockLightLevel
	<clinit> ()V <clinit>
ehg net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	g WOLF_TAME_LOCATION
	h WOLF_ANGRY_LOCATION
	<init> (Leel;)V <init>
	a (Lbaw;F)F getBob
	a (Lbaw;FFLdfj;Ldzy;I)V render
	a (Lbaw;)Lvk; getTextureLocation
	a (Laqk;FFLdfj;Ldzy;I)V render
	a (Laqj;F)F getBob
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;FFLdfj;Ldzy;I)V render
	<clinit> ()V <clinit>
ehh net/minecraft/client/renderer/entity/ZoglinRenderer
	a ZOGLIN_LOCATION
	<init> (Leel;)V <init>
	a (Lbef;)Lvk; getTextureLocation
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
ehi net/minecraft/client/renderer/entity/ZombieRenderer
	<init> (Leel;)V <init>
ehj net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	<init> (Leel;Lacd;)V <init>
	a (Lbeh;)Lvk; getTextureLocation
	b (Lbeh;)Z isShaking
	a (Laqk;)Lvk; getTextureLocation
	a (Laqj;)Z isShaking
	a (Lapx;)Lvk; getTextureLocation
	<clinit> ()V <clinit>
ehk net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	b arrow
	<init> (Lefj;)V <init>
	a (Laqj;)I numStuck
	a (Ldfj;Ldzy;ILapx;FFFF)V renderStuckItem
ehl net/minecraft/client/renderer/entity/layers/BeeStingerLayer
	a BEE_STINGER_LOCATION
	<init> (Lefj;)V <init>
	a (Laqj;)I numStuck
	a (Ldfj;Ldzy;ILapx;FFFF)V renderStuckItem
	a (Ldfn;Lb;La;FIFFI)V vertex
	<clinit> ()V <clinit>
ehm net/minecraft/client/renderer/entity/layers/CapeLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILdzb;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
ehn net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbdd;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eho net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILazy;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
ehp net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	<init> (Legc;)V <init>
	a (F)F xOffset
	a ()Lvk; getTextureLocation
	b ()Ldtu; model
	<clinit> ()V <clinit>
ehq net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
ehr net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a scaleX
	b scaleY
	c scaleZ
	<init> (Legc;)V <init>
	<init> (Legc;FFF)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
ehs net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILdzb;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eht net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbac;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
ehu net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbdb;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
ehv net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
ehw net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES
	<init> (Legc;)V <init>
	a ()Leag; renderType
	<clinit> ()V <clinit>
ehx net/minecraft/client/renderer/entity/layers/EnergySwirlLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	a (F)F xOffset
	a ()Lvk; getTextureLocation
	b ()Ldtu; model
ehy net/minecraft/client/renderer/entity/layers/EyesLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	a ()Leag; renderType
ehz net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbae;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eia net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbba;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eib net/minecraft/client/renderer/entity/layers/HorseMarkingLayer
	a LOCATION_BY_MARKINGS
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbba;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
eic net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a ARMOR_LOCATION_CACHE
	b innerModel
	c outerModel
	<init> (Legc;Ldue;Ldue;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;Laqj;Laqc;ILdue;)V renderArmorPiece
	a (Ldue;Laqc;)V setPartVisibility
	a (Ldfj;Ldzy;ILbjv;ZLdue;ZFFFLjava/lang/String;)V renderModel
	a (Laqc;)Ldue; getArmorModel
	b (Laqc;)Z usesInnerModel
	a (Lbjv;ZLjava/lang/String;)Lvk; getArmorLocation
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eic$1 net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot
	<clinit> ()V <clinit>
eid net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer
	a resourceLocations
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbaf;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eie net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbaf;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eif net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Laqj;Lbly;Lebe$b;Laqf;Ldfj;Ldzy;I)V renderArmWithItem
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eig net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbbb;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eih net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbag;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eii net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbai;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eij net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbft;FFFFFF)V render
	a (Ldfj;Ldzy;ILbft;FFFFZ)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	a (Ldfj;ZLbft;Ldzy;Lmd;IFFFFLaqb;)V lambda$render$1
	a (Laqb;)Z lambda$render$0
eik net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES
	<init> (Legc;)V <init>
	a ()Leag; renderType
	<clinit> ()V <clinit>
eil net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	<init> (Legc;)V <init>
	a (Ldtu;Ldtu;Lvk;Ldfj;Ldzy;ILaqj;FFFFFFFFF)V coloredCutoutModelCopyLayerRender
	a (Ldtu;Lvk;Ldfj;Ldzy;ILaqj;FFF)V renderColoredCutoutModel
	aC_ ()Ldtu; getParentModel
	a (Lapx;)Lvk; getTextureLocation
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eim net/minecraft/client/renderer/entity/layers/SaddleLayer
	a textureLocation
	b model
	<init> (Legc;Ldtu;Lvk;)V <init>
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
ein net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbap;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eio net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbdt;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eip net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eiq net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbar;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eir net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES
	<init> (Legc;)V <init>
	a ()Leag; renderType
	<clinit> ()V <clinit>
eis net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b box
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eit net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqk;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eiu net/minecraft/client/renderer/entity/layers/StuckInBodyLayer
	<init> (Lefj;)V <init>
	a (Laqj;)I numStuck
	a (Ldfj;Ldzy;ILapx;FFFF)V renderStuckItem
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eiv net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a modelA
	b modelB
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbat;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eiw net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	<init> (Legc;Lacd;Ljava/lang/String;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ljava/lang/String;Lvk;)Lvk; getResourceLocation
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lgb;Ljava/lang/Object;)Lekw$a; getHatData
	a (Lacf;)V onResourceManagerReload
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	a (Ljava/lang/String;Lgb;Ljava/lang/Object;Ljava/lang/Object;)Lekw$a; lambda$getHatData$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
eix net/minecraft/client/renderer/entity/layers/WitchItemLayer
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILaqj;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
eiy net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	<init> (Legc;)V <init>
	a (F)F xOffset
	a ()Lvk; getTextureLocation
	b ()Ldtu; model
	<clinit> ()V <clinit>
eiz net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	<init> (Legc;)V <init>
	a (Ldfj;Ldzy;ILbaw;FFFFFF)V render
	a (Ldfj;Ldzy;ILapx;FFFFFF)V render
	<clinit> ()V <clinit>
eja net/minecraft/client/renderer/entity/layers/package-info
ejb net/minecraft/client/renderer/entity/package-info
ejc net/minecraft/client/renderer/entity/player/PlayerRenderer
	<init> (Leel;)V <init>
	<init> (Leel;Z)V <init>
	a (Ldzb;FFLdfj;Ldzy;I)V render
	a (Ldzb;F)Ldck; getRenderOffset
	b (Ldzb;)V setModelProperties
	a (Ldzb;Laoq;)Ldue$a; getArmPose
	a (Ldzb;)Lvk; getTextureLocation
	a (Ldzb;Ldfj;F)V scale
	a (Ldzb;Lnr;Ldfj;Ldzy;I)V renderNameTag
	a (Ldfj;Ldzy;ILdzb;)V renderRightHand
	b (Ldfj;Ldzy;ILdzb;)V renderLeftHand
	a (Ldfj;Ldzy;ILdzb;Ldwf;Ldwf;)V renderHand
	a (Ldzb;Ldfj;FFF)V setupRotations
	a (Laqj;Ldfj;F)V scale
	a (Laqj;Ldfj;FFF)V setupRotations
	a (Laqj;FFLdfj;Ldzy;I)V render
	a (Lapx;)Lvk; getTextureLocation
	a (Lapx;Lnr;Ldfj;Ldzy;I)V renderNameTag
	a (Lapx;FFLdfj;Ldzy;I)V render
	a (Lapx;F)Ldck; getRenderOffset
ejd net/minecraft/client/renderer/entity/player/package-info
eje net/minecraft/client/renderer/item/ItemProperties
	a GENERIC_PROPERTIES
	b DAMAGED
	c DAMAGE
	d PROPERTY_DAMAGED
	e PROPERTY_DAMAGE
	f PROPERTIES
	<init> ()V <init>
	a (Lvk;Lejf;)Lejf; registerGeneric
	a (Lblu;Lvk;Lejf;)V register
	a (Lblu;Lvk;)Lejf; getProperty
	a (Lbly;Ldwl;Laqj;)F lambda$static$15
	b (Lbly;Ldwl;Laqj;)F lambda$static$14
	c (Lbly;Ldwl;Laqj;)F lambda$static$13
	d (Lbly;Ldwl;Laqj;)F lambda$static$12
	e (Lbly;Ldwl;Laqj;)F lambda$static$11
	f (Lbly;Ldwl;Laqj;)F lambda$static$10
	g (Lbly;Ldwl;Laqj;)F lambda$static$9
	h (Lbly;Ldwl;Laqj;)F lambda$static$8
	i (Lbly;Ldwl;Laqj;)F lambda$static$7
	j (Lbly;Ldwl;Laqj;)F lambda$static$6
	k (Lbly;Ldwl;Laqj;)F lambda$static$5
	l (Lbly;Ldwl;Laqj;)F lambda$static$4
	m (Lbly;Ldwl;Laqj;)F lambda$static$3
	a (Lblu;)Ljava/util/Map; lambda$register$2
	n (Lbly;Ldwl;Laqj;)F lambda$static$1
	o (Lbly;Ldwl;Laqj;)F lambda$static$0
	<clinit> ()V <clinit>
eje$1 net/minecraft/client/renderer/item/ItemProperties$1
	a rotation
	b rota
	c lastUpdateTick
	<init> ()V <init>
	call (Lbly;Ldwl;Laqj;)F call
	a (Lbru;D)D wobble
eje$2 net/minecraft/client/renderer/item/ItemProperties$2
	a wobble
	b wobbleRandom
	<init> ()V <init>
	call (Lbly;Ldwl;Laqj;)F call
	a (Ldwl;)Lfx; getSpawnPosition
	a (Lbru;Lmd;)Lfx; getLodestonePosition
	a (Lbcm;)D getFrameRotation
	a (Ldck;Lapx;)D getAngleTo
eje$a net/minecraft/client/renderer/item/ItemProperties$CompassWobble
	a rotation
	b deltaRotation
	c lastUpdateTick
	<init> ()V <init>
	a (J)Z shouldUpdate
	a (JD)V update
	<init> (Leje$1;)V <init>
	a (Leje$a;J)Z access$100
	a (Leje$a;JD)V access$200
	a (Leje$a;)D access$300
ejf net/minecraft/client/renderer/item/ItemPropertyFunction
	call (Lbly;Ldwl;Laqj;)F call
ejg net/minecraft/client/renderer/item/package-info
ejh net/minecraft/client/renderer/package-info
eji net/minecraft/client/renderer/texture/AbstractTexture
	a id
	b blur
	c mipmap
	<init> ()V <init>
	a (ZZ)V setFilter
	b ()I getId
	c ()V releaseId
	a (Lacf;)V load
	d ()V bind
	a (Lejv;Lacf;Lvk;Ljava/util/concurrent/Executor;)V reset
	close ()V close
	a ()V lambda$bind$1
	e ()V lambda$releaseId$0
ejj net/minecraft/client/renderer/texture/AtlasSet
	a atlases
	<init> (Ljava/util/Collection;)V <init>
	a (Lvk;)Lejt; getAtlas
	a (Lelj;)Leju; getSprite
	close ()V close
ejk net/minecraft/client/renderer/texture/DynamicTexture
	d LOGGER
	e pixels
	<init> (Ldeq;)V <init>
	<init> (IIZ)V <init>
	a (Lacf;)V load
	a ()V upload
	e ()Ldeq; getPixels
	a (Ldeq;)V setPixels
	close ()V close
	f ()V lambda$new$0
	<clinit> ()V <clinit>
ejl net/minecraft/client/renderer/texture/HttpTexture
	e LOGGER
	f file
	g urlString
	h processLegacySkin
	i onDownloaded
	j future
	k uploaded
	<init> (Ljava/io/File;Ljava/lang/String;Lvk;ZLjava/lang/Runnable;)V <init>
	a (Ldeq;)V loadCallback
	b (Ldeq;)V upload
	a (Lacf;)V load
	a (Ljava/io/InputStream;)Ldeq; load
	c (Ldeq;)Ldeq; processLegacySkin
	a (Ldeq;IIII)V doNotchTransparencyHack
	b (Ldeq;IIII)V setNoAlpha
	a ()V lambda$load$4
	b (Ljava/io/InputStream;)V lambda$null$3
	c (Lacf;)V lambda$load$2
	d (Ldeq;)V lambda$loadCallback$1
	e (Ldeq;)V lambda$null$0
	<clinit> ()V <clinit>
ejm net/minecraft/client/renderer/texture/MipmapGenerator
	a POW22
	<init> ()V <init>
	a (Ldeq;I)[Ldeq; generateMipLevels
	a (IIIIZ)I alphaBlend
	a (IIIII)I gammaBlend
	a (I)F getPow22
	a ([F)V lambda$static$0
	<clinit> ()V <clinit>
ejn net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	b MISSING_TEXTURE_LOCATION
	c missingTexture
	d MISSING_IMAGE_DATA
	e INFO
	<init> (Lejt;IIIII)V <init>
	a (Lejt;IIIII)Lejn; newInstance
	a ()Lvk; getLocation
	b ()Leju$a; info
	close ()V close
	c ()Lejk; getTexture
	s ()Ldeq; lambda$static$0
	<clinit> ()V <clinit>
ejo net/minecraft/client/renderer/texture/OverlayTexture
	a NO_OVERLAY
	b texture
	<init> ()V <init>
	close ()V close
	a ()V setupOverlayColor
	a (F)I u
	a (Z)I v
	a (II)I pack
	a (FZ)I pack
	b ()V teardownOverlayColor
	<clinit> ()V <clinit>
ejp net/minecraft/client/renderer/texture/PreloadedTexture
	e future
	<init> (Lacf;Lvk;Ljava/util/concurrent/Executor;)V <init>
	b (Lacf;)Lejq$a; getTextureImage
	a ()Ljava/util/concurrent/CompletableFuture; getFuture
	a (Lejv;Lacf;Lvk;Ljava/util/concurrent/Executor;)V reset
	a (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; executor
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$executor$5
	a (Ljava/lang/Runnable;)V lambda$null$4
	a (Lejv;)V lambda$reset$3
	c (Lacf;)Lejq$a; lambda$reset$2
	a (Lejq$a;)Ljava/lang/Void; lambda$getFuture$1
	a (Lacf;Lvk;)Lejq$a; lambda$new$0
ejq net/minecraft/client/renderer/texture/SimpleTexture
	e LOGGER
	d location
	<init> (Lvk;)V <init>
	a (Lacf;)V load
	a (Ldeq;ZZ)V doLoad
	b (Lacf;)Lejq$a; getTextureImage
	b (Ldeq;ZZ)V lambda$load$0
	e ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
ejq$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	<init> (Ljava/io/IOException;)V <init>
	<init> (Leld;Ldeq;)V <init>
	a (Lacf;Lvk;)Lejq$a; load
	a ()Leld; getTextureMetadata
	b ()Ldeq; getImage
	close ()V close
	c ()V throwIfError
ejr net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	<init> (III)V <init>
	a ()I getWidth
	b ()I getHeight
	a (Leju$a;)V registerSprite
	c ()V stitch
	a (Lejr$c;)V gatherSprites
	b (II)I smallestFittingMinTexel
	a (Lejr$a;)Z addToStorage
	b (Lejr$a;)Z expand
	a (Lejr$c;Lejr$b;)V lambda$gatherSprites$4
	c (Lejr$a;)Leju$a; lambda$stitch$3
	d (Lejr$a;)Lvk; lambda$static$2
	e (Lejr$a;)Ljava/lang/Integer; lambda$static$1
	f (Lejr$a;)Ljava/lang/Integer; lambda$static$0
	a (II)I access$000
	<clinit> ()V <clinit>
ejr$a net/minecraft/client/renderer/texture/Stitcher$Holder
	a spriteInfo
	b width
	c height
	<init> (Leju$a;I)V <init>
	toString ()Ljava/lang/String; toString
ejr$b net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	<init> (IIII)V <init>
	a ()Lejr$a; getHolder
	b ()I getX
	c ()I getY
	a (Lejr$a;)Z add
	a (Ljava/util/function/Consumer;)V walk
	toString ()Ljava/lang/String; toString
ejr$c net/minecraft/client/renderer/texture/Stitcher$SpriteLoader
	load (Leju$a;IIII)V load
ejs net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	<init> (Leju$a;Ljava/util/Collection;)V <init>
	a ()Ljava/util/Collection; getAllSprites
ejt net/minecraft/client/renderer/texture/TextureAtlas
	f LOGGER
	d LOCATION_BLOCKS
	e LOCATION_PARTICLES
	g animatedTextures
	h sprites
	i texturesByName
	j location
	k maxSupportedTextureSize
	<init> (Lvk;)V <init>
	a (Lacf;)V load
	a (Lejt$a;)V reload
	a (Lacf;Ljava/util/stream/Stream;Lant;I)Lejt$a; prepareToStitch
	a (Lacf;Ljava/util/Set;)Ljava/util/Collection; getBasicSpriteInfos
	a (Lacf;Lejr;I)Ljava/util/List; getLoadedSprites
	a (Lacf;Leju$a;IIIII)Leju; load
	b (Lvk;)Lvk; getResourceLocation
	a (Ljava/lang/String;)Leju; getTexture
	a ()V cycleAnimationFrames
	a (Ljava/util/Set;Lvk;)V register
	e ()V tick
	a (Lvk;)Leju; getSprite
	f ()V clearTextureData
	g ()Lvk; location
	b (Lejt$a;)V updateFilter
	a (ILjava/util/concurrent/ConcurrentLinkedQueue;Ljava/util/List;Lacf;Leju$a;IIII)V lambda$getLoadedSprites$4
	a (Lacf;Leju$a;IIIIILjava/util/concurrent/ConcurrentLinkedQueue;)V lambda$null$3
	a (Lvk;Lacf;Ljava/util/concurrent/ConcurrentLinkedQueue;)V lambda$getBasicSpriteInfos$2
	a (Leju$a;)Ljava/lang/String; lambda$prepareToStitch$1
	c (Lvk;)V lambda$prepareToStitch$0
	<clinit> ()V <clinit>
ejt$a net/minecraft/client/renderer/texture/TextureAtlas$Preparations
	a sprites
	b width
	c height
	d mipLevel
	e regions
	<init> (Ljava/util/Set;IIILjava/util/List;)V <init>
eju net/minecraft/client/renderer/texture/TextureAtlasSprite
	b atlas
	c info
	d metadata
	a mainImage
	e framesX
	f framesY
	g interpolationData
	h x
	i y
	j u0
	k u1
	l v0
	m v1
	n frame
	o subFrame
	<init> (Lejt;Leju$a;IIIIILdeq;)V <init>
	a (I)V upload
	a (II[Ldeq;)V upload
	d ()I getX
	e ()I getY
	f ()I getWidth
	g ()I getHeight
	h ()F getU0
	i ()F getU1
	a (D)F getU
	a (F)F getUOffset
	j ()F getV0
	k ()F getV1
	b (D)F getV
	b (F)F getVOffset
	l ()Lvk; getName
	m ()Lejt; atlas
	n ()I getFrameCount
	a ([[I)V fixupMipTransparency
	close ()V close
	toString ()Ljava/lang/String; toString
	a (III)Z isTransparent
	o ()V uploadFirstFrame
	a ()F atlasSize
	p ()F uvShrinkRatio
	q ()V cycleFrames
	r ()Z isAnimation
	a (Ldfn;)Ldfn; wrap
	a (Leju$b;)V lambda$cycleFrames$4
	b ()Ljava/lang/String; lambda$new$3
	c ()Ljava/lang/String; lambda$new$2
	s ()Ljava/lang/String; lambda$new$1
	a (Ldeq;)Ljava/lang/String; lambda$new$0
	a (Leju;)I access$600
	b (Leju;)I access$700
	c (Leju;)Leku; access$800
	d (Leju;)Leju$a; access$900
	a (Leju;II[Ldeq;)V access$1000
	e (Leju;)[I access$1100
	f (Leju;)[I access$1200
eju$1 net/minecraft/client/renderer/texture/TextureAtlasSprite$1
eju$a net/minecraft/client/renderer/texture/TextureAtlasSprite$Info
	a name
	b width
	c height
	d metadata
	<init> (Lvk;IILeku;)V <init>
	a ()Lvk; name
	b ()I width
	c ()I height
	a (Leju$a;)Leku; access$000
	b (Leju$a;)I access$100
	c (Leju$a;)I access$200
	d (Leju$a;)Lvk; access$300
eju$b net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData
	b activeFrame
	a this$0
	<init> (Leju;Leju$a;I)V <init>
	a ()V uploadInterpolatedFrame
	a (IIII)I getPixel
	a (DII)I mix
	close ()V close
	<init> (Leju;Leju$a;ILeju$1;)V <init>
	a (Leju$b;)V access$500
ejv net/minecraft/client/renderer/texture/TextureManager
	b LOGGER
	a INTENTIONAL_MISSING_TEXTURE
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	<init> (Lacf;)V <init>
	a (Lvk;)V bind
	d (Lvk;)V _bind
	a (Lvk;Leji;)V register
	b (Lvk;Leji;)V safeClose
	c (Lvk;Leji;)Leji; loadTexture
	b (Lvk;)Leji; getTexture
	a (Ljava/lang/String;Lejk;)Lvk; register
	a (Lvk;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	a (Ljava/lang/Runnable;)V execute
	e ()V tick
	c (Lvk;)V release
	close ()V close
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Ljava/lang/Runnable;)V lambda$reload$5
	a (Lacf;Ljava/util/concurrent/Executor;Ljava/lang/Void;)V lambda$reload$4
	c (Ljava/lang/Runnable;)V lambda$execute$3
	a (Lvk;Lejp;)V lambda$preload$2
	a (Leji;)Ljava/lang/String; lambda$loadTexture$1
	e (Lvk;)V lambda$bind$0
	<clinit> ()V <clinit>
ejw net/minecraft/client/renderer/texture/Tickable
	e ()V tick
ejx net/minecraft/client/renderer/texture/package-info
ejy net/minecraft/client/resources/AssetIndex
	a LOGGER
	b rootFiles
	c namespacedFiles
	<init> ()V <init>
	<init> (Ljava/io/File;Ljava/lang/String;)V <init>
	a (Lvk;)Ljava/io/File; getFile
	a (Ljava/lang/String;)Ljava/io/File; getRootFile
	a (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;Lvk;)Z lambda$getFiles$0
	<clinit> ()V <clinit>
ejz net/minecraft/client/resources/ClientPackSource
	a LOGGER
	b SHA1
	c vanillaPack
	d serverPackDir
	e downloadLock
	f assetIndex
	g currentDownload
	h serverPack
	<init> (Ljava/io/File;Lejy;)V <init>
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
	a ()Labk; getVanillaPack
	c ()Ljava/util/Map; getDownloadHeaders
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/io/File;)V deleteQuietly
	b ()V clearServerPack
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	d ()V clearOldDownloads
	a (Ljava/io/File;Labv;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Labs$a;)Labs; createProgrammerArtPack
	a (Labs$a;Ljava/util/function/Supplier;)Labs; createProgrammerArtPack
	b (Ljava/io/File;)Labg; createProgrammerArtDirPack
	c (Ljava/io/File;)Labh; createProgrammerArtZipPack
	d (Ljava/io/File;)Labh; lambda$createProgrammerArtPack$6
	e (Ljava/io/File;)Labh; lambda$createProgrammerArtPack$5
	f (Ljava/io/File;)Labh; lambda$setServerPack$4
	a (Ljava/io/File;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$downloadAndSelectResourcePack$3
	a (Ljava/lang/String;Ljava/io/File;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage; lambda$downloadAndSelectResourcePack$2
	a (Ldjw;Ldoo;)V lambda$downloadAndSelectResourcePack$1
	e ()Labh; lambda$loadPacks$0
	<clinit> ()V <clinit>
ejz$1 net/minecraft/client/resources/ClientPackSource$1
	<init> (Ljava/io/File;)V <init>
	a ()Ljava/lang/String; getName
ejz$2 net/minecraft/client/resources/ClientPackSource$2
	<init> (Ljava/io/File;)V <init>
	a ()Ljava/lang/String; getName
eka net/minecraft/client/resources/DefaultClientPackResources
	d assetIndex
	<init> (Lejy;)V <init>
	c (Labi;Lvk;)Ljava/io/InputStream; getResourceAsStream
	b (Labi;Lvk;)Z hasResource
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
ekb net/minecraft/client/resources/DefaultPlayerSkin
	a STEVE_SKIN_LOCATION
	b ALEX_SKIN_LOCATION
	<init> ()V <init>
	a ()Lvk; getDefaultSkin
	a (Ljava/util/UUID;)Lvk; getDefaultSkin
	b (Ljava/util/UUID;)Ljava/lang/String; getSkinModelName
	c (Ljava/util/UUID;)Z isAlexDefault
	<clinit> ()V <clinit>
ekc net/minecraft/client/resources/DirectAssetIndex
	b assetsDirectory
	<init> (Ljava/io/File;)V <init>
	a (Lvk;)Ljava/io/File; getFile
	a (Ljava/lang/String;)Ljava/io/File; getRootFile
	a (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)Lvk; lambda$getFiles$3
	a (Ljava/util/function/Predicate;Ljava/nio/file/Path;)Z lambda$getFiles$2
	a (Ljava/nio/file/Path;)Z lambda$getFiles$1
	b (Ljava/nio/file/Path;)Z lambda$getFiles$0
ekd net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	<init> ()V <init>
	a (Lacf;Lant;)[I prepare
	a ([ILacf;Lant;)V apply
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	<clinit> ()V <clinit>
eke net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	<init> ()V <init>
	a (Lacf;Lant;)[I prepare
	a ([ILacf;Lant;)V apply
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	<clinit> ()V <clinit>
ekf net/minecraft/client/resources/LegacyPackResourcesAdapter
	b source
	c patches
	a V3
	a (Lvk;)Lvk; toMetaLocation
	<init> (Labh;Ljava/util/Map;)V <init>
	b (Lvk;)Lvk; map
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	a (Labi;Lvk;)Ljava/io/InputStream; getResource
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b (Labi;Lvk;)Z hasResource
	a (Labi;)Ljava/util/Set; getNamespaces
	a (Labl;)Ljava/lang/Object; getMetadataSection
	a ()Ljava/lang/String; getName
	close ()V close
	b ()Lcom/google/common/collect/ImmutableMap; lambda$static$1
	a (Lcom/google/common/collect/ImmutableMap$Builder;Ljava/lang/String;Ljava/lang/String;)V lambda$null$0
	<clinit> ()V <clinit>
ekg net/minecraft/client/resources/LegacyStuffWrapper
	<init> ()V <init>
	a (Lacf;Lvk;)[I getPixels
ekh net/minecraft/client/resources/MobEffectTextureManager
	<init> (Lejv;)V <init>
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lapp;)Leju; get
eki net/minecraft/client/resources/PackResourcesAdapterV4
	d CHESTS
	e PATTERNS
	f SHIELDS
	g BANNERS
	a SHIELD_BASE
	b BANNER_BASE
	c OLD_IRON_GOLEM_LOCATION
	h pack
	<init> (Labh;)V <init>
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Labi;Lvk;)Z hasResource
	a (Labi;Lvk;)Ljava/io/InputStream; getResource
	a (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; fixPattern
	a (Ljava/io/InputStream;)Ljava/io/InputStream; fixConduitEyeTexture
	b (Ljava/io/InputStream;)Ljava/io/InputStream; fixLeftChest
	c (Ljava/io/InputStream;)Ljava/io/InputStream; fixRightChest
	d (Ljava/io/InputStream;)Ljava/io/InputStream; fixSingleChest
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Labi;)Ljava/util/Set; getNamespaces
	a (Labl;)Ljava/lang/Object; getMetadataSection
	a ()Ljava/lang/String; getName
	close ()V close
	a (Ldeq;Ldeq;IIIIIIIZZ)V copyRect
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$2
	c (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ekj net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	<init> (Lejv;)V <init>
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lbco;)Leju; get
	b ()Leju; getBackSprite
	<clinit> ()V <clinit>
ekk net/minecraft/client/resources/SkinManager
	a textureManager
	b skinsDirectory
	c sessionService
	d insecureSkinCache
	<init> (Lejv;Ljava/io/File;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V <init>
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lvk; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lekk$a;)Lvk; registerTexture
	a (Lcom/mojang/authlib/GameProfile;Lekk$a;Z)V registerSkins
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; getInsecureSkinInformation
	a (Lcom/mojang/authlib/GameProfile;ZLekk$a;)V lambda$registerSkins$4
	a (Ljava/util/Map;Lekk$a;)V lambda$null$3
	b (Ljava/util/Map;Lekk$a;)V lambda$null$2
	a (Ljava/util/Map;Lekk$a;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)V lambda$null$1
	a (Lekk$a;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lvk;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTexture$0
ekk$1 net/minecraft/client/resources/SkinManager$1
	a val$sessionService
	b this$0
	<init> (Lekk;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V <init>
	a (Ljava/lang/String;)Ljava/util/Map; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
ekk$a net/minecraft/client/resources/SkinManager$SkinTextureCallback
	onSkinTextureAvailable (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lvk;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V onSkinTextureAvailable
ekl net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	<init> (Ldkj;)V <init>
	a (Lacf;Lant;)Ljava/util/List; prepare
	a (Ljava/util/List;Lacf;Lant;)V apply
	a ()Ljava/lang/String; getSplash
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	a (Ljava/lang/String;)Z lambda$prepare$0
	<clinit> ()V <clinit>
ekm net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	b prefix
	<init> (Lejv;Lvk;Ljava/lang/String;)V <init>
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lvk;)Leju; getSprite
	b (Lvk;)Lvk; resolveLocation
	a (Lacf;Lant;)Lejt$a; prepare
	a (Lejt$a;Lacf;Lant;)V apply
	close ()V close
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
ekn net/minecraft/client/resources/language/ClientLanguage
	a LOGGER
	b storage
	c defaultRightToLeft
	<init> (Ljava/util/Map;Z)V <init>
	a (Lacf;Ljava/util/List;)Lekn; loadFrom
	a (Ljava/util/List;Ljava/util/Map;)V appendFrom
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	b (Ljava/lang/String;)Z has
	b ()Z isDefaultRightToLeft
	a (Lnu;)Laex; getVisualOrder
	<clinit> ()V <clinit>
eko net/minecraft/client/resources/language/FormattedBidiReorder
	<init> ()V <init>
	a (Lnu;Z)Laex; reorder
	a (Ljava/lang/String;)Ljava/lang/String; shape
ekp net/minecraft/client/resources/language/I18n
	a language
	<init> ()V <init>
	a (Lly;)V setLanguage
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Ljava/lang/String;)Z exists
	<clinit> ()V <clinit>
ekq net/minecraft/client/resources/language/LanguageInfo
	a code
	b region
	c name
	d bidirectional
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V <init>
	getCode ()Ljava/lang/String; getCode
	getName ()Ljava/lang/String; getName
	getRegion ()Ljava/lang/String; getRegion
	a ()Z isBidirectional
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lekq;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
ekr net/minecraft/client/resources/language/LanguageManager
	a LOGGER
	b DEFAULT_LANGUAGE
	c languages
	d currentCode
	e currentLanguage
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/util/stream/Stream;)Ljava/util/Map; extractLanguages
	a (Lacf;)V onResourceManagerReload
	a ()Z isBidirectional
	a (Lekq;)V setSelected
	b ()Lekq; getSelected
	d ()Ljava/util/SortedSet; getLanguages
	a (Ljava/lang/String;)Lekq; getLanguage
	a (Ljava/util/Map;Labh;)V lambda$extractLanguages$0
	<clinit> ()V <clinit>
eks net/minecraft/client/resources/language/package-info
ekt net/minecraft/client/resources/metadata/animation/AnimationFrame
	a index
	b time
	<init> (I)V <init>
	<init> (II)V <init>
	a ()Z isTimeUnknown
	b ()I getTime
	c ()I getIndex
eku net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b EMPTY
	c frames
	d frameWidth
	e frameHeight
	f defaultFrameTime
	g interpolatedFrames
	<init> (Ljava/util/List;IIIZ)V <init>
	b (II)Z isDivisionInteger
	a (II)Lcom/mojang/datafixers/util/Pair; getFrameSize
	c (II)Lcom/mojang/datafixers/util/Pair; calculateFrameSize
	a (I)I getFrameHeight
	b (I)I getFrameWidth
	a ()I getFrameCount
	b ()I getDefaultFrameTime
	c ()Z isInterpolatedFrames
	f (I)Lekt; getFrame
	c (I)I getFrameTime
	d (I)Z hasCustomFrameTime
	e (I)I getFrameIndex
	d ()Ljava/util/Set; getUniqueFrameIndices
	<clinit> ()V <clinit>
eku$1 net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$1
	<init> (Ljava/util/List;IIIZ)V <init>
	a (II)Lcom/mojang/datafixers/util/Pair; getFrameSize
ekv net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Leku; fromJson
	a (ILcom/google/gson/JsonElement;)Lekt; getFrame
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
ekw net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b hat
	<init> (Lekw$a;)V <init>
	a ()Lekw$a; getHat
	<clinit> ()V <clinit>
ekw$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	values ()[Lekw$a; values
	valueOf (Ljava/lang/String;)Lekw$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lekw$a; getByName
	a (Lekw$a;)Lekw$a; lambda$static$0
	<clinit> ()V <clinit>
ekx net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Lekw; fromJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
eky net/minecraft/client/resources/metadata/animation/package-info
ekz net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	a SERIALIZER
	b languages
	<init> (Ljava/util/Collection;)V <init>
	a ()Ljava/util/Collection; getLanguages
	<clinit> ()V <clinit>
ela net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Lekz; fromJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
elb net/minecraft/client/resources/metadata/language/package-info
elc net/minecraft/client/resources/metadata/package-info
eld net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b blur
	c clamp
	<init> (ZZ)V <init>
	a ()Z isBlur
	b ()Z isClamp
	<clinit> ()V <clinit>
ele net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Leld; fromJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
elf net/minecraft/client/resources/metadata/texture/package-info
elg net/minecraft/client/resources/model/BakedModel
	a (Lcee;Lgc;Ljava/util/Random;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elh net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q BY_INDEX
	r transformation
	s actualRotation
	t index
	u $VALUES
	values ()[Lelh; values
	valueOf (Ljava/lang/String;)Lelh; valueOf
	b (II)I getIndex
	<init> (Ljava/lang/String;III)V <init>
	b ()Lf; getRotation
	a (II)Lelh; by
	a ()Lc; actualRotation
	a (Lelh;)Lelh; lambda$static$1
	b (Lelh;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
eli net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	d usesBlockLight
	<init> (Lebe;Lebc;Leju;Z)V <init>
	a (Lcee;Lgc;Ljava/util/Random;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elj net/minecraft/client/resources/model/Material
	a atlasLocation
	b texture
	c renderType
	<init> (Lvk;Lvk;)V <init>
	a ()Lvk; atlasLocation
	b ()Lvk; texture
	c ()Leju; sprite
	a (Ljava/util/function/Function;)Leag; renderType
	a (Ldzy;Ljava/util/function/Function;)Ldfn; buffer
	a (Ldzy;Ljava/util/function/Function;Z)Ldfn; buffer
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
elk net/minecraft/client/resources/model/ModelBakery
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f BANNER_BASE
	g SHIELD_BASE
	h NO_PATTERN_SHIELD
	i DESTROY_STAGES
	j BREAKING_LOCATIONS
	k DESTROY_TYPES
	p UNREFERENCED_TEXTURES
	q LOGGER
	l MISSING_MODEL_LOCATION
	r MISSING_MODEL_LOCATION_STRING
	m MISSING_MODEL_MESH
	s BUILTIN_MODELS
	t COMMA_SPLITTER
	u EQUAL_SPLITTER
	n GENERATION_MARKER
	o BLOCK_ENTITY_MARKER
	v ITEM_FRAME_FAKE_DEFINITION
	w ITEM_MODEL_GENERATOR
	x STATIC_DEFINITIONS
	y resourceManager
	z atlasSet
	A blockColors
	B loadingStack
	C context
	D unbakedCache
	E bakedCache
	F topLevelModels
	G bakedTopLevelModels
	H atlasPreparations
	I nextModelGroup
	J modelGroups
	<init> (Lacf;Ldkl;Lant;I)V <init>
	a (Lejv;Lant;)Lejj; uploadTextures
	a (Lcef;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Lcfg;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	a (Lvk;)Lelq; getModel
	b (Lvk;)V loadModel
	a (Lvk;Lelq;)V cacheAndQueueDependencies
	a (Lelm;)V loadTopLevel
	a (Ljava/lang/Iterable;)V registerModelGroup
	a (Lvk;Leln;)Lelg; bake
	c (Lvk;)Leax; loadBlockModel
	a ()Ljava/util/Map; getBakedTopLevelModels
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	a (ILcee;)V lambda$registerModelGroup$27
	a (Lelk$b;Ljava/util/Set;)V lambda$loadModel$26
	a (Ljava/util/Map;Lvk;Lcom/mojang/datafixers/util/Pair;Ljava/util/Map;Lelm;Lcee;)V lambda$loadModel$25
	a (Lelk$b;)Ljava/util/Set; lambda$null$24
	a (Lcom/google/common/collect/ImmutableList;Lcef;Ljava/util/Map;Ljava/util/List;Lebk;Lcom/mojang/datafixers/util/Pair;Leay;Lvk;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;Lebf;)V lambda$loadModel$23
	a (Ljava/util/Map;Lebf;Ljava/util/List;Lebk;Lcom/mojang/datafixers/util/Pair;Leay;Lcee;)V lambda$null$22
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Z lambda$null$21
	a (Lcee;Lebf;Ljava/util/List;)Lelk$b; lambda$null$20
	a (Ljava/util/Map;Lebk;Ljava/util/List;Lcee;)V lambda$loadModel$19
	a (Lcee;Lebk;Ljava/util/List;)Lelk$b; lambda$null$18
	a (Lace;)Lcom/mojang/datafixers/util/Pair; lambda$loadModel$17
	b (Lelk$b;)Lelk$b; lambda$loadModel$16
	a (Ljava/util/Map;Lvk;Lcee;)V lambda$loadModel$15
	d (Lvk;)Lcef; lambda$loadModel$14
	a (Lbul;Ljava/util/Map;Lcee;)Z lambda$predicate$13
	e (Lvk;)V lambda$uploadTextures$12
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$11
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$new$10
	a (Ljava/util/Set;Lelq;)Ljava/util/stream/Stream; lambda$new$9
	a (Lcee;)V lambda$new$8
	a (Lvk;Lcef;)V lambda$new$7
	a (Lvk;Lcee;)V lambda$null$6
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$5
	a (Leax;)V lambda$static$4
	b (Leax;)V lambda$static$3
	a (Ljava/util/HashSet;)V lambda$static$2
	f (Lvk;)Lvk; lambda$static$1
	a (I)Lvk; lambda$static$0
	<clinit> ()V <clinit>
elk$a net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
	<init> (Ljava/lang/String;)V <init>
elk$b net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	<init> (Ljava/util/List;Ljava/util/List;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lcee;Lebk;Ljava/util/Collection;)Lelk$b; create
	a (Lcee;Lelq;Ljava/util/Collection;)Lelk$b; create
	a (Lcee;Ljava/util/Collection;)Ljava/util/List; getColoringValues
	a (Lcef;Lcee;Lebm;)Z lambda$create$0
ell net/minecraft/client/resources/model/ModelManager
	a bakedRegistry
	b atlases
	c blockModelShaper
	d textureManager
	e blockColors
	f maxMipmapLevels
	g missingModel
	h modelGroups
	<init> (Lejv;Ldkl;I)V <init>
	a (Lelm;)Lelg; getModel
	a ()Lelg; getMissingModel
	b ()Leao; getBlockModelShaper
	a (Lacf;Lant;)Lelk; prepare
	a (Lelk;Lacf;Lant;)V apply
	a (Lcee;Lcee;)Z requiresRender
	a (Lvk;)Lejt; getAtlas
	close ()V close
	a (I)V updateMaxMipLevel
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
elm net/minecraft/client/resources/model/ModelResourceLocation
	d variant
	<init> ([Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;)V <init>
	<init> (Lvk;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	c (Ljava/lang/String;)[Ljava/lang/String; decompose
	d ()Ljava/lang/String; getVariant
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
eln net/minecraft/client/resources/model/ModelState
	b ()Lf; getRotation
	c ()Z isUvLocked
elo net/minecraft/client/resources/model/MultiPartBakedModel
	g selectors
	a hasAmbientOcclusion
	b isGui3d
	c usesBlockLight
	d particleIcon
	e transforms
	f overrides
	h selectorCache
	<init> (Ljava/util/List;)V <init>
	a (Lcee;Lgc;Ljava/util/Random;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elo$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	<init> ()V <init>
	a (Ljava/util/function/Predicate;Lelg;)V add
	a ()Lelg; build
elp net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e usesBlockLight
	f particleIcon
	g transforms
	h overrides
	<init> (Ljava/util/List;Ljava/util/Map;ZZZLeju;Lebe;Lebc;)V <init>
	a (Lcee;Lgc;Ljava/util/Random;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elp$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f usesBlockLight
	g isGui3d
	h transforms
	<init> (Leax;Lebc;Z)V <init>
	<init> (ZZZLebe;Lebc;)V <init>
	a (Lgc;Leas;)Lelp$a; addCulledFace
	a (Leas;)Lelp$a; addUnculledFace
	a (Leju;)Lelp$a; particle
	a ()Lelp$a; item
	b ()Lelg; build
elq net/minecraft/client/resources/model/UnbakedModel
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Lelk;Ljava/util/function/Function;Leln;Lvk;)Lelg; bake
elr net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	<init> (Ljava/util/List;)V <init>
	a (Lcee;Lgc;Ljava/util/Random;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elr$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	<init> ()V <init>
	a (Lelg;I)Lelr$a; add
	a ()Lelg; build
elr$b net/minecraft/client/resources/model/WeightedBakedModel$WeightedModel
	b model
	<init> (Lelg;I)V <init>
els net/minecraft/client/resources/model/package-info
elt net/minecraft/client/resources/package-info
elu net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l priority
	m relative
	<init> (Ladn;Ladp;)V <init>
	<init> (Lvk;Ladp;)V <init>
	a ()Lvk; getLocation
	a (Lenm;)Lenn; resolve
	b ()Lemi; getSound
	c ()Ladp; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Leml$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
	toString ()Ljava/lang/String; toString
elv net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	<init> (Ladn;Ladp;)V <init>
	n ()Z isStopped
	o ()V stop
elw net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
elx net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance
	<init> (Lazx;)V <init>
	p ()Lelv; getAlternativeSoundInstance
	q ()Z shouldSwitchSounds
ely net/minecraft/client/resources/sounds/BeeFlyingSoundInstance
	<init> (Lazx;)V <init>
	p ()Lelv; getAlternativeSoundInstance
	q ()Z shouldSwitchSounds
elz net/minecraft/client/resources/sounds/BeeSoundInstance
	n bee
	o hasSwitched
	<init> (Lazx;Ladn;Ladp;)V <init>
	r ()V tick
	u ()F getMinPitch
	v ()F getMaxPitch
	s ()Z canStartSilent
	t ()Z canPlaySound
	p ()Lelv; getAlternativeSoundInstance
	q ()Z shouldSwitchSounds
ema net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler
	a player
	b soundManager
	c biomeManager
	d random
	e loopSounds
	f moodSettings
	g additionsSettings
	h moodiness
	i previousBiome
	<init> (Ldze;Lenm;Lbsu;)V <init>
	b ()F getMoodiness
	a ()V tick
	a (Lbsq;)V lambda$tick$3
	a (Lbsp;)V lambda$tick$2
	a (Lbss;Ladn;)V lambda$tick$1
	a (Ladn;Lbss;Lema$a;)Lema$a; lambda$null$0
ema$a net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance
	n fadeDirection
	o fade
	<init> (Ladn;)V <init>
	r ()V tick
	p ()V fadeOut
	q ()V fadeIn
emb net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	<init> (Ldze;)V <init>
	a ()V tick
	a (Lcee;)Z lambda$tick$0
emc net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	n player
	o time
	<init> (Ldze;)V <init>
	r ()V tick
emd net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	n entity
	<init> (Ladn;Ladp;Lapx;)V <init>
	<init> (Ladn;Ladp;FFLapx;)V <init>
	t ()Z canPlaySound
	r ()V tick
eme net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	n guardian
	<init> (Lbdj;)V <init>
	t ()Z canPlaySound
	r ()V tick
emf net/minecraft/client/resources/sounds/MinecartSoundInstance
	n minecart
	o pitch
	<init> (Lbhi;)V <init>
	t ()Z canPlaySound
	s ()Z canStartSilent
	r ()V tick
emg net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	n player
	o minecart
	<init> (Lbft;Lbhi;)V <init>
	t ()Z canPlaySound
	s ()Z canStartSilent
	r ()V tick
emh net/minecraft/client/resources/sounds/SimpleSoundInstance
	<init> (Ladn;Ladp;FFLfx;)V <init>
	a (Ladn;F)Lemh; forUI
	a (Ladn;FF)Lemh; forUI
	a (Ladn;)Lemh; forMusic
	a (Ladn;DDD)Lemh; forRecord
	b (Ladn;FF)Lemh; forLocalAmbience
	b (Ladn;)Lemh; forAmbientAddition
	b (Ladn;DDD)Lemh; forAmbientMood
	<init> (Ladn;Ladp;FFDDD)V <init>
	<init> (Ladn;Ladp;FFZILeml$a;DDD)V <init>
	<init> (Lvk;Ladp;FFZILeml$a;DDDZ)V <init>
emi net/minecraft/client/resources/sounds/Sound
	a location
	b volume
	c pitch
	d weight
	e type
	f stream
	g preload
	h attenuationDistance
	<init> (Ljava/lang/String;FFILemi$a;ZZI)V <init>
	a ()Lvk; getLocation
	b ()Lvk; getPath
	c ()F getVolume
	d ()F getPitch
	e ()I getWeight
	f ()Lemi; getSound
	a (Lenj;)V preloadIfRequired
	g ()Lemi$a; getType
	h ()Z shouldStream
	i ()Z shouldPreload
	j ()I getAttenuationDistance
	toString ()Ljava/lang/String; toString
	k ()Ljava/lang/Object; getSound
emi$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	values ()[Lemi$a; values
	valueOf (Ljava/lang/String;)Lemi$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Lemi$a; getByName
	<clinit> ()V <clinit>
emj net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	<init> (Ljava/util/List;ZLjava/lang/String;)V <init>
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
emk net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lemj; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	b (Lcom/google/gson/JsonObject;)Lemi; getSound
	a (Lcom/google/gson/JsonObject;Lemi$a;)Lemi$a; getType
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
eml net/minecraft/client/resources/sounds/SoundInstance
	a ()Lvk; getLocation
	a (Lenm;)Lenn; resolve
	b ()Lemi; getSound
	c ()Ladp; getSource
	d ()Z isLooping
	m ()Z isRelative
	l ()Z hasPriority
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Leml$a; getAttenuation
	s ()Z canStartSilent
	t ()Z canPlaySound
eml$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
	values ()[Leml$a; values
	valueOf (Ljava/lang/String;)Leml$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
emm net/minecraft/client/resources/sounds/TickableSoundInstance
	n ()Z isStopped
	r ()V tick
emn net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a player
	b soundManager
	c tickDelay
	<init> (Ldze;Lenm;)V <init>
	a ()V tick
emo net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
	<init> ()V <init>
emo$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	n player
	<init> (Ldze;Ladn;)V <init>
	r ()V tick
emo$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	n player
	o fade
	<init> (Ldze;)V <init>
	r ()V tick
emp net/minecraft/client/resources/sounds/package-info
emq net/minecraft/client/searchtree/MutableSearchTree
	a (Ljava/lang/Object;)V add
	a ()V clear
	b ()V refresh
emr net/minecraft/client/searchtree/ReloadableIdSearchTree
	a namespaceTree
	b pathTree
	c idGetter
	d contents
	e orderT
	<init> (Ljava/util/function/Function;)V <init>
	b ()V refresh
	a (Ljava/lang/Object;)V add
	a ()V clear
	b (Ljava/lang/Object;)V index
	a (Ljava/lang/Object;Ljava/lang/Object;)I comparePosition
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/Object;Lvk;)V lambda$index$0
emr$a net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator
	a firstIterator
	b secondIterator
	c orderT
	<init> (Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Comparator;)V <init>
	computeNext ()Ljava/lang/Object; computeNext
ems net/minecraft/client/searchtree/ReloadableSearchTree
	c tree
	d filler
	<init> (Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	b ()V refresh
	b (Ljava/lang/Object;)V index
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/Object;Ljava/lang/String;)V lambda$index$0
ems$a net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator
	a firstIterator
	b secondIterator
	c orderT
	<init> (Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Comparator;)V <init>
	computeNext ()Ljava/lang/Object; computeNext
emt net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	<init> ()V <init>
	a (Lacf;)V onResourceManagerReload
	a (Lemt$a;Lemq;)V register
	a (Lemt$a;)Lemq; getTree
	<clinit> ()V <clinit>
emt$a net/minecraft/client/searchtree/SearchRegistry$Key
	<init> ()V <init>
emu net/minecraft/client/searchtree/SearchTree
	a (Ljava/lang/String;)Ljava/util/List; search
emv net/minecraft/client/searchtree/SuffixArray
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	a list
	e chars
	f wordStarts
	g suffixToT
	h offsets
	i maxStringLength
	<init> ()V <init>
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a ()V generate
	b ()V print
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/String;I)I compare
	a (Ljava/lang/String;)Ljava/util/List; search
	a ([I[I[III)V lambda$generate$0
	<clinit> ()V <clinit>
emv$1 net/minecraft/client/searchtree/SuffixArray$1
	a val$lefts
	b val$rights
	c this$0
	<init> (Lemv;[I[I)V <init>
	compare (II)I compare
	compare (Ljava/lang/Integer;Ljava/lang/Integer;)I compare
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
emw net/minecraft/client/searchtree/package-info
emx net/minecraft/client/server/IntegratedPlayerList
	a playerData
	<init> (Lemy;Lgn$b;Lcyh;)V <init>
	b (Laah;)V save
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnr; canPlayerLogin
	b ()Lemy; getServer
	q ()Lmd; getSingleplayerData
	c ()Lnet/minecraft/server/MinecraftServer; getServer
emy net/minecraft/client/server/IntegratedServer
	a LOGGER
	j minecraft
	k paused
	l publishedPort
	m lanPinger
	n uuid
	<init> (Ljava/lang/Thread;Ldjw;Lgn$b;Lcyd$a;Labu;Lvz;Lcyk;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Laco;Laaq;)V <init>
	d ()Z initServer
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	i ()Z shouldRconBroadcast
	R_ ()Z shouldInformAdmins
	B ()Ljava/io/File; getServerDirectory
	j ()Z isDedicatedServer
	k ()I getRateLimitPacketsPerSecond
	l ()Z isEpollEnabled
	a (Ll;)V onServerCrash
	b (Ll;)Ll; fillReport
	o ()Ljava/util/Optional; getModdedStatus
	a (Laoz;)V populateSnooper
	T ()Z isSnooperEnabled
	a (Lbrr;ZI)Z publishServer
	t ()V stopServer
	a (Z)V halt
	n ()Z isPublished
	M ()I getPort
	a (Lbrr;)V setDefaultGameType
	m ()Z isCommandBlockEnabled
	g ()I getOperatorUserPermissionLevel
	h ()I getFunctionCompilationLevel
	a (Ljava/util/UUID;)V setUUID
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	b (I)I getScaledTrackingDistance
	aU ()Z forceSynchronousWrites
	c ()V lambda$halt$1
	p ()Ljava/lang/String; lambda$fillReport$0
	<clinit> ()V <clinit>
emz net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
	d ()Z isUpToDate
ena net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
	<init> ()V <init>
	a ()Ljava/util/concurrent/atomic/AtomicInteger; access$000
	b ()Lorg/apache/logging/log4j/Logger; access$100
	<clinit> ()V <clinit>
ena$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
	<init> (Lena$b;)V <init>
	run ()V run
ena$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	<init> ()V <init>
	a ()Z isDirty
	b ()V markClean
	c ()Ljava/util/List; getServers
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
enb net/minecraft/client/server/LanServerPinger
	a UNIQUE_THREAD_ID
	b LOGGER
	c motd
	d socket
	e isRunning
	f serverAddress
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	run ()V run
	interrupt ()V interrupt
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
	<clinit> ()V <clinit>
enc net/minecraft/client/server/package-info
end net/minecraft/client/skins/package-info
ene net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
enf net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	<init> (Ldds;Ljava/util/concurrent/Executor;)V <init>
	a (Ldds$c;)Ljava/util/concurrent/CompletableFuture; createHandle
	a (Ljava/util/function/Consumer;)V executeOnChannels
	a ()V scheduleTick
	b ()V clear
	c ()V lambda$scheduleTick$3
	b (Ljava/util/function/Consumer;)V lambda$executeOnChannels$2
	a (Lenf$a;)Lddr; lambda$null$1
	a (Ldds$c;Ljava/util/concurrent/CompletableFuture;)V lambda$createHandle$0
	a (Lenf;)Ljava/util/concurrent/Executor; access$000
	b (Lenf;)Ldds; access$100
enf$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	b channel
	c stopped
	a this$0
	a ()Z isStopped
	<init> (Lenf;Lddr;)V <init>
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
	b (Ljava/util/function/Consumer;)V lambda$execute$0
	a (Lenf$a;)Lddr; access$200
eng net/minecraft/client/sounds/LoopingAudioStream
	a provider
	b stream
	c bufferedInputStream
	<init> (Leng$a;Ljava/io/InputStream;)V <init>
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	close ()V close
eng$1 net/minecraft/client/sounds/LoopingAudioStream$1
eng$a net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider
	create (Ljava/io/InputStream;)Lene; create
eng$b net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer
	<init> (Ljava/io/InputStream;)V <init>
	close ()V close
	<init> (Ljava/io/InputStream;Leng$1;)V <init>
enh net/minecraft/client/sounds/MusicManager
	a random
	b minecraft
	c currentMusic
	d nextSongDelay
	<init> (Ldjw;)V <init>
	a ()V tick
	a (Ladl;)V startPlaying
	b ()V stopPlaying
	b (Ladl;)Z isPlayingMusic
eni net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	<init> (Lacf;)V <init>
	a (Lvk;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	a (Lvk;Z)Ljava/util/concurrent/CompletableFuture; getStream
	a ()V clear
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$preload$5
	a (Lemi;)Ljava/util/concurrent/CompletableFuture; lambda$preload$4
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$clear$3
	b (Lvk;Z)Lene; lambda$getStream$2
	b (Lvk;)Ljava/util/concurrent/CompletableFuture; lambda$getCompleteBuffer$1
	c (Lvk;)Lddw; lambda$null$0
enj net/minecraft/client/sounds/SoundEngine
	a MARKER
	b LOGGER
	c ONLY_WARN_ONCE
	d soundManager
	e options
	f loaded
	g library
	h listener
	i soundBuffers
	j executor
	k channelAccess
	l tickCount
	m instanceToChannel
	n instanceBySource
	o tickingSounds
	p queuedSounds
	q soundDeleteTime
	r listeners
	s queuedTickableSounds
	t preloadQueue
	<init> (Lenm;Ldka;Lacf;)V <init>
	a ()V reload
	g ()V loadLibrary
	a (Ladp;)F getVolume
	a (Ladp;F)V updateCategoryVolume
	b ()V destroy
	a (Leml;)V stop
	c ()V stopAll
	a (Lenl;)V addEventListener
	b (Lenl;)V removeEventListener
	a (Z)V tick
	h ()V tickNonPaused
	d (Leml;)Z requiresManualLooping
	e (Leml;)Z shouldLoopManually
	f (Leml;)Z shouldLoopAutomatically
	b (Leml;)Z isActive
	c (Leml;)V play
	a (Lemm;)V queueTickingSound
	a (Lemi;)V requestPreload
	g (Leml;)F calculatePitch
	h (Leml;)F calculateVolume
	d ()V pause
	e ()V resume
	a (Leml;I)V playDelayed
	a (Ldjh;)V updateSource
	a (Lvk;Ladp;)V stop
	f ()Ljava/lang/String; getDebugString
	a (Ldck;Lg;Lg;)V lambda$updateSource$11
	a (Ljava/util/stream/Stream;)V lambda$resume$10
	b (Ljava/util/stream/Stream;)V lambda$pause$9
	a (Lenf$a;Lene;)V lambda$play$8
	a (Lene;Lddr;)V lambda$null$7
	a (Lenf$a;Lddw;)V lambda$play$6
	a (Lddw;Lddr;)V lambda$null$5
	a (FFLeml$a;FZZLdck;ZLddr;)V lambda$play$4
	a (FFLdck;Lddr;)V lambda$tickNonPaused$3
	a (Lenf$a;)V lambda$stopAll$2
	a (Leml;Lenf$a;)V lambda$updateCategoryVolume$1
	a (FLddr;)V lambda$null$0
	<clinit> ()V <clinit>
enk net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	<init> ()V <init>
	b ()Ljava/lang/Thread; createThread
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Ljava/lang/Runnable;)Z shouldRun
	av ()Ljava/lang/Thread; getRunningThread
	c ()V run
	bl ()V waitForTasks
	a ()V flush
	d ()Z lambda$run$0
enl net/minecraft/client/sounds/SoundEventListener
	a (Leml;Lenn;)V onPlaySound
enm net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b LOGGER
	c GSON
	d SOUND_EVENT_REGISTRATION_TYPE
	e registry
	f soundEngine
	<init> (Lacf;Ldka;)V <init>
	a (Lacf;Lant;)Lenm$a; prepare
	a (Lenm$a;Lacf;Lant;)V apply
	b (Lemi;Lvk;Lacf;)Z validateSoundResource
	a (Lvk;)Lenn; getSoundEvent
	a ()Ljava/util/Collection; getAvailableSounds
	a (Lemm;)V queueTickingSound
	a (Leml;)V play
	a (Leml;I)V playDelayed
	a (Ldjh;)V updateSource
	b ()V pause
	d ()V stop
	e ()V destroy
	a (Z)V tick
	f ()V resume
	a (Ladp;F)V updateSourceVolume
	b (Leml;)V stop
	c (Leml;)Z isActive
	a (Lenl;)V addListener
	b (Lenl;)V removeListener
	a (Lvk;Ladp;)V stop
	g ()Ljava/lang/String; getDebugString
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	h ()Lorg/apache/logging/log4j/Logger; access$100
	a (Lemi;Lvk;Lacf;)Z access$200
	<clinit> ()V <clinit>
enm$1 net/minecraft/client/sounds/SoundManager$1
	<init> ()V <init>
enm$2 net/minecraft/client/sounds/SoundManager$2
	a $SwitchMap$net$minecraft$client$resources$sounds$Sound$Type
	<clinit> ()V <clinit>
enm$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	<init> ()V <init>
	a (Lvk;Lemj;Lacf;)V handleRegistration
	a (Ljava/util/Map;Lenj;)V apply
	a (Lenm$a;Lvk;Lemj;Lacf;)V access$000
	a (Lenm$a;)Ljava/util/Map; access$300
enm$a$1 net/minecraft/client/sounds/SoundManager$Preparations$1
	a val$soundLocation
	b val$sound
	c this$0
	<init> (Lenm$a;Lvk;Lemi;)V <init>
	e ()I getWeight
	a ()Lemi; getSound
	a (Lenj;)V preloadIfRequired
	k ()Ljava/lang/Object; getSound
enn net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b random
	c location
	d subtitle
	<init> (Lvk;Ljava/lang/String;)V <init>
	e ()I getWeight
	a ()Lemi; getSound
	a (Leno;)V addSound
	b ()Lvk; getResourceLocation
	c ()Lnr; getSubtitle
	a (Lenj;)V preloadIfRequired
	k ()Ljava/lang/Object; getSound
eno net/minecraft/client/sounds/Weighted
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
	a (Lenj;)V preloadIfRequired
enp net/minecraft/client/sounds/package-info
enq net/minecraft/client/tutorial/CompletedTutorialStepInstance
	a tutorial
	<init> (Lenw;)V <init>
enr net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a CRAFT_TITLE
	b CRAFT_DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	<init> (Lenw;)V <init>
	a ()V tick
	b ()V clear
	a (Lbly;)V onGetItem
	a (Ldze;Laej;)Z hasCraftedPlanksPreviously
	<clinit> ()V <clinit>
ens net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a TREE_BLOCKS
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	<init> (Lenw;)V <init>
	a ()V tick
	b ()V clear
	a (Ldwl;Ldci;)V onLookAt
	a (Lbly;)V onGetItem
	a (Ldze;)Z hasPunchedTreesPreviously
	<clinit> ()V <clinit>
ent net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MOVE_TITLE
	b MOVE_DESCRIPTION
	c LOOK_TITLE
	d LOOK_DESCRIPTION
	e tutorial
	f moveToast
	g lookToast
	h timeWaiting
	i timeMoved
	j timeLooked
	k moved
	l turned
	m moveCompleted
	n lookCompleted
	<init> (Lenw;)V <init>
	a ()V tick
	b ()V clear
	a (Ldzc;)V onInput
	a (DD)V onMouse
	<clinit> ()V <clinit>
enu net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	<init> (Lenw;)V <init>
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
	<clinit> ()V <clinit>
env net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	f resetCount
	<init> (Lenw;)V <init>
	a ()V tick
	b ()V clear
	a (Ldwl;Lfx;Lcee;F)V onDestroyBlock
	a (Lbly;)V onGetItem
	<clinit> ()V <clinit>
enw net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	<init> (Ldjw;)V <init>
	a (Ldzc;)V onInput
	a (DD)V onMouse
	a (Ldwl;Ldci;)V onLookAt
	a (Ldwl;Lfx;Lcee;F)V onDestroyBlock
	a ()V onOpenInventory
	a (Lbly;)V onGetItem
	b ()V stop
	c ()V start
	d ()V tick
	a (Leny;)V setStep
	e ()Ldjw; getMinecraft
	f ()Lbrr; getGameMode
	a (Ljava/lang/String;)Lnr; key
enx net/minecraft/client/tutorial/TutorialStepInstance
	b ()V clear
	a ()V tick
	a (Ldzc;)V onInput
	a (DD)V onMouse
	a (Ldwl;Ldci;)V onLookAt
	a (Ldwl;Lfx;Lcee;F)V onDestroyBlock
	c ()V onOpenInventory
	a (Lbly;)V onGetItem
eny net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	values ()[Leny; values
	valueOf (Ljava/lang/String;)Leny; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Function;)V <init>
	a (Lenw;)Lenx; create
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Leny; getByName
	<clinit> ()V <clinit>
enz net/minecraft/client/tutorial/package-info
cx net/minecraft/commands/BrigadierExceptions
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	A DISPATCHER_PARSE_EXCEPTION
	<init> ()V <init>
	doubleTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; doubleTooLow
	doubleTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; doubleTooHigh
	floatTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; floatTooLow
	floatTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; floatTooHigh
	integerTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; integerTooLow
	integerTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; integerTooHigh
	longTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; longTooLow
	longTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; longTooHigh
	literalIncorrect ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; literalIncorrect
	readerExpectedStartOfQuote ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedStartOfQuote
	readerExpectedEndOfQuote ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedEndOfQuote
	readerInvalidEscape ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidEscape
	readerInvalidBool ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidBool
	readerInvalidInt ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidInt
	readerExpectedInt ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedInt
	readerInvalidLong ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidLong
	readerExpectedLong ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedLong
	readerInvalidDouble ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidDouble
	readerExpectedDouble ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedDouble
	readerInvalidFloat ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidFloat
	readerExpectedFloat ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedFloat
	readerExpectedBool ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedBool
	readerExpectedSymbol ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerExpectedSymbol
	dispatcherUnknownCommand ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherUnknownCommand
	dispatcherUnknownArgument ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherUnknownArgument
	dispatcherExpectedArgumentSeparator ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherExpectedArgumentSeparator
	dispatcherParseException ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; dispatcherParseException
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$16
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$15
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$14
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$13
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$12
	f (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$11
	g (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$10
	h (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$9
	i (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$8
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$7
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$6
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
	d (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	e (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	f (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	g (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	h (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
cy net/minecraft/commands/CommandFunction
	a entries
	b id
	<init> (Lvk;[Lcy$c;)V <init>
	a ()Lvk; getId
	b ()[Lcy$c; getEntries
	a (Lvk;Lcom/mojang/brigadier/CommandDispatcher;Ldb;Ljava/util/List;)Lcy; fromLines
	a (Lcy;)Lvk; access$000
cy$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	<init> (Lvk;)V <init>
	<init> (Lcy;)V <init>
	a (Lvx;)Ljava/util/Optional; get
	a ()Lvk; getId
	a (Lcy;)Lvk; lambda$getId$0
	<clinit> ()V <clinit>
cy$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	<init> (Lcom/mojang/brigadier/ParseResults;)V <init>
	a (Lvx;Ldb;Ljava/util/ArrayDeque;I)V execute
	toString ()Ljava/lang/String; toString
cy$c net/minecraft/commands/CommandFunction$Entry
	a (Lvx;Ldb;Ljava/util/ArrayDeque;I)V execute
cy$d net/minecraft/commands/CommandFunction$FunctionEntry
	a function
	<init> (Lcy;)V <init>
	a (Lvx;Ldb;Ljava/util/ArrayDeque;I)V execute
	toString ()Ljava/lang/String; toString
	a (ILjava/util/ArrayDeque;Lvx;Ldb;Lcy;)V lambda$execute$0
cz net/minecraft/commands/CommandRuntimeException
	a message
	<init> (Lnr;)V <init>
	a ()Lnr; getComponent
da net/minecraft/commands/CommandSource
	a_ NULL
	a (Lnr;Ljava/util/UUID;)V sendMessage
	a ()Z acceptsSuccess
	b ()Z acceptsFailure
	R_ ()Z shouldInformAdmins
	<clinit> ()V <clinit>
da$1 net/minecraft/commands/CommandSource$1
	<init> ()V <init>
	a (Lnr;Ljava/util/UUID;)V sendMessage
	a ()Z acceptsSuccess
	b ()Z acceptsFailure
	R_ ()Z shouldInformAdmins
db net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	c source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	<init> (Lda;Ldck;Ldcj;Laag;ILjava/lang/String;Lnr;Lnet/minecraft/server/MinecraftServer;Lapx;)V <init>
	<init> (Lda;Ldck;Ldcj;Laag;ILjava/lang/String;Lnr;Lnet/minecraft/server/MinecraftServer;Lapx;ZLcom/mojang/brigadier/ResultConsumer;Ldj$a;)V <init>
	a (Lapx;)Ldb; withEntity
	a (Ldck;)Ldb; withPosition
	a (Ldcj;)Ldb; withRotation
	a (Lcom/mojang/brigadier/ResultConsumer;)Ldb; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Ldb; withCallback
	a ()Ldb; withSuppressedOutput
	a (I)Ldb; withPermission
	b (I)Ldb; withMaximumPermission
	a (Ldj$a;)Ldb; withAnchor
	a (Laag;)Ldb; withLevel
	a (Lapx;Ldj$a;)Ldb; facing
	b (Ldck;)Ldb; facing
	b ()Lnr; getDisplayName
	c ()Ljava/lang/String; getTextName
	c (I)Z hasPermission
	d ()Ldck; getPosition
	e ()Laag; getLevel
	f ()Lapx; getEntity
	g ()Lapx; getEntityOrException
	h ()Laah; getPlayerOrException
	i ()Ldcj; getRotation
	j ()Lnet/minecraft/server/MinecraftServer; getServer
	k ()Ldj$a; getAnchor
	a (Lnr;Z)V sendSuccess
	b (Lnr;)V broadcastToAdmins
	a (Lnr;)V sendFailure
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	p ()Ljava/util/Set; levels
	q ()Lgn; registryAccess
	b (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$0
	<clinit> ()V <clinit>
dc net/minecraft/commands/Commands
	a LOGGER
	b dispatcher
	<init> (Ldc$a;)V <init>
	a (Ldb;Ljava/lang/String;)I performCommand
	a (Laah;)V sendCommands
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ldb;Ljava/util/Map;)V fillUsableCommands
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Ldc$b;)Ljava/util/function/Predicate; createValidator
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; getParseException
	b ()V validate
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String; lambda$validate$8
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Z lambda$validate$7
	a (Ldc$b;Ljava/lang/String;)Z lambda$createValidator$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$fillUsableCommands$5
	a (Ldd;)Z lambda$fillUsableCommands$4
	a (Lnx;Lob;)Lob; lambda$performCommand$3
	a (Ljava/lang/String;Lob;)Lob; lambda$performCommand$2
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$1
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V lambda$new$0
	<clinit> ()V <clinit>
dc$a net/minecraft/commands/Commands$CommandSelection
	a ALL
	b DEDICATED
	c INTEGRATED
	d includeIntegrated
	e includeDedicated
	f $VALUES
	values ()[Ldc$a; values
	valueOf (Ljava/lang/String;)Ldc$a; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a (Ldc$a;)Z access$000
	b (Ldc$a;)Z access$100
	<clinit> ()V <clinit>
dc$b net/minecraft/commands/Commands$ParseFunction
	parse (Lcom/mojang/brigadier/StringReader;)V parse
dd net/minecraft/commands/SharedSuggestionProvider
	l ()Ljava/util/Collection; getOnlinePlayerNames
	r ()Ljava/util/Collection; getSelectedEntities
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	s ()Ljava/util/Collection; getRelevantCoordinates
	t ()Ljava/util/Collection; getAbsoluteCoordinates
	p ()Ljava/util/Set; levels
	q ()Lgn; registryAccess
	c (I)Z hasPermission
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	a (Ljava/lang/String;Ljava/lang/String;)Z matchesSubStr
	b (Ljava/lang/String;Ljava/lang/String;)Z lambda$suggest$5
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$suggestResource$4
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lvk;)V lambda$suggestResource$3
	a (Lvk;)Lvk; lambda$suggestResource$2
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lvk;)V lambda$suggestResource$1
	b (Lvk;)Lvk; lambda$suggestResource$0
dd$a net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	<clinit> ()V <clinit>
de net/minecraft/commands/arguments/AngleArgument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	<init> ()V <init>
	a ()Lde; angle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F getAngle
	a (Lcom/mojang/brigadier/StringReader;)Lde$a; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
de$1 net/minecraft/commands/arguments/AngleArgument$1
de$a net/minecraft/commands/arguments/AngleArgument$SingleAngle
	a angle
	b isRelative
	<init> (FZ)V <init>
	a (Ldb;)F getAngle
	<init> (FZLde$1;)V <init>
df net/minecraft/commands/arguments/ColorArgument
	b EXAMPLES
	a ERROR_INVALID_VALUE
	<init> ()V <init>
	a ()Ldf; color
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lk; getColor
	a (Lcom/mojang/brigadier/StringReader;)Lk; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dg net/minecraft/commands/arguments/ComponentArgument
	b EXAMPLES
	a ERROR_INVALID_JSON
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnr; getComponent
	a ()Ldg; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lnr; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dh net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Ldh; compoundTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lmd; getCompoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lmd; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
di net/minecraft/commands/arguments/DimensionArgument
	a EXAMPLES
	b ERROR_INVALID_VALUE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Lvk; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a ()Ldi; dimension
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laag; getDimension
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lvj;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
dj net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldj$a; getAnchor
	a ()Ldj; anchor
	a (Lcom/mojang/brigadier/StringReader;)Ldj$a; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dj$a net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	a FEET
	b EYES
	c BY_NAME
	d name
	e transform
	f $VALUES
	values ()[Ldj$a; values
	valueOf (Ljava/lang/String;)Ldj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V <init>
	a (Ljava/lang/String;)Ldj$a; getByName
	a (Lapx;)Ldck; apply
	a (Ldb;)Ldck; apply
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Ldck;Lapx;)Ldck; lambda$static$1
	b (Ldck;Lapx;)Ldck; lambda$static$0
	a ()Ljava/util/Map; access$000
	<clinit> ()V <clinit>
dk net/minecraft/commands/arguments/EntityArgument
	g EXAMPLES
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	h single
	i playersOnly
	<init> (ZZ)V <init>
	a ()Ldk; entity
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lapx; getEntity
	b ()Ldk; entities
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	c ()Ldk; player
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laah; getPlayer
	d ()Ldk; players
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
	a (Lcom/mojang/brigadier/StringReader;)Lfc; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ldd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$0
	a (Ldk;)Z access$000
	b (Ldk;)Z access$100
	<clinit> ()V <clinit>
dk$a net/minecraft/commands/arguments/EntityArgument$Serializer
	<init> ()V <init>
	a (Ldk;Lnf;)V serializeToNetwork
	a (Lnf;)Ldk; deserializeFromNetwork
	a (Ldk;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
dl net/minecraft/commands/arguments/EntitySummonArgument
	b EXAMPLES
	a ERROR_UNKNOWN_ENTITY
	<init> ()V <init>
	a ()Ldl; id
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lvk; getSummonableEntity
	a (Lvk;)Lvk; verifyCanSummon
	a (Lcom/mojang/brigadier/StringReader;)Lvk; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	b (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$verifyCanSummon$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dm net/minecraft/commands/arguments/GameProfileArgument
	b EXAMPLES
	a ERROR_UNKNOWN_PLAYER
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
	a ()Ldm; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Ldm$a; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$1
	a (Ljava/lang/String;Ldb;)Ljava/util/Collection; lambda$parse$0
	<clinit> ()V <clinit>
dm$a net/minecraft/commands/arguments/GameProfileArgument$Result
	getNames (Ldb;)Ljava/util/Collection; getNames
dm$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
	<init> (Lfc;)V <init>
	getNames (Ldb;)Ljava/util/Collection; getNames
dn net/minecraft/commands/arguments/ItemEnchantmentArgument
	b EXAMPLES
	a ERROR_UNKNOWN_ENCHANTMENT
	<init> ()V <init>
	a ()Ldn; enchantment
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbpp; getEnchantment
	a (Lcom/mojang/brigadier/StringReader;)Lbpp; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dp net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Ldp; message
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnr; getMessage
	a (Lcom/mojang/brigadier/StringReader;)Ldp$a; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
dp$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	<init> (Ljava/lang/String;[Ldp$b;)V <init>
	a ()Ljava/lang/String; getText
	b ()[Ldp$b; getParts
	a (Ldb;Z)Lnr; toComponent
	a (Lcom/mojang/brigadier/StringReader;Z)Ldp$a; parseText
dp$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	<init> (IILfc;)V <init>
	a ()I getStart
	b ()I getEnd
	c ()Lfc; getSelector
	a (Ldb;)Lnr; toComponent
dq net/minecraft/commands/arguments/MobEffectArgument
	b EXAMPLES
	a ERROR_UNKNOWN_EFFECT
	<init> ()V <init>
	a ()Ldq; effect
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lapp; getEffect
	a (Lcom/mojang/brigadier/StringReader;)Lapp; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dr net/minecraft/commands/arguments/NbtPathArgument
	c EXAMPLES
	a ERROR_INVALID_NODE
	b ERROR_NOTHING_FOUND
	<init> ()V <init>
	a ()Ldr; nbtPath
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldr$h; getPath
	a (Lcom/mojang/brigadier/StringReader;)Ldr$h; parse
	a (Lcom/mojang/brigadier/StringReader;Z)Ldr$i; parseNode
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Ldr$i; readObjectNode
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
	getExamples ()Ljava/util/Collection; getExamples
	a (C)Z isAllowedInUnquotedName
	b (Lmd;)Ljava/util/function/Predicate; createTagPredicate
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lmd;Lmt;)Z lambda$createTagPredicate$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lmd;)Ljava/util/function/Predicate; access$000
	<clinit> ()V <clinit>
dr$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	<init> ()V <init>
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
	<clinit> ()V <clinit>
dr$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	<init> (Ljava/lang/String;)V <init>
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
dr$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	<init> (I)V <init>
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
dr$d net/minecraft/commands/arguments/NbtPathArgument$ListElementFunction
	a (Lmj;ILmt;)Z apply
dr$e net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	<init> (Lmd;)V <init>
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
	a (Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lmt;)V lambda$getOrCreateTag$0
dr$f net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	<init> (Ljava/lang/String;Lmd;)V <init>
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
dr$g net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	<init> (Lmd;)V <init>
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
dr$h net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	<init> (Ljava/lang/String;[Ldr$i;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V <init>
	a (Lmt;)Ljava/util/List; get
	b (Lmt;)I countMatching
	d (Lmt;)Ljava/util/List; getOrCreateParents
	a (Lmt;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lmt;Lmt;)I set
	b (Lmt;Ljava/util/function/Supplier;)I set
	c (Lmt;)I remove
	a (Ldr$i;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	toString ()Ljava/lang/String; toString
	a (Ldr$i;Ljava/util/function/Supplier;Lmt;)Ljava/lang/Integer; lambda$set$1
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$apply$0
dr$i net/minecraft/commands/arguments/NbtPathArgument$Node
	a (Lmt;Ljava/util/List;)V getTag
	a (Lmt;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lmt; createPreferredParentTag
	a (Lmt;Ljava/util/function/Supplier;)I setTag
	a (Lmt;)I removeTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/function/Supplier;Lmt;Ljava/util/List;)V lambda$getOrCreate$0
ds net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Lds; nbtTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lmt; getNbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lmt; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
dt net/minecraft/commands/arguments/ObjectiveArgument
	b EXAMPLES
	c ERROR_OBJECTIVE_NOT_FOUND
	d ERROR_OBJECTIVE_READ_ONLY
	a ERROR_OBJECTIVE_NAME_TOO_LONG
	<init> ()V <init>
	a ()Ldt; objective
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lddh; getObjective
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lddh; getWritableObjective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
du net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	b EXAMPLES
	a ERROR_INVALID_VALUE
	<init> ()V <init>
	a ()Ldu; criteria
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lddn; getCriteria
	a (Lcom/mojang/brigadier/StringReader;)Lddn; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	a (Ladx;Ljava/lang/Object;)Ljava/lang/String; getName
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dv net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	<init> ()V <init>
	a ()Ldv; operation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldv$a; getOperation
	a (Lcom/mojang/brigadier/StringReader;)Ldv$a; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a (Ljava/lang/String;)Ldv$a; getOperation
	b (Ljava/lang/String;)Ldv$b; getSimpleOperation
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (II)I lambda$getSimpleOperation$6
	b (II)I lambda$getSimpleOperation$5
	c (II)I lambda$getSimpleOperation$4
	d (II)I lambda$getSimpleOperation$3
	e (II)I lambda$getSimpleOperation$2
	f (II)I lambda$getSimpleOperation$1
	a (Lddj;Lddj;)V lambda$getOperation$0
	<clinit> ()V <clinit>
dv$a net/minecraft/commands/arguments/OperationArgument$Operation
	apply (Lddj;Lddj;)V apply
dv$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
	apply (II)I apply
	apply (Lddj;Lddj;)V apply
dw net/minecraft/commands/arguments/ParticleArgument
	b EXAMPLES
	a ERROR_UNKNOWN_PARTICLE
	<init> ()V <init>
	a ()Ldw; particle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhf; getParticle
	a (Lcom/mojang/brigadier/StringReader;)Lhf; parse
	getExamples ()Ljava/util/Collection; getExamples
	b (Lcom/mojang/brigadier/StringReader;)Lhf; readParticle
	a (Lcom/mojang/brigadier/StringReader;Lhg;)Lhf; readParticle
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readParticle$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dx net/minecraft/commands/arguments/RangeArgument
	a ()Ldx$b; intRange
	b ()Ldx$a; floatRange
dx$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbz$c; getRange
	a (Lcom/mojang/brigadier/StringReader;)Lbz$c; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
dx$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbz$d; getRange
	a (Lcom/mojang/brigadier/StringReader;)Lbz$d; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
dy net/minecraft/commands/arguments/ResourceLocationArgument
	a EXAMPLES
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d ERROR_UNKNOWN_PREDICATE
	e ERROR_UNKNOWN_ATTRIBUTE
	<init> ()V <init>
	a ()Ldy; id
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ly; getAdvancement
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbon; getRecipe
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldbl; getPredicate
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lard; getAttribute
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lvk; getId
	a (Lcom/mojang/brigadier/StringReader;)Lvk; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getAttribute$5
	b (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getRecipe$4
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dz net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	<init> (Z)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	a ()Ldz; scoreHolder
	b ()Ldz; scoreHolders
	a (Lcom/mojang/brigadier/StringReader;)Ldz$a; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/util/Collection;Ldb;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$3
	a (Ldb;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$null$0
	a (Ldz;)Z access$000
	<clinit> ()V <clinit>
dz$a net/minecraft/commands/arguments/ScoreHolderArgument$Result
	getNames (Ldb;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
dz$b net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
	<init> (Lfc;)V <init>
	getNames (Ldb;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
dz$c net/minecraft/commands/arguments/ScoreHolderArgument$Serializer
	<init> ()V <init>
	a (Ldz;Lnf;)V serializeToNetwork
	a (Lnf;)Ldz; deserializeFromNetwork
	a (Ldz;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
ea net/minecraft/commands/arguments/ScoreboardSlotArgument
	b EXAMPLES
	a ERROR_INVALID_VALUE
	<init> ()V <init>
	a ()Lea; displaySlot
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getDisplaySlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
eb net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	<init> ()V <init>
	a ()Leb; slot
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ec net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	<init> ()V <init>
	a ()Lec; team
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lddi; getTeam
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ed net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_INVALID_TICK_COUNT
	d UNITS
	<init> ()V <init>
	a ()Led; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ee net/minecraft/commands/arguments/UuidArgument
	a ERROR_INVALID_UUID
	b EXAMPLES
	c ALLOWED_CHARACTERS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; getUuid
	a ()Lee; uuid
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
ef net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	<init> (Lcee;Ljava/util/Set;Lmd;)V <init>
	a ()Lcee; getState
	b ()Lmd; getTag
	c ()Ljava/util/Set; getDefinedProperties
	a (Lcei;)Z test
	a (Laag;Lfx;)Z test
	a (Laag;Lfx;I)Z place
	test (Ljava/lang/Object;)Z test
eg net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	<init> ()V <init>
	a ()Leg; blockPredicate
	a (Lcom/mojang/brigadier/StringReader;)Leg$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;Lei;Lael;)Ljava/util/function/Predicate; lambda$parse$2
	a (Leg$a;Lael;)Ljava/util/function/Predicate; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
eg$1 net/minecraft/commands/arguments/blocks/BlockPredicateArgument$1
eg$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	<init> (Lcee;Ljava/util/Set;Lmd;)V <init>
	a (Lcei;)Z test
	test (Ljava/lang/Object;)Z test
eg$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	create (Lael;)Ljava/util/function/Predicate; create
eg$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	<init> (Laej;Ljava/util/Map;Lmd;)V <init>
	a (Lcei;)Z test
	test (Ljava/lang/Object;)Z test
	<init> (Laej;Ljava/util/Map;Lmd;Leg$1;)V <init>
eh net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Leh; block
	a (Lcom/mojang/brigadier/StringReader;)Lef; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lef; getBlock
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
ei net/minecraft/commands/arguments/blocks/BlockStateParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h SUGGEST_NOTHING
	i reader
	j forTesting
	k properties
	l vagueProperties
	m id
	n definition
	o state
	p nbt
	q tag
	r tagCursor
	s suggestions
	<init> (Lcom/mojang/brigadier/StringReader;Z)V <init>
	a ()Ljava/util/Map; getProperties
	b ()Lcee; getState
	c ()Lmd; getNbt
	d ()Lvk; getTag
	a (Z)Lei; parse
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	a (Laek;)Z hasBlockEntity
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcfg;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestTag
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
	e ()V readBlock
	f ()V readTag
	g ()V readProperties
	h ()V readVagueProperties
	i ()V readNbt
	a (Lcfg;Ljava/lang/String;I)V setValue
	a (Lcee;)Ljava/lang/String; serialize
	a (Ljava/lang/StringBuilder;Lcfg;Ljava/lang/Comparable;)V appendProperty
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	j ()Ljava/util/Map; getVagueProperties
	a (Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; lambda$readVagueProperties$8
	a (Lcfg;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; lambda$readProperties$7
	a (I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readBlock$6
	m (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ej net/minecraft/commands/arguments/blocks/package-info
ek net/minecraft/commands/arguments/coordinates/BlockPosArgument
	c EXAMPLES
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	<init> ()V <init>
	a ()Lek; blockPos
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfx; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfx; getOrLoadBlockPos
	a (Lcom/mojang/brigadier/StringReader;)Lem; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
el net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	<init> ()V <init>
	a ()Lel; columnPos
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lzw; getColumnPos
	a (Lcom/mojang/brigadier/StringReader;)Lem; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
em net/minecraft/commands/arguments/coordinates/Coordinates
	a (Ldb;)Ldck; getPosition
	b (Ldb;)Ldcj; getRotation
	c (Ldb;)Lfx; getBlockPos
	a ()Z isXRelative
	b ()Z isYRelative
	c ()Z isZRelative
en net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a left
	b up
	c forwards
	<init> (DDD)V <init>
	a (Ldb;)Ldck; getPosition
	b (Ldb;)Ldcj; getRotation
	a ()Z isXRelative
	b ()Z isYRelative
	c ()Z isZRelative
	a (Lcom/mojang/brigadier/StringReader;)Len; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
eo net/minecraft/commands/arguments/coordinates/RotationArgument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	<init> ()V <init>
	a ()Leo; rotation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lem; getRotation
	a (Lcom/mojang/brigadier/StringReader;)Lem; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
ep net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	<init> ()V <init>
	a ()Lep; swizzle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
eq net/minecraft/commands/arguments/coordinates/Vec2Argument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	c centerCorrect
	<init> (Z)V <init>
	a ()Leq; vec2
	a (Z)Leq; vec2
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldcj; getVec2
	a (Lcom/mojang/brigadier/StringReader;)Lem; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
er net/minecraft/commands/arguments/coordinates/Vec3Argument
	c EXAMPLES
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	d centerCorrect
	<init> (Z)V <init>
	a ()Ler; vec3
	a (Z)Ler; vec3
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldck; getVec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lem; getCoordinates
	a (Lcom/mojang/brigadier/StringReader;)Lem; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
es net/minecraft/commands/arguments/coordinates/WorldCoordinate
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	c relative
	d value
	<init> (ZD)V <init>
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;Z)Les; parseDouble
	a (Lcom/mojang/brigadier/StringReader;)Les; parseInt
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Z isRelative
	<clinit> ()V <clinit>
et net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	<init> (Les;Les;Les;)V <init>
	a (Ldb;)Ldck; getPosition
	b (Ldb;)Ldcj; getRotation
	a ()Z isXRelative
	b ()Z isYRelative
	c ()Z isZRelative
	equals (Ljava/lang/Object;)Z equals
	a (Lcom/mojang/brigadier/StringReader;)Let; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Let; parseDouble
	a (DDD)Let; absolute
	a (Ldcj;)Let; absolute
	d ()Let; current
	hashCode ()I hashCode
eu net/minecraft/commands/arguments/coordinates/package-info
ev net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	<init> ()V <init>
	a ()Lev; functions
	a (Lcom/mojang/brigadier/StringReader;)Lev$a; parse
	c (Lcom/mojang/brigadier/context/CommandContext;Lvk;)Lcy; getFunction
	d (Lcom/mojang/brigadier/context/CommandContext;Lvk;)Laej; getFunctionTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getFunctionOrTag
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getFunction$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lcom/mojang/brigadier/context/CommandContext;Lvk;)Laej; access$000
	b (Lcom/mojang/brigadier/context/CommandContext;Lvk;)Lcy; access$100
	<clinit> ()V <clinit>
ev$1 net/minecraft/commands/arguments/item/FunctionArgument$1
	a val$id
	b this$0
	<init> (Lev;Lvk;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
ev$2 net/minecraft/commands/arguments/item/FunctionArgument$2
	a val$id
	b this$0
	<init> (Lev;Lvk;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
ev$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
ew net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Lew; item
	a (Lcom/mojang/brigadier/StringReader;)Lex; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lex; getItem
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
ex net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	<init> (Lblu;Lmd;)V <init>
	a ()Lblu; getItem
	b ()Lmd; getTag
	a (Lbly;)Z test
	a (IZ)Lbly; createItemStack
	c ()Ljava/lang/String; serialize
	test (Ljava/lang/Object;)Z test
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ey net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c SUGGEST_NOTHING
	d reader
	e forTesting
	f properties
	g item
	h nbt
	i tag
	j tagCursor
	k suggestions
	<init> (Lcom/mojang/brigadier/StringReader;Z)V <init>
	a ()Ljava/util/Map; getProperties
	b ()Lblu; getItem
	c ()Lmd; getNbt
	d ()Lvk; getTag
	e ()V readItem
	f ()V readTag
	g ()V readNbt
	h ()Ley; parse
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (ILvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readItem$2
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laek;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ez net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	<init> ()V <init>
	a ()Lez; itemPredicate
	a (Lcom/mojang/brigadier/StringReader;)Lez$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lvk;Ley;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$parse$2
	a (Lez$a;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ez$a net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate
	a item
	b nbt
	<init> (Lblu;Lmd;)V <init>
	a (Lbly;)Z test
	test (Ljava/lang/Object;)Z test
ez$b net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; create
ez$c net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate
	a tag
	b nbt
	<init> (Laej;Lmd;)V <init>
	a (Lbly;)Z test
	test (Ljava/lang/Object;)Z test
fa net/minecraft/commands/arguments/item/package-info
fb net/minecraft/commands/arguments/package-info
fc net/minecraft/commands/arguments/selector/EntitySelector
	a maxResults
	b includesEntities
	c worldLimited
	d predicate
	e range
	f position
	g aabb
	h order
	i currentEntity
	j playerName
	k entityUUID
	l type
	m usesSelector
	<init> (IZZLjava/util/function/Predicate;Lbz$c;Ljava/util/function/Function;Ldcf;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Laqb;Z)V <init>
	a ()I getMaxResults
	b ()Z includesEntities
	c ()Z isSelfSelector
	d ()Z isWorldLimited
	e ()Z usesSelector
	e (Ldb;)V checkPermissions
	a (Ldb;)Lapx; findSingleEntity
	b (Ldb;)Ljava/util/List; findEntities
	a (Ljava/util/List;Laag;Ldck;Ljava/util/function/Predicate;)V addEntities
	c (Ldb;)Laah; findSinglePlayer
	d (Ldb;)Ljava/util/List; findPlayers
	a (Ldck;)Ljava/util/function/Predicate; getPredicate
	a (Ldck;Ljava/util/List;)Ljava/util/List; sortAndLimit
	a (Ljava/util/List;)Lnx; joinNames
	a (Ldck;Lapx;)Z lambda$getPredicate$1
	a (Ldcf;Lapx;)Z lambda$getPredicate$0
fd net/minecraft/commands/arguments/selector/EntitySelectorParser
	a ERROR_INVALID_NAME_OR_UUID
	b ERROR_UNKNOWN_SELECTOR_TYPE
	c ERROR_SELECTORS_NOT_ALLOWED
	d ERROR_MISSING_SELECTOR_TYPE
	e ERROR_EXPECTED_END_OF_OPTIONS
	f ERROR_EXPECTED_OPTION_VALUE
	g ORDER_ARBITRARY
	h ORDER_NEAREST
	i ORDER_FURTHEST
	j ORDER_RANDOM
	k SUGGEST_NOTHING
	l reader
	m allowSelectors
	n maxResults
	o includesEntities
	p worldLimited
	q distance
	r level
	s x
	t y
	u z
	v deltaX
	w deltaY
	x deltaZ
	y rotX
	z rotY
	A predicate
	B order
	C currentEntity
	D playerName
	E startPosition
	F entityUUID
	G suggestions
	H hasNameEquals
	I hasNameNotEquals
	J isLimited
	K isSorted
	L hasGamemodeEquals
	M hasGamemodeNotEquals
	N hasTeamEquals
	O hasTeamNotEquals
	P type
	Q typeInverse
	R hasScores
	S hasAdvancements
	T usesSelectors
	<init> (Lcom/mojang/brigadier/StringReader;)V <init>
	<init> (Lcom/mojang/brigadier/StringReader;Z)V <init>
	a ()Lfc; getSelector
	a (DDD)Ldcf; createAabb
	I ()V finalizePredicates
	a (Lcu;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	b ()V parseSelector
	c ()V parseNameOrUUID
	d ()V parseOptions
	e ()Z shouldInvertValue
	f ()Z isTag
	g ()Lcom/mojang/brigadier/StringReader; getReader
	a (Ljava/util/function/Predicate;)V addPredicate
	h ()V setWorldLimited
	i ()Lbz$c; getDistance
	a (Lbz$c;)V setDistance
	j ()Lbz$d; getLevel
	a (Lbz$d;)V setLevel
	k ()Lcu; getRotX
	a (Lcu;)V setRotX
	l ()Lcu; getRotY
	b (Lcu;)V setRotY
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	a (D)V setX
	b (D)V setY
	c (D)V setZ
	d (D)V setDeltaX
	e (D)V setDeltaY
	f (D)V setDeltaZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	a (I)V setMaxResults
	a (Z)V setIncludesEntities
	s ()Ljava/util/function/BiConsumer; getOrder
	a (Ljava/util/function/BiConsumer;)V setOrder
	t ()Lfc; parse
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	u ()Z isCurrentEntity
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	v ()Z hasNameEquals
	b (Z)V setHasNameEquals
	w ()Z hasNameNotEquals
	c (Z)V setHasNameNotEquals
	x ()Z isLimited
	d (Z)V setLimited
	y ()Z isSorted
	e (Z)V setSorted
	z ()Z hasGamemodeEquals
	f (Z)V setHasGamemodeEquals
	A ()Z hasGamemodeNotEquals
	g (Z)V setHasGamemodeNotEquals
	B ()Z hasTeamEquals
	h (Z)V setHasTeamEquals
	C ()Z hasTeamNotEquals
	i (Z)V setHasTeamNotEquals
	a (Laqb;)V limitToType
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	j (Z)V setHasScores
	H ()Z hasAdvancements
	k (Z)V setHasAdvancements
	a (Ljava/util/function/ToDoubleFunction;DDLapx;)Z lambda$createRotationPredicate$15
	a (Lapx;)Z lambda$finalizePredicates$14
	b (Lapx;)D lambda$finalizePredicates$13
	c (Lapx;)D lambda$finalizePredicates$12
	a (Ldck;)Ldck; lambda$getSelector$11
	b (Ldck;)Ldck; lambda$getSelector$10
	d (Lapx;)Z lambda$new$9
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$static$8
	a (Ldck;Ljava/util/List;)V lambda$static$7
	b (Ldck;Ljava/util/List;)V lambda$static$6
	a (Ldck;Lapx;Lapx;)I lambda$null$5
	c (Ldck;Ljava/util/List;)V lambda$static$4
	b (Ldck;Lapx;Lapx;)I lambda$null$3
	d (Ldck;Ljava/util/List;)V lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
fe net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	i OPTIONS
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	<init> ()V <init>
	a (Ljava/lang/String;Lfe$a;Ljava/util/function/Predicate;Lnr;)V register
	a ()V bootStrap
	a (Lfd;Ljava/lang/String;I)Lfe$a; get
	a (Lfd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lfd;)Z lambda$bootStrap$63
	b (Lfd;)V lambda$bootStrap$62
	a (Lvk;ZLapx;)Z lambda$null$61
	c (Lfd;)Z lambda$bootStrap$60
	d (Lfd;)V lambda$bootStrap$59
	a (Ljava/util/Map;Lapx;)Z lambda$null$58
	a (ZLaa;)Z lambda$null$57
	a (Ljava/util/Map;Laa;)Z lambda$null$56
	a (ZLae;)Z lambda$null$55
	e (Lfd;)Z lambda$bootStrap$54
	f (Lfd;)V lambda$bootStrap$53
	b (Ljava/util/Map;Lapx;)Z lambda$null$52
	g (Lfd;)Z lambda$bootStrap$51
	h (Lfd;)V lambda$bootStrap$50
	a (Lmd;ZLapx;)Z lambda$null$49
	i (Lfd;)Z lambda$bootStrap$48
	j (Lfd;)V lambda$bootStrap$47
	a (Ljava/lang/String;ZLapx;)Z lambda$null$46
	k (Lfd;)Z lambda$bootStrap$45
	l (Lfd;)V lambda$bootStrap$44
	a (Laqb;ZLapx;)Z lambda$null$43
	a (Lfd;ILvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$null$42
	b (Lvk;ZLapx;)Z lambda$null$41
	a (Lfd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$40
	m (Lfd;)Z lambda$bootStrap$39
	n (Lfd;)V lambda$bootStrap$38
	b (Ljava/lang/String;ZLapx;)Z lambda$null$37
	o (Lfd;)Z lambda$bootStrap$36
	p (Lfd;)V lambda$bootStrap$35
	a (ZLbrr;Lapx;)Z lambda$null$34
	b (Lfd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$33
	q (Lfd;)Z lambda$bootStrap$32
	r (Lfd;)V lambda$bootStrap$31
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$30
	s (Lfd;)Z lambda$bootStrap$29
	t (Lfd;)V lambda$bootStrap$28
	u (Lfd;)Z lambda$bootStrap$27
	v (Lfd;)V lambda$bootStrap$26
	w (Lfd;)Z lambda$bootStrap$25
	x (Lfd;)V lambda$bootStrap$24
	y (Lfd;)Z lambda$bootStrap$23
	z (Lfd;)V lambda$bootStrap$22
	A (Lfd;)Z lambda$bootStrap$21
	B (Lfd;)V lambda$bootStrap$20
	C (Lfd;)Z lambda$bootStrap$19
	D (Lfd;)V lambda$bootStrap$18
	E (Lfd;)Z lambda$bootStrap$17
	F (Lfd;)V lambda$bootStrap$16
	G (Lfd;)Z lambda$bootStrap$15
	H (Lfd;)V lambda$bootStrap$14
	I (Lfd;)Z lambda$bootStrap$13
	J (Lfd;)V lambda$bootStrap$12
	K (Lfd;)Z lambda$bootStrap$11
	L (Lfd;)V lambda$bootStrap$10
	M (Lfd;)Z lambda$bootStrap$9
	N (Lfd;)V lambda$bootStrap$8
	O (Lfd;)Z lambda$bootStrap$7
	P (Lfd;)V lambda$bootStrap$6
	c (Ljava/lang/String;ZLapx;)Z lambda$null$5
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
fe$1 net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$1
fe$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
	handle (Lfd;)V handle
fe$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b predicate
	c description
	<init> (Lfe$a;Ljava/util/function/Predicate;Lnr;)V <init>
	<init> (Lfe$a;Ljava/util/function/Predicate;Lnr;Lfe$1;)V <init>
ff net/minecraft/commands/arguments/selector/options/package-info
fg net/minecraft/commands/arguments/selector/package-info
fh net/minecraft/commands/exceptions/package-info
fi net/minecraft/commands/package-info
fj net/minecraft/commands/synchronization/ArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
fk net/minecraft/commands/synchronization/ArgumentTypes
	a LOGGER
	b BY_CLASS
	c BY_NAME
	<init> ()V <init>
	a (Ljava/lang/String;Ljava/lang/Class;Lfj;)V register
	a ()V bootStrap
	a (Lvk;)Lfk$a; get
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lfk$a; get
	a (Lnf;Lcom/mojang/brigadier/arguments/ArgumentType;)V serialize
	a (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeToJson
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Z isTypeRegistered
	a (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; findUsedArgumentTypes
	a (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V findUsedArgumentTypes
	a (Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V lambda$findUsedArgumentTypes$0
	<clinit> ()V <clinit>
fk$1 net/minecraft/commands/synchronization/ArgumentTypes$1
fk$a net/minecraft/commands/synchronization/ArgumentTypes$Entry
	a clazz
	b serializer
	c name
	<init> (Ljava/lang/Class;Lfj;Lvk;)V <init>
	<init> (Ljava/lang/Class;Lfj;Lvk;Lfk$1;)V <init>
fl net/minecraft/commands/synchronization/EmptyArgumentSerializer
	a constructor
	<init> (Ljava/util/function/Supplier;)V <init>
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
fm net/minecraft/commands/synchronization/SuggestionProviders
	f PROVIDERS_BY_NAME
	g DEFAULT_NAME
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d AVAILABLE_BIOMES
	e SUMMONABLE_ENTITIES
	<init> ()V <init>
	a (Lvk;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	a (Lvk;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lvk; getName
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
	a (Laqb;)Lcom/mojang/brigadier/Message; lambda$null$4
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	d (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	e (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
fm$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
	<init> (Lvk;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V <init>
	getSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; getSuggestions
	a (Lfm$a;)Lvk; access$000
fn net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers
	<init> ()V <init>
	a ()V bootstrap
	a (ZZ)B createNumberFlags
	a (B)Z numberHasMin
	b (B)Z numberHasMax
fo net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer
	<init> ()V <init>
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnf;)V serializeToNetwork
	a (Lnf;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
fp net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer
	<init> ()V <init>
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnf;)V serializeToNetwork
	a (Lnf;)Lcom/mojang/brigadier/arguments/FloatArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
fq net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer
	<init> ()V <init>
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnf;)V serializeToNetwork
	a (Lnf;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
fr net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer
	<init> ()V <init>
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnf;)V serializeToNetwork
	a (Lnf;)Lcom/mojang/brigadier/arguments/LongArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
fs net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	<init> ()V <init>
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnf;)V serializeToNetwork
	a (Lnf;)Lcom/mojang/brigadier/arguments/StringArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lnf;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnf;)V serializeToNetwork
fs$1 net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	a $SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
	<clinit> ()V <clinit>
ft net/minecraft/commands/synchronization/brigadier/package-info
fu net/minecraft/commands/synchronization/package-info
fv net/minecraft/core/AxisCycle
	a NONE
	b FORWARD
	c BACKWARD
	d AXIS_VALUES
	e VALUES
	f $VALUES
	values ()[Lfv; values
	valueOf (Ljava/lang/String;)Lfv; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (IIILgc$a;)I cycle
	a (DDDLgc$a;)D cycle
	a (Lgc$a;)Lgc$a; cycle
	a ()Lfv; inverse
	a (Lgc$a;Lgc$a;)Lfv; between
	<init> (Ljava/lang/String;ILfv$1;)V <init>
	<clinit> ()V <clinit>
fv$1 net/minecraft/core/AxisCycle$1
	<init> (Ljava/lang/String;I)V <init>
	a (IIILgc$a;)I cycle
	a (DDDLgc$a;)D cycle
	a (Lgc$a;)Lgc$a; cycle
	a ()Lfv; inverse
fv$2 net/minecraft/core/AxisCycle$2
	<init> (Ljava/lang/String;I)V <init>
	a (IIILgc$a;)I cycle
	a (DDDLgc$a;)D cycle
	a (Lgc$a;)Lgc$a; cycle
	a ()Lfv; inverse
fv$3 net/minecraft/core/AxisCycle$3
	<init> (Ljava/lang/String;I)V <init>
	a (IIILgc$a;)I cycle
	a (DDDLgc$a;)D cycle
	a (Lgc$a;)Lgc$a; cycle
	a ()Lfv; inverse
fw net/minecraft/core/BlockMath
	c LOGGER
	a vanillaUvTransformLocalToGlobal
	b vanillaUvTransformGlobalToLocal
	<init> ()V <init>
	a (Lf;)Lf; blockCenterToCorner
	b (Lf;)Lf; blockCornerToCenter
	a (Lf;Lgc;Ljava/util/function/Supplier;)Lf; getUVLockTransform
	a (Ljava/util/EnumMap;)V lambda$static$1
	b (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
fx net/minecraft/core/BlockPos
	a CODEC
	e LOGGER
	b ZERO
	f PACKED_X_LENGTH
	g PACKED_Z_LENGTH
	h PACKED_Y_LENGTH
	i PACKED_X_MASK
	j PACKED_Y_MASK
	k PACKED_Z_MASK
	l Z_OFFSET
	m X_OFFSET
	<init> (III)V <init>
	<init> (DDD)V <init>
	<init> (Ldck;)V <init>
	<init> (Lgk;)V <init>
	<init> (Lgr;)V <init>
	a (JLgc;)J offset
	a (JIII)J offset
	a (J)Z isOutsideBuildHeight
	b (J)I getX
	c (J)I getY
	d (J)I getZ
	e (J)Lfx; of
	a ()J asLong
	a (III)J asLong
	f (J)J getFlatIndex
	a (DDD)Lfx; offset
	b (III)Lfx; offset
	a (Lgr;)Lfx; offset
	b (Lgr;)Lfx; subtract
	a (I)Lfx; multiply
	b ()Lfx; above
	b (I)Lfx; above
	c ()Lfx; below
	c (I)Lfx; below
	d ()Lfx; north
	d (I)Lfx; north
	e ()Lfx; south
	e (I)Lfx; south
	f ()Lfx; west
	f (I)Lfx; west
	g ()Lfx; east
	g (I)Lfx; east
	a (Lgc;)Lfx; relative
	a (Lgc;I)Lfx; relative
	a (Lgc$a;I)Lfx; relative
	a (Lbzj;)Lfx; rotate
	c (Lgr;)Lfx; cross
	h ()Lfx; immutable
	i ()Lfx$a; mutable
	a (Ljava/util/Random;IIIIIII)Ljava/lang/Iterable; randomBetweenClosed
	a (Lfx;III)Ljava/lang/Iterable; withinManhattan
	a (Lfx;IILjava/util/function/Predicate;)Ljava/util/Optional; findClosestMatch
	b (Lfx;III)Ljava/util/stream/Stream; withinManhattanStream
	a (Lfx;Lfx;)Ljava/lang/Iterable; betweenClosed
	b (Lfx;Lfx;)Ljava/util/stream/Stream; betweenClosedStream
	a (Lcqx;)Ljava/util/stream/Stream; betweenClosedStream
	a (Ldcf;)Ljava/util/stream/Stream; betweenClosedStream
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	a (Lfx;ILgc;Lgc;)Ljava/lang/Iterable; spiralAround
	d (Lgr;)Lgr; cross
	b (Lgc$a;I)Lgr; relative
	b (Lgc;I)Lgr; relative
	b (Lgc;)Lgr; relative
	h (I)Lgr; east
	j ()Lgr; east
	i (I)Lgr; west
	k ()Lgr; west
	j (I)Lgr; south
	l ()Lgr; south
	k (I)Lgr; north
	m ()Lgr; north
	l (I)Lgr; below
	n ()Lgr; below
	m (I)Lgr; above
	o ()Lgr; above
	n (I)Lgr; multiply
	e (Lgr;)Lgr; subtract
	f (Lgr;)Lgr; offset
	c (III)Lgr; offset
	b (DDD)Lgr; offset
	a (Lgc;Lgc;Lfx;I)Ljava/util/Iterator; lambda$spiralAround$6
	c (IIIIII)Ljava/util/Iterator; lambda$betweenClosed$5
	a (IIIIIII)Ljava/util/Iterator; lambda$withinManhattan$4
	a (IILjava/util/Random;IIIII)Ljava/util/Iterator; lambda$randomBetweenClosed$3
	a (Lfx;)Ljava/util/stream/IntStream; lambda$static$2
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a ([I)Lfx; lambda$null$0
	<clinit> ()V <clinit>
fx$1 net/minecraft/core/BlockPos$1
	a nextPos
	b counter
	c val$limit
	d val$minX
	e val$random
	f val$width
	g val$minY
	h val$height
	i val$minZ
	j val$depth
	<init> (IILjava/util/Random;IIIII)V <init>
	a ()Lfx; computeNext
	computeNext ()Ljava/lang/Object; computeNext
fx$2 net/minecraft/core/BlockPos$2
	h cursor
	i currentDepth
	j maxX
	k maxY
	l x
	m y
	n zMirror
	a val$originZ
	b val$maxDepth
	c val$reachX
	d val$reachY
	e val$reachZ
	f val$originX
	g val$originY
	<init> (IIIIIII)V <init>
	a ()Lfx; computeNext
	computeNext ()Ljava/lang/Object; computeNext
fx$3 net/minecraft/core/BlockPos$3
	g cursor
	h index
	a val$end
	b val$width
	c val$height
	d val$minX
	e val$minY
	f val$minZ
	<init> (IIIIII)V <init>
	a ()Lfx; computeNext
	computeNext ()Ljava/lang/Object; computeNext
fx$4 net/minecraft/core/BlockPos$4
	e directions
	f cursor
	g legs
	h leg
	i legSize
	j legIndex
	k lastX
	l lastY
	m lastZ
	a val$firstDirection
	b val$secondDirection
	c val$center
	d val$radius
	<init> (Lgc;Lgc;Lfx;I)V <init>
	a ()Lfx$a; computeNext
	computeNext ()Ljava/lang/Object; computeNext
fx$5 net/minecraft/core/BlockPos$5
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
fx$a net/minecraft/core/BlockPos$MutableBlockPos
	<init> ()V <init>
	<init> (III)V <init>
	<init> (DDD)V <init>
	a (DDD)Lfx; offset
	b (III)Lfx; offset
	a (I)Lfx; multiply
	a (Lgc;I)Lfx; relative
	a (Lgc$a;I)Lfx; relative
	a (Lbzj;)Lfx; rotate
	d (III)Lfx$a; set
	c (DDD)Lfx$a; set
	g (Lgr;)Lfx$a; set
	g (J)Lfx$a; set
	a (Lfv;III)Lfx$a; set
	a (Lgr;Lgc;)Lfx$a; setWithOffset
	a (Lgr;III)Lfx$a; setWithOffset
	a (Lgr;Lgr;)Lfx$a; setWithOffset
	c (Lgc;)Lfx$a; move
	c (Lgc;I)Lfx$a; move
	e (III)Lfx$a; move
	h (Lgr;)Lfx$a; move
	a (Lgc$a;II)Lfx$a; clamp
	o (I)V setX
	p (I)V setY
	q (I)V setZ
	h ()Lfx; immutable
	d (Lgr;)Lgr; cross
	b (Lgc$a;I)Lgr; relative
	b (Lgc;I)Lgr; relative
	b (Lgc;)Lgr; relative
	h (I)Lgr; east
	j ()Lgr; east
	i (I)Lgr; west
	k ()Lgr; west
	j (I)Lgr; south
	l ()Lgr; south
	k (I)Lgr; north
	m ()Lgr; north
	l (I)Lgr; below
	n ()Lgr; below
	m (I)Lgr; above
	o ()Lgr; above
	n (I)Lgr; multiply
	e (Lgr;)Lgr; subtract
	f (Lgr;)Lgr; offset
	c (III)Lgr; offset
	b (DDD)Lgr; offset
fy net/minecraft/core/BlockSource
	a ()D x
	b ()D y
	c ()D z
	d ()Lfx; getPos
	e ()Lcee; getBlockState
	f ()Lcux; getMaterial
	g ()Lccg; getEntity
	h ()Laag; getLevel
fz net/minecraft/core/BlockSourceImpl
	a level
	b pos
	<init> (Laag;Lfx;)V <init>
	h ()Laag; getLevel
	a ()D x
	b ()D y
	c ()D z
	d ()Lfx; getPos
	e ()Lcee; getBlockState
	f ()Lcux; getMaterial
	g ()Lccg; getEntity
ga net/minecraft/core/Cursor3D
	a originX
	b originY
	c originZ
	d width
	e height
	f depth
	g end
	h index
	i x
	j y
	k z
	<init> (IIIIII)V <init>
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
gb net/minecraft/core/DefaultedRegistry
	bf defaultKey
	bg defaultValue
	<init> (Ljava/lang/String;Lvj;Lcom/mojang/serialization/Lifecycle;)V <init>
	a (ILvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerMapping
	a (Ljava/lang/Object;)I getId
	b (Ljava/lang/Object;)Lvk; getKey
	a (Lvk;)Ljava/lang/Object; get
	b (Lvk;)Ljava/util/Optional; getOptional
	a (I)Ljava/lang/Object; byId
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a ()Lvk; getDefaultKey
gc net/minecraft/core/Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g data3d
	h oppositeIndex
	i data2d
	j name
	k axis
	l axisDirection
	m normal
	n VALUES
	o BY_NAME
	p BY_3D_DATA
	q BY_2D_DATA
	r BY_NORMAL
	s $VALUES
	values ()[Lgc; values
	valueOf (Ljava/lang/String;)Lgc; valueOf
	<init> (Ljava/lang/String;IIIILjava/lang/String;Lgc$b;Lgc$a;Lgr;)V <init>
	a (Lapx;)[Lgc; orderedByNearest
	a (Lgc;Lgc;Lgc;)[Lgc; makeDirectionArray
	a (Lb;Lgc;)Lgc; rotate
	b ()Ld; getRotation
	c ()I get3DDataValue
	d ()I get2DDataValue
	e ()Lgc$b; getAxisDirection
	f ()Lgc; getOpposite
	a (Lgc$a;)Lgc; getClockWise
	b (Lgc$a;)Lgc; getCounterClockWise
	g ()Lgc; getClockWise
	q ()Lgc; getClockWiseX
	r ()Lgc; getCounterClockWiseX
	s ()Lgc; getClockWiseZ
	t ()Lgc; getCounterClockWiseZ
	h ()Lgc; getCounterClockWise
	i ()I getStepX
	j ()I getStepY
	k ()I getStepZ
	l ()Lg; step
	m ()Ljava/lang/String; getName
	n ()Lgc$a; getAxis
	a (Ljava/lang/String;)Lgc; byName
	a (I)Lgc; from3DDataValue
	b (I)Lgc; from2DDataValue
	a (Lfx;)Lgc; fromNormal
	a (III)Lgc; fromNormal
	a (D)Lgc; fromYRot
	a (Lgc$a;Lgc$b;)Lgc; fromAxisAndDirection
	o ()F toYRot
	a (Ljava/util/Random;)Lgc; getRandom
	a (DDD)Lgc; getNearest
	a (FFF)Lgc; getNearest
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	a (Lgc$b;Lgc$a;)Lgc; get
	p ()Lgr; getNormal
	a (F)Z isFacingAngle
	a (Lgc;Lgc;)Lgc; lambda$static$8
	a (Lgc;)Lgc; lambda$static$7
	b (Lgc;)Ljava/lang/Long; lambda$static$6
	c (I)[Lgc; lambda$static$5
	c (Lgc;)I lambda$static$4
	d (Lgc;)Z lambda$static$3
	d (I)[Lgc; lambda$static$2
	e (Lgc;)I lambda$static$1
	f (Lgc;)Lgc; lambda$static$0
	<clinit> ()V <clinit>
gc$1 net/minecraft/core/Direction$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
gc$a net/minecraft/core/Direction$Axis
	a X
	b Y
	c Z
	e VALUES
	d CODEC
	f BY_NAME
	g name
	h $VALUES
	values ()[Lgc$a; values
	valueOf (Ljava/lang/String;)Lgc$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Lgc$a; byName
	b ()Ljava/lang/String; getName
	c ()Z isVertical
	d ()Z isHorizontal
	toString ()Ljava/lang/String; toString
	a (Ljava/util/Random;)Lgc$a; getRandom
	a (Lgc;)Z test
	e ()Lgc$c; getPlane
	a ()Ljava/lang/String; getSerializedName
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
	a (Lgc$a;)Lgc$a; lambda$static$0
	<init> (Ljava/lang/String;ILjava/lang/String;Lgc$1;)V <init>
	<clinit> ()V <clinit>
gc$a$1 net/minecraft/core/Direction$Axis$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
gc$a$2 net/minecraft/core/Direction$Axis$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
gc$a$3 net/minecraft/core/Direction$Axis$3
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
gc$b net/minecraft/core/Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d name
	e $VALUES
	values ()[Lgc$b; values
	valueOf (Ljava/lang/String;)Lgc$b; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getStep
	b ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	c ()Lgc$b; opposite
	<clinit> ()V <clinit>
gc$c net/minecraft/core/Direction$Plane
	a HORIZONTAL
	b VERTICAL
	c faces
	d axis
	e $VALUES
	values ()[Lgc$c; values
	valueOf (Ljava/lang/String;)Lgc$c; valueOf
	<init> (Ljava/lang/String;I[Lgc;[Lgc$a;)V <init>
	a (Ljava/util/Random;)Lgc; getRandomDirection
	b (Ljava/util/Random;)Lgc$a; getRandomAxis
	a (Lgc;)Z test
	iterator ()Ljava/util/Iterator; iterator
	a ()Ljava/util/stream/Stream; stream
	test (Ljava/lang/Object;)Z test
	<clinit> ()V <clinit>
gd net/minecraft/core/Direction8
	a NORTH
	b NORTH_EAST
	c EAST
	d SOUTH_EAST
	e SOUTH
	f SOUTH_WEST
	g WEST
	h NORTH_WEST
	i NORTH_WEST_MASK
	j WEST_MASK
	k SOUTH_WEST_MASK
	l SOUTH_MASK
	m SOUTH_EAST_MASK
	n EAST_MASK
	o NORTH_EAST_MASK
	p NORTH_MASK
	q directions
	r $VALUES
	values ()[Lgd; values
	valueOf (Ljava/lang/String;)Lgd; valueOf
	<init> (Ljava/lang/String;I[Lgc;)V <init>
	a (ZZZZ)I getSideMask
	a ()Ljava/util/Set; getDirections
	<clinit> ()V <clinit>
ge net/minecraft/core/FrontAndTop
	a DOWN_EAST
	b DOWN_NORTH
	c DOWN_SOUTH
	d DOWN_WEST
	e UP_EAST
	f UP_NORTH
	g UP_SOUTH
	h UP_WEST
	i WEST_UP
	j EAST_UP
	k NORTH_UP
	l SOUTH_UP
	m LOOKUP_TOP_FRONT
	n name
	o top
	p front
	q $VALUES
	values ()[Lge; values
	valueOf (Ljava/lang/String;)Lge; valueOf
	b (Lgc;Lgc;)I lookupKey
	<init> (Ljava/lang/String;ILjava/lang/String;Lgc;Lgc;)V <init>
	a ()Ljava/lang/String; getSerializedName
	a (Lgc;Lgc;)Lge; fromFrontAndTop
	b ()Lgc; front
	c ()Lgc; top
	<clinit> ()V <clinit>
gf net/minecraft/core/GlobalPos
	a CODEC
	b dimension
	c pos
	<init> (Lvj;Lfx;)V <init>
	a (Lvj;Lfx;)Lgf; of
	a ()Lvj; dimension
	b ()Lfx; pos
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
gg net/minecraft/core/IdMap
	a (Ljava/lang/Object;)I getId
	a (I)Ljava/lang/Object; byId
gh net/minecraft/core/IdMapper
	a nextId
	b tToId
	c idToT
	<init> ()V <init>
	<init> (I)V <init>
	a (Ljava/lang/Object;I)V addMapping
	b (Ljava/lang/Object;)V add
	a (Ljava/lang/Object;)I getId
	a (I)Ljava/lang/Object; byId
	iterator ()Ljava/util/Iterator; iterator
	b (I)Z contains
	a ()I size
gi net/minecraft/core/MappedRegistry
	a LOGGER
	bf byId
	bg toId
	bh storage
	bi keyStorage
	bj lifecycles
	bk elementsLifecycle
	b randomCache
	bl nextId
	<init> (Lvj;Lcom/mojang/serialization/Lifecycle;)V <init>
	a (Lvj;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; withNameAndId
	a (ILvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerMapping
	a (ILvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Ljava/lang/Object; registerMapping
	a (Lvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; register
	a (Ljava/util/OptionalInt;Lvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerOrOverride
	b (Ljava/lang/Object;)Lvk; getKey
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	a (Ljava/lang/Object;)I getId
	a (Lvj;)Ljava/lang/Object; get
	a (I)Ljava/lang/Object; byId
	d (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	b ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
	iterator ()Ljava/util/Iterator; iterator
	a (Lvk;)Ljava/lang/Object; get
	c ()Ljava/util/Set; keySet
	d ()Ljava/util/Set; entrySet
	e ()Z isEmpty
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	c (Lvk;)Z containsKey
	b (Lvj;)Z containsKey
	a (Lvj;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; networkCodec
	b (Lvj;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; dataPackCodec
	c (Lvj;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; directCodec
	a (Lgi;)Ljava/util/Map; lambda$directCodec$8
	a (Lvj;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lgi; lambda$directCodec$7
	a (Lgi;Lcom/mojang/serialization/Lifecycle;Lvj;Ljava/lang/Object;)V lambda$null$6
	b (Lgi;)Ljava/util/List; lambda$networkCodec$5
	a (Lvj;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lgi; lambda$networkCodec$4
	a (Lvj;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$withNameAndId$3
	a (Lgi$a;)Ljava/lang/Object; lambda$null$2
	b (Lgi$a;)Ljava/lang/Integer; lambda$null$1
	c (Lgi$a;)Lvj; lambda$null$0
	<clinit> ()V <clinit>
gi$a net/minecraft/core/MappedRegistry$RegistryEntry
	a key
	b id
	c value
	<init> (Lvj;ILjava/lang/Object;)V <init>
gj net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lgj; create
	a (ILjava/lang/Object;)Lgj; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lgj; of
	<init> ()V <init>
	<init> (Ljava/util/List;Ljava/lang/Object;)V <init>
	get (I)Ljava/lang/Object; get
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	add (ILjava/lang/Object;)V add
	remove (I)Ljava/lang/Object; remove
	size ()I size
	clear ()V clear
gk net/minecraft/core/Position
	a ()D x
	b ()D y
	c ()D z
gl net/minecraft/core/PositionImpl
	a x
	b y
	c z
	<init> (DDD)V <init>
	a ()D x
	b ()D y
	c ()D z
gm net/minecraft/core/Registry
	c LOGGER
	a LOADERS
	d ROOT_REGISTRY_NAME
	e WRITABLE_REGISTRY
	f REGISTRY
	g SOUND_EVENT_REGISTRY
	h FLUID_REGISTRY
	i MOB_EFFECT_REGISTRY
	j BLOCK_REGISTRY
	k ENCHANTMENT_REGISTRY
	l ENTITY_TYPE_REGISTRY
	m ITEM_REGISTRY
	n POTION_REGISTRY
	o PARTICLE_TYPE_REGISTRY
	p BLOCK_ENTITY_TYPE_REGISTRY
	q MOTIVE_REGISTRY
	r CUSTOM_STAT_REGISTRY
	s CHUNK_STATUS_REGISTRY
	t RULE_TEST_REGISTRY
	u POS_RULE_TEST_REGISTRY
	v MENU_REGISTRY
	w RECIPE_TYPE_REGISTRY
	x RECIPE_SERIALIZER_REGISTRY
	y ATTRIBUTE_REGISTRY
	z STAT_TYPE_REGISTRY
	A VILLAGER_TYPE_REGISTRY
	B VILLAGER_PROFESSION_REGISTRY
	C POINT_OF_INTEREST_TYPE_REGISTRY
	D MEMORY_MODULE_TYPE_REGISTRY
	E SENSOR_TYPE_REGISTRY
	F SCHEDULE_REGISTRY
	G ACTIVITY_REGISTRY
	H LOOT_ENTRY_REGISTRY
	I LOOT_FUNCTION_REGISTRY
	J LOOT_ITEM_REGISTRY
	K DIMENSION_TYPE_REGISTRY
	L DIMENSION_REGISTRY
	M LEVEL_STEM_REGISTRY
	N SOUND_EVENT
	O FLUID
	P MOB_EFFECT
	Q BLOCK
	R ENCHANTMENT
	S ENTITY_TYPE
	T ITEM
	U POTION
	V PARTICLE_TYPE
	W BLOCK_ENTITY_TYPE
	X MOTIVE
	Y CUSTOM_STAT
	Z CHUNK_STATUS
	aa RULE_TEST
	ab POS_RULE_TEST
	ac MENU
	ad RECIPE_TYPE
	ae RECIPE_SERIALIZER
	af ATTRIBUTE
	ag STAT_TYPE
	ah VILLAGER_TYPE
	ai VILLAGER_PROFESSION
	aj POINT_OF_INTEREST_TYPE
	ak MEMORY_MODULE_TYPE
	al SENSOR_TYPE
	am SCHEDULE
	an ACTIVITY
	ao LOOT_POOL_ENTRY_TYPE
	ap LOOT_FUNCTION_TYPE
	aq LOOT_CONDITION_TYPE
	ar NOISE_GENERATOR_SETTINGS_REGISTRY
	as CONFIGURED_SURFACE_BUILDER_REGISTRY
	at CONFIGURED_CARVER_REGISTRY
	au CONFIGURED_FEATURE_REGISTRY
	av CONFIGURED_STRUCTURE_FEATURE_REGISTRY
	aw PROCESSOR_LIST_REGISTRY
	ax TEMPLATE_POOL_REGISTRY
	ay BIOME_REGISTRY
	az SURFACE_BUILDER_REGISTRY
	aA SURFACE_BUILDER
	aB CARVER_REGISTRY
	aC CARVER
	aD FEATURE_REGISTRY
	aE FEATURE
	aF STRUCTURE_FEATURE_REGISTRY
	aG STRUCTURE_FEATURE
	aH STRUCTURE_PIECE_REGISTRY
	aI STRUCTURE_PIECE
	aJ DECORATOR_REGISTRY
	aK DECORATOR
	aL BLOCK_STATE_PROVIDER_TYPE_REGISTRY
	aM BLOCK_PLACER_TYPE_REGISTRY
	aN FOLIAGE_PLACER_TYPE_REGISTRY
	aO TRUNK_PLACER_TYPE_REGISTRY
	aP TREE_DECORATOR_TYPE_REGISTRY
	aQ FEATURE_SIZE_TYPE_REGISTRY
	aR BIOME_SOURCE_REGISTRY
	aS CHUNK_GENERATOR_REGISTRY
	aT STRUCTURE_PROCESSOR_REGISTRY
	aU STRUCTURE_POOL_ELEMENT_REGISTRY
	aV BLOCKSTATE_PROVIDER_TYPES
	aW BLOCK_PLACER_TYPES
	aX FOLIAGE_PLACER_TYPES
	aY TRUNK_PLACER_TYPES
	aZ TREE_DECORATOR_TYPES
	ba FEATURE_SIZE_TYPES
	bb BIOME_SOURCE
	bc CHUNK_GENERATOR
	bd STRUCTURE_PROCESSOR
	be STRUCTURE_POOL_ELEMENT
	b key
	bf lifecycle
	a (Ljava/lang/String;)Lvj; createRegistryKey
	a (Lgs;)V checkRegistry
	a (Lvj;Ljava/util/function/Supplier;)Lgm; registerSimple
	a (Lvj;Ljava/lang/String;Ljava/util/function/Supplier;)Lgb; registerDefaulted
	a (Lvj;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lgm; registerSimple
	a (Lvj;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lgb; registerDefaulted
	a (Lvj;Lgs;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lgs; internalRegister
	<init> (Lvj;Lcom/mojang/serialization/Lifecycle;)V <init>
	f ()Lvj; key
	toString ()Ljava/lang/String; toString
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
	b (Ljava/lang/Object;)Lvk; getKey
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	a (Ljava/lang/Object;)I getId
	a (Lvj;)Ljava/lang/Object; get
	a (Lvk;)Ljava/lang/Object; get
	d (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	b ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
	b (Lvk;)Ljava/util/Optional; getOptional
	c (Lvj;)Ljava/util/Optional; getOptional
	d (Lvj;)Ljava/lang/Object; getOrThrow
	c ()Ljava/util/Set; keySet
	d ()Ljava/util/Set; entrySet
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	g ()Ljava/util/stream/Stream; stream
	c (Lvk;)Z containsKey
	b (Lvj;)Z containsKey
	a (Lgm;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lgm;Lvk;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lgm;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lcom/mojang/serialization/DynamicOps;Lvk;)Ljava/lang/Object; lambda$keys$51
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$decode$50
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$decode$49
	a (Ljava/lang/Number;)Lcom/mojang/serialization/DataResult; lambda$decode$48
	a (Lgs;Lgs;)V lambda$checkRegistry$47
	a (Lvk;Ljava/util/function/Supplier;)V lambda$static$46
	a ()Lcog; lambda$static$45
	e ()Lcsx; lambda$static$44
	h ()Lcom/mojang/serialization/Codec; lambda$static$43
	i ()Lcom/mojang/serialization/Codec; lambda$static$42
	j ()Lcmz; lambda$static$41
	k ()Lcop; lambda$static$40
	l ()Lcoz; lambda$static$39
	m ()Lcnj; lambda$static$38
	n ()Lclj; lambda$static$37
	o ()Lcnr; lambda$static$36
	p ()Lcpz; lambda$static$35
	q ()Lcky; lambda$static$34
	r ()Lckx; lambda$static$33
	s ()Lcji; lambda$static$32
	t ()Lcid; lambda$static$31
	u ()Lctq; lambda$static$30
	v ()Ldbm; lambda$static$29
	w ()Ldah; lambda$static$28
	x ()Lczo; lambda$static$27
	y ()Lbhc; lambda$static$26
	z ()Lbhe; lambda$static$25
	A ()Layz; lambda$static$24
	B ()Laya; lambda$static$23
	C ()Lazo; lambda$static$22
	D ()Lbfj; lambda$static$21
	E ()Lbfl; lambda$static$20
	F ()Ladx; lambda$static$19
	G ()Lard; lambda$static$18
	H ()Lbop; lambda$static$17
	I ()Lboq; lambda$static$16
	J ()Lbjb; lambda$static$15
	K ()Lcsm; lambda$static$14
	L ()Lcss; lambda$static$13
	M ()Lcfx; lambda$static$12
	N ()Lvk; lambda$static$11
	O ()Lbco; lambda$static$10
	P ()Lcch; lambda$static$9
	Q ()Lhg; lambda$static$8
	R ()Lbnq; lambda$static$7
	S ()Lblu; lambda$static$6
	T ()Laqb; lambda$static$5
	U ()Lbpp; lambda$static$4
	V ()Lbul; lambda$static$3
	W ()Lapp; lambda$static$2
	X ()Lcut; lambda$static$1
	Y ()Ladn; lambda$static$0
	<clinit> ()V <clinit>
gn net/minecraft/core/RegistryAccess
	a LOGGER
	b REGISTRIES
	c BUILTIN
	<init> ()V <init>
	a (Lvj;)Ljava/util/Optional; registry
	b (Lvj;)Lgs; registryOrThrow
	a ()Lgm; dimensionTypes
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lvj;Lcom/mojang/serialization/Codec;)V put
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lvj;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V put
	b ()Lgn$b; builtin
	a (Lgn$b;Lvh$b$a;Lgn$a;)V addBuiltinElements
	a (Lgn$b;Lvj;)V copyBuiltin
	a (Lgn$b;Lgm;)V copy
	a (Lgn$b;Lvh;)V load
	a (Lvh;Lgn$b;Lgn$a;)V readRegistry
	a (Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$readRegistry$8
	c (Lvj;)Ljava/lang/IllegalStateException; lambda$readRegistry$7
	a (Lgi;)Lgi; lambda$readRegistry$6
	a (Lgm;)Ljava/lang/IllegalStateException; lambda$copy$5
	d ()Lgn$b; lambda$static$4
	b (Lgn$b;Lvj;)V lambda$null$3
	d (Lvj;)Z lambda$null$2
	e ()Lcom/google/common/collect/ImmutableMap; lambda$static$1
	e (Lvj;)Ljava/lang/IllegalStateException; lambda$registryOrThrow$0
	c ()Ljava/util/Map; access$000
	<clinit> ()V <clinit>
gn$a net/minecraft/core/RegistryAccess$RegistryData
	a key
	b codec
	c networkCodec
	<init> (Lvj;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V <init>
	a ()Lvj; key
	b ()Lcom/mojang/serialization/Codec; codec
	c ()Lcom/mojang/serialization/Codec; networkCodec
	d ()Z sendToClient
gn$b net/minecraft/core/RegistryAccess$RegistryHolder
	a NETWORK_CODEC
	b registries
	d ()Lcom/mojang/serialization/Codec; makeNetworkCodec
	a (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; captureMap
	c (Lvj;)Lcom/mojang/serialization/DataResult; getNetworkCodec
	<init> ()V <init>
	<init> (Ljava/util/Map;)V <init>
	d (Lvj;)Lgi; createRegistry
	a (Lvj;)Ljava/util/Optional; registry
	a (Lgi;)Lgs; lambda$registry$7
	e (Lvj;)Lcom/mojang/serialization/DataResult; lambda$getNetworkCodec$6
	a (Lgn$a;)Lcom/mojang/serialization/Codec; lambda$getNetworkCodec$5
	b (Lgn$b;)Ljava/util/Map; lambda$captureMap$4
	a (Ljava/util/Map$Entry;)Z lambda$null$3
	f (Lvj;)Lcom/mojang/serialization/DataResult; lambda$makeNetworkCodec$2
	a (Lvj;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$null$1
	b (Lgi;)Lcom/mojang/serialization/DataResult; lambda$makeNetworkCodec$0
	a (Lgn$b;)Ljava/util/Map; access$100
	<clinit> ()V <clinit>
go net/minecraft/core/Rotations
	a x
	b y
	c z
	<init> (FFF)V <init>
	<init> (Lmj;)V <init>
	a ()Lmj; save
	equals (Ljava/lang/Object;)Z equals
	b ()F getX
	c ()F getY
	d ()F getZ
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
gp net/minecraft/core/SectionPos
	<init> (III)V <init>
	a (III)Lgp; of
	a (Lfx;)Lgp; of
	a (Lbra;I)Lgp; of
	a (Lapx;)Lgp; of
	a (J)Lgp; of
	a (JLgc;)J offset
	a (JIII)J offset
	a (I)I blockToSectionCoord
	b (I)I sectionRelative
	b (Lfx;)S sectionRelativePos
	a (S)I sectionRelativeX
	b (S)I sectionRelativeY
	c (S)I sectionRelativeZ
	d (S)I relativeToBlockX
	e (S)I relativeToBlockY
	f (S)I relativeToBlockZ
	g (S)Lfx; relativeToBlockPos
	c (I)I sectionToBlockCoord
	b (J)I x
	c (J)I y
	d (J)I z
	a ()I x
	b ()I y
	c ()I z
	d ()I minBlockX
	e ()I minBlockY
	f ()I minBlockZ
	g ()I maxBlockX
	h ()I maxBlockY
	i ()I maxBlockZ
	e (J)J blockToSection
	f (J)J getZeroNode
	p ()Lfx; origin
	q ()Lfx; center
	r ()Lbra; chunk
	b (III)J asLong
	s ()J asLong
	d (III)Lgp; offset
	t ()Ljava/util/stream/Stream; blocksInside
	a (Lgp;I)Ljava/util/stream/Stream; cube
	b (Lbra;I)Ljava/util/stream/Stream; aroundChunk
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	c (III)Lgr; offset
	<init> (IIILgp$1;)V <init>
gp$1 net/minecraft/core/SectionPos$1
	a cursor
	b val$minX
	c val$minY
	d val$minZ
	e val$maxX
	f val$maxY
	g val$maxZ
	<init> (JIIIIIII)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
gq net/minecraft/core/SerializableUUID
	a CODEC
	<init> ()V <init>
	a ([I)Ljava/util/UUID; uuidFromIntArray
	a (Ljava/util/UUID;)[I uuidToIntArray
	a (JJ)[I leastMostToIntArray
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; readUUID
	b (Ljava/util/UUID;)Ljava/util/stream/IntStream; lambda$static$1
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$0
	<clinit> ()V <clinit>
gr net/minecraft/core/Vec3i
	c CODEC
	d ZERO
	a x
	b y
	e z
	<init> (III)V <init>
	<init> (DDD)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	i (Lgr;)I compareTo
	u ()I getX
	v ()I getY
	w ()I getZ
	o (I)V setX
	p (I)V setY
	q (I)V setZ
	b (DDD)Lgr; offset
	c (III)Lgr; offset
	f (Lgr;)Lgr; offset
	e (Lgr;)Lgr; subtract
	n (I)Lgr; multiply
	o ()Lgr; above
	m (I)Lgr; above
	n ()Lgr; below
	l (I)Lgr; below
	m ()Lgr; north
	k (I)Lgr; north
	l ()Lgr; south
	j (I)Lgr; south
	k ()Lgr; west
	i (I)Lgr; west
	j ()Lgr; east
	h (I)Lgr; east
	b (Lgc;)Lgr; relative
	b (Lgc;I)Lgr; relative
	b (Lgc$a;I)Lgr; relative
	d (Lgr;)Lgr; cross
	a (Lgr;D)Z closerThan
	a (Lgk;D)Z closerThan
	j (Lgr;)D distSqr
	a (Lgk;Z)D distSqr
	a (DDDZ)D distSqr
	k (Lgr;)I distManhattan
	a (Lgc$a;)I get
	toString ()Ljava/lang/String; toString
	x ()Ljava/lang/String; toShortString
	compareTo (Ljava/lang/Object;)I compareTo
	a (Lgr;)Ljava/util/stream/IntStream; lambda$static$2
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a ([I)Lgr; lambda$null$0
	<clinit> ()V <clinit>
gs net/minecraft/core/WritableRegistry
	<init> (Lvj;Lcom/mojang/serialization/Lifecycle;)V <init>
	a (ILvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerMapping
	a (Lvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; register
	a (Ljava/util/OptionalInt;Lvj;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerOrOverride
	e ()Z isEmpty
gt net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lfy;)V playSound
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
	a ()F getUncertainty
	b ()F getPower
gu net/minecraft/core/dispenser/BoatDispenseItemBehavior
	b defaultDispenseItemBehavior
	c type
	<init> (Lbhk$b;)V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lfy;)V playSound
gv net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	<init> ()V <init>
	dispense (Lfy;Lbly;)Lbly; dispense
	a (Lfy;Lbly;)Lbly; execute
	a (Lbru;Lbly;ILgc;Lgk;)V spawnItem
	a (Lfy;)V playSound
	a (Lfy;Lgc;)V playAnimation
gw net/minecraft/core/dispenser/DispenseItemBehavior
	a NOOP
	dispense (Lfy;Lbly;)Lbly; dispense
	c ()V bootStrap
	a (Lfy;Lapx;Lgc;)V setEntityPokingOutOfBlock
	a (Lfy;Lbly;)Lbly; lambda$static$0
	<clinit> ()V <clinit>
gw$1 net/minecraft/core/dispenser/DispenseItemBehavior$1
	<init> ()V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
gw$2 net/minecraft/core/dispenser/DispenseItemBehavior$10
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$3 net/minecraft/core/dispenser/DispenseItemBehavior$11
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Laqj;)Z lambda$execute$0
gw$4 net/minecraft/core/dispenser/DispenseItemBehavior$12
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lbay;)Z lambda$execute$0
gw$5 net/minecraft/core/dispenser/DispenseItemBehavior$13
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lbax;)Z lambda$execute$0
gw$6 net/minecraft/core/dispenser/DispenseItemBehavior$14
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lfy;)V playSound
gw$7 net/minecraft/core/dispenser/DispenseItemBehavior$15
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lfy;)V playSound
	a (Lbly;Lbgm;)V lambda$execute$0
gw$8 net/minecraft/core/dispenser/DispenseItemBehavior$16
	b defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$9 net/minecraft/core/dispenser/DispenseItemBehavior$17
	b defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$10 net/minecraft/core/dispenser/DispenseItemBehavior$18
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$11 net/minecraft/core/dispenser/DispenseItemBehavior$19
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$12 net/minecraft/core/dispenser/DispenseItemBehavior$2
	<init> ()V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
gw$13 net/minecraft/core/dispenser/DispenseItemBehavior$20
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$14 net/minecraft/core/dispenser/DispenseItemBehavior$21
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$15 net/minecraft/core/dispenser/DispenseItemBehavior$22
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$16 net/minecraft/core/dispenser/DispenseItemBehavior$23
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$17 net/minecraft/core/dispenser/DispenseItemBehavior$24
	b defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lfy;Lbly;Lbly;)Lbly; takeLiquid
	a (Lfy;Lbly;)Lbly; execute
	a (Lced$a;)Z lambda$execute$0
gw$18 net/minecraft/core/dispenser/DispenseItemBehavior$25
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gw$19 net/minecraft/core/dispenser/DispenseItemBehavior$3
	<init> ()V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
gw$20 net/minecraft/core/dispenser/DispenseItemBehavior$4
	<init> ()V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
	a (Lbly;Lbgr;)V lambda$getProjectile$0
gw$21 net/minecraft/core/dispenser/DispenseItemBehavior$5
	<init> ()V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
	a (Lbly;Lbgn;)V lambda$getProjectile$0
gw$22 net/minecraft/core/dispenser/DispenseItemBehavior$6
	<init> ()V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
	a ()F getUncertainty
	b ()F getPower
	a (Lbly;Lbgt;)V lambda$getProjectile$0
gw$23 net/minecraft/core/dispenser/DispenseItemBehavior$7
	<init> ()V <init>
	dispense (Lfy;Lbly;)Lbly; dispense
gw$23$1 net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	b this$0
	<init> (Lgw$23;)V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
	a ()F getUncertainty
	b ()F getPower
	a (Lbly;Lbgu;)V lambda$getProjectile$0
gw$24 net/minecraft/core/dispenser/DispenseItemBehavior$8
	<init> ()V <init>
	dispense (Lfy;Lbly;)Lbly; dispense
gw$24$1 net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	b this$0
	<init> (Lgw$24;)V <init>
	a (Lbru;Lgk;Lbly;)Lbgj; getProjectile
	a ()F getUncertainty
	b ()F getPower
	a (Lbly;Lbgu;)V lambda$getProjectile$0
gw$25 net/minecraft/core/dispenser/DispenseItemBehavior$9
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
gx net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	b success
	<init> ()V <init>
	a ()Z isSuccess
	a (Z)V setSuccess
	a (Lfy;)V playSound
gy net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Laag;Lfx;)Z tryShearBeehive
	b (Laag;Lfx;)Z tryShearLivingEntity
gz net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
ha net/minecraft/core/dispenser/package-info
hb net/minecraft/core/package-info
hc net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a (Lhg;)Lcom/mojang/serialization/Codec; codec
	<init> (Lhg;Lcee;)V <init>
	a (Lnf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Lhg; getType
	c ()Lcee; getState
	a (Lhc;)Lcee; lambda$codec$1
	a (Lhg;Lcee;)Lhc; lambda$codec$0
	<clinit> ()V <clinit>
hc$1 net/minecraft/core/particles/BlockParticleOption$1
	<init> ()V <init>
	a (Lhg;Lcom/mojang/brigadier/StringReader;)Lhc; fromCommand
	a (Lhg;Lnf;)Lhc; fromNetwork
	b (Lhg;Lnf;)Lhf; fromNetwork
	b (Lhg;Lcom/mojang/brigadier/StringReader;)Lhf; fromCommand
hd net/minecraft/core/particles/DustParticleOptions
	a REDSTONE
	b CODEC
	c DESERIALIZER
	d r
	e g
	f b
	g scale
	<init> (FFFF)V <init>
	a (Lnf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Lhg; getType
	c ()F getR
	d ()F getG
	e ()F getB
	f ()F getScale
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lhd;)Ljava/lang/Float; lambda$null$3
	b (Lhd;)Ljava/lang/Float; lambda$null$2
	c (Lhd;)Ljava/lang/Float; lambda$null$1
	d (Lhd;)Ljava/lang/Float; lambda$null$0
	<clinit> ()V <clinit>
hd$1 net/minecraft/core/particles/DustParticleOptions$1
	<init> ()V <init>
	a (Lhg;Lcom/mojang/brigadier/StringReader;)Lhd; fromCommand
	a (Lhg;Lnf;)Lhd; fromNetwork
	b (Lhg;Lnf;)Lhf; fromNetwork
	b (Lhg;Lcom/mojang/brigadier/StringReader;)Lhf; fromCommand
he net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a (Lhg;)Lcom/mojang/serialization/Codec; codec
	<init> (Lhg;Lbly;)V <init>
	a (Lnf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Lhg; getType
	c ()Lbly; getItem
	a (Lhe;)Lbly; lambda$codec$1
	a (Lhg;Lbly;)Lhe; lambda$codec$0
	<clinit> ()V <clinit>
he$1 net/minecraft/core/particles/ItemParticleOption$1
	<init> ()V <init>
	a (Lhg;Lcom/mojang/brigadier/StringReader;)Lhe; fromCommand
	a (Lhg;Lnf;)Lhe; fromNetwork
	b (Lhg;Lnf;)Lhf; fromNetwork
	b (Lhg;Lcom/mojang/brigadier/StringReader;)Lhf; fromCommand
hf net/minecraft/core/particles/ParticleOptions
	b ()Lhg; getType
	a (Lnf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
hf$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Lhg;Lcom/mojang/brigadier/StringReader;)Lhf; fromCommand
	b (Lhg;Lnf;)Lhf; fromNetwork
hg net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	<init> (ZLhf$a;)V <init>
	c ()Z getOverrideLimiter
	d ()Lhf$a; getDeserializer
	e ()Lcom/mojang/serialization/Codec; codec
hh net/minecraft/core/particles/ParticleTypes
	a AMBIENT_ENTITY_EFFECT
	b ANGRY_VILLAGER
	c BARRIER
	d BLOCK
	e BUBBLE
	f CLOUD
	g CRIT
	h DAMAGE_INDICATOR
	i DRAGON_BREATH
	j DRIPPING_LAVA
	k FALLING_LAVA
	l LANDING_LAVA
	m DRIPPING_WATER
	n FALLING_WATER
	o DUST
	p EFFECT
	q ELDER_GUARDIAN
	r ENCHANTED_HIT
	s ENCHANT
	t END_ROD
	u ENTITY_EFFECT
	v EXPLOSION_EMITTER
	w EXPLOSION
	x FALLING_DUST
	y FIREWORK
	z FISHING
	A FLAME
	B SOUL_FIRE_FLAME
	C SOUL
	D FLASH
	E HAPPY_VILLAGER
	F COMPOSTER
	G HEART
	H INSTANT_EFFECT
	I ITEM
	J ITEM_SLIME
	K ITEM_SNOWBALL
	L LARGE_SMOKE
	M LAVA
	N MYCELIUM
	O NOTE
	P POOF
	Q PORTAL
	R RAIN
	S SMOKE
	T SNEEZE
	U SPIT
	V SQUID_INK
	W SWEEP_ATTACK
	X TOTEM_OF_UNDYING
	Y UNDERWATER
	Z SPLASH
	aa WITCH
	ab BUBBLE_POP
	ac CURRENT_DOWN
	ad BUBBLE_COLUMN_UP
	ae NAUTILUS
	af DOLPHIN
	ag CAMPFIRE_COSY_SMOKE
	ah CAMPFIRE_SIGNAL_SMOKE
	ai DRIPPING_HONEY
	aj FALLING_HONEY
	ak LANDING_HONEY
	al FALLING_NECTAR
	am ASH
	an CRIMSON_SPORE
	ao WARPED_SPORE
	ap DRIPPING_OBSIDIAN_TEAR
	aq FALLING_OBSIDIAN_TEAR
	ar LANDING_OBSIDIAN_TEAR
	as REVERSE_PORTAL
	at WHITE_ASH
	au CODEC
	<init> ()V <init>
	a (Ljava/lang/String;Z)Lhi; register
	a (Ljava/lang/String;Lhf$a;Ljava/util/function/Function;)Lhg; register
	a (Lhg;)Lcom/mojang/serialization/Codec; lambda$static$0
	<clinit> ()V <clinit>
hh$1 net/minecraft/core/particles/ParticleTypes$1
	a val$codec
	<init> (ZLhf$a;Ljava/util/function/Function;)V <init>
	e ()Lcom/mojang/serialization/Codec; codec
hi net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	b codec
	<init> (Z)V <init>
	f ()Lhi; getType
	e ()Lcom/mojang/serialization/Codec; codec
	a (Lnf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Lhg; getType
	<clinit> ()V <clinit>
hi$1 net/minecraft/core/particles/SimpleParticleType$1
	<init> ()V <init>
	a (Lhg;Lcom/mojang/brigadier/StringReader;)Lhi; fromCommand
	a (Lhg;Lnf;)Lhi; fromNetwork
	b (Lhg;Lnf;)Lhf; fromNetwork
	b (Lhg;Lcom/mojang/brigadier/StringReader;)Lhf; fromCommand
hj net/minecraft/core/particles/package-info
hk net/minecraft/data/BuiltinRegistries
	a LOGGER
	k LOADERS
	l WRITABLE_REGISTRY
	b REGISTRY
	c CONFIGURED_SURFACE_BUILDER
	d CONFIGURED_CARVER
	e CONFIGURED_FEATURE
	f CONFIGURED_STRUCTURE_FEATURE
	g PROCESSOR_LIST
	h TEMPLATE_POOL
	i BIOME
	j NOISE_GENERATOR_SETTINGS
	<init> ()V <init>
	a (Lvj;Ljava/util/function/Supplier;)Lgm; registerSimple
	a (Lvj;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lgm; registerSimple
	a (Lvj;Lgs;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lgs; internalRegister
	a (Lgm;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lgm;Lvk;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lgm;ILvj;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a ()V bootstrap
	a (Lvk;Ljava/util/function/Supplier;)V lambda$static$6
	b ()Lbss; lambda$static$5
	c ()Lcsw; lambda$static$4
	d ()Lcit; lambda$static$3
	e ()Lcis; lambda$static$2
	f ()Lchy; lambda$static$1
	g ()Lctd; lambda$static$0
	<clinit> ()V <clinit>
hl net/minecraft/data/DataGenerator
	a LOGGER
	b inputFolders
	c outputFolder
	d providers
	<init> (Ljava/nio/file/Path;Ljava/util/Collection;)V <init>
	a ()Ljava/util/Collection; getInputFolders
	b ()Ljava/nio/file/Path; getOutputFolder
	c ()V run
	a (Lhm;)V addProvider
	<clinit> ()V <clinit>
hm net/minecraft/data/DataProvider
	a SHA1
	a (Lhn;)V run
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/Gson;Lhn;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V save
	<clinit> ()V <clinit>
hn net/minecraft/data/HashCache
	a LOGGER
	b path
	c cachePath
	d hits
	e oldCache
	f newCache
	g keep
	<init> (Ljava/nio/file/Path;Ljava/lang/String;)V <init>
	a ()V purgeStaleAndWrite
	a (Ljava/nio/file/Path;)Ljava/lang/String; getHash
	a (Ljava/nio/file/Path;Ljava/lang/String;)V putNew
	b (Ljava/nio/file/Path;)Z had
	c (Ljava/nio/file/Path;)V keep
	b ()V removeStale
	c ()Ljava/util/stream/Stream; walkOutputFiles
	d (Ljava/nio/file/Path;)Z lambda$walkOutputFiles$4
	e (Ljava/nio/file/Path;)V lambda$removeStale$3
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$purgeStaleAndWrite$2
	b (Ljava/nio/file/Path;Ljava/lang/String;)V lambda$new$1
	f (Ljava/nio/file/Path;)V lambda$new$0
	<clinit> ()V <clinit>
net/minecraft/data/Main net/minecraft/data/Main
	<init> ()V <init>
	main ([Ljava/lang/String;)V main
	a (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lhl; createStandardGenerator
	a (Ljava/lang/String;)Ljava/nio/file/Path; lambda$main$0
ho net/minecraft/data/advancements/AdvancementProvider
	b LOGGER
	c GSON
	d generator
	e tabs
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a (Ljava/nio/file/Path;Ly;)Ljava/nio/file/Path; createPath
	a ()Ljava/lang/String; getName
	a (Ljava/util/Set;Ljava/nio/file/Path;Lhn;Ly;)V lambda$run$0
	<clinit> ()V <clinit>
hp net/minecraft/data/advancements/AdventureAdvancements
	a EXPLORABLE_BIOMES
	b MOBS_TO_KILL
	<init> ()V <init>
	a (Ljava/util/function/Consumer;)V accept
	a (Ly$a;)Ly$a; addMobsToKill
	a (Ly$a;Ljava/util/List;)Ly$a; addBiomes
	accept (Ljava/lang/Object;)V accept
	<clinit> ()V <clinit>
hq net/minecraft/data/advancements/HusbandryAdvancements
	a BREEDABLE_ANIMALS
	b FISH
	c FISH_BUCKETS
	d EDIBLE_ITEMS
	<init> ()V <init>
	a (Ljava/util/function/Consumer;)V accept
	a (Ly$a;)Ly$a; addFood
	b (Ly$a;)Ly$a; addBreedable
	c (Ly$a;)Ly$a; addFishBuckets
	d (Ly$a;)Ly$a; addFish
	e (Ly$a;)Ly$a; addCatVariants
	accept (Ljava/lang/Object;)V accept
	a (Ly$a;Ljava/lang/Integer;Lvk;)V lambda$addCatVariants$0
	<clinit> ()V <clinit>
hr net/minecraft/data/advancements/NetherAdvancements
	a EXPLORABLE_BIOMES
	b DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
	<init> ()V <init>
	a (Ljava/util/function/Consumer;)V accept
	accept (Ljava/lang/Object;)V accept
	<clinit> ()V <clinit>
hs net/minecraft/data/advancements/StoryAdvancements
	<init> ()V <init>
	a (Ljava/util/function/Consumer;)V accept
	accept (Ljava/lang/Object;)V accept
ht net/minecraft/data/advancements/TheEndAdvancements
	<init> ()V <init>
	a (Ljava/util/function/Consumer;)V accept
	accept (Ljava/lang/Object;)V accept
hu net/minecraft/data/advancements/package-info
hv net/minecraft/data/info/BlockListReport
	b GSON
	c generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a ()Ljava/lang/String; getName
	<clinit> ()V <clinit>
hw net/minecraft/data/info/CommandsReport
	b GSON
	c generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a ()Ljava/lang/String; getName
	<clinit> ()V <clinit>
hx net/minecraft/data/info/RegistryDumpReport
	b GSON
	c generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a (Lgm;)Lcom/google/gson/JsonElement; dumpRegistry
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/JsonObject;Lvk;)V lambda$run$0
	<clinit> ()V <clinit>
hy net/minecraft/data/info/package-info
hz net/minecraft/data/loot/BlockLoot
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	d HAS_SHEARS_OR_SILK_TOUCH
	e HAS_NO_SHEARS_OR_SILK_TOUCH
	f EXPLOSION_RESISTANT
	g NORMAL_LEAVES_SAPLING_CHANCES
	h JUNGLE_LEAVES_SAPLING_CHANGES
	i map
	<init> ()V <init>
	a (Lbrt;Ldad;)Ljava/lang/Object; applyExplosionDecay
	a (Lbrt;Ldbe;)Ljava/lang/Object; applyExplosionCondition
	a (Lbrt;)Lcyv$a; createSingleItemTable
	a (Lbul;Ldbl$a;Lczn$a;)Lcyv$a; createSelfDropDispatchTable
	a (Lbul;Lczn$a;)Lcyv$a; createSilkTouchDispatchTable
	b (Lbul;Lczn$a;)Lcyv$a; createShearsDispatchTable
	c (Lbul;Lczn$a;)Lcyv$a; createSilkTouchOrShearsDispatchTable
	b (Lbul;Lbrt;)Lcyv$a; createSingleItemTableWithSilkTouch
	a (Lbrt;Lcyy;)Lcyv$a; createSingleItemTable
	a (Lbul;Lbrt;Lcyy;)Lcyv$a; createSingleItemTableWithSilkTouch
	b (Lbrt;)Lcyv$a; createSilkTouchOnlyTable
	c (Lbrt;)Lcyv$a; createPotFlowerItemTable
	e (Lbul;)Lcyv$a; createSlabItemTable
	a (Lbul;Lcfg;Ljava/lang/Comparable;)Lcyv$a; createSinglePropConditionTable
	f (Lbul;)Lcyv$a; createNameableBlockEntityTable
	g (Lbul;)Lcyv$a; createShulkerBoxDrop
	h (Lbul;)Lcyv$a; createBannerDrop
	i (Lbul;)Lcyv$a; createBeeNestDrop
	j (Lbul;)Lcyv$a; createBeeHiveDrop
	a (Lbul;Lblu;)Lcyv$a; createOreDrop
	c (Lbul;Lbrt;)Lcyv$a; createMushroomBlockDrop
	k (Lbul;)Lcyv$a; createGrassDrops
	b (Lbul;Lblu;)Lcyv$a; createStemDrops
	c (Lbul;Lblu;)Lcyv$a; createAttachedStemDrops
	d (Lbrt;)Lcyv$a; createShearsOnlyDrop
	a (Lbul;Lbul;[F)Lcyv$a; createLeavesDrops
	b (Lbul;Lbul;[F)Lcyv$a; createOakLeavesDrops
	a (Lbul;Lblu;Lblu;Ldbl$a;)Lcyv$a; createCropDrops
	l (Lbul;)Lcyv$a; createDoublePlantShearsDrop
	b (Lbul;Lbul;)Lcyv$a; createDoublePlantWithSeedDrops
	a ()Lcyv$a; noDrop
	a (Ljava/util/function/BiConsumer;)V accept
	c (Lbul;Lbul;)V addNetherVinesDropTable
	a (Lbul;)Lcyv$a; createDoorTable
	b (Lbul;)V dropPottedContents
	a (Lbul;Lbul;)V otherWhenSilkTouch
	a (Lbul;Lbrt;)V dropOther
	c (Lbul;)V dropWhenSilkTouch
	d (Lbul;)V dropSelf
	a (Lbul;Ljava/util/function/Function;)V add
	a (Lbul;Lcyv$a;)V add
	accept (Ljava/lang/Object;)V accept
	m (Lbul;)Lcyv$a; lambda$dropPottedContents$73
	n (Lbul;)Lcyv$a; lambda$accept$72
	o (Lbul;)Lcyv$a; lambda$accept$71
	p (Lbul;)Lcyv$a; lambda$accept$70
	q (Lbul;)Lcyv$a; lambda$accept$69
	r (Lbul;)Lcyv$a; lambda$accept$68
	s (Lbul;)Lcyv$a; lambda$accept$67
	t (Lbul;)Lcyv$a; lambda$accept$66
	u (Lbul;)Lcyv$a; lambda$accept$65
	v (Lbul;)Lcyv$a; lambda$accept$64
	w (Lbul;)Lcyv$a; lambda$accept$63
	x (Lbul;)Lcyv$a; lambda$accept$62
	y (Lbul;)Lcyv$a; lambda$accept$61
	z (Lbul;)Lcyv$a; lambda$accept$60
	A (Lbul;)Lcyv$a; lambda$accept$59
	B (Lbul;)Lcyv$a; lambda$accept$58
	C (Lbul;)Lcyv$a; lambda$accept$57
	D (Lbul;)Lcyv$a; lambda$accept$56
	E (Lbul;)Lcyv$a; lambda$accept$55
	F (Lbul;)Lcyv$a; lambda$accept$54
	G (Lbul;)Lcyv$a; lambda$accept$53
	H (Lbul;)Lcyv$a; lambda$accept$52
	I (Lbul;)Lcyv$a; lambda$accept$51
	J (Lbul;)Lcyv$a; lambda$accept$50
	K (Lbul;)Lcyv$a; lambda$accept$49
	L (Lbul;)Lcyv$a; lambda$accept$48
	M (Lbul;)Lcyv$a; lambda$accept$47
	N (Lbul;)Lcyv$a; lambda$accept$46
	O (Lbul;)Lcyv$a; lambda$accept$45
	P (Lbul;)Lcyv$a; lambda$accept$44
	Q (Lbul;)Lcyv$a; lambda$accept$43
	R (Lbul;)Lcyv$a; lambda$accept$42
	S (Lbul;)Lcyv$a; lambda$accept$41
	T (Lbul;)Lcyv$a; lambda$accept$40
	U (Lbul;)Lcyv$a; lambda$accept$39
	V (Lbul;)Lcyv$a; lambda$accept$38
	W (Lbul;)Lcyv$a; lambda$accept$37
	X (Lbul;)Lcyv$a; lambda$accept$36
	Y (Lbul;)Lcyv$a; lambda$accept$35
	Z (Lbul;)Lcyv$a; lambda$accept$34
	aa (Lbul;)Lcyv$a; lambda$accept$33
	ab (Lbul;)Lcyv$a; lambda$accept$32
	ac (Lbul;)Lcyv$a; lambda$accept$31
	ad (Lbul;)Lcyv$a; lambda$accept$30
	ae (Lbul;)Lcyv$a; lambda$accept$29
	af (Lbul;)Lcyv$a; lambda$accept$28
	ag (Lbul;)Lcyv$a; lambda$accept$27
	ah (Lbul;)Lcyv$a; lambda$accept$26
	ai (Lbul;)Lcyv$a; lambda$accept$25
	aj (Lbul;)Lcyv$a; lambda$accept$24
	ak (Lbul;)Lcyv$a; lambda$accept$23
	al (Lbul;)Lcyv$a; lambda$accept$22
	am (Lbul;)Lcyv$a; lambda$accept$21
	an (Lbul;)Lcyv$a; lambda$accept$20
	ao (Lbul;)Lcyv$a; lambda$accept$19
	ap (Lbul;)Lcyv$a; lambda$accept$18
	aq (Lbul;)Lcyv$a; lambda$accept$17
	ar (Lbul;)Lcyv$a; lambda$accept$16
	as (Lbul;)Lcyv$a; lambda$accept$15
	at (Lbul;)Lcyv$a; lambda$accept$14
	au (Lbul;)Lcyv$a; lambda$accept$13
	av (Lbul;)Lcyv$a; lambda$accept$12
	aw (Lbul;)Lcyv$a; lambda$accept$11
	ax (Lbul;)Lcyv$a; lambda$accept$10
	ay (Lbul;)Lcyv$a; lambda$accept$9
	az (Lbul;)Lcyv$a; lambda$accept$8
	aA (Lbul;)Lcyv$a; lambda$accept$7
	aB (Lbul;)Lcyv$a; lambda$accept$6
	aC (Lbul;)Lcyv$a; lambda$accept$5
	aD (Lbul;)Lcyv$a; lambda$accept$4
	aE (Lbul;)Lcyv$a; lambda$accept$3
	aF (Lbul;)Lcyv$a; lambda$accept$2
	aG (Lbul;)Lcyv$a; lambda$accept$1
	aH (Lbul;)Lcyv$a; lambda$accept$0
	<clinit> ()V <clinit>
ia net/minecraft/data/loot/ChestLoot
	<init> ()V <init>
	a (Ljava/util/function/BiConsumer;)V accept
	accept (Ljava/lang/Object;)V accept
ib net/minecraft/data/loot/EntityLoot
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c map
	<init> ()V <init>
	a (Lbrt;)Lcyv$a; createSheepTable
	a (Ljava/util/function/BiConsumer;)V accept
	a (Laqb;Lcyv$a;)V add
	a (Lvk;Lcyv$a;)V add
	accept (Ljava/lang/Object;)V accept
	a (Lmd;)V lambda$accept$0
	<clinit> ()V <clinit>
ic net/minecraft/data/loot/FishingLoot
	a IN_JUNGLE
	b IN_JUNGLE_HILLS
	c IN_JUNGLE_EDGE
	d IN_BAMBOO_JUNGLE
	e IN_MODIFIED_JUNGLE
	f IN_MODIFIED_JUNGLE_EDGE
	g IN_BAMBOO_JUNGLE_HILLS
	<init> ()V <init>
	a (Ljava/util/function/BiConsumer;)V accept
	accept (Ljava/lang/Object;)V accept
	a (Lmd;)V lambda$accept$0
	<clinit> ()V <clinit>
id net/minecraft/data/loot/GiftLoot
	<init> ()V <init>
	a (Ljava/util/function/BiConsumer;)V accept
	accept (Ljava/lang/Object;)V accept
	a (Lmd;)V lambda$accept$12
	b (Lmd;)V lambda$accept$11
	c (Lmd;)V lambda$accept$10
	d (Lmd;)V lambda$accept$9
	e (Lmd;)V lambda$accept$8
	f (Lmd;)V lambda$accept$7
	g (Lmd;)V lambda$accept$6
	h (Lmd;)V lambda$accept$5
	i (Lmd;)V lambda$accept$4
	j (Lmd;)V lambda$accept$3
	k (Lmd;)V lambda$accept$2
	l (Lmd;)V lambda$accept$1
	m (Lmd;)V lambda$accept$0
ie net/minecraft/data/loot/LootTableProvider
	b LOGGER
	c GSON
	d generator
	e subProviders
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a (Ljava/nio/file/Path;Lvk;)Ljava/nio/file/Path; createPath
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lhn;Lvk;Lcyv;)V lambda$run$5
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$run$4
	a (Lczd;Lvk;Lcyv;)V lambda$run$3
	a (Lvk;)Ldbl; lambda$run$2
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$run$1
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;Lvk;Lcyv$a;)V lambda$null$0
	<clinit> ()V <clinit>
ig net/minecraft/data/loot/PiglinBarterLoot
	<init> ()V <init>
	a (Ljava/util/function/BiConsumer;)V accept
	accept (Ljava/lang/Object;)V accept
	a (Lmd;)V lambda$accept$2
	b (Lmd;)V lambda$accept$1
	c (Lmd;)V lambda$accept$0
ih net/minecraft/data/loot/package-info
ii net/minecraft/data/models/BlockModelGenerators
	a blockStateOutput
	b modelOutput
	c skippedAutoModelsOutput
	<init> (Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V <init>
	a (Lbul;)V skipAutoItemBlock
	c (Lbul;Lvk;)V delegateItemModel
	a (Lblu;Lvk;)V delegateItemModel
	a (Lblu;)V createSimpleFlatItemModel
	b (Lbul;)V createSimpleFlatItemModel
	a (Lbul;Ljava/lang/String;)V createSimpleFlatItemModel
	b ()Lip; createHorizontalFacingDispatch
	c ()Lip; createHorizontalFacingDispatchAlt
	d ()Lip; createTorchHorizontalDispatch
	e ()Lip; createFacingDispatch
	d (Lbul;Lvk;)Lio; createRotatedVariant
	a (Lvk;)[Lir; createRotatedVariants
	e (Lbul;Lvk;Lvk;)Lio; createRotatedVariant
	a (Lcev;Lvk;Lvk;)Lip; createBooleanModelDispatch
	c (Lbul;)V createRotatedMirroredVariantBlock
	d (Lbul;)V createRotatedVariantBlock
	f (Lbul;Lvk;Lvk;)Lil; createButton
	a (Lip$d;Lcfa;Lvk;Lvk;)Lip$d; configureDoorHalf
	b (Lbul;Lvk;Lvk;Lvk;Lvk;)Lil; createDoor
	g (Lbul;Lvk;Lvk;)Lil; createFence
	d (Lbul;Lvk;Lvk;Lvk;)Lil; createWall
	c (Lbul;Lvk;Lvk;Lvk;Lvk;)Lil; createFenceGate
	e (Lbul;Lvk;Lvk;Lvk;)Lil; createStairs
	f (Lbul;Lvk;Lvk;Lvk;)Lil; createOrientableTrapdoor
	g (Lbul;Lvk;Lvk;Lvk;)Lil; createTrapdoor
	e (Lbul;Lvk;)Lio; createSimpleBlock
	f ()Lip; createRotatedPillar
	f (Lbul;Lvk;)Lil; createAxisAlignedPillarBlock
	g (Lbul;Lvk;)V createAxisAlignedPillarBlockCustomModel
	a (Lbul;Ljb$a;)V createAxisAlignedPillarBlock
	b (Lbul;Ljb$a;)V createHorizontallyRotatedBlock
	h (Lbul;Lvk;Lvk;)Lil; createRotatedPillarWithHorizontalVariant
	a (Lbul;Ljb$a;Ljb$a;)V createRotatedPillarWithHorizontalVariant
	a (Lbul;Ljava/lang/String;Lix;Ljava/util/function/Function;)Lvk; createSuffixedVariant
	i (Lbul;Lvk;Lvk;)Lil; createPressurePlate
	h (Lbul;Lvk;Lvk;Lvk;)Lil; createSlab
	e (Lbul;)V createTrivialCube
	c (Lbul;Ljb$a;)V createTrivialBlock
	a (Lbul;Liz;Lix;)V createTrivialBlock
	a (Lbul;Ljb;)Lii$b; family
	d (Lbul;Ljb$a;)Lii$b; family
	f (Lbul;)Lii$b; family
	a (Liz;)Lii$b; family
	g (Lbul;)V createDoor
	h (Lbul;)V createOrientableTrapdoor
	i (Lbul;)V createTrapdoor
	j (Lbul;)Lii$d; woodProvider
	k (Lbul;)V createNonTemplateModelBlock
	a (Lbul;Lbul;)V createNonTemplateModelBlock
	a (Lbul;Lii$c;)V createCrossBlockWithDefaultItem
	a (Lbul;Lii$c;Liz;)V createCrossBlockWithDefaultItem
	b (Lbul;Lii$c;)V createCrossBlock
	b (Lbul;Lii$c;Liz;)V createCrossBlock
	a (Lbul;Lbul;Lii$c;)V createPlant
	b (Lbul;Lbul;)V createCoralFans
	c (Lbul;Lbul;)V createStems
	a (Lbul;Lbul;Lbul;Lbul;Lbul;Lbul;Lbul;Lbul;)V createCoral
	c (Lbul;Lii$c;)V createDoublePlant
	g ()V createSunflower
	h ()V createTallSeagrass
	j (Lbul;Lvk;Lvk;)V createDoubleBlock
	l (Lbul;)V createPassiveRail
	m (Lbul;)V createActiveRail
	a (Lvk;Lbul;)Lii$a; blockEntityModels
	d (Lbul;Lbul;)Lii$a; blockEntityModels
	a (Lbul;Lblu;)V createAirLikeBlock
	h (Lbul;Lvk;)V createAirLikeBlock
	e (Lbul;Lbul;)V createWoolBlocks
	a (Ljb$a;[Lbul;)V createColoredBlockWithRandomRotations
	b (Ljb$a;[Lbul;)V createColoredBlockWithStateRotations
	f (Lbul;Lbul;)V createGlassBlocks
	n (Lbul;)V createCommandBlock
	o (Lbul;)V createAnvil
	a (I)Ljava/util/List; createBambooModels
	i ()V createBamboo
	j ()Lip; createColumnWithFacing
	k ()V createBarrel
	a (Lcfg;Ljava/lang/Comparable;Lvk;Lvk;)Lip; createEmptyOrFullDispatch
	a (Lbul;Ljava/util/function/Function;)V createBeeNest
	a (Lbul;Lcfg;[I)V createCropBlock
	l ()V createBell
	m ()V createGrindstone
	e (Lbul;Ljb$a;)V createFurnace
	a ([Lbul;)V createCampfires
	n ()V createBookshelf
	o ()V createRedstoneWire
	p ()V createComparator
	q ()V createSmoothStoneSlab
	r ()V createBrewingStand
	p (Lbul;)V createMushroomBlock
	s ()V createCakeBlock
	t ()V createCartographyTable
	u ()V createSmithingTable
	a (Lbul;Lbul;Ljava/util/function/BiFunction;)V createCraftingTableLike
	v ()V createPumpkins
	a (Lbul;Liz;)V createPumpkinVariant
	w ()V createCauldron
	g (Lbul;Lbul;)V createChiseledSandsone
	x ()V createChorusFlower
	q (Lbul;)V createDispenserBlock
	y ()V createEndPortalFrame
	z ()V createChorusPlant
	A ()V createComposter
	r (Lbul;)V createNyliumBlock
	B ()V createDaylightDetector
	s (Lbul;)V createRotatableColumn
	C ()V createFarmland
	t (Lbul;)Ljava/util/List; createFloorFireModels
	u (Lbul;)Ljava/util/List; createSideFireModels
	v (Lbul;)Ljava/util/List; createTopFireModels
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; wrapModels
	D ()V createFire
	E ()V createSoulFire
	w (Lbul;)V createLantern
	F ()V createFrostedIce
	G ()V createGrassBlocks
	a (Lbul;Lvk;Lir;)V createGrassLikeBlock
	H ()V createCocoa
	I ()V createGrassPath
	h (Lbul;Lbul;)V createWeightedPressurePlate
	J ()V createHopper
	i (Lbul;Lbul;)V copyModel
	K ()V createIronBars
	x (Lbul;)V createNonTemplateHorizontalBlock
	L ()V createLever
	M ()V createLilyPad
	N ()V createNetherPortalBlock
	O ()V createNetherrack
	P ()V createObserver
	Q ()V createPistons
	a (Lbul;Lvk;Liz;)V createPistonVariant
	R ()V createPistonHeads
	S ()V createScaffolding
	T ()V createRedstoneLamp
	j (Lbul;Lbul;)V createNormalTorch
	U ()V createRedstoneTorch
	V ()V createRepeater
	W ()V createSeaPickle
	X ()V createSnowBlocks
	Y ()V createStonecutter
	Z ()V createStructureBlock
	aa ()V createSweetBerryBush
	ab ()V createTripwire
	ac ()V createTripwireHook
	a (ILjava/lang/String;Liz;)Lvk; createTurtleEggModel
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Lvk; createTurtleEggModel
	ad ()V createTurtleEgg
	ae ()V createVine
	af ()V createMagmaBlock
	y (Lbul;)V createShulkerBox
	b (Lbul;Lbul;Lii$c;)V createGrowingPlant
	k (Lbul;Lbul;)V createBedItem
	ag ()V createInfestedStone
	l (Lbul;Lbul;)V createNetherRoots
	ah ()V createRespawnAnchor
	a (Lge;Lir;)Lir; applyRotation
	ai ()V createJigsaw
	a ()V run
	a (Lbmx;)V lambda$run$36
	b (Liz;)V lambda$run$35
	c (Liz;)V lambda$run$34
	d (Liz;)Lvk; lambda$run$33
	e (Liz;)V lambda$run$32
	a (Lge;)Lir; lambda$createJigsaw$31
	a ([Lvk;Ljava/lang/Integer;)Lir; lambda$createRespawnAnchor$30
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List; lambda$createTurtleEgg$29
	a (Ljava/lang/Boolean;Ljava/lang/Boolean;)Lir; lambda$createTripwireHook$28
	a (Ljava/lang/Integer;)Lir; lambda$createSweetBerryBush$27
	a (Lcfl;)Lir; lambda$createStructureBlock$26
	a (Lvk;Ljava/lang/Integer;)Lir; lambda$createSnowBlocks$25
	a (Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lir; lambda$createRepeater$24
	a (Lvk;Liz;)V lambda$createGrassBlocks$23
	b (Lvk;Liz;)V lambda$createGrassBlocks$22
	a (Lir;)Lir; lambda$createSoulFire$21
	b (Lir;)Lir; lambda$createSoulFire$20
	c (Lir;)Lir; lambda$createSoulFire$19
	d (Lir;)Lir; lambda$createSoulFire$18
	e (Lir;)Lir; lambda$createSoulFire$17
	f (Lir;)Lir; lambda$createFire$16
	g (Lir;)Lir; lambda$createFire$15
	h (Lir;)Lir; lambda$createFire$14
	i (Lir;)Lir; lambda$createFire$13
	j (Lir;)Lir; lambda$createFire$12
	k (Lir;)Lir; lambda$createFire$11
	b (Lvk;)Lir; lambda$wrapModels$10
	a (Liz;Lvk;)Liz; lambda$createChorusFlower$9
	c (Lvk;Liz;)V lambda$createFurnace$8
	a ([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lbul;Ljava/lang/Integer;)Lir; lambda$createCropBlock$7
	a (Lbul;II)Lvk; lambda$null$6
	a (Ljava/lang/Comparable;Lir;Lir;Ljava/lang/Comparable;)Lir; lambda$createEmptyOrFullDispatch$5
	d (Lvk;Liz;)V lambda$createBarrel$4
	a (Ljava/lang/String;I)Lir; lambda$createBambooModels$3
	b (Liz;Lvk;)Liz; lambda$createCommandBlock$2
	a (Lvk;Lvk;Lvk;Lvk;Lvk;Lvk;Ljava/lang/Boolean;Lcfh;)Lir; lambda$createActiveRail$1
	a (Lbul;Liz;Ljava/lang/Integer;)Lir; lambda$createStems$0
	a (Lii;)Ljava/util/function/BiConsumer; access$000
	a (Lbul;Lvk;)Lio; access$100
	b (Lii;)Ljava/util/function/Consumer; access$200
	a (Lbul;Lvk;Lvk;)Lil; access$300
	a (Lii;Lbul;Lvk;)V access$400
	a (Lbul;Lvk;Lvk;Lvk;)Lil; access$500
	b (Lbul;Lvk;Lvk;)Lil; access$600
	a (Lbul;Lvk;Lvk;Lvk;Lvk;)Lil; access$700
	c (Lbul;Lvk;Lvk;)Lil; access$800
	a (Lii;Lblu;)V access$900
	a (Lii;Lbul;)V access$1000
	b (Lbul;Lvk;Lvk;Lvk;)Lil; access$1100
	c (Lbul;Lvk;Lvk;Lvk;)Lil; access$1200
	b (Lbul;Lvk;)Lil; access$1300
	d (Lbul;Lvk;Lvk;)Lil; access$1400
ii$1 net/minecraft/data/models/BlockModelGenerators$1
	a $SwitchMap$net$minecraft$core$FrontAndTop
	b $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	<clinit> ()V <clinit>
ii$a net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	b baseModel
	a this$0
	<init> (Lii;Lvk;Lbul;)V <init>
	a ([Lbul;)Lii$a; create
	b ([Lbul;)Lii$a; createWithoutBlockItem
	a (Lix;[Lbul;)Lii$a; createWithCustomBlockItemModel
ii$b net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	b mapping
	c fullBlock
	a this$0
	<init> (Lii;Liz;)V <init>
	a (Lbul;Lix;)Lii$b; fullBlock
	a (Ljava/util/function/Function;)Lii$b; fullBlock
	a (Lbul;)Lii$b; button
	b (Lbul;)Lii$b; wall
	c (Lbul;)Lii$b; fence
	d (Lbul;)Lii$b; fenceGate
	e (Lbul;)Lii$b; pressurePlate
	a (Lbul;Lbul;)Lii$b; sign
	f (Lbul;)Lii$b; slab
	g (Lbul;)Lii$b; stairs
ii$c net/minecraft/data/models/BlockModelGenerators$TintState
	a TINTED
	b NOT_TINTED
	c $VALUES
	values ()[Lii$c; values
	valueOf (Ljava/lang/String;)Lii$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lix; getCross
	b ()Lix; getCrossPot
	<clinit> ()V <clinit>
ii$d net/minecraft/data/models/BlockModelGenerators$WoodProvider
	b logMapping
	a this$0
	<init> (Lii;Liz;)V <init>
	a (Lbul;)Lii$d; wood
	b (Lbul;)Lii$d; log
	c (Lbul;)Lii$d; logWithHorizontal
ij net/minecraft/data/models/ItemModelGenerators
	a output
	<init> (Ljava/util/function/BiConsumer;)V <init>
	a (Lblu;Lix;)V generateFlatItem
	a (Lblu;Ljava/lang/String;Lix;)V generateFlatItem
	a (Lblu;Lblu;Lix;)V generateFlatItem
	a ()V run
ik net/minecraft/data/models/ModelProvider
	b LOGGER
	c GSON
	d generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a (Lhn;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V saveCollection
	a (Ljava/nio/file/Path;Lbul;)Ljava/nio/file/Path; createBlockStatePath
	a (Ljava/nio/file/Path;Lvk;)Ljava/nio/file/Path; createModelPath
	a ()Ljava/lang/String; getName
	a (Ljava/util/function/BiFunction;Ljava/nio/file/Path;Lhn;Ljava/lang/Object;Ljava/util/function/Supplier;)V lambda$saveCollection$4
	a (Ljava/util/Set;Ljava/util/Map;Lbul;)V lambda$run$3
	a (Ljava/util/Map;Lbul;)Z lambda$run$2
	a (Ljava/util/Map;Lvk;Ljava/util/function/Supplier;)V lambda$run$1
	a (Ljava/util/Map;Lil;)V lambda$run$0
	<clinit> ()V <clinit>
il net/minecraft/data/models/blockstates/BlockStateGenerator
	a ()Lbul; getBlock
im net/minecraft/data/models/blockstates/Condition
	a (Lcef;)V validate
	a ()Lim$c; condition
	a ([Lim;)Lim; and
	b ([Lim;)Lim; or
im$1 net/minecraft/data/models/blockstates/Condition$1
im$a net/minecraft/data/models/blockstates/Condition$CompositeCondition
	a operation
	b subconditions
	<init> (Lim$b;Ljava/util/List;)V <init>
	a (Lcef;)V validate
	b ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
	a (Lcef;Lim;)V lambda$validate$0
	<init> (Lim$b;Ljava/util/List;Lim$1;)V <init>
im$b net/minecraft/data/models/blockstates/Condition$Operation
	a AND
	b OR
	c id
	d $VALUES
	values ()[Lim$b; values
	valueOf (Ljava/lang/String;)Lim$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lim$b;)Ljava/lang/String; access$000
	<clinit> ()V <clinit>
im$c net/minecraft/data/models/blockstates/Condition$TerminalCondition
	a terms
	<init> ()V <init>
	a (Lcfg;Ljava/util/stream/Stream;)Ljava/lang/String; joinValues
	c (Lcfg;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; getTerm
	a (Lcfg;Ljava/lang/String;)V putValue
	a (Lcfg;Ljava/lang/Comparable;)Lim$c; term
	a (Lcfg;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lim$c; term
	b (Lcfg;Ljava/lang/Comparable;)Lim$c; negatedTerm
	b (Lcfg;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lim$c; negatedTerm
	b ()Lcom/google/gson/JsonElement; get
	a (Lcef;)V validate
	get ()Ljava/lang/Object; get
	a (Lcef;Lcfg;)Z lambda$validate$1
	a (Lcom/google/gson/JsonObject;Lcfg;Ljava/lang/String;)V lambda$get$0
in net/minecraft/data/models/blockstates/MultiPartGenerator
	a block
	b parts
	<init> (Lbul;)V <init>
	a ()Lbul; getBlock
	a (Lbul;)Lin; multiPart
	a (Ljava/util/List;)Lin; with
	a (Lir;)Lin; with
	a (Lim;Ljava/util/List;)Lin; with
	a (Lim;[Lir;)Lin; with
	a (Lim;Lir;)Lin; with
	b ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
	a (Lcef;Lin$b;)V lambda$get$0
in$1 net/minecraft/data/models/blockstates/MultiPartGenerator$1
in$a net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	a condition
	<init> (Lim;Ljava/util/List;)V <init>
	a (Lcef;)V validate
	a (Lcom/google/gson/JsonObject;)V decorate
	<init> (Lim;Ljava/util/List;Lin$1;)V <init>
in$b net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	a variants
	<init> (Ljava/util/List;)V <init>
	a (Lcef;)V validate
	a (Lcom/google/gson/JsonObject;)V decorate
	a ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
	<init> (Ljava/util/List;Lin$1;)V <init>
io net/minecraft/data/models/blockstates/MultiVariantGenerator
	a block
	b baseVariants
	c seenProperties
	d declaredPropertySets
	<init> (Lbul;Ljava/util/List;)V <init>
	a (Lip;)Lio; with
	b ()Lcom/google/gson/JsonElement; get
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; mergeVariants
	a ()Lbul; getBlock
	a (Lbul;)Lio; multiVariant
	a (Lbul;Lir;)Lio; multiVariant
	a (Lbul;[Lir;)Lio; multiVariant
	get ()Ljava/lang/Object; get
	a (Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Lir;)V lambda$mergeVariants$6
	a (Lcom/google/common/collect/ImmutableList$Builder;Lir;Lir;)V lambda$null$5
	a (Ljava/util/Map;Lcom/google/gson/JsonObject;)V lambda$get$4
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$get$3
	b (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream; lambda$get$2
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcfg;)V lambda$with$0
ip net/minecraft/data/models/blockstates/PropertyDispatch
	a values
	<init> ()V <init>
	a (Liq;Ljava/util/List;)V putValue
	a ()Ljava/util/Map; getEntries
	c ()V verifyComplete
	b ()Ljava/util/List; getDefinedProperties
	a (Lcfg;)Lip$a; property
	a (Lcfg;Lcfg;)Lip$b; properties
	a (Lcfg;Lcfg;Lcfg;)Lip$c; properties
	a (Lcfg;Lcfg;Lcfg;Lcfg;)Lip$d; properties
	a (Lcfg;Lcfg;Lcfg;Lcfg;Lcfg;)Lip$e; properties
	a (Liq;)Z lambda$verifyComplete$1
	a (Lcfg;Liq;)Ljava/util/stream/Stream; lambda$verifyComplete$0
ip$1 net/minecraft/data/models/blockstates/PropertyDispatch$1
ip$a net/minecraft/data/models/blockstates/PropertyDispatch$C1
	a property1
	<init> (Lcfg;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/util/List;)Lip$a; select
	a (Ljava/lang/Comparable;Lir;)Lip$a; select
	a (Ljava/util/function/Function;)Lip; generate
	b (Ljava/util/function/Function;)Lip; generateList
	a (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generateList$1
	b (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generate$0
	<init> (Lcfg;Lip$1;)V <init>
ip$b net/minecraft/data/models/blockstates/PropertyDispatch$C2
	a property1
	b property2
	<init> (Lcfg;Lcfg;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$b; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$b; select
	a (Ljava/util/function/BiFunction;)Lip; generate
	b (Ljava/util/function/BiFunction;)Lip; generateList
	a (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generateList$3
	a (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$null$2
	b (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generate$1
	b (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$null$0
	<init> (Lcfg;Lcfg;Lip$1;)V <init>
ip$c net/minecraft/data/models/blockstates/PropertyDispatch$C3
	a property1
	b property2
	c property3
	<init> (Lcfg;Lcfg;Lcfg;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$c; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$c; select
	a (Lip$h;)Lip; generate
	b (Lip$h;)Lip; generateList
	a (Lip$h;Ljava/lang/Comparable;)V lambda$generateList$5
	a (Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$4
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$3
	b (Lip$h;Ljava/lang/Comparable;)V lambda$generate$2
	b (Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$0
	<init> (Lcfg;Lcfg;Lcfg;Lip$1;)V <init>
ip$d net/minecraft/data/models/blockstates/PropertyDispatch$C4
	a property1
	b property2
	c property3
	d property4
	<init> (Lcfg;Lcfg;Lcfg;Lcfg;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$d; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$d; select
	a (Lip$g;)Lip; generate
	b (Lip$g;)Lip; generateList
	a (Lip$g;Ljava/lang/Comparable;)V lambda$generateList$7
	a (Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$6
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$5
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$4
	b (Lip$g;Ljava/lang/Comparable;)V lambda$generate$3
	b (Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$2
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$0
	<init> (Lcfg;Lcfg;Lcfg;Lcfg;Lip$1;)V <init>
ip$e net/minecraft/data/models/blockstates/PropertyDispatch$C5
	a property1
	b property2
	c property3
	d property4
	e property5
	<init> (Lcfg;Lcfg;Lcfg;Lcfg;Lcfg;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$e; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$e; select
	a (Lip$f;)Lip; generate
	b (Lip$f;)Lip; generateList
	a (Lip$f;Ljava/lang/Comparable;)V lambda$generateList$9
	a (Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$8
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$7
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$6
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$5
	b (Lip$f;Ljava/lang/Comparable;)V lambda$generate$4
	b (Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$3
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$2
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$0
	<init> (Lcfg;Lcfg;Lcfg;Lcfg;Lcfg;Lip$1;)V <init>
ip$f net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
ip$g net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
ip$h net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
iq net/minecraft/data/models/blockstates/Selector
	a EMPTY
	b COMPARE_BY_NAME
	c values
	a (Lcfg$a;)Liq; extend
	a (Liq;)Liq; extend
	<init> (Ljava/util/List;)V <init>
	a ()Liq; empty
	a ([Lcfg$a;)Liq; of
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	b ()Ljava/lang/String; getKey
	toString ()Ljava/lang/String; toString
	b (Lcfg$a;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
ir net/minecraft/data/models/blockstates/Variant
	a values
	<init> ()V <init>
	a (Lit;Ljava/lang/Object;)Lir; with
	a ()Lir; variant
	a (Lir;Lir;)Lir; merge
	b ()Lcom/google/gson/JsonElement; get
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; convertList
	get ()Ljava/lang/Object; get
	a (Lcom/google/gson/JsonArray;Lir;)V lambda$convertList$1
	a (Lcom/google/gson/JsonObject;Lit$a;)V lambda$get$0
is net/minecraft/data/models/blockstates/VariantProperties
	a X_ROT
	b Y_ROT
	c MODEL
	d UV_LOCK
	e WEIGHT
	<init> ()V <init>
	a (Lvk;)Lcom/google/gson/JsonElement; lambda$static$2
	a (Lis$a;)Lcom/google/gson/JsonElement; lambda$static$1
	b (Lis$a;)Lcom/google/gson/JsonElement; lambda$static$0
	<clinit> ()V <clinit>
is$a net/minecraft/data/models/blockstates/VariantProperties$Rotation
	a R0
	b R90
	c R180
	d R270
	e value
	f $VALUES
	values ()[Lis$a; values
	valueOf (Ljava/lang/String;)Lis$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a (Lis$a;)I access$000
	<clinit> ()V <clinit>
it net/minecraft/data/models/blockstates/VariantProperty
	a key
	b serializer
	<init> (Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/Object;)Lit$a; withValue
	toString ()Ljava/lang/String; toString
	a (Lit;)Ljava/lang/String; access$000
	b (Lit;)Ljava/util/function/Function; access$100
it$a net/minecraft/data/models/blockstates/VariantProperty$Value
	b value
	a this$0
	<init> (Lit;Ljava/lang/Object;)V <init>
	a ()Lit; getKey
	a (Lcom/google/gson/JsonObject;)V addToVariant
	toString ()Ljava/lang/String; toString
iu net/minecraft/data/models/blockstates/package-info
iv net/minecraft/data/models/model/DelegatedModel
	a parent
	<init> (Lvk;)V <init>
	a ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
iw net/minecraft/data/models/model/ModelLocationUtils
	<init> ()V <init>
	a (Ljava/lang/String;)Lvk; decorateBlockModelLocation
	b (Ljava/lang/String;)Lvk; decorateItemModelLocation
	a (Lbul;Ljava/lang/String;)Lvk; getModelLocation
	a (Lbul;)Lvk; getModelLocation
	a (Lblu;)Lvk; getModelLocation
	a (Lblu;Ljava/lang/String;)Lvk; getModelLocation
ix net/minecraft/data/models/model/ModelTemplate
	a model
	b requiredSlots
	c suffix
	<init> (Ljava/util/Optional;Ljava/util/Optional;[Lja;)V <init>
	a (Lbul;Liz;Ljava/util/function/BiConsumer;)Lvk; create
	a (Lbul;Ljava/lang/String;Liz;Ljava/util/function/BiConsumer;)Lvk; createWithSuffix
	b (Lbul;Ljava/lang/String;Liz;Ljava/util/function/BiConsumer;)Lvk; createWithOverride
	a (Lvk;Liz;Ljava/util/function/BiConsumer;)Lvk; create
	a (Liz;)Ljava/util/Map; createMap
	a (Ljava/util/Map;)Lcom/google/gson/JsonElement; lambda$create$2
	a (Lcom/google/gson/JsonObject;Lja;Lvk;)V lambda$null$1
	a (Lcom/google/gson/JsonObject;Lvk;)V lambda$null$0
iy net/minecraft/data/models/model/ModelTemplates
	a CUBE
	b CUBE_DIRECTIONAL
	c CUBE_ALL
	d CUBE_MIRRORED_ALL
	e CUBE_COLUMN
	f CUBE_COLUMN_HORIZONTAL
	g CUBE_TOP
	h CUBE_BOTTOM_TOP
	i CUBE_ORIENTABLE
	j CUBE_ORIENTABLE_TOP_BOTTOM
	k CUBE_ORIENTABLE_VERTICAL
	l BUTTON
	m BUTTON_PRESSED
	n BUTTON_INVENTORY
	o DOOR_BOTTOM
	p DOOR_BOTTOM_HINGE
	q DOOR_TOP
	r DOOR_TOP_HINGE
	s FENCE_POST
	t FENCE_SIDE
	u FENCE_INVENTORY
	v WALL_POST
	w WALL_LOW_SIDE
	x WALL_TALL_SIDE
	y WALL_INVENTORY
	z FENCE_GATE_CLOSED
	A FENCE_GATE_OPEN
	B FENCE_GATE_WALL_CLOSED
	C FENCE_GATE_WALL_OPEN
	D PRESSURE_PLATE_UP
	E PRESSURE_PLATE_DOWN
	F PARTICLE_ONLY
	G SLAB_BOTTOM
	H SLAB_TOP
	I LEAVES
	J STAIRS_STRAIGHT
	K STAIRS_INNER
	L STAIRS_OUTER
	M TRAPDOOR_TOP
	N TRAPDOOR_BOTTOM
	O TRAPDOOR_OPEN
	P ORIENTABLE_TRAPDOOR_TOP
	Q ORIENTABLE_TRAPDOOR_BOTTOM
	R ORIENTABLE_TRAPDOOR_OPEN
	S CROSS
	T TINTED_CROSS
	U FLOWER_POT_CROSS
	V TINTED_FLOWER_POT_CROSS
	W RAIL_FLAT
	X RAIL_CURVED
	Y RAIL_RAISED_NE
	Z RAIL_RAISED_SW
	aa CARPET
	ab CORAL_FAN
	ac CORAL_WALL_FAN
	ad GLAZED_TERRACOTTA
	ae CHORUS_FLOWER
	af DAYLIGHT_DETECTOR
	ag STAINED_GLASS_PANE_NOSIDE
	ah STAINED_GLASS_PANE_NOSIDE_ALT
	ai STAINED_GLASS_PANE_POST
	aj STAINED_GLASS_PANE_SIDE
	ak STAINED_GLASS_PANE_SIDE_ALT
	al COMMAND_BLOCK
	am ANVIL
	an STEMS
	ao ATTACHED_STEM
	ap CROP
	aq FARMLAND
	ar FIRE_FLOOR
	as FIRE_SIDE
	at FIRE_SIDE_ALT
	au FIRE_UP
	av FIRE_UP_ALT
	aw CAMPFIRE
	ax LANTERN
	ay HANGING_LANTERN
	az TORCH
	aA WALL_TORCH
	aB PISTON
	aC PISTON_HEAD
	aD PISTON_HEAD_SHORT
	aE SEAGRASS
	aF TURTLE_EGG
	aG TWO_TURTLE_EGGS
	aH THREE_TURTLE_EGGS
	aI FOUR_TURTLE_EGGS
	aJ SINGLE_FACE
	aK FLAT_ITEM
	aL FLAT_HANDHELD_ITEM
	aM FLAT_HANDHELD_ROD_ITEM
	aN SHULKER_BOX_INVENTORY
	aO BED_INVENTORY
	aP BANNER_INVENTORY
	aQ SKULL_INVENTORY
	<init> ()V <init>
	a ([Lja;)Lix; create
	a (Ljava/lang/String;[Lja;)Lix; create
	b (Ljava/lang/String;[Lja;)Lix; createItem
	a (Ljava/lang/String;Ljava/lang/String;[Lja;)Lix; create
	a (I)[Lix; lambda$static$1
	b (I)Lix; lambda$static$0
	<clinit> ()V <clinit>
iz net/minecraft/data/models/model/TextureMapping
	a slots
	b forcedSlots
	<init> ()V <init>
	a (Lja;Lvk;)Liz; put
	b (Lja;Lvk;)Liz; putForced
	a ()Ljava/util/stream/Stream; getForced
	a (Lja;Lja;)Liz; copySlot
	b (Lja;Lja;)Liz; copyForced
	a (Lja;)Lvk; get
	c (Lja;Lvk;)Liz; copyAndUpdate
	a (Lbul;)Liz; cube
	b (Lbul;)Liz; defaultTexture
	a (Lvk;)Liz; defaultTexture
	b (Lvk;)Liz; cube
	c (Lbul;)Liz; cross
	c (Lvk;)Liz; cross
	d (Lbul;)Liz; plant
	d (Lvk;)Liz; plant
	e (Lbul;)Liz; rail
	e (Lvk;)Liz; rail
	f (Lbul;)Liz; wool
	f (Lvk;)Liz; wool
	g (Lbul;)Liz; stem
	a (Lbul;Lbul;)Liz; attachedStem
	h (Lbul;)Liz; pattern
	i (Lbul;)Liz; fan
	g (Lvk;)Liz; crop
	b (Lbul;Lbul;)Liz; pane
	d (Lja;Lvk;)Liz; singleSlot
	j (Lbul;)Liz; column
	k (Lbul;)Liz; cubeTop
	l (Lbul;)Liz; logColumn
	a (Lvk;Lvk;)Liz; column
	m (Lbul;)Liz; cubeBottomTop
	n (Lbul;)Liz; cubeBottomTopWithWall
	o (Lbul;)Liz; columnWithWall
	b (Lvk;Lvk;)Liz; door
	p (Lbul;)Liz; door
	q (Lbul;)Liz; particle
	h (Lvk;)Liz; particle
	r (Lbul;)Liz; fire0
	s (Lbul;)Liz; fire1
	t (Lbul;)Liz; lantern
	u (Lbul;)Liz; torch
	i (Lvk;)Liz; torch
	a (Lblu;)Liz; particleFromItem
	v (Lbul;)Liz; commandBlock
	w (Lbul;)Liz; orientableCube
	x (Lbul;)Liz; orientableCubeOnlyTop
	y (Lbul;)Liz; orientableCubeSameEnds
	z (Lbul;)Liz; top
	c (Lbul;Lbul;)Liz; craftingTable
	d (Lbul;Lbul;)Liz; fletchingTable
	A (Lbul;)Liz; campfire
	b (Lblu;)Liz; layer0
	B (Lbul;)Liz; layer0
	j (Lvk;)Liz; layer0
	C (Lbul;)Lvk; getBlockTexture
	a (Lbul;Ljava/lang/String;)Lvk; getBlockTexture
	c (Lblu;)Lvk; getItemTexture
	a (Lblu;Ljava/lang/String;)Lvk; getItemTexture
ja net/minecraft/data/models/model/TextureSlot
	a ALL
	b TEXTURE
	c PARTICLE
	d END
	e BOTTOM
	f TOP
	g FRONT
	h BACK
	i SIDE
	j NORTH
	k SOUTH
	l EAST
	m WEST
	n UP
	o DOWN
	p CROSS
	q PLANT
	r WALL
	s RAIL
	t WOOL
	u PATTERN
	v PANE
	w EDGE
	x FAN
	y STEM
	z UPPER_STEM
	A CROP
	B DIRT
	C FIRE
	D LANTERN
	E PLATFORM
	F UNSTICKY
	G TORCH
	H LAYER0
	I LIT_LOG
	J id
	K parent
	a (Ljava/lang/String;)Lja; create
	a (Ljava/lang/String;Lja;)Lja; create
	<init> (Ljava/lang/String;Lja;)V <init>
	a ()Ljava/lang/String; getId
	b ()Lja; getParent
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
jb net/minecraft/data/models/model/TexturedModel
	a CUBE
	b CUBE_MIRRORED
	c COLUMN
	d COLUMN_HORIZONTAL
	e CUBE_TOP_BOTTOM
	f CUBE_TOP
	g ORIENTABLE_ONLY_TOP
	h ORIENTABLE
	i CARPET
	j GLAZED_TERRACOTTA
	k CORAL_FAN
	l PARTICLE_ONLY
	m ANVIL
	n LEAVES
	o LANTERN
	p HANGING_LANTERN
	q SEAGRASS
	r COLUMN_ALT
	s COLUMN_HORIZONTAL_ALT
	t TOP_BOTTOM_WITH_WALL
	u COLUMN_WITH_WALL
	v mapping
	w template
	<init> (Liz;Lix;)V <init>
	a ()Lix; getTemplate
	b ()Liz; getMapping
	a (Ljava/util/function/Consumer;)Ljb; updateTextures
	a (Lbul;Ljava/util/function/BiConsumer;)Lvk; create
	a (Lbul;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lvk; createWithSuffix
	a (Ljava/util/function/Function;Lix;)Ljb$a; createDefault
	a (Lvk;)Ljb; createAllSame
	a (Ljava/util/function/Function;Lix;Lbul;)Ljb; lambda$createDefault$0
	<clinit> ()V <clinit>
jb$a net/minecraft/data/models/model/TexturedModel$Provider
	get (Lbul;)Ljb; get
	a (Lbul;Ljava/util/function/BiConsumer;)Lvk; create
	a (Lbul;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lvk; createWithSuffix
	a (Ljava/util/function/Consumer;)Ljb$a; updateTexture
	a (Ljava/util/function/Consumer;Lbul;)Ljb; lambda$updateTexture$0
jc net/minecraft/data/models/model/package-info
jd net/minecraft/data/models/package-info
je net/minecraft/data/package-info
jf net/minecraft/data/recipes/FinishedRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	b ()Lvk; getId
	c ()Lbop; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
jg net/minecraft/data/recipes/RecipeProvider
	b LOGGER
	c GSON
	d generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a (Lhn;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveRecipe
	b (Lhn;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveAdvancement
	a (Ljava/util/function/Consumer;)V buildShapelessRecipes
	a (Ljava/util/function/Consumer;Lblu;Lblu;)V netheriteSmithing
	a (Ljava/util/function/Consumer;Lbrt;Laej;)V planksFromLog
	b (Ljava/util/function/Consumer;Lbrt;Laej;)V planksFromLogs
	a (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodFromLogs
	b (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenBoat
	c (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenButton
	d (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenDoor
	e (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenFence
	f (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenFenceGate
	g (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenPressurePlate
	h (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenSlab
	i (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenStairs
	j (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenTrapdoor
	k (Ljava/util/function/Consumer;Lbrt;Lbrt;)V woodenSign
	l (Ljava/util/function/Consumer;Lbrt;Lbrt;)V coloredWoolFromWhiteWoolAndDye
	m (Ljava/util/function/Consumer;Lbrt;Lbrt;)V carpetFromWool
	n (Ljava/util/function/Consumer;Lbrt;Lbrt;)V coloredCarpetFromWhiteCarpetAndDye
	o (Ljava/util/function/Consumer;Lbrt;Lbrt;)V bedFromPlanksAndWool
	p (Ljava/util/function/Consumer;Lbrt;Lbrt;)V bedFromWhiteBedAndDye
	q (Ljava/util/function/Consumer;Lbrt;Lbrt;)V banner
	r (Ljava/util/function/Consumer;Lbrt;Lbrt;)V stainedGlassFromGlassAndDye
	s (Ljava/util/function/Consumer;Lbrt;Lbrt;)V stainedGlassPaneFromStainedGlass
	t (Ljava/util/function/Consumer;Lbrt;Lbrt;)V stainedGlassPaneFromGlassPaneAndDye
	u (Ljava/util/function/Consumer;Lbrt;Lbrt;)V coloredTerracottaFromTerracottaAndDye
	v (Ljava/util/function/Consumer;Lbrt;Lbrt;)V concretePowder
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lbow;I)V cookRecipes
	a (Lbul;)Lbc$a; insideOf
	a (Lbz$d;Lbrt;)Lbn$a; has
	a (Lbrt;)Lbn$a; has
	a (Laej;)Lbn$a; has
	a ([Lbq;)Lbn$a; inventoryTrigger
	a ()Ljava/lang/String; getName
	a (Ljava/util/Set;Lhn;Ljava/nio/file/Path;Ljf;)V lambda$run$0
	<clinit> ()V <clinit>
jh net/minecraft/data/recipes/ShapedRecipeBuilder
	a LOGGER
	b result
	c count
	d rows
	e key
	f advancement
	g group
	<init> (Lbrt;I)V <init>
	a (Lbrt;)Ljh; shaped
	a (Lbrt;I)Ljh; shaped
	a (Ljava/lang/Character;Laej;)Ljh; define
	a (Ljava/lang/Character;Lbrt;)Ljh; define
	a (Ljava/lang/Character;Lbok;)Ljh; define
	a (Ljava/lang/String;)Ljh; pattern
	a (Ljava/lang/String;Lag;)Ljh; unlockedBy
	b (Ljava/lang/String;)Ljh; group
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lvk;)V save
	a (Lvk;)V ensureValid
	<clinit> ()V <clinit>
jh$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	b id
	c result
	d count
	e group
	f pattern
	g key
	h advancement
	i advancementId
	a this$0
	<init> (Ljh;Lvk;Lblu;ILjava/lang/String;Ljava/util/List;Ljava/util/Map;Ly$a;Lvk;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lbop; getType
	b ()Lvk; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
ji net/minecraft/data/recipes/ShapelessRecipeBuilder
	a LOGGER
	b result
	c count
	d ingredients
	e advancement
	f group
	<init> (Lbrt;I)V <init>
	a (Lbrt;)Lji; shapeless
	a (Lbrt;I)Lji; shapeless
	a (Laej;)Lji; requires
	b (Lbrt;)Lji; requires
	b (Lbrt;I)Lji; requires
	a (Lbok;)Lji; requires
	a (Lbok;I)Lji; requires
	a (Ljava/lang/String;Lag;)Lji; unlockedBy
	a (Ljava/lang/String;)Lji; group
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lvk;)V save
	a (Lvk;)V ensureValid
	<clinit> ()V <clinit>
ji$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	g advancementId
	<init> (Lvk;Lblu;ILjava/lang/String;Ljava/util/List;Ly$a;Lvk;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lbop; getType
	b ()Lvk; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
jj net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	a result
	b ingredient
	c experience
	d cookingTime
	e advancement
	f group
	g serializer
	<init> (Lbrt;Lbok;FILbow;)V <init>
	a (Lbok;Lbrt;FILbow;)Ljj; cooking
	a (Lbok;Lbrt;FI)Ljj; campfireCooking
	b (Lbok;Lbrt;FI)Ljj; blasting
	c (Lbok;Lbrt;FI)Ljj; smelting
	d (Lbok;Lbrt;FI)Ljj; smoking
	a (Ljava/lang/String;Lag;)Ljj; unlockedBy
	a (Ljava/lang/String;)Ljj; group
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lvk;)V save
	a (Lvk;)V ensureValid
jj$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e experience
	f cookingTime
	g advancement
	h advancementId
	i serializer
	<init> (Lvk;Ljava/lang/String;Lbok;Lblu;FILy$a;Lvk;Lbop;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lbop; getType
	b ()Lvk; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
jk net/minecraft/data/recipes/SingleItemRecipeBuilder
	a result
	b ingredient
	c count
	d advancement
	e group
	f type
	<init> (Lbop;Lbok;Lbrt;I)V <init>
	a (Lbok;Lbrt;)Ljk; stonecutting
	a (Lbok;Lbrt;I)Ljk; stonecutting
	a (Ljava/lang/String;Lag;)Ljk; unlocks
	a (Ljava/lang/String;)Ljk; group
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lvk;)V save
	a (Lvk;)V ensureValid
jk$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e count
	f advancement
	g advancementId
	h type
	<init> (Lvk;Lbop;Ljava/lang/String;Lbok;Lblu;ILy$a;Lvk;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lvk; getId
	c ()Lbop; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
jl net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	<init> (Lbox;)V <init>
	a (Lbox;)Ljl; special
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljl;)Lbox; access$000
jl$1 net/minecraft/data/recipes/SpecialRecipeBuilder$1
	a val$id
	b this$0
	<init> (Ljl;Ljava/lang/String;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lbop; getType
	b ()Lvk; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
jm net/minecraft/data/recipes/UpgradeRecipeBuilder
	a base
	b addition
	c result
	d advancement
	e type
	<init> (Lbop;Lbok;Lbok;Lblu;)V <init>
	a (Lbok;Lbok;Lblu;)Ljm; smithing
	a (Ljava/lang/String;Lag;)Ljm; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lvk;)V save
	a (Lvk;)V ensureValid
jm$a net/minecraft/data/recipes/UpgradeRecipeBuilder$Result
	a id
	b base
	c addition
	d result
	e advancement
	f advancementId
	g type
	<init> (Lvk;Lbop;Lbok;Lbok;Lblu;Ly$a;Lvk;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lvk; getId
	c ()Lbop; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lvk; getAdvancementId
jn net/minecraft/data/recipes/package-info
jo net/minecraft/data/structures/NbtToSnbt
	b LOGGER
	c generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; convertStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$1
	a (Ljava/nio/file/Path;)Z lambda$run$0
	<clinit> ()V <clinit>
jp net/minecraft/data/structures/SnbtToNbt
	b dumpSnbtTo
	c LOGGER
	d generator
	e filters
	<init> (Lhl;)V <init>
	a (Ljp$a;)Ljp; addFilter
	a (Ljava/lang/String;Lmd;)Lmd; applyFilters
	a (Lhn;)V run
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/lang/String;)Ljp$b; readStructure
	a (Lhn;Ljp$b;Ljava/nio/file/Path;)V storeStructureIfChanged
	a (Lhn;Ljava/nio/file/Path;Ljp$b;)V lambda$run$3
	a (Ljava/util/List;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$2
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljp$b; lambda$null$1
	a (Ljava/nio/file/Path;)Z lambda$run$0
	<clinit> ()V <clinit>
jp$a net/minecraft/data/structures/SnbtToNbt$Filter
	a (Ljava/lang/String;Lmd;)Lmd; apply
jp$b net/minecraft/data/structures/SnbtToNbt$TaskResult
	a name
	b payload
	c snbtPayload
	d hash
	<init> (Ljava/lang/String;[BLjava/lang/String;Ljava/lang/String;)V <init>
	a (Ljp$b;)Ljava/lang/String; access$000
	b (Ljp$b;)Ljava/lang/String; access$100
	c (Ljp$b;)Ljava/lang/String; access$200
	d (Ljp$b;)[B access$300
jq net/minecraft/data/structures/StructureUpdater
	a LOGGER
	<init> ()V <init>
	a (Ljava/lang/String;Lmd;)Lmd; apply
	a (Lmd;)Lmd; patchVersion
	b (Ljava/lang/String;Lmd;)Lmd; updateStructure
	<clinit> ()V <clinit>
jr net/minecraft/data/structures/package-info
js net/minecraft/data/tags/BlockTagsProvider
	<init> (Lhl;)V <init>
	b ()V addTags
	a (Lvk;)Ljava/nio/file/Path; getPath
	a ()Ljava/lang/String; getName
jt net/minecraft/data/tags/EntityTypeTagsProvider
	<init> (Lhl;)V <init>
	b ()V addTags
	a (Lvk;)Ljava/nio/file/Path; getPath
	a ()Ljava/lang/String; getName
ju net/minecraft/data/tags/FluidTagsProvider
	<init> (Lhl;)V <init>
	b ()V addTags
	a (Lvk;)Ljava/nio/file/Path; getPath
	a ()Ljava/lang/String; getName
jv net/minecraft/data/tags/ItemTagsProvider
	d blockTags
	<init> (Lhl;Ljs;)V <init>
	b ()V addTags
	a (Laej$e;Laej$e;)V copy
	a (Lvk;)Ljava/nio/file/Path; getPath
	a ()Ljava/lang/String; getName
jw net/minecraft/data/tags/TagsProvider
	d LOGGER
	e GSON
	b generator
	c registry
	f builders
	<init> (Lhl;Lgm;)V <init>
	b ()V addTags
	a (Lhn;)V run
	a (Lvk;)Ljava/nio/file/Path; getPath
	a (Laej$e;)Ljw$a; tag
	b (Laej$e;)Laej$a; getOrCreateRawBuilder
	b (Lvk;)Laej$a; lambda$getOrCreateRawBuilder$3
	a (Ljava/util/function/Function;Ljava/util/function/Function;Lhn;Lvk;Laej$a;)V lambda$run$2
	c (Lvk;)Ljava/lang/Object; lambda$run$1
	a (Laej;Lvk;)Laej; lambda$run$0
	<clinit> ()V <clinit>
jw$1 net/minecraft/data/tags/TagsProvider$1
jw$a net/minecraft/data/tags/TagsProvider$TagAppender
	a builder
	b registry
	c source
	<init> (Laej$a;Lgm;Ljava/lang/String;)V <init>
	a (Ljava/lang/Object;)Ljw$a; add
	a (Lvk;)Ljw$a; addOptional
	a (Laej$e;)Ljw$a; addTag
	b (Lvk;)Ljw$a; addOptionalTag
	a ([Ljava/lang/Object;)Ljw$a; add
	c (Lvk;)V lambda$add$0
	<init> (Laej$a;Lgm;Ljava/lang/String;Ljw$1;)V <init>
jx net/minecraft/data/tags/package-info
jy net/minecraft/data/worldgen/BastionBridgePools
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
jz net/minecraft/data/worldgen/BastionHoglinStablePools
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
ka net/minecraft/data/worldgen/BastionHousingUnitsPools
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kb net/minecraft/data/worldgen/BastionPieces
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kc net/minecraft/data/worldgen/BastionSharedPools
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kd net/minecraft/data/worldgen/BastionTreasureRoomPools
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
ke net/minecraft/data/worldgen/BiomeDefaultFeatures
	<init> ()V <init>
	a (Lbst$a;)V addDefaultOverworldLandMesaStructures
	b (Lbst$a;)V addDefaultOverworldLandStructures
	c (Lbst$a;)V addDefaultOverworldOceanStructures
	d (Lbst$a;)V addDefaultCarvers
	e (Lbst$a;)V addOceanCarvers
	f (Lbst$a;)V addDefaultLakes
	g (Lbst$a;)V addDesertLakes
	h (Lbst$a;)V addDefaultMonsterRoom
	i (Lbst$a;)V addDefaultUndergroundVariety
	j (Lbst$a;)V addDefaultOres
	k (Lbst$a;)V addExtraGold
	l (Lbst$a;)V addExtraEmeralds
	m (Lbst$a;)V addInfestedStone
	n (Lbst$a;)V addDefaultSoftDisks
	o (Lbst$a;)V addSwampClayDisk
	p (Lbst$a;)V addMossyStoneBlock
	q (Lbst$a;)V addFerns
	r (Lbst$a;)V addBerryBushes
	s (Lbst$a;)V addSparseBerryBushes
	t (Lbst$a;)V addLightBambooVegetation
	u (Lbst$a;)V addBambooVegetation
	v (Lbst$a;)V addTaigaTrees
	w (Lbst$a;)V addWaterTrees
	x (Lbst$a;)V addBirchTrees
	y (Lbst$a;)V addOtherBirchTrees
	z (Lbst$a;)V addTallBirchTrees
	A (Lbst$a;)V addSavannaTrees
	B (Lbst$a;)V addShatteredSavannaTrees
	C (Lbst$a;)V addMountainTrees
	D (Lbst$a;)V addMountainEdgeTrees
	E (Lbst$a;)V addJungleTrees
	F (Lbst$a;)V addJungleEdgeTrees
	G (Lbst$a;)V addBadlandsTrees
	H (Lbst$a;)V addSnowyTrees
	I (Lbst$a;)V addJungleGrass
	J (Lbst$a;)V addSavannaGrass
	K (Lbst$a;)V addShatteredSavannaGrass
	L (Lbst$a;)V addSavannaExtraGrass
	M (Lbst$a;)V addBadlandGrass
	N (Lbst$a;)V addForestFlowers
	O (Lbst$a;)V addForestGrass
	P (Lbst$a;)V addSwampVegetation
	Q (Lbst$a;)V addMushroomFieldVegetation
	R (Lbst$a;)V addPlainVegetation
	S (Lbst$a;)V addDesertVegetation
	T (Lbst$a;)V addGiantTaigaVegetation
	U (Lbst$a;)V addDefaultFlowers
	V (Lbst$a;)V addWarmFlowers
	W (Lbst$a;)V addDefaultGrass
	X (Lbst$a;)V addTaigaGrass
	Y (Lbst$a;)V addPlainGrass
	Z (Lbst$a;)V addDefaultMushrooms
	aa (Lbst$a;)V addDefaultExtraVegetation
	ab (Lbst$a;)V addBadlandExtraVegetation
	ac (Lbst$a;)V addJungleExtraVegetation
	ad (Lbst$a;)V addDesertExtraVegetation
	ae (Lbst$a;)V addSwampExtraVegetation
	af (Lbst$a;)V addDesertExtraDecoration
	ag (Lbst$a;)V addFossilDecoration
	ah (Lbst$a;)V addColdOceanExtraVegetation
	ai (Lbst$a;)V addDefaultSeagrass
	aj (Lbst$a;)V addLukeWarmKelp
	ak (Lbst$a;)V addDefaultSprings
	al (Lbst$a;)V addIcebergs
	am (Lbst$a;)V addBlueIce
	an (Lbst$a;)V addSurfaceFreezing
	ao (Lbst$a;)V addNetherDefaultOres
	ap (Lbst$a;)V addAncientDebris
	a (Lbtd$a;)V farmAnimals
	b (Lbtd$a;)V ambientSpawns
	c (Lbtd$a;)V commonSpawns
	a (Lbtd$a;III)V oceanSpawns
	a (Lbtd$a;II)V warmOceanSpawns
	d (Lbtd$a;)V plainsSpawns
	e (Lbtd$a;)V snowySpawns
	f (Lbtd$a;)V desertSpawns
	b (Lbtd$a;III)V monsters
	g (Lbtd$a;)V mooshroomSpawns
	h (Lbtd$a;)V baseJungleSpawns
	i (Lbtd$a;)V endSpawns
kf net/minecraft/data/worldgen/Carvers
	a CAVE
	b CANYON
	c OCEAN_CAVE
	d UNDERWATER_CANYON
	e UNDERWATER_CAVE
	f NETHER_CAVE
	<init> ()V <init>
	a (Ljava/lang/String;Lchy;)Lchy; register
	<clinit> ()V <clinit>
kg net/minecraft/data/worldgen/DesertVillagePools
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kh net/minecraft/data/worldgen/Features
	a END_SPIKE
	b END_GATEWAY
	c END_GATEWAY_DELAYED
	d CHORUS_PLANT
	e END_ISLAND
	f END_ISLAND_DECORATED
	g DELTA
	h SMALL_BASALT_COLUMNS
	i LARGE_BASALT_COLUMNS
	j BASALT_BLOBS
	k BLACKSTONE_BLOBS
	l GLOWSTONE_EXTRA
	m GLOWSTONE
	n CRIMSON_FOREST_VEGETATION
	o WARPED_FOREST_VEGETATION
	p NETHER_SPROUTS
	q TWISTING_VINES
	r WEEPING_VINES
	s BASALT_PILLAR
	t SEAGRASS_COLD
	u SEAGRASS_DEEP_COLD
	v SEAGRASS_NORMAL
	w SEAGRASS_RIVER
	x SEAGRASS_DEEP
	y SEAGRASS_SWAMP
	z SEAGRASS_WARM
	A SEAGRASS_DEEP_WARM
	B SEA_PICKLE
	C ICE_SPIKE
	D ICE_PATCH
	E FOREST_ROCK
	F SEAGRASS_SIMPLE
	G ICEBERG_PACKED
	H ICEBERG_BLUE
	I KELP_COLD
	J KELP_WARM
	K BLUE_ICE
	L BAMBOO_LIGHT
	M BAMBOO
	N VINES
	O LAKE_WATER
	P LAKE_LAVA
	Q DISK_CLAY
	R DISK_GRAVEL
	S DISK_SAND
	T FREEZE_TOP_LAYER
	U BONUS_CHEST
	V VOID_START_PLATFORM
	W MONSTER_ROOM
	X WELL
	Y FOSSIL
	Z SPRING_LAVA_DOUBLE
	aa SPRING_LAVA
	ab SPRING_DELTA
	ac SPRING_CLOSED
	ad SPRING_CLOSED_DOUBLE
	ae SPRING_OPEN
	af SPRING_WATER
	ag PILE_HAY
	ah PILE_MELON
	ai PILE_SNOW
	aj PILE_ICE
	ak PILE_PUMPKIN
	al PATCH_FIRE
	am PATCH_SOUL_FIRE
	an PATCH_BROWN_MUSHROOM
	ao PATCH_RED_MUSHROOM
	ap PATCH_CRIMSON_ROOTS
	aq PATCH_SUNFLOWER
	ar PATCH_PUMPKIN
	as PATCH_TAIGA_GRASS
	at PATCH_BERRY_BUSH
	au PATCH_GRASS_PLAIN
	av PATCH_GRASS_FOREST
	aw PATCH_GRASS_BADLANDS
	ax PATCH_GRASS_SAVANNA
	ay PATCH_GRASS_NORMAL
	az PATCH_GRASS_TAIGA_2
	aA PATCH_GRASS_TAIGA
	aB PATCH_GRASS_JUNGLE
	aC PATCH_DEAD_BUSH_2
	aD PATCH_DEAD_BUSH
	aE PATCH_DEAD_BUSH_BADLANDS
	aF PATCH_MELON
	aG PATCH_BERRY_SPARSE
	aH PATCH_BERRY_DECORATED
	aI PATCH_WATERLILLY
	aJ PATCH_TALL_GRASS_2
	aK PATCH_TALL_GRASS
	aL PATCH_LARGE_FERN
	aM PATCH_CACTUS
	aN PATCH_CACTUS_DESERT
	aO PATCH_CACTUS_DECORATED
	aP PATCH_SUGAR_CANE_SWAMP
	aQ PATCH_SUGAR_CANE_DESERT
	aR PATCH_SUGAR_CANE_BADLANDS
	aS PATCH_SUGAR_CANE
	aT BROWN_MUSHROOM_NETHER
	aU RED_MUSHROOM_NETHER
	aV BROWN_MUSHROOM_NORMAL
	aW RED_MUSHROOM_NORMAL
	aX BROWN_MUSHROOM_TAIGA
	aY RED_MUSHROOM_TAIGA
	aZ BROWN_MUSHROOM_GIANT
	ba RED_MUSHROOM_GIANT
	bb BROWN_MUSHROOM_SWAMP
	bc RED_MUSHROOM_SWAMP
	bd ORE_MAGMA
	be ORE_SOUL_SAND
	bf ORE_GOLD_DELTAS
	bg ORE_QUARTZ_DELTAS
	bh ORE_GOLD_NETHER
	bi ORE_QUARTZ_NETHER
	bj ORE_GRAVEL_NETHER
	bk ORE_BLACKSTONE
	bl ORE_DIRT
	bm ORE_GRAVEL
	bn ORE_GRANITE
	bo ORE_DIORITE
	bp ORE_ANDESITE
	bq ORE_COAL
	br ORE_IRON
	bs ORE_GOLD_EXTRA
	bt ORE_GOLD
	bu ORE_REDSTONE
	bv ORE_DIAMOND
	bw ORE_LAPIS
	bx ORE_INFESTED
	by ORE_EMERALD
	bz ORE_DEBRIS_LARGE
	bA ORE_DEBRIS_SMALL
	bB CRIMSON_FUNGI
	bC CRIMSON_FUNGI_PLANTED
	bD WARPED_FUNGI
	bE WARPED_FUNGI_PLANTED
	bF HUGE_BROWN_MUSHROOM
	bG HUGE_RED_MUSHROOM
	bH OAK
	bI DARK_OAK
	bJ BIRCH
	bK ACACIA
	bL SPRUCE
	bM PINE
	bN JUNGLE_TREE
	bO FANCY_OAK
	bP JUNGLE_TREE_NO_VINE
	bQ MEGA_JUNGLE_TREE
	bR MEGA_SPRUCE
	bS MEGA_PINE
	bT SUPER_BIRCH_BEES_0002
	bU SWAMP_TREE
	bV JUNGLE_BUSH
	bW OAK_BEES_0002
	bX OAK_BEES_002
	bY OAK_BEES_005
	bZ BIRCH_BEES_0002
	ca BIRCH_BEES_002
	cb BIRCH_BEES_005
	cc FANCY_OAK_BEES_0002
	cd FANCY_OAK_BEES_002
	ce FANCY_OAK_BEES_005
	cf OAK_BADLANDS
	cg SPRUCE_SNOWY
	ch FLOWER_WARM
	ci FLOWER_DEFAULT
	cj FLOWER_FOREST
	ck FLOWER_SWAMP
	cl FLOWER_PLAIN
	cm FLOWER_PLAIN_DECORATED
	cJ FOREST_FLOWER_FEATURES
	cn FOREST_FLOWER_VEGETATION_COMMON
	co FOREST_FLOWER_VEGETATION
	cp DARK_FOREST_VEGETATION_BROWN
	cq DARK_FOREST_VEGETATION_RED
	cr WARM_OCEAN_VEGETATION
	cs FOREST_FLOWER_TREES
	ct TAIGA_VEGETATION
	cu TREES_SHATTERED_SAVANNA
	cv TREES_SAVANNA
	cw BIRCH_TALL
	cx TREES_BIRCH
	cy TREES_MOUNTAIN_EDGE
	cz TREES_MOUNTAIN
	cA TREES_WATER
	cB BIRCH_OTHER
	cC PLAIN_VEGETATION
	cD TREES_JUNGLE_EDGE
	cE TREES_GIANT_SPRUCE
	cF TREES_GIANT
	cG TREES_JUNGLE
	cH BAMBOO_VEGETATION
	cI MUSHROOM_FIELD_VEGETATION
	<init> ()V <init>
	a (Ljava/lang/String;Lcis;)Lcis; register
	a ()Lcis; lambda$static$8
	b ()Lcis; lambda$static$7
	c ()Lcis; lambda$static$6
	d ()Lcis; lambda$static$5
	e ()Lcis; lambda$static$4
	f ()Lcis; lambda$static$3
	g ()Lcis; lambda$static$2
	h ()Lcis; lambda$static$1
	i ()Lcis; lambda$static$0
	<clinit> ()V <clinit>
kh$a net/minecraft/data/worldgen/Features$Configs
	a DEFAULT_GRASS_CONFIG
	b TAIGA_GRASS_CONFIG
	c JUNGLE_GRASS_CONFIG
	d DEFAULT_FLOWER_CONFIG
	e DEAD_BUSH_CONFIG
	f SWEET_BERRY_BUSH_CONFIG
	g TALL_GRASS_CONFIG
	h SUGAR_CANE_CONFIG
	i LAVA_SPRING_CONFIG
	j CLOSED_NETHER_SPRING_CONFIG
	k CRIMSON_FOREST_CONFIG
	l WARPED_FOREST_CONFIG
	m NETHER_SPROUTS_CONFIG
	<init> ()V <init>
	<clinit> ()V <clinit>
kh$b net/minecraft/data/worldgen/Features$Decorators
	a BEEHIVE_0002
	b BEEHIVE_002
	c BEEHIVE_005
	d FIRE
	e HEIGHTMAP
	f TOP_SOLID_HEIGHTMAP
	g HEIGHTMAP_WORLD_SURFACE
	h HEIGHTMAP_DOUBLE
	i RANGE_10_20_ROOFED
	j RANGE_4_8_ROOFED
	k ADD_32
	l HEIGHTMAP_SQUARE
	m HEIGHTMAP_DOUBLE_SQUARE
	n TOP_SOLID_HEIGHTMAP_SQUARE
	<init> ()V <init>
	<clinit> ()V <clinit>
kh$c net/minecraft/data/worldgen/Features$States
	a GRASS
	b FERN
	c PODZOL
	d COARSE_DIRT
	e MYCELIUM
	f SNOW_BLOCK
	g ICE
	h OAK_LOG
	i OAK_LEAVES
	j JUNGLE_LOG
	k JUNGLE_LEAVES
	l SPRUCE_LOG
	m SPRUCE_LEAVES
	n ACACIA_LOG
	o ACACIA_LEAVES
	p BIRCH_LOG
	q BIRCH_LEAVES
	r DARK_OAK_LOG
	s DARK_OAK_LEAVES
	t GRASS_BLOCK
	u LARGE_FERN
	v TALL_GRASS
	w LILAC
	x ROSE_BUSH
	y PEONY
	z BROWN_MUSHROOM
	A RED_MUSHROOM
	B PACKED_ICE
	C BLUE_ICE
	D LILY_OF_THE_VALLEY
	E BLUE_ORCHID
	F POPPY
	G DANDELION
	H DEAD_BUSH
	I MELON
	J PUMPKIN
	K SWEET_BERRY_BUSH
	L FIRE
	M SOUL_FIRE
	N NETHERRACK
	O SOUL_SOIL
	P CRIMSON_ROOTS
	Q LILY_PAD
	R SNOW
	S JACK_O_LANTERN
	T SUNFLOWER
	U CACTUS
	V SUGAR_CANE
	W HUGE_RED_MUSHROOM
	X HUGE_BROWN_MUSHROOM
	Y HUGE_MUSHROOM_STEM
	Z WATER_STATE
	aa LAVA_STATE
	ab WATER
	ac LAVA
	ad DIRT
	ae GRAVEL
	af GRANITE
	ag DIORITE
	ah ANDESITE
	ai COAL_ORE
	aj IRON_ORE
	ak GOLD_ORE
	al REDSTONE_ORE
	am DIAMOND_ORE
	an LAPIS_ORE
	ao STONE
	ap EMERALD_ORE
	aq INFESTED_STONE
	ar SAND
	as CLAY
	at MOSSY_COBBLESTONE
	au SEAGRASS
	av MAGMA_BLOCK
	aw SOUL_SAND
	ax NETHER_GOLD_ORE
	ay NETHER_QUARTZ_ORE
	az BLACKSTONE
	aA ANCIENT_DEBRIS
	aB BASALT
	aC CRIMSON_FUNGUS
	aD WARPED_FUNGUS
	aE WARPED_ROOTS
	aF NETHER_SPROUTS
	<init> ()V <init>
	<clinit> ()V <clinit>
ki net/minecraft/data/worldgen/PillagerOutpostPools
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kj net/minecraft/data/worldgen/PlainVillagePools
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kk net/minecraft/data/worldgen/Pools
	a EMPTY
	b BUILTIN_EMPTY
	<init> ()V <init>
	a (Lcoh;)Lcoh; register
	a ()Lcoh; bootstrap
	<clinit> ()V <clinit>
kl net/minecraft/data/worldgen/ProcessorLists
	E ADD_GILDED_BLACKSTONE
	F REMOVE_GILDED_BLACKSTONE
	a EMPTY
	b ZOMBIE_PLAINS
	c ZOMBIE_SAVANNA
	d ZOMBIE_SNOWY
	e ZOMBIE_TAIGA
	f ZOMBIE_DESERT
	g MOSSIFY_10_PERCENT
	h MOSSIFY_20_PERCENT
	i MOSSIFY_70_PERCENT
	j STREET_PLAINS
	k STREET_SAVANNA
	l STREET_SNOWY_OR_TAIGA
	m FARM_PLAINS
	n FARM_SAVANNA
	o FARM_SNOWY
	p FARM_TAIGA
	q FARM_DESERT
	r OUTPOST_ROT
	s BOTTOM_RAMPART
	t TREASURE_ROOMS
	u HOUSING
	v SIDE_WALL_DEGRADATION
	w STABLE_DEGRADATION
	x BASTION_GENERIC_DEGRADATION
	y RAMPART_DEGRADATION
	z ENTRANCE_REPLACEMENT
	A BRIDGE
	B ROOF
	C HIGH_WALL
	D HIGH_RAMPART
	<init> ()V <init>
	a (Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lcsw; register
	<clinit> ()V <clinit>
km net/minecraft/data/worldgen/SavannaVillagePools
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kn net/minecraft/data/worldgen/SnowyVillagePools
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
ko net/minecraft/data/worldgen/StructureFeatures
	a PILLAGER_OUTPOST
	b MINESHAFT
	c MINESHAFT_MESA
	d WOODLAND_MANSION
	e JUNGLE_TEMPLE
	f DESERT_PYRAMID
	g IGLOO
	h SHIPWRECK
	i SHIPWRECH_BEACHED
	j SWAMP_HUT
	k STRONGHOLD
	l OCEAN_MONUMENT
	m OCEAN_RUIN_COLD
	n OCEAN_RUIN_WARM
	o NETHER_BRIDGE
	p NETHER_FOSSIL
	q END_CITY
	r BURIED_TREASURE
	s BASTION_REMNANT
	t VILLAGE_PLAINS
	u VILLAGE_DESERT
	v VILLAGE_SAVANNA
	w VILLAGE_SNOWY
	x VILLAGE_TAIGA
	y RUINED_PORTAL_STANDARD
	z RUINED_PORTAL_DESERT
	A RUINED_PORTAL_JUNGLE
	B RUINED_PORTAL_SWAMP
	C RUINED_PORTAL_MOUNTAIN
	D RUINED_PORTAL_OCEAN
	E RUINED_PORTAL_NETHER
	<init> ()V <init>
	a (Ljava/lang/String;Lcit;)Lcit; register
	a ()Lcoh; lambda$static$6
	b ()Lcoh; lambda$static$5
	c ()Lcoh; lambda$static$4
	d ()Lcoh; lambda$static$3
	e ()Lcoh; lambda$static$2
	f ()Lcoh; lambda$static$1
	g ()Lcoh; lambda$static$0
	<clinit> ()V <clinit>
kp net/minecraft/data/worldgen/SurfaceBuilders
	a BADLANDS
	b BASALT_DELTAS
	c CRIMSON_FOREST
	d DESERT
	e END
	f ERODED_BADLANDS
	g FROZEN_OCEAN
	h FULL_SAND
	i GIANT_TREE_TAIGA
	j GRASS
	k GRAVELLY_MOUNTAIN
	l ICE_SPIKES
	m MOUNTAIN
	n MYCELIUM
	o NETHER
	p NOPE
	q OCEAN_SAND
	r SHATTERED_SAVANNA
	s SOUL_SAND_VALLEY
	t STONE
	u SWAMP
	v WARPED_FOREST
	w WOODED_BADLANDS
	<init> ()V <init>
	a (Ljava/lang/String;Lctd;)Lctd; register
	<clinit> ()V <clinit>
kq net/minecraft/data/worldgen/TaigaVillagePools
	a START
	<init> ()V <init>
	a ()V bootstrap
	<clinit> ()V <clinit>
kr net/minecraft/data/worldgen/VillagePools
	<init> ()V <init>
	a ()V bootstrap
ks net/minecraft/data/worldgen/biome/BiomeReport
	b LOGGER
	c GSON
	d generator
	<init> (Lhl;)V <init>
	a (Lhn;)V run
	a (Ljava/nio/file/Path;Lvk;)Ljava/nio/file/Path; createPath
	a ()Ljava/lang/String; getName
	a (Lbss;)Lbss; lambda$run$0
	<clinit> ()V <clinit>
kt net/minecraft/data/worldgen/biome/Biomes
	c TO_NAME
	a PLAINS
	b THE_VOID
	<init> ()V <init>
	a (ILvj;Lbss;)Lbss; register
	a (I)Lvj; byId
	<clinit> ()V <clinit>
ku net/minecraft/data/worldgen/biome/VanillaBiomes
	<init> ()V <init>
	a (F)I calculateSkyColor
	a (FFFZ)Lbss; giantTreeTaiga
	a (FFZ)Lbss; birchForestBiome
	a ()Lbss; jungleBiome
	b ()Lbss; jungleEdgeBiome
	c ()Lbss; modifiedJungleEdgeBiome
	d ()Lbss; modifiedJungleBiome
	e ()Lbss; jungleHillsBiome
	f ()Lbss; bambooJungleBiome
	g ()Lbss; bambooJungleHillsBiome
	a (FFIII)Lbss; jungleBiome
	a (FFII)Lbss; bambooJungleBiome
	a (FFFZZZLbtd$a;)Lbss; baseJungleBiome
	a (FFLctd;Z)Lbss; mountainBiome
	a (FFZZZ)Lbss; desertBiome
	a (Z)Lbss; plainsBiome
	a (Lbst$a;)Lbss; baseEndBiome
	h ()Lbss; endBarrensBiome
	i ()Lbss; theEndBiome
	j ()Lbss; endMidlandsBiome
	k ()Lbss; endHighlandsBiome
	l ()Lbss; smallEndIslandsBiome
	a (FF)Lbss; mushroomFieldsBiome
	a (FFFZZLbtd$a;)Lbss; baseSavannaBiome
	a (FFFZZ)Lbss; savannaBiome
	x ()Lbtd$a; savannaMobs
	m ()Lbss; savanaPlateauBiome
	a (Lctd;FFZZ)Lbss; baseBadlandsBiome
	b (FFZ)Lbss; badlandsBiome
	b (FF)Lbss; woodedBadlandsPlateauBiome
	n ()Lbss; erodedBadlandsBiome
	a (Lbtd$a;IIZLbst$a;)Lbss; baseOceanBiome
	a (Lctd;ZZZ)Lbst$a; baseOceanGeneration
	b (Z)Lbss; coldOceanBiome
	c (Z)Lbss; oceanBiome
	d (Z)Lbss; lukeWarmOceanBiome
	o ()Lbss; warmOceanBiome
	p ()Lbss; deepWarmOceanBiome
	e (Z)Lbss; frozenOceanBiome
	a (FFZLbtd$a;)Lbss; baseForestBiome
	y ()Lbtd$a; defaultSpawns
	c (FF)Lbss; forestBiome
	q ()Lbss; flowerForestBiome
	a (FFZZZZ)Lbss; taigaBiome
	c (FFZ)Lbss; darkForestBiome
	d (FFZ)Lbss; swampBiome
	a (FFZZ)Lbss; tundraBiome
	a (FFFIZ)Lbss; riverBiome
	a (FFFFIZZ)Lbss; beachBiome
	r ()Lbss; theVoidBiome
	s ()Lbss; netherWastesBiome
	t ()Lbss; soulSandValleyBiome
	u ()Lbss; basaltDeltasBiome
	v ()Lbss; crimsonForestBiome
	w ()Lbss; warpedForestBiome
kv net/minecraft/data/worldgen/biome/package-info
kw net/minecraft/gametest/framework/BeforeBatch
	a ()Ljava/lang/String; batch
kx net/minecraft/gametest/framework/GameTest
	a ()I timeoutTicks
	b ()Ljava/lang/String; batch
	c ()I rotationSteps
	d ()Z required
	e ()Ljava/lang/String; template
	f ()J setupTicks
ky net/minecraft/gametest/framework/GameTestAssertException
	<init> (Ljava/lang/String;)V <init>
kz net/minecraft/gametest/framework/GameTestAssertPosException
	a absolutePos
	b relativePos
	c tick
	<init> (Ljava/lang/String;Lfx;Lfx;J)V <init>
	getMessage ()Ljava/lang/String; getMessage
	a ()Ljava/lang/String; getMessageToShowAtBlock
	b ()Lfx; getRelativePos
	c ()Lfx; getAbsolutePos
la net/minecraft/gametest/framework/GameTestBatch
	a name
	b testFunctions
	c beforeBatchFunction
	<init> (Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;)V <init>
	a ()Ljava/lang/String; getName
	b ()Ljava/util/Collection; getTestFunctions
	a (Laag;)V runBeforeBatchFunction
lb net/minecraft/gametest/framework/GameTestBatchRunner
	a LOGGER
	b firstTestNorthWestCorner
	c level
	d testTicker
	e testsPerRow
	f allTestInfos
	g northWestCorners
	h batches
	i currentBatchTracker
	j currentBatchIndex
	k nextTestNorthWestCorner
	<init> (Ljava/util/Collection;Lfx;Lbzj;Laag;Lll;I)V <init>
	a ()Ljava/util/List; getTestInfos
	b ()V start
	a (I)V runBatch
	a (Llf;)V testCompleted
	a (Ljava/util/Collection;)V createStructuresForBatch
	b (Llf;)V lambda$runBatch$1
	a (Lbzj;Laag;Lla;)V lambda$new$0
	a (Llb;Llf;)V access$000
	<clinit> ()V <clinit>
lb$1 net/minecraft/gametest/framework/GameTestBatchRunner$1
	a this$0
	<init> (Llb;)V <init>
	a (Llf;)V testStructureLoaded
	b (Llf;)V testPassed
	c (Llf;)V testFailed
lc net/minecraft/gametest/framework/GameTestEvent
	a expectedDelay
	b assertion
	<init> (Ljava/lang/Long;Ljava/lang/Runnable;)V <init>
	a (Ljava/lang/Runnable;)Llc; create
	a (JLjava/lang/Runnable;)Llc; create
ld net/minecraft/gametest/framework/GameTestGenerator
le net/minecraft/gametest/framework/GameTestHelper
	a testInfo
	b finalCheckAdded
	<init> (Llf;)V <init>
	a ()Laag; getLevel
	b ()V killAllEntities
	a (Lblu;FFF)Lbcs; spawnItem
	a (Laqb;Lfx;)Lapx; spawn
	a (Laqb;Ldck;)Lapx; spawn
	a (Laqb;III)Lapx; spawn
	a (Laqb;FFF)Lapx; spawn
	b (Laqb;Lfx;)Laqk; spawnWithNoFreeWill
	b (Laqb;III)Laqk; spawnWithNoFreeWill
	b (Laqb;Ldck;)Laqk; spawnWithNoFreeWill
	b (Laqb;FFF)Laqk; spawnWithNoFreeWill
	a (Laqk;Lfx;F)Llj; walkTo
	a (III)V pressButton
	a (Lfx;)V pressButton
	b (Lfx;)V useBlock
	a (Laqj;)Laqj; makeAboutToDrown
	g ()Lbft; makeMockPlayer
	b (III)V pullLever
	c (Lfx;)V pullLever
	a (Lfx;J)V pulseRedstone
	a (IIILbul;)V setBlock
	a (IIILcee;)V setBlock
	a (Lfx;Lbul;)V setBlock
	a (Lfx;Lcee;)V setBlock
	c ()V setNight
	a (I)V setDayTime
	a (Lbul;III)V assertBlockPresent
	a (Lbul;Lfx;)V assertBlockPresent
	b (Lbul;III)V assertBlockNotPresent
	b (Lbul;Lfx;)V assertBlockNotPresent
	c (Lbul;III)V succeedWhenBlockPresent
	c (Lbul;Lfx;)V succeedWhenBlockPresent
	a (Lfx;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlock
	a (Lfx;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlock
	a (Lfx;Lcfg;Ljava/lang/Comparable;)V assertBlockProperty
	a (Lfx;Lcfg;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlockProperty
	b (Lfx;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
	a (Laqb;)V assertEntityPresent
	c (Laqb;III)V assertEntityPresent
	c (Laqb;Lfx;)V assertEntityPresent
	a (Laqb;Lfx;D)V assertEntityPresent
	a (Lblu;Lfx;DI)V assertItemEntityCountIs
	a (Lblu;Lfx;D)V assertItemEntityPresent
	b (Laqb;)V assertEntityNotPresent
	d (Laqb;III)V assertEntityNotPresent
	d (Laqb;Lfx;)V assertEntityNotPresent
	a (Laqb;DDD)V assertEntityTouching
	b (Laqb;DDD)V assertEntityNotTouching
	a (Lfx;Laqb;Ljava/util/function/Function;Ljava/lang/Object;)V assertEntityData
	d (Lfx;)V assertContainerEmpty
	a (Lfx;Lblu;)V assertContainerContains
	a (JLfx;Lblu;)V assertAtTickTimeContainerContains
	a (JLfx;)V assertAtTickTimeContainerEmpty
	b (Lfx;Laqb;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
	e (Laqb;III)V succeedWhenEntityPresent
	e (Laqb;Lfx;)V succeedWhenEntityPresent
	f (Laqb;III)V succeedWhenEntityNotPresent
	f (Laqb;Lfx;)V succeedWhenEntityNotPresent
	d ()V succeed
	h ()V ensureSingleFinalCheck
	a (Ljava/lang/Runnable;)V succeedIf
	b (Ljava/lang/Runnable;)V succeedWhen
	a (ILjava/lang/Runnable;)V succeedOnTickWhen
	a (JLjava/lang/Runnable;)V runAtTickTime
	b (JLjava/lang/Runnable;)V runAfterDelay
	c (Ljava/lang/Runnable;)V failIf
	e ()Llj; startSequence
	e (Lfx;)Lfx; absolutePos
	f (Lfx;)Lfx; relativePos
	a (Ldck;)Ldck; absoluteVec
	f ()J getTick
	i ()Ldcf; getBounds
	g (Lfx;)Lbul; getBlockType
	j ()Ljava/lang/Exception; lambda$failIf$19
	g (Laqb;Lfx;)V lambda$succeedWhenEntityNotPresent$18
	h (Laqb;Lfx;)V lambda$succeedWhenEntityPresent$17
	c (Lfx;Laqb;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$succeedWhenEntityData$16
	h (Lfx;)V lambda$assertAtTickTimeContainerEmpty$15
	b (Lfx;Lblu;)V lambda$assertAtTickTimeContainerContains$14
	a (Ldck;Lapx;)Z lambda$assertEntityNotTouching$13
	b (Ldck;Lapx;)Z lambda$assertEntityTouching$12
	a (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlockProperty$11
	a (Ljava/util/function/Predicate;Lcfg;Lcee;)Z lambda$assertBlockProperty$10
	a (Lcfg;Ljava/lang/Comparable;)Ljava/lang/String; lambda$assertBlockProperty$9
	a (Lcfg;Ljava/lang/Comparable;Lcee;)Z lambda$assertBlockProperty$8
	a (Ljava/util/function/Predicate;Lcee;)Z lambda$assertBlock$7
	b (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlock$6
	d (Lbul;Lfx;)V lambda$succeedWhenBlockPresent$5
	a (Lfx;Lbul;Lbul;)Z lambda$assertBlockNotPresent$4
	b (Lfx;Lbul;Lbul;)Z lambda$assertBlockPresent$3
	i (Lfx;)V lambda$pulseRedstone$2
	b (Laqk;Lfx;F)V lambda$walkTo$1
	a (Lapx;)Z lambda$killAllEntities$0
le$1 net/minecraft/gametest/framework/GameTestHelper$1
	b this$0
	<init> (Lle;Lbru;Lfx;FLcom/mojang/authlib/GameProfile;)V <init>
	a_ ()Z isSpectator
	b_ ()Z isCreative
lf net/minecraft/gametest/framework/GameTestInfo
	a testFunction
	b structureBlockPos
	c level
	d listeners
	e timeoutTicks
	f sequences
	g runAtTickTimeMap
	h startTick
	i tickCount
	j started
	k timer
	l done
	m rotation
	n error
	<init> (Llu;Lbzj;Laag;)V <init>
	a (Lfx;)V setStructureBlockPos
	a ()V startExecution
	b ()V tick
	v ()V startTest
	a (JLjava/lang/Runnable;)V setRunAtTickTime
	c ()Ljava/lang/String; getTestName
	d ()Lfx; getStructureBlockPos
	e ()Lfx; getStructureSize
	f ()Ldcf; getStructureBounds
	w ()Lcdg; getStructureBlockEntity
	g ()Laag; getLevel
	h ()Z hasSucceeded
	i ()Z hasFailed
	j ()Z hasStarted
	k ()Z isDone
	l ()J getRunTime
	x ()V finish
	m ()V succeed
	a (Ljava/lang/Throwable;)V fail
	n ()Ljava/lang/Throwable; getError
	toString ()Ljava/lang/String; toString
	a (Llg;)V addListener
	a (Lfx;I)V spawnStructure
	o ()J getTick
	p ()Llj; createSequence
	q ()Z isRequired
	r ()Z isOptional
	s ()Ljava/lang/String; getStructureName
	t ()Lbzj; getRotation
	u ()Llu; getTestFunction
	b (Llg;)V lambda$spawnStructure$4
	c (Llg;)V lambda$fail$3
	d (Llg;)V lambda$succeed$2
	a (Llj;)V lambda$tick$1
	b (Llj;)V lambda$tick$0
lg net/minecraft/gametest/framework/GameTestListener
	a (Llf;)V testStructureLoaded
	b (Llf;)V testPassed
	c (Llf;)V testFailed
lh net/minecraft/gametest/framework/GameTestRegistry
	a testFunctions
	b testClassNames
	c beforeBatchFunctions
	d lastFailedTests
	<init> ()V <init>
	a (Ljava/lang/Class;)V register
	a (Ljava/lang/reflect/Method;)V register
	a (Ljava/lang/String;)Ljava/util/Collection; getTestFunctionsForClassName
	a ()Ljava/util/Collection; getAllTestFunctions
	b ()Ljava/util/Collection; getAllTestClassNames
	b (Ljava/lang/String;)Z isTestClass
	c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
	d (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
	e (Ljava/lang/String;)Llu; getTestFunction
	b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
	c (Ljava/lang/reflect/Method;)Llu; turnMethodIntoTestFunction
	d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
	a (Llu;Ljava/lang/String;)Z isTestFunctionPartOfClass
	c ()Ljava/util/Collection; getLastFailedTests
	a (Llu;)V rememberFailedTest
	d ()V forgetFailedTests
	a (Ljava/lang/reflect/Method;Ljava/lang/Object;)V lambda$turnMethodIntoConsumer$2
	a (Ljava/lang/String;Llu;)Z lambda$findTestFunction$1
	b (Ljava/lang/String;Llu;)Z lambda$getTestFunctionsForClassName$0
	<clinit> ()V <clinit>
li net/minecraft/gametest/framework/GameTestRunner
	a TEST_REPORTER
	<init> ()V <init>
	a (Llf;Lfx;Lll;)V runTest
	a (Ljava/util/Collection;Lfx;Lbzj;Laag;Lll;I)Ljava/util/Collection; runTestBatches
	b (Ljava/util/Collection;Lfx;Lbzj;Laag;Lll;I)Ljava/util/Collection; runTests
	a (Ljava/util/Collection;)Ljava/util/Collection; groupTestsIntoBatches
	c (Llf;)V visualizeFailedTest
	d (Llf;)V visualizePassedTest
	b (Llf;Lbul;)V spawnBeacon
	b (Llf;Ljava/lang/String;)V spawnLectern
	a (Ljava/lang/String;ZLjava/lang/String;)Lbly; createBook
	a (Laag;Lk;Ljava/lang/String;)V say
	a (Laag;)V clearMarkers
	a (Laag;Lfx;Ljava/lang/String;)V showRedBox
	a (Laag;Lfx;Lll;I)V clearAllTests
	a (Laag;Lfx;)V lambda$clearAllTests$8
	b (Laag;Lfx;)Z lambda$clearAllTests$7
	a (Ljava/lang/String;Lk;Laah;)V lambda$say$6
	a (Laah;)Z lambda$say$5
	a (Ljava/lang/StringBuffer;Ljava/lang/String;)V lambda$createBook$4
	a (Ljava/util/Map;Ljava/lang/String;)Ljava/util/stream/Stream; lambda$groupTestsIntoBatches$3
	a (Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/List;)Lla; lambda$null$2
	a (Ljava/util/Map;Llu;)V lambda$groupTestsIntoBatches$1
	a (Ljava/lang/String;)Ljava/util/Collection; lambda$null$0
	a (Llf;Lbul;)V access$000
	a (Llf;)V access$100
	a (Llf;Ljava/lang/String;)V access$200
	b (Llf;)V access$300
	<clinit> ()V <clinit>
li$1 net/minecraft/gametest/framework/GameTestRunner$1
	<init> ()V <init>
	a (Llf;)V testStructureLoaded
	b (Llf;)V testPassed
	c (Llf;)V testFailed
lj net/minecraft/gametest/framework/GameTestSequence
	a parent
	b events
	c lastTick
	<init> (Llf;)V <init>
	a (Ljava/lang/Runnable;)Llj; thenWait
	a (JLjava/lang/Runnable;)Llj; thenWait
	a (I)Llj; thenIdle
	b (Ljava/lang/Runnable;)Llj; thenExecute
	a (ILjava/lang/Runnable;)Llj; thenExecuteAfter
	a ()V thenSucceed
	a (Ljava/util/function/Supplier;)V thenFail
	b ()Llj$a; thenTrigger
	a (J)V tickAndContinue
	b (J)V tickAndFailIfNotComplete
	c (Ljava/lang/Runnable;)V executeWithoutFail
	c (J)V tick
	a (Llj$a;)V lambda$thenTrigger$4
	b (Ljava/util/function/Supplier;)V lambda$thenFail$3
	b (ILjava/lang/Runnable;)V lambda$thenExecuteAfter$2
	d (Ljava/lang/Runnable;)V lambda$thenExecute$1
	c ()V lambda$thenIdle$0
	a (Llj;)Llf; access$000
lj$a net/minecraft/gametest/framework/GameTestSequence$Condition
	b triggerTime
	a this$0
	<init> (Llj;)V <init>
	a (J)V trigger
	a ()V assertTriggeredThisTick
lk net/minecraft/gametest/framework/GameTestServer
	j LOGGER
	k testBatches
	l spawnPos
	m TEST_GAME_RULES
	n TEST_SETTINGS
	o testTracker
	<init> (Ljava/lang/Thread;Lcyd$a;Labu;Lvz;Ljava/util/Collection;Lfx;Lgn$b;)V <init>
	<init> (Ljava/lang/Thread;Lcyd$a;Labu;Lvz;Ljava/util/Collection;Lfx;Lgn$b;Lgm;Lgs;)V <init>
	d ()Z initServer
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	e ()V onServerExit
	a (Ll;)V onServerCrash
	b (Laag;)V startTests
	aZ ()Z haveTestsStarted
	f ()Z isHardcore
	g ()I getOperatorUserPermissionLevel
	h ()I getFunctionCompilationLevel
	i ()Z shouldRconBroadcast
	j ()Z isDedicatedServer
	k ()I getRateLimitPacketsPerSecond
	l ()Z isEpollEnabled
	m ()Z isCommandBlockEnabled
	n ()Z isPublished
	a (Lbrr;ZI)Z publishServer
	R_ ()Z shouldInformAdmins
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	o ()Ljava/util/Optional; getModdedStatus
	a (Llf;)V lambda$tickServer$2
	b (Llf;)V lambda$tickServer$1
	a (Lbrq;)V lambda$static$0
	<clinit> ()V <clinit>
lk$1 net/minecraft/gametest/framework/GameTestServer$1
	a this$0
	<init> (Llk;Lnet/minecraft/server/MinecraftServer;Lgn$b;Lcyh;I)V <init>
ll net/minecraft/gametest/framework/GameTestTicker
	a singleton
	b testInfos
	<init> ()V <init>
	a (Llf;)V add
	a ()V clear
	b ()V tick
	<clinit> ()V <clinit>
lm net/minecraft/gametest/framework/GameTestTimeoutException
	<init> (Ljava/lang/String;)V <init>
ln net/minecraft/gametest/framework/JUnitLikeTestReporter
	a document
	b testSuite
	c stopwatch
	d destination
	<init> (Ljava/io/File;)V <init>
	a (Llf;Ljava/lang/String;)Lorg/w3c/dom/Element; createTestCase
	a (Llf;)V onTestFailed
	b (Llf;)V onTestSuccess
	a ()V finish
	a (Ljava/io/File;)V save
lo net/minecraft/gametest/framework/LogTestReporter
	a LOGGER
	<init> ()V <init>
	a (Llf;)V onTestFailed
	b (Llf;)V onTestSuccess
	<clinit> ()V <clinit>
lp net/minecraft/gametest/framework/MultipleTestTracker
	a tests
	b listeners
	<init> ()V <init>
	<init> (Ljava/util/Collection;)V <init>
	a (Llf;)V addTestToTrack
	a (Llg;)V addListener
	a (Ljava/util/function/Consumer;)V addFailureListener
	a ()I getFailedRequiredCount
	b ()I getFailedOptionalCount
	c ()I getDoneCount
	d ()Z hasFailedRequired
	e ()Z hasFailedOptional
	f ()Ljava/util/Collection; getFailedRequired
	g ()Ljava/util/Collection; getFailedOptional
	h ()I getTotalCount
	i ()Z isDone
	j ()Ljava/lang/String; getProgressBar
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/StringBuffer;Llf;)V lambda$getProgressBar$1
	a (Llg;Llf;)V lambda$addListener$0
lp$1 net/minecraft/gametest/framework/MultipleTestTracker$1
	a val$listener
	b this$0
	<init> (Llp;Ljava/util/function/Consumer;)V <init>
	a (Llf;)V testStructureLoaded
	b (Llf;)V testPassed
	c (Llf;)V testFailed
lq net/minecraft/gametest/framework/StructureUtils
	a testStructuresDir
	<init> ()V <init>
	a (I)Lbzj; getRotationForRotationSteps
	a (Lbzj;)I getRotationStepsForRotation
	a (Lcdg;)Ldcf; getStructureBounds
	b (Lcdg;)Lcqx; getStructureBoundingBox
	a (Lfx;Lfx;Lbzj;Laag;)V addCommandBlockAndButtonToStartTest
	a (Ljava/lang/String;Lfx;Lfx;Lbzj;Laag;)V createNewEmptyStructureBlock
	a (Ljava/lang/String;Lfx;Lbzj;ILaag;Z)Lcdg; spawnStructure
	a (Lfx;Laag;)V forceLoadChunks
	a (Lcqx;ILaag;)V clearSpaceForStructure
	a (Lfx;Lfx;Lbzj;)Lcqx; getStructureBoundingBox
	a (Lfx;ILaag;)Ljava/util/Optional; findStructureBlockContainingPos
	b (Lfx;ILaag;)Lfx; findNearestStructureBlock
	c (Lfx;ILaag;)Ljava/util/Collection; findStructureBlocks
	a (Ljava/lang/String;Laag;)Lcsy; getStructureTemplate
	a (Ljava/lang/String;Lfx;Lbzj;Laag;Z)Lcdg; createStructureBlock
	a (Ljava/nio/file/Path;)Lmd; tryLoadStructure
	a (ILfx;Laag;)V clearBlock
	a (Lfx;Lfx;Laag;)Z doesStructureContain
	a (Lfx;Lfx;)I lambda$findNearestStructureBlock$3
	a (Lfx;Laag;Lfx;)Z lambda$findStructureBlockContainingPos$2
	a (Lapx;)Z lambda$clearSpaceForStructure$1
	a (ILaag;Lfx;)V lambda$clearSpaceForStructure$0
	<clinit> ()V <clinit>
lq$1 net/minecraft/gametest/framework/StructureUtils$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
lr net/minecraft/gametest/framework/TeamcityTestReporter
	a LOGGER
	b ESCAPER
	<init> ()V <init>
	a (Llf;)V onTestFailed
	b (Llf;)V onTestSuccess
	<clinit> ()V <clinit>
ls net/minecraft/gametest/framework/TestClassNameArgument
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a ()Lls; testClassName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getTestClassName
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
lt net/minecraft/gametest/framework/TestCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/lang/String;III)I createNewStructure
	a (Ldb;Ljava/lang/String;)I showPos
	a (Ldb;)I runNearbyTest
	b (Ldb;)I runAllNearbyTests
	a (Laag;Lfx;Llp;)V runTest
	b (Laag;Llp;)V showTestSummaryIfAllDone
	a (Ldb;I)I clearAllTests
	a (Ldb;Llu;I)I runTest
	a (Llu;Laag;)V runTestPreparation
	a (Ldb;II)I runAllTests
	a (Ldb;Ljava/lang/String;II)I runAllTestsInClass
	a (Ldb;ZII)I runLastFailedTests
	a (Ldb;Ljava/util/Collection;II)V runTests
	b (Ldb;Ljava/lang/String;)V say
	c (Ldb;)I exportNearestTestStructure
	c (Ldb;Ljava/lang/String;)I exportTestStructure
	d (Ldb;Ljava/lang/String;)I importTestStructure
	a (Laag;Ljava/lang/String;Lk;)V say
	a (Lk;Ljava/lang/String;Laah;)V lambda$say$27
	a (Laah;)Z lambda$say$26
	a (Llf;)V lambda$runTests$25
	a (Laag;Llp;Lfx;)V lambda$runAllNearbyTests$24
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	a (Laag;Llp;)V access$000
lt$a net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	a level
	b tracker
	<init> (Laag;Llp;)V <init>
	a (Llf;)V testStructureLoaded
	b (Llf;)V testPassed
	c (Llf;)V testFailed
lu net/minecraft/gametest/framework/TestFunction
	a batchName
	b testName
	c structureName
	d required
	e function
	f maxTicks
	g setupTicks
	h rotation
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJZLjava/util/function/Consumer;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lbzj;IJZLjava/util/function/Consumer;)V <init>
	a (Lle;)V run
	a ()Ljava/lang/String; getTestName
	b ()Ljava/lang/String; getStructureName
	toString ()Ljava/lang/String; toString
	c ()I getMaxTicks
	d ()Z isRequired
	e ()Ljava/lang/String; getBatchName
	f ()J getSetupTicks
	g ()Lbzj; getRotation
lv net/minecraft/gametest/framework/TestFunctionArgument
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Llu; parse
	a ()Llv; testFunctionArgument
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Llu; getTestFunction
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
lw net/minecraft/gametest/framework/TestReporter
	a (Llf;)V onTestFailed
	b (Llf;)V onTestSuccess
	a ()V finish
lx net/minecraft/gametest/framework/package-info
ly net/minecraft/locale/Language
	a LOGGER
	b GSON
	c UNSUPPORTED_FORMAT_PATTERN
	d instance
	<init> ()V <init>
	c ()Lly; loadDefault
	a (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V loadFromJson
	a ()Lly; getInstance
	a (Lly;)V inject
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	b (Ljava/lang/String;)Z has
	b ()Z isDefaultRightToLeft
	a (Lnu;)Laex; getVisualOrder
	a (Ljava/util/List;)Ljava/util/List; getVisualOrder
	<clinit> ()V <clinit>
ly$1 net/minecraft/locale/Language$1
	a val$storage
	<init> (Ljava/util/Map;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	b (Ljava/lang/String;)Z has
	b ()Z isDefaultRightToLeft
	a (Lnu;)Laex; getVisualOrder
	a (Lnu;Laey;)Z lambda$getVisualOrder$1
	a (Laey;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$null$0
lz net/minecraft/locale/package-info
ma net/minecraft/nbt/ByteArrayTag
	a TYPE
	b data
	<init> ([B)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)[B toArray
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	c ()Lmt; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	d ()[B getAsByteArray
	size ()I size
	a (I)Lmb; get
	a (ILmb;)Lmb; set
	b (ILmb;)V add
	a (ILmt;)Z setTag
	b (ILmt;)Z addTag
	b (I)Lmb; remove
	d_ ()B getElementType
	clear ()V clear
	c (I)Lmt; remove
	c (ILmt;)V add
	d (ILmt;)Lmt; set
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
ma$1 net/minecraft/nbt/ByteArrayTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lma; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mb net/minecraft/nbt/ByteTag
	a TYPE
	b ZERO
	c ONE
	h data
	<init> (B)V <init>
	a (B)Lmb; valueOf
	a (Z)Lmb; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmb; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
	c ()Lmt; copy
	<init> (BLmb$1;)V <init>
	<clinit> ()V <clinit>
mb$1 net/minecraft/nbt/ByteTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmb; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mb$a net/minecraft/nbt/ByteTag$Cache
	a cache
	<init> ()V <init>
	a ()[Lmb; access$100
	<clinit> ()V <clinit>
mc net/minecraft/nbt/CollectionTag
	<init> ()V <init>
	d (ILmt;)Lmt; set
	c (ILmt;)V add
	c (I)Lmt; remove
	a (ILmt;)Z setTag
	b (ILmt;)Z addTag
	d_ ()B getElementType
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
md net/minecraft/nbt/CompoundTag
	a CODEC
	c LOGGER
	h SIMPLE_VALUE
	b TYPE
	i tags
	<init> (Ljava/util/Map;)V <init>
	<init> ()V <init>
	a (Ljava/io/DataOutput;)V write
	d ()Ljava/util/Set; getAllKeys
	a ()B getId
	b ()Lmv; getType
	e ()I size
	a (Ljava/lang/String;Lmt;)Lmt; put
	a (Ljava/lang/String;B)V putByte
	a (Ljava/lang/String;S)V putShort
	b (Ljava/lang/String;I)V putInt
	a (Ljava/lang/String;J)V putLong
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	b (Ljava/lang/String;)Z hasUUID
	a (Ljava/lang/String;F)V putFloat
	a (Ljava/lang/String;D)V putDouble
	a (Ljava/lang/String;Ljava/lang/String;)V putString
	a (Ljava/lang/String;[B)V putByteArray
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;[I)V putIntArray
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	a (Ljava/lang/String;[J)V putLongArray
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	a (Ljava/lang/String;Z)V putBoolean
	c (Ljava/lang/String;)Lmt; get
	d (Ljava/lang/String;)B getTagType
	e (Ljava/lang/String;)Z contains
	c (Ljava/lang/String;I)Z contains
	f (Ljava/lang/String;)B getByte
	g (Ljava/lang/String;)S getShort
	h (Ljava/lang/String;)I getInt
	i (Ljava/lang/String;)J getLong
	j (Ljava/lang/String;)F getFloat
	k (Ljava/lang/String;)D getDouble
	l (Ljava/lang/String;)Ljava/lang/String; getString
	m (Ljava/lang/String;)[B getByteArray
	n (Ljava/lang/String;)[I getIntArray
	o (Ljava/lang/String;)[J getLongArray
	p (Ljava/lang/String;)Lmd; getCompound
	d (Ljava/lang/String;I)Lmj; getList
	q (Ljava/lang/String;)Z getBoolean
	r (Ljava/lang/String;)V remove
	e_ ()V stripEmptyChildren
	toString ()Ljava/lang/String; toString
	isEmpty ()Z isEmpty
	a (Ljava/lang/String;Lmv;Ljava/lang/ClassCastException;)Ll; createReport
	g ()Lmd; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;Lmt;Ljava/io/DataOutput;)V writeNamedTag
	c (Ljava/io/DataInput;Lmm;)B readNamedTagType
	d (Ljava/io/DataInput;Lmm;)Ljava/lang/String; readNamedTagName
	b (Lmv;Ljava/lang/String;Ljava/io/DataInput;ILmm;)Lmt; readNamedTagData
	a (Lmd;)Lmd; merge
	s (Ljava/lang/String;)Ljava/lang/String; handleEscape
	t (Ljava/lang/String;)Lnr; handleEscapePretty
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	h ()Ljava/util/Map; entries
	c ()Lmt; copy
	u (Ljava/lang/String;)Ljava/lang/String; lambda$createReport$2
	b (Lmd;)Lcom/mojang/serialization/Dynamic; lambda$static$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$static$0
	a (Ljava/io/DataInput;Lmm;)B access$000
	b (Ljava/io/DataInput;Lmm;)Ljava/lang/String; access$100
	a (Lmv;Ljava/lang/String;Ljava/io/DataInput;ILmm;)Lmt; access$200
	<clinit> ()V <clinit>
md$1 net/minecraft/nbt/CompoundTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmd; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILmm;)Lmt; load
me net/minecraft/nbt/DoubleTag
	a ZERO
	b TYPE
	c data
	<init> (D)V <init>
	a (D)Lme; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lme; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
	c ()Lmt; copy
	<clinit> ()V <clinit>
me$1 net/minecraft/nbt/DoubleTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lme; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mf net/minecraft/nbt/EndTag
	a TYPE
	b INSTANCE
	<init> ()V <init>
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmf; copy
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	c ()Lmt; copy
	<clinit> ()V <clinit>
mf$1 net/minecraft/nbt/EndTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmf; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mg net/minecraft/nbt/FloatTag
	a ZERO
	b TYPE
	c data
	<init> (F)V <init>
	a (F)Lmg; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmg; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
	c ()Lmt; copy
	<clinit> ()V <clinit>
mg$1 net/minecraft/nbt/FloatTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmg; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mh net/minecraft/nbt/IntArrayTag
	a TYPE
	b data
	<init> ([I)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)[I toArray
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmh; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	g ()[I getAsIntArray
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	size ()I size
	a (I)Lmi; get
	a (ILmi;)Lmi; set
	b (ILmi;)V add
	a (ILmt;)Z setTag
	b (ILmt;)Z addTag
	b (I)Lmi; remove
	d_ ()B getElementType
	clear ()V clear
	c (I)Lmt; remove
	c (ILmt;)V add
	d (ILmt;)Lmt; set
	c ()Lmt; copy
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
mh$1 net/minecraft/nbt/IntArrayTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmh; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mi net/minecraft/nbt/IntTag
	a TYPE
	b data
	<init> (I)V <init>
	a (I)Lmi; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmi; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
	c ()Lmt; copy
	<init> (ILmi$1;)V <init>
	<clinit> ()V <clinit>
mi$1 net/minecraft/nbt/IntTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmi; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mi$a net/minecraft/nbt/IntTag$Cache
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
mj net/minecraft/nbt/ListTag
	a TYPE
	b INLINE_ELEMENT_TYPES
	c list
	h type
	<init> (Ljava/util/List;B)V <init>
	<init> ()V <init>
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	g ()V updateTypeAfterRemove
	c (I)Lmt; remove
	e_ ()V stripEmptyChildren
	isEmpty ()Z isEmpty
	a (I)Lmd; getCompound
	b (I)Lmj; getList
	d (I)S getShort
	e (I)I getInt
	f (I)[I getIntArray
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	j (I)Ljava/lang/String; getString
	size ()I size
	k (I)Lmt; get
	d (ILmt;)Lmt; set
	c (ILmt;)V add
	a (ILmt;)Z setTag
	b (ILmt;)Z addTag
	a (Lmt;)Z updateType
	d ()Lmj; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	d_ ()B getElementType
	clear ()V clear
	c ()Lmt; copy
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<init> (Ljava/util/List;BLmj$1;)V <init>
	<clinit> ()V <clinit>
mj$1 net/minecraft/nbt/ListTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmj; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mk net/minecraft/nbt/LongArrayTag
	a TYPE
	b data
	<init> ([J)V <init>
	<init> (Lit/unimi/dsi/fastutil/longs/LongSet;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)[J toArray
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmk; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	g ()[J getAsLongArray
	size ()I size
	a (I)Lml; get
	a (ILml;)Lml; set
	b (ILml;)V add
	a (ILmt;)Z setTag
	b (ILmt;)Z addTag
	b (I)Lml; remove
	d_ ()B getElementType
	clear ()V clear
	c (I)Lmt; remove
	c (ILmt;)V add
	d (ILmt;)Lmt; set
	c ()Lmt; copy
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
mk$1 net/minecraft/nbt/LongArrayTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmk; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILmm;)Lmt; load
ml net/minecraft/nbt/LongTag
	a TYPE
	b data
	<init> (J)V <init>
	a (J)Lml; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lml; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
	c ()Lmt; copy
	<init> (JLml$1;)V <init>
	<clinit> ()V <clinit>
ml$1 net/minecraft/nbt/LongTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lml; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
ml$a net/minecraft/nbt/LongTag$Cache
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
mm net/minecraft/nbt/NbtAccounter
	a UNLIMITED
	b quota
	c usage
	<init> (J)V <init>
	a (J)V accountBits
	<clinit> ()V <clinit>
mm$1 net/minecraft/nbt/NbtAccounter$1
	<init> (J)V <init>
	a (J)V accountBits
mn net/minecraft/nbt/NbtIo
	<init> ()V <init>
	a (Ljava/io/File;)Lmd; readCompressed
	a (Ljava/io/InputStream;)Lmd; readCompressed
	a (Lmd;Ljava/io/File;)V writeCompressed
	a (Lmd;Ljava/io/OutputStream;)V writeCompressed
	b (Lmd;Ljava/io/File;)V write
	b (Ljava/io/File;)Lmd; read
	a (Ljava/io/DataInput;)Lmd; read
	a (Ljava/io/DataInput;Lmm;)Lmd; read
	a (Lmd;Ljava/io/DataOutput;)V write
	a (Lmt;Ljava/io/DataOutput;)V writeUnnamedTag
	a (Ljava/io/DataInput;ILmm;)Lmt; readUnnamedTag
mo net/minecraft/nbt/NbtOps
	a INSTANCE
	<init> ()V <init>
	a ()Lmt; empty
	a (Lcom/mojang/serialization/DynamicOps;Lmt;)Ljava/lang/Object; convertTo
	a (Lmt;)Lcom/mojang/serialization/DataResult; getNumberValue
	a (Ljava/lang/Number;)Lmt; createNumeric
	a (B)Lmt; createByte
	a (S)Lmt; createShort
	a (I)Lmt; createInt
	a (J)Lmt; createLong
	a (F)Lmt; createFloat
	a (D)Lmt; createDouble
	a (Z)Lmt; createBoolean
	b (Lmt;)Lcom/mojang/serialization/DataResult; getStringValue
	a (Ljava/lang/String;)Lmt; createString
	a (BB)Lmc; createGenericList
	a (BBB)Z typesMatch
	a (Lmc;Lmt;Lmt;)V fillOne
	a (Lmc;Lmt;Ljava/util/List;)V fillMany
	a (Lmt;Lmt;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lmt;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lmt;Lmt;Lmt;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lmt;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	c (Lmt;)Lcom/mojang/serialization/DataResult; getMapValues
	d (Lmt;)Lcom/mojang/serialization/DataResult; getMapEntries
	e (Lmt;)Lcom/mojang/serialization/DataResult; getMap
	a (Ljava/util/stream/Stream;)Lmt; createMap
	f (Lmt;)Lcom/mojang/serialization/DataResult; getStream
	g (Lmt;)Lcom/mojang/serialization/DataResult; getList
	h (Lmt;)Lcom/mojang/serialization/DataResult; getByteBuffer
	a (Ljava/nio/ByteBuffer;)Lmt; createByteList
	i (Lmt;)Lcom/mojang/serialization/DataResult; getIntStream
	a (Ljava/util/stream/IntStream;)Lmt; createIntList
	j (Lmt;)Lcom/mojang/serialization/DataResult; getLongStream
	a (Ljava/util/stream/LongStream;)Lmt; createLongList
	b (Ljava/util/stream/Stream;)Lmt; createList
	a (Lmt;Ljava/lang/String;)Lmt; remove
	toString ()Ljava/lang/String; toString
	mapBuilder ()Lcom/mojang/serialization/RecordBuilder; mapBuilder
	remove (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; remove
	createLongList (Ljava/util/stream/LongStream;)Ljava/lang/Object; createLongList
	getLongStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getLongStream
	createIntList (Ljava/util/stream/IntStream;)Ljava/lang/Object; createIntList
	getIntStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getIntStream
	createByteList (Ljava/nio/ByteBuffer;)Ljava/lang/Object; createByteList
	getByteBuffer (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getByteBuffer
	createList (Ljava/util/stream/Stream;)Ljava/lang/Object; createList
	getList (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getList
	getStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStream
	getMap (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMap
	createMap (Ljava/util/stream/Stream;)Ljava/lang/Object; createMap
	getMapEntries (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapEntries
	getMapValues (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapValues
	mergeToMap (Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	mergeToMap (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToMap
	mergeToList (Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	mergeToList (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToList
	createString (Ljava/lang/String;)Ljava/lang/Object; createString
	getStringValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStringValue
	createBoolean (Z)Ljava/lang/Object; createBoolean
	createDouble (D)Ljava/lang/Object; createDouble
	createFloat (F)Ljava/lang/Object; createFloat
	createLong (J)Ljava/lang/Object; createLong
	createInt (I)Ljava/lang/Object; createInt
	createShort (S)Ljava/lang/Object; createShort
	createByte (B)Ljava/lang/Object; createByte
	createNumeric (Ljava/lang/Number;)Ljava/lang/Object; createNumeric
	getNumberValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getNumberValue
	convertTo (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; convertTo
	empty ()Ljava/lang/Object; empty
	a (Lmd;Lmd;Ljava/lang/String;)V lambda$remove$15
	a (Ljava/lang/String;Ljava/lang/String;)Z lambda$remove$14
	k (Lmt;)Ljava/lang/Long; lambda$createList$13
	l (Lmt;)Ljava/lang/Integer; lambda$createList$12
	m (Lmt;)Ljava/lang/Byte; lambda$createList$11
	n (Lmt;)Lmt; lambda$getStream$10
	a (Lmd;Lcom/mojang/datafixers/util/Pair;)V lambda$createMap$9
	a (Lmd;Ljava/util/function/BiConsumer;)V lambda$getMapEntries$8
	a (Ljava/util/function/BiConsumer;Lmd;Ljava/lang/String;)V lambda$null$7
	a (Lmd;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$getMapValues$6
	a (Ljava/util/List;Lmd;Lcom/mojang/datafixers/util/Pair;)V lambda$mergeToMap$5
	b (Lmd;Lmd;Ljava/lang/String;)V lambda$mergeToMap$4
	c (Lmd;Lmd;Ljava/lang/String;)V lambda$mergeToMap$3
	a (Lmc;Lmt;)V lambda$fillMany$2
	b (Lmc;Lmt;)V lambda$fillMany$1
	c (Lmc;Lmt;)V lambda$fillOne$0
	<clinit> ()V <clinit>
mo$1 net/minecraft/nbt/NbtOps$1
	a val$tag
	b this$0
	<init> (Lmo;Lmd;)V <init>
	a (Lmt;)Lmt; get
	a (Ljava/lang/String;)Lmt; get
	entries ()Ljava/util/stream/Stream; entries
	toString ()Ljava/lang/String; toString
	get (Ljava/lang/String;)Ljava/lang/Object; get
	get (Ljava/lang/Object;)Ljava/lang/Object; get
	a (Lmd;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$entries$0
mo$a net/minecraft/nbt/NbtOps$NbtRecordBuilder
	a this$0
	<init> (Lmo;)V <init>
	a ()Lmd; initBuilder
	a (Ljava/lang/String;Lmt;Lmd;)Lmd; append
	a (Lmd;Lmt;)Lcom/mojang/serialization/DataResult; build
	append (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; append
	build (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; build
	initBuilder ()Ljava/lang/Object; initBuilder
mp net/minecraft/nbt/NbtUtils
	a LOGGER
	<init> ()V <init>
	a (Lmd;)Lcom/mojang/authlib/GameProfile; readGameProfile
	a (Lmd;Lcom/mojang/authlib/GameProfile;)Lmd; writeGameProfile
	a (Lmt;Lmt;Z)Z compareNbt
	a (Ljava/util/UUID;)Lmh; createUUID
	a (Lmt;)Ljava/util/UUID; loadUUID
	b (Lmd;)Lfx; readBlockPos
	a (Lfx;)Lmd; writeBlockPos
	c (Lmd;)Lcee; readBlockState
	a (Lceg;Lcfg;Ljava/lang/String;Lmd;Lmd;)Lceg; setValueHelper
	a (Lcee;)Lmd; writeBlockState
	a (Lcuu;)Lmd; writeFluidState
	a (Lcfg;Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Lmt;)Ljava/lang/String; prettyPrint
	a (Lmt;Z)Ljava/lang/String; prettyPrint
	a (Ljava/lang/StringBuilder;Lmt;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	a (Lcom/mojang/datafixers/DataFixer;Lafx;Lmd;I)Lmd; update
	a (Lcom/mojang/datafixers/DataFixer;Lafx;Lmd;II)Lmd; update
	<clinit> ()V <clinit>
mq net/minecraft/nbt/NumericTag
	<init> ()V <init>
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
mr net/minecraft/nbt/ShortTag
	a TYPE
	b data
	<init> (S)V <init>
	a (S)Lmr; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lmr; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
	c ()Lmt; copy
	<init> (SLmr$1;)V <init>
	<clinit> ()V <clinit>
mr$1 net/minecraft/nbt/ShortTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lmr; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mr$a net/minecraft/nbt/ShortTag$Cache
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
ms net/minecraft/nbt/StringTag
	a TYPE
	b EMPTY
	c data
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Lms; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()B getId
	b ()Lmv; getType
	toString ()Ljava/lang/String; toString
	d ()Lms; copy
	isEmpty ()Z isEmpty
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	f_ ()Ljava/lang/String; getAsString
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	c ()Lmt; copy
	<clinit> ()V <clinit>
ms$1 net/minecraft/nbt/StringTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILmm;)Lms; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	c ()Z isValue
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mt net/minecraft/nbt/Tag
	d SYNTAX_HIGHLIGHTING_KEY
	e SYNTAX_HIGHLIGHTING_STRING
	f SYNTAX_HIGHLIGHTING_NUMBER
	g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	a (Ljava/io/DataOutput;)V write
	toString ()Ljava/lang/String; toString
	a ()B getId
	b ()Lmv; getType
	c ()Lmt; copy
	e_ ()V stripEmptyChildren
	isEmpty ()Z isEmpty
	f_ ()Ljava/lang/String; getAsString
	l ()Lnr; getPrettyDisplay
	a (Ljava/lang/String;I)Lnr; getPrettyDisplay
	<clinit> ()V <clinit>
mu net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g DOUBLE_PATTERN_NOSUFFIX
	h DOUBLE_PATTERN
	i FLOAT_PATTERN
	j BYTE_PATTERN
	k LONG_PATTERN
	l SHORT_PATTERN
	m INT_PATTERN
	n reader
	a (Ljava/lang/String;)Lmd; parseTag
	a ()Lmd; readSingleStruct
	<init> (Lcom/mojang/brigadier/StringReader;)V <init>
	b ()Ljava/lang/String; readKey
	c ()Lmt; readTypedValue
	b (Ljava/lang/String;)Lmt; type
	d ()Lmt; readValue
	e ()Lmt; readList
	f ()Lmd; readStruct
	g ()Lmt; readListTag
	h ()Lmt; readArrayTag
	a (Lmv;Lmv;)Ljava/util/List; readArray
	i ()Z hasElementSeparator
	a (C)V expect
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
mv net/minecraft/nbt/TagType
	b (Ljava/io/DataInput;ILmm;)Lmt; load
	c ()Z isValue
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	a (I)Lmv; createInvalid
mv$1 net/minecraft/nbt/TagType$1
	a val$id
	<init> (I)V <init>
	a (Ljava/io/DataInput;ILmm;)Lmf; load
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILmm;)Lmt; load
mw net/minecraft/nbt/TagTypes
	a TYPES
	<init> ()V <init>
	a (I)Lmv; getType
	<clinit> ()V <clinit>
mx net/minecraft/nbt/package-info
my net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	<init> (Ljavax/crypto/Cipher;)V <init>
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
mz net/minecraft/network/CipherDecoder
	a cipher
	<init> (Ljavax/crypto/Cipher;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
	decode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V decode
na net/minecraft/network/CipherEncoder
	a cipher
	<init> (Ljavax/crypto/Cipher;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
nb net/minecraft/network/CompressionDecoder
	a inflater
	b threshold
	<init> (I)V <init>
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
	a ()I getThreshold
	a (I)V setThreshold
nc net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	<init> (I)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
	a ()I getThreshold
	a (I)V setThreshold
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
nd net/minecraft/network/Connection
	g LOGGER
	a ROOT_MARKER
	b PACKET_MARKER
	c ATTRIBUTE_PROTOCOL
	d NETWORK_WORKER_GROUP
	e NETWORK_EPOLL_WORKER_GROUP
	f LOCAL_WORKER_GROUP
	h receiving
	i queue
	j channel
	k address
	l packetListener
	m disconnectedReason
	n encrypted
	o disconnectionHandled
	p receivedPackets
	q sentPackets
	r averageReceivedPackets
	s averageSentPackets
	t tickCount
	u handlingFault
	<init> (Lok;)V <init>
	channelActive (Lio/netty/channel/ChannelHandlerContext;)V channelActive
	a (Lne;)V setProtocol
	channelInactive (Lio/netty/channel/ChannelHandlerContext;)V channelInactive
	exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V exceptionCaught
	a (Lio/netty/channel/ChannelHandlerContext;Loj;)V channelRead0
	a (Loj;Lni;)V genericsFtw
	a (Lni;)V setListener
	a (Loj;)V send
	a (Loj;Lio/netty/util/concurrent/GenericFutureListener;)V send
	b (Loj;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
	p ()V flushQueue
	a ()V tick
	b ()V tickSecond
	c ()Ljava/net/SocketAddress; getRemoteAddress
	a (Lnr;)V disconnect
	d ()Z isMemoryConnection
	e ()Lok; getReceiving
	f ()Lok; getSending
	a (Ljava/net/InetAddress;IZ)Lnd; connectToServer
	a (Ljava/net/SocketAddress;)Lnd; connectToLocalServer
	a (Ljavax/crypto/SecretKey;)V setEncryptionKey
	g ()Z isEncrypted
	h ()Z isConnected
	i ()Z isConnecting
	j ()Lni; getPacketListener
	k ()Lnr; getDisconnectedReason
	l ()V setReadOnly
	a (I)V setupCompression
	m ()V handleDisconnection
	n ()F getAverageReceivedPackets
	o ()F getAverageSentPackets
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead0
	a (Lne;Lne;Loj;Lio/netty/util/concurrent/GenericFutureListener;)V lambda$sendPacket$4
	a (Lnr;Lio/netty/util/concurrent/Future;)V lambda$exceptionCaught$3
	q ()Lio/netty/channel/DefaultEventLoopGroup; lambda$static$2
	r ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	s ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
	<clinit> ()V <clinit>
nd$1 net/minecraft/network/Connection$1
	a val$connection
	<init> (Lnd;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
nd$2 net/minecraft/network/Connection$2
	a val$connection
	<init> (Lnd;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
nd$a net/minecraft/network/Connection$PacketHolder
	a packet
	b listener
	<init> (Loj;Lio/netty/util/concurrent/GenericFutureListener;)V <init>
	a (Lnd$a;)Loj; access$000
	b (Lnd$a;)Lio/netty/util/concurrent/GenericFutureListener; access$100
ne net/minecraft/network/ConnectionProtocol
	a HANDSHAKING
	b PLAY
	c STATUS
	d LOGIN
	e LOOKUP
	f PROTOCOL_BY_PACKET
	g id
	h flows
	i $VALUES
	values ()[Lne; values
	valueOf (Ljava/lang/String;)Lne; valueOf
	b ()Lne$b; protocol
	<init> (Ljava/lang/String;IILne$b;)V <init>
	a (Lok;Loj;)Ljava/lang/Integer; getPacketId
	a (Lok;I)Loj; createPacket
	a ()I getId
	a (I)Lne; getById
	a (Loj;)Lne; getProtocolForPacket
	a (Lne;Lok;Lne$a;)V lambda$static$1
	a (Lne;Ljava/lang/Class;)V lambda$null$0
	<clinit> ()V <clinit>
ne$1 net/minecraft/network/ConnectionProtocol$1
ne$a net/minecraft/network/ConnectionProtocol$PacketSet
	a classToId
	b idToConstructor
	<init> ()V <init>
	a (Ljava/lang/Class;Ljava/util/function/Supplier;)Lne$a; addPacket
	a (Ljava/lang/Class;)Ljava/lang/Integer; getId
	a (I)Loj; createPacket
	a ()Ljava/lang/Iterable; getAllPackets
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$0
	<init> (Lne$1;)V <init>
ne$b net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	a flows
	<init> ()V <init>
	a (Lok;Lne$a;)Lne$b; addFlow
	<init> (Lne$1;)V <init>
	a (Lne$b;)Ljava/util/Map; access$200
nf net/minecraft/network/FriendlyByteBuf
	a source
	<init> (Lio/netty/buffer/ByteBuf;)V <init>
	a (I)I getVarIntSize
	a (J)I getVarLongSize
	a (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readWithCodec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeWithCodec
	a (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V writeCollection
	a ([B)Lnf; writeByteArray
	a ()[B readByteArray
	b (I)[B readByteArray
	a ([I)Lnf; writeVarIntArray
	b ()[I readVarIntArray
	c (I)[I readVarIntArray
	a ([J)Lnf; writeLongArray
	c ()[J readLongArray
	b ([J)[J readLongArray
	a ([JI)[J readLongArray
	d ()[B accessByteBufWithCorrectSize
	e ()Lfx; readBlockPos
	a (Lfx;)Lnf; writeBlockPos
	f ()Lbra; readChunkPos
	a (Lbra;)Lnf; writeChunkPos
	g ()Lgp; readSectionPos
	a (Lgp;)Lnf; writeSectionPos
	h ()Lnr; readComponent
	a (Lnr;)Lnf; writeComponent
	a (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	a (Ljava/lang/Enum;)Lnf; writeEnum
	i ()I readVarInt
	j ()J readVarLong
	a (Ljava/util/UUID;)Lnf; writeUUID
	k ()Ljava/util/UUID; readUUID
	d (I)Lnf; writeVarInt
	b (J)Lnf; writeVarLong
	a (Lmd;)Lnf; writeNbt
	l ()Lmd; readNbt
	m ()Lmd; readAnySizeNbt
	a (Lmm;)Lmd; readNbt
	a (Lbly;)Lnf; writeItem
	n ()Lbly; readItem
	o ()Ljava/lang/String; readUtf
	e (I)Ljava/lang/String; readUtf
	a (Ljava/lang/String;)Lnf; writeUtf
	a (Ljava/lang/String;I)Lnf; writeUtf
	p ()Lvk; readResourceLocation
	a (Lvk;)Lnf; writeResourceLocation
	q ()Ljava/util/Date; readDate
	a (Ljava/util/Date;)Lnf; writeDate
	r ()Ldcg; readBlockHitResult
	a (Ldcg;)V writeBlockHitResult
	capacity ()I capacity
	capacity (I)Lio/netty/buffer/ByteBuf; capacity
	maxCapacity ()I maxCapacity
	alloc ()Lio/netty/buffer/ByteBufAllocator; alloc
	order ()Ljava/nio/ByteOrder; order
	order (Ljava/nio/ByteOrder;)Lio/netty/buffer/ByteBuf; order
	unwrap ()Lio/netty/buffer/ByteBuf; unwrap
	isDirect ()Z isDirect
	isReadOnly ()Z isReadOnly
	asReadOnly ()Lio/netty/buffer/ByteBuf; asReadOnly
	readerIndex ()I readerIndex
	readerIndex (I)Lio/netty/buffer/ByteBuf; readerIndex
	writerIndex ()I writerIndex
	writerIndex (I)Lio/netty/buffer/ByteBuf; writerIndex
	setIndex (II)Lio/netty/buffer/ByteBuf; setIndex
	readableBytes ()I readableBytes
	writableBytes ()I writableBytes
	maxWritableBytes ()I maxWritableBytes
	isReadable ()Z isReadable
	isReadable (I)Z isReadable
	isWritable ()Z isWritable
	isWritable (I)Z isWritable
	clear ()Lio/netty/buffer/ByteBuf; clear
	markReaderIndex ()Lio/netty/buffer/ByteBuf; markReaderIndex
	resetReaderIndex ()Lio/netty/buffer/ByteBuf; resetReaderIndex
	markWriterIndex ()Lio/netty/buffer/ByteBuf; markWriterIndex
	resetWriterIndex ()Lio/netty/buffer/ByteBuf; resetWriterIndex
	discardReadBytes ()Lio/netty/buffer/ByteBuf; discardReadBytes
	discardSomeReadBytes ()Lio/netty/buffer/ByteBuf; discardSomeReadBytes
	ensureWritable (I)Lio/netty/buffer/ByteBuf; ensureWritable
	ensureWritable (IZ)I ensureWritable
	getBoolean (I)Z getBoolean
	getByte (I)B getByte
	getUnsignedByte (I)S getUnsignedByte
	getShort (I)S getShort
	getShortLE (I)S getShortLE
	getUnsignedShort (I)I getUnsignedShort
	getUnsignedShortLE (I)I getUnsignedShortLE
	getMedium (I)I getMedium
	getMediumLE (I)I getMediumLE
	getUnsignedMedium (I)I getUnsignedMedium
	getUnsignedMediumLE (I)I getUnsignedMediumLE
	getInt (I)I getInt
	getIntLE (I)I getIntLE
	getUnsignedInt (I)J getUnsignedInt
	getUnsignedIntLE (I)J getUnsignedIntLE
	getLong (I)J getLong
	getLongLE (I)J getLongLE
	getChar (I)C getChar
	getFloat (I)F getFloat
	getDouble (I)D getDouble
	getBytes (ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (I[B)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (I[BII)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILjava/io/OutputStream;I)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILjava/nio/channels/GatheringByteChannel;I)I getBytes
	getBytes (ILjava/nio/channels/FileChannel;JI)I getBytes
	getCharSequence (IILjava/nio/charset/Charset;)Ljava/lang/CharSequence; getCharSequence
	setBoolean (IZ)Lio/netty/buffer/ByteBuf; setBoolean
	setByte (II)Lio/netty/buffer/ByteBuf; setByte
	setShort (II)Lio/netty/buffer/ByteBuf; setShort
	setShortLE (II)Lio/netty/buffer/ByteBuf; setShortLE
	setMedium (II)Lio/netty/buffer/ByteBuf; setMedium
	setMediumLE (II)Lio/netty/buffer/ByteBuf; setMediumLE
	setInt (II)Lio/netty/buffer/ByteBuf; setInt
	setIntLE (II)Lio/netty/buffer/ByteBuf; setIntLE
	setLong (IJ)Lio/netty/buffer/ByteBuf; setLong
	setLongLE (IJ)Lio/netty/buffer/ByteBuf; setLongLE
	setChar (II)Lio/netty/buffer/ByteBuf; setChar
	setFloat (IF)Lio/netty/buffer/ByteBuf; setFloat
	setDouble (ID)Lio/netty/buffer/ByteBuf; setDouble
	setBytes (ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (I[B)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (I[BII)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILjava/io/InputStream;I)I setBytes
	setBytes (ILjava/nio/channels/ScatteringByteChannel;I)I setBytes
	setBytes (ILjava/nio/channels/FileChannel;JI)I setBytes
	setZero (II)Lio/netty/buffer/ByteBuf; setZero
	setCharSequence (ILjava/lang/CharSequence;Ljava/nio/charset/Charset;)I setCharSequence
	readBoolean ()Z readBoolean
	readByte ()B readByte
	readUnsignedByte ()S readUnsignedByte
	readShort ()S readShort
	readShortLE ()S readShortLE
	readUnsignedShort ()I readUnsignedShort
	readUnsignedShortLE ()I readUnsignedShortLE
	readMedium ()I readMedium
	readMediumLE ()I readMediumLE
	readUnsignedMedium ()I readUnsignedMedium
	readUnsignedMediumLE ()I readUnsignedMediumLE
	readInt ()I readInt
	readIntLE ()I readIntLE
	readUnsignedInt ()J readUnsignedInt
	readUnsignedIntLE ()J readUnsignedIntLE
	readLong ()J readLong
	readLongLE ()J readLongLE
	readChar ()C readChar
	readFloat ()F readFloat
	readDouble ()D readDouble
	readBytes (I)Lio/netty/buffer/ByteBuf; readBytes
	readSlice (I)Lio/netty/buffer/ByteBuf; readSlice
	readRetainedSlice (I)Lio/netty/buffer/ByteBuf; readRetainedSlice
	readBytes (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; readBytes
	readBytes ([B)Lio/netty/buffer/ByteBuf; readBytes
	readBytes ([BII)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Ljava/io/OutputStream;I)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Ljava/nio/channels/GatheringByteChannel;I)I readBytes
	readCharSequence (ILjava/nio/charset/Charset;)Ljava/lang/CharSequence; readCharSequence
	readBytes (Ljava/nio/channels/FileChannel;JI)I readBytes
	skipBytes (I)Lio/netty/buffer/ByteBuf; skipBytes
	writeBoolean (Z)Lio/netty/buffer/ByteBuf; writeBoolean
	writeByte (I)Lio/netty/buffer/ByteBuf; writeByte
	writeShort (I)Lio/netty/buffer/ByteBuf; writeShort
	writeShortLE (I)Lio/netty/buffer/ByteBuf; writeShortLE
	writeMedium (I)Lio/netty/buffer/ByteBuf; writeMedium
	writeMediumLE (I)Lio/netty/buffer/ByteBuf; writeMediumLE
	writeInt (I)Lio/netty/buffer/ByteBuf; writeInt
	writeIntLE (I)Lio/netty/buffer/ByteBuf; writeIntLE
	writeLong (J)Lio/netty/buffer/ByteBuf; writeLong
	writeLongLE (J)Lio/netty/buffer/ByteBuf; writeLongLE
	writeChar (I)Lio/netty/buffer/ByteBuf; writeChar
	writeFloat (F)Lio/netty/buffer/ByteBuf; writeFloat
	writeDouble (D)Lio/netty/buffer/ByteBuf; writeDouble
	writeBytes (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes ([B)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes ([BII)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Ljava/io/InputStream;I)I writeBytes
	writeBytes (Ljava/nio/channels/ScatteringByteChannel;I)I writeBytes
	writeBytes (Ljava/nio/channels/FileChannel;JI)I writeBytes
	writeZero (I)Lio/netty/buffer/ByteBuf; writeZero
	writeCharSequence (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I writeCharSequence
	indexOf (IIB)I indexOf
	bytesBefore (B)I bytesBefore
	bytesBefore (IB)I bytesBefore
	bytesBefore (IIB)I bytesBefore
	forEachByte (Lio/netty/util/ByteProcessor;)I forEachByte
	forEachByte (IILio/netty/util/ByteProcessor;)I forEachByte
	forEachByteDesc (Lio/netty/util/ByteProcessor;)I forEachByteDesc
	forEachByteDesc (IILio/netty/util/ByteProcessor;)I forEachByteDesc
	copy ()Lio/netty/buffer/ByteBuf; copy
	copy (II)Lio/netty/buffer/ByteBuf; copy
	slice ()Lio/netty/buffer/ByteBuf; slice
	retainedSlice ()Lio/netty/buffer/ByteBuf; retainedSlice
	slice (II)Lio/netty/buffer/ByteBuf; slice
	retainedSlice (II)Lio/netty/buffer/ByteBuf; retainedSlice
	duplicate ()Lio/netty/buffer/ByteBuf; duplicate
	retainedDuplicate ()Lio/netty/buffer/ByteBuf; retainedDuplicate
	nioBufferCount ()I nioBufferCount
	nioBuffer ()Ljava/nio/ByteBuffer; nioBuffer
	nioBuffer (II)Ljava/nio/ByteBuffer; nioBuffer
	internalNioBuffer (II)Ljava/nio/ByteBuffer; internalNioBuffer
	nioBuffers ()[Ljava/nio/ByteBuffer; nioBuffers
	nioBuffers (II)[Ljava/nio/ByteBuffer; nioBuffers
	hasArray ()Z hasArray
	array ()[B array
	arrayOffset ()I arrayOffset
	hasMemoryAddress ()Z hasMemoryAddress
	memoryAddress ()J memoryAddress
	toString (Ljava/nio/charset/Charset;)Ljava/lang/String; toString
	toString (IILjava/nio/charset/Charset;)Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	compareTo (Lio/netty/buffer/ByteBuf;)I compareTo
	toString ()Ljava/lang/String; toString
	retain (I)Lio/netty/buffer/ByteBuf; retain
	retain ()Lio/netty/buffer/ByteBuf; retain
	touch ()Lio/netty/buffer/ByteBuf; touch
	touch (Ljava/lang/Object;)Lio/netty/buffer/ByteBuf; touch
	refCnt ()I refCnt
	release ()Z release
	release (I)Z release
	touch (Ljava/lang/Object;)Lio/netty/util/ReferenceCounted; touch
	touch ()Lio/netty/util/ReferenceCounted; touch
	retain (I)Lio/netty/util/ReferenceCounted; retain
	retain ()Lio/netty/util/ReferenceCounted; retain
	compareTo (Ljava/lang/Object;)I compareTo
	a (Ljava/util/function/BiConsumer;Ljava/lang/Object;)V lambda$writeCollection$0
ng net/minecraft/network/PacketDecoder
	a LOGGER
	b MARKER
	c flow
	<init> (Lok;)V <init>
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
	<clinit> ()V <clinit>
nh net/minecraft/network/PacketEncoder
	a LOGGER
	b MARKER
	c flow
	<init> (Lok;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Loj;Lio/netty/buffer/ByteBuf;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
	<clinit> ()V <clinit>
ni net/minecraft/network/PacketListener
	a (Lnr;)V onDisconnect
	a ()Lnd; getConnection
nj net/minecraft/network/RateKickingConnection
	g LOGGER
	h EXCEED_REASON
	i rateLimitPacketsPerSecond
	<init> (I)V <init>
	b ()V tickSecond
	a (Lio/netty/util/concurrent/Future;)V lambda$tickSecond$0
	<clinit> ()V <clinit>
nk net/minecraft/network/SkipPacketException
	<init> (Ljava/lang/Throwable;)V <init>
nl net/minecraft/network/Varint21FrameDecoder
	<init> ()V <init>
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
nm net/minecraft/network/Varint21LengthFieldPrepender
	<init> ()V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
nn net/minecraft/network/chat/BaseComponent
	a siblings
	d visualOrderText
	e decomposedWith
	f style
	<init> ()V <init>
	a (Lnr;)Lnx; append
	a ()Ljava/lang/String; getContents
	b ()Ljava/util/List; getSiblings
	a (Lob;)Lnx; setStyle
	c ()Lob; getStyle
	d ()Lnn; plainCopy
	e ()Lnx; copy
	f ()Laex; getVisualOrderText
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	g ()Lnx; plainCopy
no net/minecraft/network/chat/ChatType
	a CHAT
	b SYSTEM
	c GAME_INFO
	d index
	e interrupt
	f $VALUES
	values ()[Lno; values
	valueOf (Ljava/lang/String;)Lno; valueOf
	<init> (Ljava/lang/String;IBZ)V <init>
	a ()B getIndex
	a (B)Lno; getForIndex
	b ()Z shouldInterrupt
	<clinit> ()V <clinit>
np net/minecraft/network/chat/ClickEvent
	a action
	b value
	<init> (Lnp$a;Ljava/lang/String;)V <init>
	a ()Lnp$a; getAction
	b ()Ljava/lang/String; getValue
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
np$a net/minecraft/network/chat/ClickEvent$Action
	a OPEN_URL
	b OPEN_FILE
	c RUN_COMMAND
	d SUGGEST_COMMAND
	e CHANGE_PAGE
	f COPY_TO_CLIPBOARD
	g LOOKUP
	h allowFromServer
	i name
	j $VALUES
	values ()[Lnp$a; values
	valueOf (Ljava/lang/String;)Lnp$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Z)V <init>
	a ()Z isAllowedFromServer
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnp$a; getByName
	a (Lnp$a;)Lnp$a; lambda$static$0
	<clinit> ()V <clinit>
nq net/minecraft/network/chat/CommonComponents
	a OPTION_ON
	b OPTION_OFF
	c GUI_DONE
	d GUI_CANCEL
	e GUI_YES
	f GUI_NO
	g GUI_PROCEED
	h GUI_BACK
	i CONNECT_FAILED
	<init> ()V <init>
	a (Z)Lnr; optionStatus
	a (Lnr;Z)Lnx; optionStatus
	<clinit> ()V <clinit>
nr net/minecraft/network/chat/Component
	c ()Lob; getStyle
	a ()Ljava/lang/String; getContents
	getString ()Ljava/lang/String; getString
	a (I)Ljava/lang/String; getString
	b ()Ljava/util/List; getSiblings
	g ()Lnx; plainCopy
	e ()Lnx; copy
	f ()Laex; getVisualOrderText
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
	a (Lnu$a;)Ljava/util/Optional; visit
	b (Lnu$b;Lob;)Ljava/util/Optional; visitSelf
	b (Lnu$a;)Ljava/util/Optional; visitSelf
	b (Lob;)Ljava/util/List; toFlatList
	a (Ljava/lang/String;)Lnr; nullToEmpty
	a (Ljava/util/List;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$toFlatList$1
	a (ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional; lambda$getString$0
nr$a net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnx; deserialize
	a (Lob;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lnr;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lnr;)Ljava/lang/String; toJson
	b (Lnr;)Lcom/google/gson/JsonElement; toJsonTree
	a (Ljava/lang/String;)Lnx; fromJson
	a (Lcom/google/gson/JsonElement;)Lnx; fromJson
	b (Ljava/lang/String;)Lnx; fromJsonLenient
	a (Lcom/mojang/brigadier/StringReader;)Lnx; fromJson
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a ()Ljava/lang/reflect/Field; lambda$static$2
	b ()Ljava/lang/reflect/Field; lambda$static$1
	c ()Lcom/google/gson/Gson; lambda$static$0
	<clinit> ()V <clinit>
ns net/minecraft/network/chat/ComponentUtils
	<init> ()V <init>
	a (Lnx;Lob;)Lnx; mergeStyles
	a (Ldb;Lnr;Lapx;I)Lnx; updateForEntity
	a (Ldb;Lob;Lapx;I)Lob; resolveStyle
	a (Lcom/mojang/authlib/GameProfile;)Lnr; getDisplayName
	a (Ljava/util/Collection;)Lnr; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lnr; formatAndSortList
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lnx; formatList
	a (Lnr;)Lnx; wrapInSquareBrackets
	a (Lcom/mojang/brigadier/Message;)Lnr; fromMessage
	a (Ljava/lang/String;)Lnr; lambda$formatList$0
nt net/minecraft/network/chat/ContextAwareComponent
	a (Ldb;Lapx;I)Lnx; resolve
nu net/minecraft/network/chat/FormattedText
	b STOP_ITERATION
	c EMPTY
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
	b (Ljava/lang/String;)Lnu; of
	a (Ljava/lang/String;Lob;)Lnu; of
	a ([Lnu;)Lnu; composite
	a (Ljava/util/List;)Lnu; composite
	getString ()Ljava/lang/String; getString
	a (Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional; lambda$getString$0
	<clinit> ()V <clinit>
nu$1 net/minecraft/network/chat/FormattedText$1
	<init> ()V <init>
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
nu$2 net/minecraft/network/chat/FormattedText$2
	a val$text
	<init> (Ljava/lang/String;)V <init>
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
nu$3 net/minecraft/network/chat/FormattedText$3
	a val$text
	d val$style
	<init> (Ljava/lang/String;Lob;)V <init>
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
nu$4 net/minecraft/network/chat/FormattedText$4
	a val$parts
	<init> (Ljava/util/List;)V <init>
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lob;)Ljava/util/Optional; visit
nu$a net/minecraft/network/chat/FormattedText$ContentConsumer
	accept (Ljava/lang/String;)Ljava/util/Optional; accept
nu$b net/minecraft/network/chat/FormattedText$StyledContentConsumer
	accept (Lob;Ljava/lang/String;)Ljava/util/Optional; accept
nv net/minecraft/network/chat/HoverEvent
	a LOGGER
	b action
	c value
	<init> (Lnv$a;Ljava/lang/Object;)V <init>
	a ()Lnv$a; getAction
	a (Lnv$a;)Ljava/lang/Object; getValue
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	a (Lcom/google/gson/JsonObject;)Lnv; deserialize
	b ()Lcom/google/gson/JsonObject; serialize
	c ()Lorg/apache/logging/log4j/Logger; access$100
	<clinit> ()V <clinit>
nv$a net/minecraft/network/chat/HoverEvent$Action
	a SHOW_TEXT
	b SHOW_ITEM
	c SHOW_ENTITY
	d LOOKUP
	e name
	f allowFromServer
	g argDeserializer
	h argSerializer
	i legacyArgDeserializer
	<init> (Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	a ()Z isAllowedFromServer
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnv$a; getByName
	b (Ljava/lang/Object;)Ljava/lang/Object; cast
	a (Lcom/google/gson/JsonElement;)Lnv; deserialize
	a (Lnr;)Lnv; deserializeFromLegacy
	a (Ljava/lang/Object;)Lcom/google/gson/JsonElement; serializeArg
	toString ()Ljava/lang/String; toString
	a (Lnv$a;)Lnv$a; lambda$static$3
	b (Lnr;)Lnv$c; lambda$static$2
	c (Ljava/lang/Object;)Lcom/google/gson/JsonElement; lambda$static$1
	b (Lcom/google/gson/JsonElement;)Lnv$c; lambda$static$0
	a (Lnv$a;Ljava/lang/Object;)Ljava/lang/Object; access$000
	<clinit> ()V <clinit>
nv$b net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	a type
	b id
	c name
	d linesCache
	<init> (Laqb;Ljava/util/UUID;Lnr;)V <init>
	a (Lcom/google/gson/JsonElement;)Lnv$b; create
	a (Lnr;)Lnv$b; create
	a ()Lcom/google/gson/JsonElement; serialize
	b ()Ljava/util/List; getTooltipLines
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
nv$c net/minecraft/network/chat/HoverEvent$ItemStackInfo
	a item
	b count
	c tag
	d itemStack
	<init> (Lblu;ILmd;)V <init>
	<init> (Lbly;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Lbly; getItemStack
	b (Lcom/google/gson/JsonElement;)Lnv$c; create
	b (Lnr;)Lnv$c; create
	b ()Lcom/google/gson/JsonElement; serialize
	a (Lnr;)Lnv$c; access$200
	a (Lnv$c;)Lcom/google/gson/JsonElement; access$300
	a (Lcom/google/gson/JsonElement;)Lnv$c; access$400
nw net/minecraft/network/chat/KeybindComponent
	d keyResolver
	e name
	f nameResolver
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/util/function/Function;)V setKeyResolver
	j ()Lnr; getNestedComponent
	b (Lnu$a;)Ljava/util/Optional; visitSelf
	b (Lnu$b;Lob;)Ljava/util/Optional; visitSelf
	h ()Lnw; plainCopy
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	i ()Ljava/lang/String; getName
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
	d (Ljava/lang/String;)Ljava/util/function/Supplier; lambda$static$1
	e (Ljava/lang/String;)Lnr; lambda$null$0
	<clinit> ()V <clinit>
nx net/minecraft/network/chat/MutableComponent
	a (Lob;)Lnx; setStyle
	c (Ljava/lang/String;)Lnx; append
	a (Lnr;)Lnx; append
	a (Ljava/util/function/UnaryOperator;)Lnx; withStyle
	c (Lob;)Lnx; withStyle
	a ([Lk;)Lnx; withStyle
	a (Lk;)Lnx; withStyle
ny net/minecraft/network/chat/NbtComponent
	g LOGGER
	d interpreting
	e nbtPathPattern
	f compiledNbtPath
	d (Ljava/lang/String;)Ldr$h; compileNbtPath
	<init> (Ljava/lang/String;Z)V <init>
	<init> (Ljava/lang/String;Ldr$h;Z)V <init>
	a (Ldb;)Ljava/util/stream/Stream; getData
	h ()Ljava/lang/String; getNbtPath
	i ()Z isInterpreting
	a (Ldb;Lapx;I)Lnx; resolve
	a (Lnx;Lnx;)Lnx; lambda$resolve$2
	a (Ldb;Lapx;ILjava/lang/String;)Ljava/util/stream/Stream; lambda$resolve$1
	a (Lmd;)Ljava/util/stream/Stream; lambda$resolve$0
	<clinit> ()V <clinit>
ny$a net/minecraft/network/chat/NbtComponent$BlockNbtComponent
	g posPattern
	h compiledPos
	<init> (Ljava/lang/String;ZLjava/lang/String;)V <init>
	d (Ljava/lang/String;)Lem; compilePos
	<init> (Ljava/lang/String;Ldr$h;ZLjava/lang/String;Lem;)V <init>
	j ()Ljava/lang/String; getPos
	k ()Lny$a; plainCopy
	a (Ldb;)Ljava/util/stream/Stream; getData
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
ny$b net/minecraft/network/chat/NbtComponent$EntityNbtComponent
	g selectorPattern
	h compiledSelector
	<init> (Ljava/lang/String;ZLjava/lang/String;)V <init>
	d (Ljava/lang/String;)Lfc; compileSelector
	<init> (Ljava/lang/String;Ldr$h;ZLjava/lang/String;Lfc;)V <init>
	j ()Ljava/lang/String; getSelector
	k ()Lny$b; plainCopy
	a (Ldb;)Ljava/util/stream/Stream; getData
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
ny$c net/minecraft/network/chat/NbtComponent$StorageNbtComponent
	g id
	<init> (Ljava/lang/String;ZLvk;)V <init>
	<init> (Ljava/lang/String;Ldr$h;ZLvk;)V <init>
	j ()Lvk; getId
	k ()Lny$c; plainCopy
	a (Ldb;)Ljava/util/stream/Stream; getData
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
nz net/minecraft/network/chat/ScoreComponent
	d name
	e selector
	f objective
	d (Ljava/lang/String;)Lfc; parseSelector
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Lfc;Ljava/lang/String;)V <init>
	h ()Ljava/lang/String; getName
	i ()Lfc; getSelector
	j ()Ljava/lang/String; getObjective
	a (Ldb;)Ljava/lang/String; findTargetName
	a (Ljava/lang/String;Ldb;)Ljava/lang/String; getScore
	k ()Lnz; plainCopy
	a (Ldb;Lapx;I)Lnx; resolve
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
oa net/minecraft/network/chat/SelectorComponent
	d LOGGER
	e pattern
	f selector
	<init> (Ljava/lang/String;)V <init>
	h ()Ljava/lang/String; getPattern
	i ()Lfc; getSelector
	a (Ldb;Lapx;I)Lnx; resolve
	a ()Ljava/lang/String; getContents
	j ()Loa; plainCopy
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
	<clinit> ()V <clinit>
ob net/minecraft/network/chat/Style
	a EMPTY
	b DEFAULT_FONT
	c color
	d bold
	e italic
	f underlined
	g strikethrough
	h obfuscated
	i clickEvent
	j hoverEvent
	k insertion
	l font
	<init> (Lod;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lnp;Lnv;Ljava/lang/String;Lvk;)V <init>
	a ()Lod; getColor
	b ()Z isBold
	c ()Z isItalic
	d ()Z isStrikethrough
	e ()Z isUnderlined
	f ()Z isObfuscated
	g ()Z isEmpty
	h ()Lnp; getClickEvent
	i ()Lnv; getHoverEvent
	j ()Ljava/lang/String; getInsertion
	k ()Lvk; getFont
	a (Lod;)Lob; withColor
	a (Lk;)Lob; withColor
	a (I)Lob; withColor
	a (Ljava/lang/Boolean;)Lob; withBold
	b (Ljava/lang/Boolean;)Lob; withItalic
	c (Ljava/lang/Boolean;)Lob; withUnderlined
	d (Ljava/lang/Boolean;)Lob; withStrikethrough
	e (Ljava/lang/Boolean;)Lob; withObfuscated
	a (Lnp;)Lob; withClickEvent
	a (Lnv;)Lob; withHoverEvent
	a (Ljava/lang/String;)Lob; withInsertion
	a (Lvk;)Lob; withFont
	b (Lk;)Lob; applyFormat
	c (Lk;)Lob; applyLegacyFormat
	a ([Lk;)Lob; applyFormats
	a (Lob;)Lob; applyTo
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<init> (Lod;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lnp;Lnv;Ljava/lang/String;Lvk;Lob$1;)V <init>
	b (Lob;)Ljava/lang/Boolean; access$100
	c (Lob;)Ljava/lang/Boolean; access$200
	d (Lob;)Ljava/lang/Boolean; access$300
	e (Lob;)Ljava/lang/Boolean; access$400
	f (Lob;)Ljava/lang/Boolean; access$500
	g (Lob;)Lod; access$600
	h (Lob;)Ljava/lang/String; access$700
	i (Lob;)Lnp; access$800
	j (Lob;)Lnv; access$900
	k (Lob;)Lvk; access$1000
	<clinit> ()V <clinit>
ob$1 net/minecraft/network/chat/Style$1
	a $SwitchMap$net$minecraft$ChatFormatting
	<clinit> ()V <clinit>
ob$a net/minecraft/network/chat/Style$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lob; deserialize
	a (Lcom/google/gson/JsonObject;)Lvk; getFont
	b (Lcom/google/gson/JsonObject;)Lnv; getHoverEvent
	c (Lcom/google/gson/JsonObject;)Lnp; getClickEvent
	d (Lcom/google/gson/JsonObject;)Ljava/lang/String; getInsertion
	e (Lcom/google/gson/JsonObject;)Lod; getTextColor
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalFlag
	a (Lob;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
oc net/minecraft/network/chat/SubStringSource
	a plainText
	b charStyles
	c reverseCharModifier
	<init> (Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V <init>
	a ()Ljava/lang/String; getPlainText
	a (IIZ)Ljava/util/List; substring
	a (Lnu;)Loc; create
	a (Lnu;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Loc; create
	a (Ljava/lang/StringBuilder;Ljava/util/List;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$create$3
	a (Ljava/lang/StringBuilder;Ljava/util/List;ILob;I)Z lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$create$1
	a (I)I lambda$create$0
od net/minecraft/network/chat/TextColor
	a LEGACY_FORMAT_TO_COLOR
	b NAMED_COLORS
	c value
	d name
	<init> (ILjava/lang/String;)V <init>
	<init> (I)V <init>
	a ()I getValue
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; formatValue
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lk;)Lod; fromLegacyFormat
	a (I)Lod; fromRgb
	a (Ljava/lang/String;)Lod; parseColor
	a (Lod;)Ljava/lang/String; lambda$static$1
	b (Lk;)Lod; lambda$static$0
	<clinit> ()V <clinit>
oe net/minecraft/network/chat/TextComponent
	d EMPTY
	e text
	<init> (Ljava/lang/String;)V <init>
	h ()Ljava/lang/String; getText
	a ()Ljava/lang/String; getContents
	i ()Loe; plainCopy
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
	<clinit> ()V <clinit>
of net/minecraft/network/chat/TranslatableComponent
	d NO_ARGS
	e TEXT_PERCENT
	f TEXT_NULL
	g key
	h args
	i decomposedWith
	j decomposedParts
	k FORMAT_PATTERN
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;[Ljava/lang/Object;)V <init>
	k ()V decompose
	d (Ljava/lang/String;)V decomposeTemplate
	b (I)Lnu; getArgument
	h ()Lof; plainCopy
	b (Lnu$b;Lob;)Ljava/util/Optional; visitSelf
	b (Lnu$a;)Ljava/util/Optional; visitSelf
	a (Ldb;Lapx;I)Lnx; resolve
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	i ()Ljava/lang/String; getKey
	j ()[Ljava/lang/Object; getArgs
	d ()Lnn; plainCopy
	g ()Lnx; plainCopy
	<clinit> ()V <clinit>
og net/minecraft/network/chat/TranslatableFormatException
	<init> (Lof;Ljava/lang/String;)V <init>
	<init> (Lof;I)V <init>
	<init> (Lof;Ljava/lang/Throwable;)V <init>
oh net/minecraft/network/chat/package-info
oi net/minecraft/network/package-info
oj net/minecraft/network/protocol/Packet
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
	a ()Z isSkippable
ok net/minecraft/network/protocol/PacketFlow
	a SERVERBOUND
	b CLIENTBOUND
	c $VALUES
	values ()[Lok; values
	valueOf (Ljava/lang/String;)Lok; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lok; getOpposite
	<clinit> ()V <clinit>
ol net/minecraft/network/protocol/PacketUtils
	a LOGGER
	<init> ()V <init>
	a (Loj;Lni;Laag;)V ensureRunningOnSameThread
	a (Loj;Lni;Lany;)V ensureRunningOnSameThread
	a (Lni;Loj;)V lambda$ensureRunningOnSameThread$0
	<clinit> ()V <clinit>
om net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lon;)V handleAddEntity
	a (Loo;)V handleAddExperienceOrb
	a (Lop;)V handleAddMob
	a (Lrg;)V handleAddObjective
	a (Loq;)V handleAddPainting
	a (Lor;)V handleAddPlayer
	a (Los;)V handleAnimate
	a (Lot;)V handleAwardStats
	a (Lql;)V handleAddOrRemoveRecipes
	a (Lov;)V handleBlockDestruction
	a (Lqe;)V handleOpenSignEditor
	a (Low;)V handleBlockEntityData
	a (Lox;)V handleBlockEvent
	a (Loy;)V handleBlockUpdate
	a (Lpb;)V handleChat
	a (Lqr;)V handleChunkBlocksUpdate
	a (Lpy;)V handleMapItemData
	a (Lpe;)V handleContainerAck
	a (Lpf;)V handleContainerClose
	a (Lpg;)V handleContainerContent
	a (Lpr;)V handleHorseScreenOpen
	a (Lph;)V handleContainerSetData
	a (Lpi;)V handleContainerSetSlot
	a (Lpk;)V handleCustomPayload
	a (Lpm;)V handleDisconnect
	a (Lpn;)V handleEntityEvent
	a (Lrb;)V handleEntityLinkPacket
	a (Lrh;)V handleSetEntityPassengersPacket
	a (Lpo;)V handleExplosion
	a (Lpq;)V handleGameEvent
	a (Lps;)V handleKeepAlive
	a (Lpt;)V handleLevelChunk
	a (Lpp;)V handleForgetLevelChunk
	a (Lpu;)V handleLevelEvent
	a (Lpx;)V handleLogin
	a (Lqa;)V handleMoveEntity
	a (Lqk;)V handleMovePlayer
	a (Lpv;)V handleParticleEvent
	a (Lqg;)V handlePlayerAbilities
	a (Lqi;)V handlePlayerInfo
	a (Lqm;)V handleRemoveEntity
	a (Lqn;)V handleRemoveMobEffect
	a (Lqp;)V handleRespawn
	a (Lqq;)V handleRotateMob
	a (Lqv;)V handleSetCarriedItem
	a (Lqz;)V handleSetDisplayObjective
	a (Lra;)V handleSetEntityData
	a (Lrc;)V handleSetEntityMotion
	a (Lrd;)V handleSetEquipment
	a (Lre;)V handleSetExperience
	a (Lrf;)V handleSetHealth
	a (Lri;)V handleSetPlayerTeamPacket
	a (Lrj;)V handleSetScore
	a (Lqy;)V handleSetSpawn
	a (Lrk;)V handleSetTime
	a (Lrn;)V handleSoundEvent
	a (Lrm;)V handleSoundEntityEvent
	a (Lpl;)V handleCustomSoundEvent
	a (Lrr;)V handleTakeItemEntity
	a (Lrs;)V handleTeleportEntity
	a (Lru;)V handleUpdateAttributes
	a (Lrv;)V handleUpdateMobEffect
	a (Lrx;)V handleUpdateTags
	a (Lqh;)V handlePlayerCombat
	a (Lpa;)V handleChangeDifficulty
	a (Lqu;)V handleSetCamera
	a (Lqt;)V handleSetBorder
	a (Lrl;)V handleSetTitles
	a (Lrp;)V handleTabListCustomisation
	a (Lqo;)V handleResourcePack
	a (Loz;)V handleBossUpdate
	a (Lpj;)V handleItemCooldown
	a (Lqb;)V handleMoveVehicle
	a (Lrt;)V handleUpdateAdvancementsPacket
	a (Lqs;)V handleSelectAdvancementsTab
	a (Lqf;)V handlePlaceRecipe
	a (Lpd;)V handleCommands
	a (Lro;)V handleStopSoundEvent
	a (Lpc;)V handleCommandSuggestions
	a (Lrw;)V handleUpdateRecipes
	a (Lqj;)V handleLookAt
	a (Lrq;)V handleTagQueryPacket
	a (Lpw;)V handleLightUpdatePacked
	a (Lqc;)V handleOpenBook
	a (Lqd;)V handleOpenScreen
	a (Lpz;)V handleMerchantOffers
	a (Lqx;)V handleSetChunkCacheRadius
	a (Lqw;)V handleSetChunkCacheCenter
	a (Lou;)V handleBlockBreakAck
on net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a id
	b uuid
	c x
	d y
	e z
	f xa
	g ya
	h za
	i xRot
	j yRot
	k type
	l data
	<init> ()V <init>
	<init> (ILjava/util/UUID;DDDFFLaqb;ILdck;)V <init>
	<init> (Lapx;)V <init>
	<init> (Lapx;I)V <init>
	<init> (Lapx;Laqb;ILfx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()Ljava/util/UUID; getUUID
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()D getXa
	h ()D getYa
	i ()D getZa
	j ()I getxRot
	k ()I getyRot
	l ()Laqb; getType
	m ()I getData
	a (Lni;)V handle
oo net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	<init> ()V <init>
	<init> (Laqd;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getValue
	a (Lni;)V handle
op net/minecraft/network/protocol/game/ClientboundAddMobPacket
	a id
	b uuid
	c type
	d x
	e y
	f z
	g xd
	h yd
	i zd
	j yRot
	k xRot
	l yHeadRot
	<init> ()V <init>
	<init> (Laqj;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()Ljava/util/UUID; getUUID
	d ()I getType
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()I getXd
	i ()I getYd
	j ()I getZd
	k ()B getyRot
	l ()B getxRot
	m ()B getyHeadRot
	a (Lni;)V handle
oq net/minecraft/network/protocol/game/ClientboundAddPaintingPacket
	a id
	b uuid
	c pos
	d direction
	e motive
	<init> ()V <init>
	<init> (Lbcp;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()Ljava/util/UUID; getUUID
	d ()Lfx; getPos
	e ()Lgc; getDirection
	f ()Lbco; getMotive
	a (Lni;)V handle
or net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	a entityId
	b playerId
	c x
	d y
	e z
	f yRot
	g xRot
	<init> ()V <init>
	<init> (Lbft;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getEntityId
	c ()Ljava/util/UUID; getPlayerId
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()B getyRot
	h ()B getxRot
	a (Lni;)V handle
os net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a id
	b action
	<init> ()V <init>
	<init> (Lapx;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()I getAction
	a (Lni;)V handle
ot net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	<init> ()V <init>
	<init> (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	a (Ladx;Lnf;)V readStat
	b (Lnf;)V write
	a (Ladv;)I getId
	b ()Ljava/util/Map; getStats
	a (Lni;)V handle
ou net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket
	b LOGGER
	c pos
	d state
	a action
	e allGood
	<init> ()V <init>
	<init> (Lfx;Lcee;Lsz$a;ZLjava/lang/String;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lcee; getState
	c ()Lfx; getPos
	d ()Z allGood
	e ()Lsz$a; action
	a (Lni;)V handle
	<clinit> ()V <clinit>
ov net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	<init> ()V <init>
	<init> (ILfx;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()Lfx; getPos
	d ()I getProgress
	a (Lni;)V handle
ow net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	<init> ()V <init>
	<init> (Lfx;ILmd;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lfx; getPos
	c ()I getType
	d ()Lmd; getTag
	a (Lni;)V handle
ox net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	<init> ()V <init>
	<init> (Lfx;Lbul;II)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lfx; getPos
	c ()I getB0
	d ()I getB1
	e ()Lbul; getBlock
	a (Lni;)V handle
oy net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	b blockState
	<init> ()V <init>
	<init> (Lfx;Lcee;)V <init>
	<init> (Lbqz;Lfx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lcee; getBlockState
	c ()Lfx; getPos
	a (Lni;)V handle
oz net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a id
	b operation
	c name
	d pct
	e color
	f overlay
	g darkenScreen
	h playMusic
	i createWorldFog
	<init> ()V <init>
	<init> (Loz$a;Laoh;)V <init>
	a (Lnf;)V read
	a (I)V decodeProperties
	b (Lnf;)V write
	k ()I encodeProperties
	a (Lom;)V handle
	b ()Ljava/util/UUID; getId
	c ()Loz$a; getOperation
	d ()Lnr; getName
	e ()F getPercent
	f ()Laoh$a; getColor
	g ()Laoh$b; getOverlay
	h ()Z shouldDarkenScreen
	i ()Z shouldPlayMusic
	j ()Z shouldCreateWorldFog
	a (Lni;)V handle
oz$1 net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
	<clinit> ()V <clinit>
oz$a net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	a ADD
	b REMOVE
	c UPDATE_PCT
	d UPDATE_NAME
	e UPDATE_STYLE
	f UPDATE_PROPERTIES
	g $VALUES
	values ()[Loz$a; values
	valueOf (Ljava/lang/String;)Loz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
pa net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	<init> ()V <init>
	<init> (Laoo;Z)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Z isLocked
	c ()Laoo; getDifficulty
	a (Lni;)V handle
pb net/minecraft/network/protocol/game/ClientboundChatPacket
	a message
	b type
	c sender
	<init> ()V <init>
	<init> (Lnr;Lno;Ljava/util/UUID;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lnr; getMessage
	c ()Z isSystem
	d ()Lno; getType
	e ()Ljava/util/UUID; getSender
	a ()Z isSkippable
	a (Lni;)V handle
pc net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	<init> ()V <init>
	<init> (ILcom/mojang/brigadier/suggestion/Suggestions;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
	a (Lni;)V handle
pd net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a root
	<init> ()V <init>
	<init> (Lcom/mojang/brigadier/tree/RootCommandNode;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a ([Lpd$a;)V resolveEntries
	a (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; enumerateNodes
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)[Lcom/mojang/brigadier/tree/CommandNode; getNodesInIdOrder
	c (Lnf;)Lpd$a; readNode
	a (Lnf;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; createBuilder
	a (Lnf;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V writeNode
	a (Lom;)V handle
	b ()Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	a (Lni;)V handle
	a ([Lpd$a;Lpd$a;)Z lambda$resolveEntries$0
pd$1 net/minecraft/network/protocol/game/ClientboundCommandsPacket$1
pd$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a builder
	b flags
	c redirect
	d children
	e node
	<init> (Lcom/mojang/brigadier/builder/ArgumentBuilder;BI[I)V <init>
	a ([Lpd$a;)Z build
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$build$0
	a (Lpd$a;)Lcom/mojang/brigadier/tree/CommandNode; access$000
	<init> (Lcom/mojang/brigadier/builder/ArgumentBuilder;BI[ILpd$1;)V <init>
pe net/minecraft/network/protocol/game/ClientboundContainerAckPacket
	a containerId
	b uid
	c accepted
	<init> ()V <init>
	<init> (ISZ)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()S getUid
	d ()Z isAccepted
	a (Lni;)V handle
pf net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	<init> ()V <init>
	<init> (I)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	a (Lni;)V handle
pg net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b items
	<init> ()V <init>
	<init> (ILgj;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getContainerId
	c ()Ljava/util/List; getItems
	a (Lni;)V handle
ph net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	<init> ()V <init>
	<init> (III)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()I getId
	d ()I getValue
	a (Lni;)V handle
pi net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a containerId
	b slot
	c itemStack
	<init> ()V <init>
	<init> (IILbly;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()I getSlot
	d ()Lbly; getItem
	a (Lni;)V handle
pj net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	<init> ()V <init>
	<init> (Lblu;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lblu; getItem
	c ()I getDuration
	a (Lni;)V handle
pk net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	a BRAND
	b DEBUG_PATHFINDING_PACKET
	c DEBUG_NEIGHBORSUPDATE_PACKET
	d DEBUG_CAVES_PACKET
	e DEBUG_STRUCTURES_PACKET
	f DEBUG_WORLDGENATTEMPT_PACKET
	g DEBUG_POI_TICKET_COUNT_PACKET
	h DEBUG_POI_ADDED_PACKET
	i DEBUG_POI_REMOVED_PACKET
	j DEBUG_VILLAGE_SECTIONS
	k DEBUG_GOAL_SELECTOR
	l DEBUG_BRAIN
	m DEBUG_BEE
	n DEBUG_HIVE
	o DEBUG_GAME_TEST_ADD_MARKER
	p DEBUG_GAME_TEST_CLEAR
	q DEBUG_RAIDS
	r identifier
	s data
	<init> ()V <init>
	<init> (Lvk;Lnf;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lvk; getIdentifier
	c ()Lnf; getData
	a (Lni;)V handle
	<clinit> ()V <clinit>
pl net/minecraft/network/protocol/game/ClientboundCustomSoundPacket
	a name
	b source
	c x
	d y
	e z
	f volume
	g pitch
	<init> ()V <init>
	<init> (Lvk;Ladp;Ldck;FF)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Lvk; getName
	c ()Ladp; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
	a (Lom;)V handle
	a (Lni;)V handle
pm net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	a reason
	<init> ()V <init>
	<init> (Lnr;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lnr; getReason
	a (Lni;)V handle
pn net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	<init> ()V <init>
	<init> (Lapx;B)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Lbru;)Lapx; getEntity
	b ()B getEventId
	a (Lni;)V handle
po net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	<init> ()V <init>
	<init> (DDDFLjava/util/List;Ldck;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()F getKnockbackX
	c ()F getKnockbackY
	d ()F getKnockbackZ
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getPower
	i ()Ljava/util/List; getToBlow
	a (Lni;)V handle
pp net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a x
	b z
	<init> ()V <init>
	<init> (II)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getX
	c ()I getZ
	a (Lni;)V handle
pq net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a NO_RESPAWN_BLOCK_AVAILABLE
	b START_RAINING
	c STOP_RAINING
	d CHANGE_GAME_MODE
	e WIN_GAME
	f DEMO_EVENT
	g ARROW_HIT_PLAYER
	h RAIN_LEVEL_CHANGE
	i THUNDER_LEVEL_CHANGE
	j PUFFER_FISH_STING
	k GUARDIAN_ELDER_EFFECT
	l IMMEDIATE_RESPAWN
	m event
	n param
	<init> ()V <init>
	<init> (Lpq$a;F)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lpq$a; getEvent
	c ()F getParam
	a (Lni;)V handle
	<clinit> ()V <clinit>
pq$a net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	a TYPES
	b id
	<init> (I)V <init>
	a ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; access$000
	a (Lpq$a;)I access$100
	<clinit> ()V <clinit>
pr net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	<init> ()V <init>
	<init> (III)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()I getSize
	d ()I getEntityId
	a (Lni;)V handle
ps net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	a id
	<init> ()V <init>
	<init> (J)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()J getId
	a (Lni;)V handle
pt net/minecraft/network/protocol/game/ClientboundLevelChunkPacket
	a x
	b z
	c availableSections
	d heightmaps
	e biomes
	f buffer
	g blockEntitiesTags
	h fullChunk
	<init> ()V <init>
	<init> (Lcge;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lnf; getReadBuffer
	j ()Lio/netty/buffer/ByteBuf; getWriteBuffer
	a (Lnf;Lcge;I)I extractChunkData
	a (Lcge;I)I calculateChunkSize
	c ()I getX
	d ()I getZ
	e ()I getAvailableSections
	f ()Z isFullChunk
	g ()Lmd; getHeightmaps
	h ()Ljava/util/List; getBlockEntitiesTags
	i ()[I getBiomes
	a (Lni;)V handle
pu net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	<init> ()V <init>
	<init> (ILfx;IZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Z isGlobalEvent
	c ()I getType
	d ()I getData
	e ()Lfx; getPos
	a (Lni;)V handle
pv net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	<init> ()V <init>
	<init> (Lhf;ZDDDFFFFI)V <init>
	a (Lnf;)V read
	a (Lnf;Lhg;)Lhf; readParticle
	b (Lnf;)V write
	b ()Z isOverrideLimiter
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()F getXDist
	g ()F getYDist
	h ()F getZDist
	i ()F getMaxSpeed
	j ()I getCount
	k ()Lhf; getParticle
	a (Lom;)V handle
	a (Lni;)V handle
pw net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c skyYMask
	d blockYMask
	e emptySkyYMask
	f emptyBlockYMask
	g skyUpdates
	h blockUpdates
	i trustEdges
	<init> ()V <init>
	<init> (Lbra;Lcul;Z)V <init>
	<init> (Lbra;Lcul;IIZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getX
	c ()I getZ
	d ()I getSkyYMask
	e ()I getEmptySkyYMask
	f ()Ljava/util/List; getSkyUpdates
	g ()I getBlockYMask
	h ()I getEmptyBlockYMask
	i ()Ljava/util/List; getBlockUpdates
	j ()Z getTrustEdges
	a (Lni;)V handle
px net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b seed
	c hardcore
	d gameType
	e previousGameType
	f levels
	g registryHolder
	h dimensionType
	i dimension
	j maxPlayers
	k chunkRadius
	l reducedDebugInfo
	m showDeathScreen
	n isDebug
	o isFlat
	<init> ()V <init>
	<init> (ILbrr;Lbrr;JZLjava/util/Set;Lgn$b;Lcha;Lvj;IIZZZZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getPlayerId
	c ()J getSeed
	d ()Z isHardcore
	e ()Lbrr; getGameType
	f ()Lbrr; getPreviousGameType
	g ()Ljava/util/Set; levels
	h ()Lgn; registryAccess
	i ()Lcha; getDimensionType
	j ()Lvj; getDimension
	k ()I getMaxPlayers
	l ()I getChunkRadius
	m ()Z isReducedDebugInfo
	n ()Z shouldShowDeathScreen
	o ()Z isDebug
	p ()Z isFlat
	a (Lni;)V handle
	q ()Lcha; lambda$write$0
py net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c trackingPosition
	d locked
	e decorations
	f startX
	g startY
	h width
	i height
	j mapColors
	<init> ()V <init>
	<init> (IBZZLjava/util/Collection;[BIIII)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getMapId
	a (Lcxu;)V applyToMap
	c ()B getScale
	a (Lni;)V handle
pz net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	<init> ()V <init>
	<init> (ILbqt;IIZZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getContainerId
	c ()Lbqt; getOffers
	d ()I getVillagerLevel
	e ()I getVillagerXp
	f ()Z showProgress
	g ()Z canRestock
	a (Lni;)V handle
qa net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	i hasPos
	a (D)J entityToPacket
	a (J)D packetToEntity
	a (Ldck;)Ldck; updateEntityPosition
	a (JJJ)Ldck; packetToEntity
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	toString ()Ljava/lang/String; toString
	a (Lbru;)Lapx; getEntity
	b ()S getXa
	c ()S getYa
	d ()S getZa
	e ()B getyRot
	f ()B getxRot
	g ()Z hasRotation
	h ()Z hasPosition
	i ()Z isOnGround
	a (Lni;)V handle
qa$a net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	<init> ()V <init>
	<init> (ISSSZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
qa$b net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	<init> ()V <init>
	<init> (ISSSBBZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
qa$c net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	<init> ()V <init>
	<init> (IBBZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
qb net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	<init> ()V <init>
	<init> (Lapx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()D getX
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	a (Lni;)V handle
qc net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	<init> ()V <init>
	<init> (Laoq;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Laoq; getHand
	a (Lni;)V handle
qd net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	<init> ()V <init>
	<init> (ILbjb;Lnr;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getContainerId
	c ()Lbjb; getType
	d ()Lnr; getTitle
	a (Lni;)V handle
qe net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	<init> ()V <init>
	<init> (Lfx;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Lfx; getPos
	a (Lni;)V handle
qf net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	<init> ()V <init>
	<init> (ILbon;)V <init>
	b ()Lvk; getRecipe
	c ()I getContainerId
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Lni;)V handle
qg net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a invulnerable
	b isFlying
	c canFly
	d instabuild
	e flyingSpeed
	f walkingSpeed
	<init> ()V <init>
	<init> (Lbfq;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Z isInvulnerable
	c ()Z isFlying
	d ()Z canFly
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
	a (Lni;)V handle
qh net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket
	a event
	b playerId
	c killerId
	d duration
	e message
	<init> ()V <init>
	<init> (Lapg;Lqh$a;)V <init>
	<init> (Lapg;Lqh$a;Lnr;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a ()Z isSkippable
	a (Lni;)V handle
qh$1 net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerCombatPacket$Event
	<clinit> ()V <clinit>
qh$a net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$Event
	a ENTER_COMBAT
	b END_COMBAT
	c ENTITY_DIED
	d $VALUES
	values ()[Lqh$a; values
	valueOf (Ljava/lang/String;)Lqh$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
qi net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket
	a action
	b entries
	<init> ()V <init>
	<init> (Lqi$a;[Laah;)V <init>
	<init> (Lqi$a;Ljava/lang/Iterable;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ljava/util/List; getEntries
	c ()Lqi$a; getAction
	toString ()Ljava/lang/String; toString
	a (Lni;)V handle
qi$1 net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
	<clinit> ()V <clinit>
qi$a net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action
	a ADD_PLAYER
	b UPDATE_GAME_MODE
	c UPDATE_LATENCY
	d UPDATE_DISPLAY_NAME
	e REMOVE_PLAYER
	f $VALUES
	values ()[Lqi$a; values
	valueOf (Ljava/lang/String;)Lqi$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
qi$b net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate
	b latency
	c gameMode
	d profile
	e displayName
	a this$0
	<init> (Lqi;Lcom/mojang/authlib/GameProfile;ILbrr;Lnr;)V <init>
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()I getLatency
	c ()Lbrr; getGameMode
	d ()Lnr; getDisplayName
	toString ()Ljava/lang/String; toString
qj net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	<init> ()V <init>
	<init> (Ldj$a;DDD)V <init>
	<init> (Ldj$a;Lapx;Ldj$a;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ldj$a; getFromAnchor
	a (Lbru;)Ldck; getPosition
	a (Lni;)V handle
qk net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	<init> ()V <init>
	<init> (DDDFFLjava/util/Set;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()D getX
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	g ()I getId
	h ()Ljava/util/Set; getRelativeArguments
	a (Lni;)V handle
qk$a net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument
	a X
	b Y
	c Z
	d Y_ROT
	e X_ROT
	f bit
	g $VALUES
	values ()[Lqk$a; values
	valueOf (Ljava/lang/String;)Lqk$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getMask
	b (I)Z isSet
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	<clinit> ()V <clinit>
ql net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d bookSettings
	<init> ()V <init>
	<init> (Lql$a;Ljava/util/Collection;Ljava/util/Collection;Lads;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Ljava/util/List; getRecipes
	c ()Ljava/util/List; getHighlights
	d ()Lads; getBookSettings
	e ()Lql$a; getState
	a (Lni;)V handle
ql$a net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	a INIT
	b ADD
	c REMOVE
	d $VALUES
	values ()[Lql$a; values
	valueOf (Ljava/lang/String;)Lql$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
qm net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	<init> ()V <init>
	<init> ([I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()[I getEntityIds
	a (Lni;)V handle
qn net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	<init> ()V <init>
	<init> (ILapp;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Lbru;)Lapx; getEntity
	b ()Lapp; getEffect
	a (Lni;)V handle
qo net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	a url
	b hash
	<init> ()V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ljava/lang/String; getUrl
	c ()Ljava/lang/String; getHash
	a (Lni;)V handle
qp net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a dimensionType
	b dimension
	c seed
	d playerGameType
	e previousPlayerGameType
	f isDebug
	g isFlat
	h keepAllPlayerData
	<init> ()V <init>
	<init> (Lcha;Lvj;JLbrr;Lbrr;ZZZ)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Lcha; getDimensionType
	c ()Lvj; getDimension
	d ()J getSeed
	e ()Lbrr; getPlayerGameType
	f ()Lbrr; getPreviousPlayerGameType
	g ()Z isDebug
	h ()Z isFlat
	i ()Z shouldKeepAllPlayerData
	a (Lni;)V handle
	j ()Lcha; lambda$write$0
qq net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	<init> ()V <init>
	<init> (Lapx;B)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Lbru;)Lapx; getEntity
	b ()B getYHeadRot
	a (Lni;)V handle
qr net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	a sectionPos
	b positions
	c states
	d suppressLightUpdates
	<init> ()V <init>
	<init> (Lgp;Lit/unimi/dsi/fastutil/shorts/ShortSet;Lcgf;Z)V <init>
	a (I)V initFields
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Ljava/util/function/BiConsumer;)V runUpdates
	b ()Z shouldSuppressLightUpdates
	a (Lni;)V handle
qs net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	<init> ()V <init>
	<init> (Lvk;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Lvk; getTab
	a (Lni;)V handle
qt net/minecraft/network/protocol/game/ClientboundSetBorderPacket
	a type
	b newAbsoluteMaxSize
	c newCenterX
	d newCenterZ
	e newSize
	f oldSize
	g lerpTime
	h warningTime
	i warningBlocks
	<init> ()V <init>
	<init> (Lcfr;Lqt$a;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Lcfr;)V applyChanges
	a (Lni;)V handle
qt$1 net/minecraft/network/protocol/game/ClientboundSetBorderPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetBorderPacket$Type
	<clinit> ()V <clinit>
qt$a net/minecraft/network/protocol/game/ClientboundSetBorderPacket$Type
	a SET_SIZE
	b LERP_SIZE
	c SET_CENTER
	d INITIALIZE
	e SET_WARNING_TIME
	f SET_WARNING_BLOCKS
	g $VALUES
	values ()[Lqt$a; values
	valueOf (Ljava/lang/String;)Lqt$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
qu net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	<init> ()V <init>
	<init> (Lapx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	a (Lbru;)Lapx; getEntity
	a (Lni;)V handle
qv net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getSlot
	a (Lni;)V handle
qw net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	<init> ()V <init>
	<init> (II)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getX
	c ()I getZ
	a (Lni;)V handle
qx net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getRadius
	a (Lni;)V handle
qy net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	a pos
	b angle
	<init> ()V <init>
	<init> (Lfx;F)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lfx; getPos
	c ()F getAngle
	a (Lni;)V handle
qz net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	<init> ()V <init>
	<init> (ILddh;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getSlot
	c ()Ljava/lang/String; getObjectiveName
	a (Lni;)V handle
ra net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	a id
	b packedItems
	<init> ()V <init>
	<init> (ILuv;Z)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ljava/util/List; getUnpackedData
	c ()I getId
	a (Lni;)V handle
rb net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	<init> ()V <init>
	<init> (Lapx;Lapx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getSourceId
	c ()I getDestId
	a (Lni;)V handle
rc net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	<init> ()V <init>
	<init> (Lapx;)V <init>
	<init> (ILdck;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()I getXa
	d ()I getYa
	e ()I getZa
	a (Lni;)V handle
rd net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	a entity
	b slots
	<init> ()V <init>
	<init> (ILjava/util/List;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getEntity
	c ()Ljava/util/List; getSlots
	a (Lni;)V handle
re net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	<init> ()V <init>
	<init> (FII)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()F getExperienceProgress
	c ()I getTotalExperience
	d ()I getExperienceLevel
	a (Lni;)V handle
rf net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	<init> ()V <init>
	<init> (FIF)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()F getHealth
	c ()I getFood
	d ()F getSaturation
	a (Lni;)V handle
rg net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a objectiveName
	b displayName
	c renderType
	d method
	<init> ()V <init>
	<init> (Lddh;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ljava/lang/String; getObjectiveName
	c ()Lnr; getDisplayName
	d ()I getMethod
	e ()Lddn$a; getRenderType
	a (Lni;)V handle
rh net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	<init> ()V <init>
	<init> (Lapx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()[I getPassengers
	c ()I getVehicle
	a (Lni;)V handle
ri net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a name
	b displayName
	c playerPrefix
	d playerSuffix
	e nametagVisibility
	f collisionRule
	g color
	h players
	i method
	j options
	<init> ()V <init>
	<init> (Lddi;I)V <init>
	<init> (Lddi;Ljava/util/Collection;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ljava/lang/String; getName
	c ()Lnr; getDisplayName
	d ()Ljava/util/Collection; getPlayers
	e ()I getMethod
	f ()I getOptions
	g ()Lk; getColor
	h ()Ljava/lang/String; getNametagVisibility
	i ()Ljava/lang/String; getCollisionRule
	j ()Lnr; getPlayerPrefix
	k ()Lnr; getPlayerSuffix
	a (Lni;)V handle
rj net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	<init> ()V <init>
	<init> (Lwa$a;Ljava/lang/String;Ljava/lang/String;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Ljava/lang/String; getOwner
	c ()Ljava/lang/String; getObjectiveName
	d ()I getScore
	e ()Lwa$a; getMethod
	a (Lni;)V handle
rk net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	<init> ()V <init>
	<init> (JJZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()J getGameTime
	c ()J getDayTime
	a (Lni;)V handle
rl net/minecraft/network/protocol/game/ClientboundSetTitlesPacket
	a type
	b text
	c fadeInTime
	d stayTime
	e fadeOutTime
	<init> ()V <init>
	<init> (Lrl$a;Lnr;)V <init>
	<init> (III)V <init>
	<init> (Lrl$a;Lnr;III)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lrl$a; getType
	c ()Lnr; getText
	d ()I getFadeInTime
	e ()I getStayTime
	f ()I getFadeOutTime
	a (Lni;)V handle
rl$a net/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type
	a TITLE
	b SUBTITLE
	c ACTIONBAR
	d TIMES
	e CLEAR
	f RESET
	g $VALUES
	values ()[Lrl$a; values
	valueOf (Ljava/lang/String;)Lrl$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
rm net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	<init> ()V <init>
	<init> (Ladn;Ladp;Lapx;FF)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Ladn; getSound
	c ()Ladp; getSource
	d ()I getId
	e ()F getVolume
	f ()F getPitch
	a (Lom;)V handle
	a (Lni;)V handle
rn net/minecraft/network/protocol/game/ClientboundSoundPacket
	a sound
	b source
	c x
	d y
	e z
	f volume
	g pitch
	<init> ()V <init>
	<init> (Ladn;Ladp;DDDFF)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Ladn; getSound
	c ()Ladp; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
	a (Lom;)V handle
	a (Lni;)V handle
ro net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a name
	b source
	<init> ()V <init>
	<init> (Lvk;Ladp;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Lvk; getName
	c ()Ladp; getSource
	a (Lom;)V handle
	a (Lni;)V handle
rp net/minecraft/network/protocol/game/ClientboundTabListPacket
	a header
	b footer
	<init> ()V <init>
	<init> (Lnr;Lnr;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lnr; getHeader
	c ()Lnr; getFooter
	a (Lni;)V handle
rq net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	<init> ()V <init>
	<init> (ILmd;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getTransactionId
	c ()Lmd; getTag
	a ()Z isSkippable
	a (Lni;)V handle
rr net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	<init> ()V <init>
	<init> (III)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getItemId
	c ()I getPlayerId
	d ()I getAmount
	a (Lni;)V handle
rs net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	<init> ()V <init>
	<init> (Lapx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getId
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()B getyRot
	g ()B getxRot
	h ()Z isOnGround
	a (Lni;)V handle
rt net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	<init> ()V <init>
	<init> (ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Ljava/util/Map; getAdded
	c ()Ljava/util/Set; getRemoved
	d ()Ljava/util/Map; getProgress
	e ()Z shouldReset
	a (Lni;)V handle
ru net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	<init> ()V <init>
	<init> (ILjava/util/Collection;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()I getEntityId
	c ()Ljava/util/List; getValues
	a (Lni;)V handle
ru$a net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	b attribute
	c base
	d modifiers
	a this$0
	<init> (Lru;Lard;DLjava/util/Collection;)V <init>
	a ()Lard; getAttribute
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
rv net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a entityId
	b effectId
	c effectAmplifier
	d effectDurationTicks
	e flags
	<init> ()V <init>
	<init> (ILapr;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Z isSuperLongDuration
	a (Lom;)V handle
	c ()I getEntityId
	d ()B getEffectId
	e ()B getEffectAmplifier
	f ()I getEffectDurationTicks
	g ()Z isEffectVisible
	h ()Z isEffectAmbient
	i ()Z effectShowsIcon
	a (Lni;)V handle
rw net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	<init> ()V <init>
	<init> (Ljava/util/Collection;)V <init>
	a (Lom;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Ljava/util/List; getRecipes
	c (Lnf;)Lbon; fromNetwork
	a (Lbon;Lnf;)V toNetwork
	a (Lni;)V handle
	a (Lvk;)Ljava/lang/IllegalArgumentException; lambda$fromNetwork$0
rx net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	a tags
	<init> ()V <init>
	<init> (Lael;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lom;)V handle
	b ()Lael; getTags
	a (Lni;)V handle
ry net/minecraft/network/protocol/game/DebugEntityNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	<init> ()V <init>
	a (Lapx;)Ljava/lang/String; getEntityName
	a (Ljava/util/UUID;)Ljava/lang/String; getEntityName
	a (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	b (Ljava/util/UUID;)Ljava/util/Random; getRandom
	<clinit> ()V <clinit>
rz net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	<init> ()V <init>
	a (Laag;Lfx;Ljava/lang/String;II)V sendGameTestAddMarker
	a (Laag;)V sendGameTestClearPacket
	a (Laag;Lbra;)V sendPoiPacketsForChunk
	a (Laag;Lfx;)V sendPoiAddedPacket
	b (Laag;Lfx;)V sendPoiRemovedPacket
	c (Laag;Lfx;)V sendPoiTicketCountPacket
	d (Laag;Lfx;)V sendVillageSectionsPacket
	a (Lbru;Laqk;Lcxa;F)V sendPathFindingPacket
	a (Lbru;Lfx;)V sendNeighborsUpdatePacket
	a (Lbso;Lcrs;)V sendStructurePacket
	a (Lbru;Laqk;Lavt;)V sendGoalSelector
	a (Laag;Ljava/util/Collection;)V sendRaids
	a (Laqj;)V sendEntityBrain
	a (Lazx;)V sendBeeInfo
	a (Lccd;)V sendHiveInfo
	a (Laqj;Lnf;)V writeBrain
	a (Laqj;J)Ljava/util/List; getMemoryDescriptions
	a (Laag;Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Laag;Lnf;Lvk;)V sendPacketToAllPlayers
	a (Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V lambda$writeBrain$7
	a (Ljava/util/List;Ljava/lang/String;Laxx;Ljava/lang/Integer;)V lambda$null$6
	a (Lnf;Ljava/lang/String;)V lambda$writeBrain$5
	a (Lnf;Lbhc;)V lambda$writeBrain$4
	a (Lnf;Lbgy;)V lambda$sendRaids$3
	a (Lnf;Laxi;)V lambda$sendGoalSelector$2
	a (Laag;Lazm;)V lambda$sendPoiPacketsForChunk$1
	a (Lazo;)Z lambda$sendPoiPacketsForChunk$0
	<clinit> ()V <clinit>
sa net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Ltq;)V handleAnimate
	a (Lse;)V handleChat
	a (Lsf;)V handleClientCommand
	a (Lsg;)V handleClientInformation
	a (Lsi;)V handleContainerAck
	a (Lsj;)V handleContainerButtonClick
	a (Lsk;)V handleContainerClick
	a (Lsx;)V handlePlaceRecipe
	a (Lsl;)V handleContainerClose
	a (Lsm;)V handleCustomPayload
	a (Lsp;)V handleInteract
	a (Lsr;)V handleKeepAlive
	a (Lst;)V handleMovePlayer
	a (Lsy;)V handlePlayerAbilities
	a (Lsz;)V handlePlayerAction
	a (Lta;)V handlePlayerCommand
	a (Ltb;)V handlePlayerInput
	a (Ltj;)V handleSetCarriedItem
	a (Ltm;)V handleSetCreativeModeSlot
	a (Ltp;)V handleSignUpdate
	a (Lts;)V handleUseItemOn
	a (Ltt;)V handleUseItem
	a (Ltr;)V handleTeleportToEntityPacket
	a (Ltf;)V handleResourcePackResponse
	a (Lsv;)V handlePaddleBoat
	a (Lsu;)V handleMoveVehicle
	a (Lsb;)V handleAcceptTeleportPacket
	a (Ltd;)V handleRecipeBookSeenRecipePacket
	a (Ltc;)V handleRecipeBookChangeSettingsPacket
	a (Ltg;)V handleSeenAdvancements
	a (Lsh;)V handleCustomCommandSuggestions
	a (Ltk;)V handleSetCommandBlock
	a (Ltl;)V handleSetCommandMinecart
	a (Lsw;)V handlePickItem
	a (Lte;)V handleRenameItem
	a (Lti;)V handleSetBeaconPacket
	a (Lto;)V handleSetStructureBlock
	a (Lth;)V handleSelectTrade
	a (Lsn;)V handleEditBook
	a (Lso;)V handleEntityTagQuery
	a (Lsc;)V handleBlockEntityTagQuery
	a (Ltn;)V handleSetJigsawBlock
	a (Lsq;)V handleJigsawGenerate
	a (Lsd;)V handleChangeDifficulty
	a (Lss;)V handleLockDifficulty
sb net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getId
	a (Lni;)V handle
sc net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	<init> ()V <init>
	<init> (ILfx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getTransactionId
	c ()Lfx; getPos
	a (Lni;)V handle
sd net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	<init> ()V <init>
	<init> (Laoo;)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Laoo; getDifficulty
	a (Lni;)V handle
se net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	<init> ()V <init>
	<init> (Ljava/lang/String;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Ljava/lang/String; getMessage
	a (Lni;)V handle
sf net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	<init> ()V <init>
	<init> (Lsf$a;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lsf$a; getAction
	a (Lni;)V handle
sf$a net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	a PERFORM_RESPAWN
	b REQUEST_STATS
	c $VALUES
	values ()[Lsf$a; values
	valueOf (Ljava/lang/String;)Lsf$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
sg net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	a language
	b viewDistance
	c chatVisibility
	d chatColors
	e modelCustomisation
	f mainHand
	<init> ()V <init>
	<init> (Ljava/lang/String;ILbfr;ZILaqf;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Ljava/lang/String; getLanguage
	c ()I getViewDistance
	d ()Lbfr; getChatVisibility
	e ()Z getChatColors
	f ()I getModelCustomisation
	g ()Laqf; getMainHand
	a (Lni;)V handle
sh net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	<init> ()V <init>
	<init> (ILjava/lang/String;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getId
	c ()Ljava/lang/String; getCommand
	a (Lni;)V handle
si net/minecraft/network/protocol/game/ServerboundContainerAckPacket
	a containerId
	b uid
	c accepted
	<init> ()V <init>
	<init> (ISZ)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()S getUid
	d ()Z isAccepted
	a (Lni;)V handle
sj net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	<init> ()V <init>
	<init> (II)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()I getButtonId
	a (Lni;)V handle
sk net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a containerId
	b slotNum
	c buttonNum
	d uid
	e itemStack
	f clickType
	<init> ()V <init>
	<init> (IIILbih;Lbly;S)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	c ()I getSlotNum
	d ()I getButtonNum
	e ()S getUid
	f ()Lbly; getItem
	g ()Lbih; getClickType
	a (Lni;)V handle
sl net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	a containerId
	<init> ()V <init>
	<init> (I)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getContainerId
	a (Lni;)V handle
sm net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	a BRAND
	b identifier
	c data
	<init> ()V <init>
	<init> (Lvk;Lnf;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lvk; getIdentifier
	c ()Lnf; getData
	a (Lni;)V handle
	<clinit> ()V <clinit>
sn net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a book
	b signing
	c hand
	<init> ()V <init>
	<init> (Lbly;ZLaoq;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lbly; getBook
	c ()Z isSigning
	d ()Laoq; getHand
	a (Lni;)V handle
so net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	<init> ()V <init>
	<init> (II)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getTransactionId
	c ()I getEntityId
	a (Lni;)V handle
sp net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	b action
	c location
	d hand
	e usingSecondaryAction
	<init> ()V <init>
	<init> (Lapx;Z)V <init>
	<init> (Lapx;Laoq;Z)V <init>
	<init> (Lapx;Laoq;Ldck;Z)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	a (Lbru;)Lapx; getTarget
	b ()Lsp$a; getAction
	c ()Laoq; getHand
	d ()Ldck; getLocation
	e ()Z isUsingSecondaryAction
	a (Lni;)V handle
sp$a net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	a INTERACT
	b ATTACK
	c INTERACT_AT
	d $VALUES
	values ()[Lsp$a; values
	valueOf (Ljava/lang/String;)Lsp$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
sq net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	a pos
	b levels
	c keepJigsaws
	<init> ()V <init>
	<init> (Lfx;IZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lfx; getPos
	c ()I levels
	d ()Z keepJigsaws
	a (Lni;)V handle
sr net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	a id
	<init> ()V <init>
	<init> (J)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()J getId
	a (Lni;)V handle
ss net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	<init> ()V <init>
	<init> (Z)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()Z isLocked
	a (Lni;)V handle
st net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f onGround
	g hasPos
	h hasRot
	<init> ()V <init>
	<init> (Z)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	a (D)D getX
	b (D)D getY
	c (D)D getZ
	a (F)F getYRot
	b (F)F getXRot
	b ()Z isOnGround
	c ()Z hasPosition
	d ()Z hasRotation
	a (Z)V setHasPosition
	a (Lni;)V handle
st$a net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	<init> ()V <init>
	<init> (DDDZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
st$b net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	<init> ()V <init>
	<init> (DDDFFZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
st$c net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	<init> ()V <init>
	<init> (FFZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lni;)V handle
su net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	<init> ()V <init>
	<init> (Lapx;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()D getX
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	a (Lni;)V handle
sv net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	<init> ()V <init>
	<init> (ZZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Z getLeft
	c ()Z getRight
	a (Lni;)V handle
sw net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getSlot
	a (Lni;)V handle
sx net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	<init> ()V <init>
	<init> (ILbon;Z)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getContainerId
	c ()Lvk; getRecipe
	d ()Z isShiftDown
	a (Lni;)V handle
sy net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a isFlying
	<init> ()V <init>
	<init> (Lbfq;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Z isFlying
	a (Lni;)V handle
sz net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	<init> ()V <init>
	<init> (Lsz$a;Lfx;Lgc;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lfx; getPos
	c ()Lgc; getDirection
	d ()Lsz$a; getAction
	a (Lni;)V handle
sz$a net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	a START_DESTROY_BLOCK
	b ABORT_DESTROY_BLOCK
	c STOP_DESTROY_BLOCK
	d DROP_ALL_ITEMS
	e DROP_ITEM
	f RELEASE_USE_ITEM
	g SWAP_ITEM_WITH_OFFHAND
	h $VALUES
	values ()[Lsz$a; values
	valueOf (Ljava/lang/String;)Lsz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ta net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	b action
	c data
	<init> ()V <init>
	<init> (Lapx;Lta$a;)V <init>
	<init> (Lapx;Lta$a;I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getId
	c ()Lta$a; getAction
	d ()I getData
	a (Lni;)V handle
ta$a net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	a PRESS_SHIFT_KEY
	b RELEASE_SHIFT_KEY
	c STOP_SLEEPING
	d START_SPRINTING
	e STOP_SPRINTING
	f START_RIDING_JUMP
	g STOP_RIDING_JUMP
	h OPEN_INVENTORY
	i START_FALL_FLYING
	j $VALUES
	values ()[Lta$a; values
	valueOf (Ljava/lang/String;)Lta$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
tb net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a xxa
	b zza
	c isJumping
	d isShiftKeyDown
	<init> ()V <init>
	<init> (FFZZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()F getXxa
	c ()F getZza
	d ()Z isJumping
	e ()Z isShiftKeyDown
	a (Lni;)V handle
tc net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	a bookType
	b isOpen
	c isFiltering
	<init> ()V <init>
	<init> (Lbjh;ZZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lbjh; getBookType
	c ()Z isOpen
	d ()Z isFiltering
	a (Lni;)V handle
td net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	a recipe
	<init> ()V <init>
	<init> (Lbon;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lvk; getRecipe
	a (Lni;)V handle
te net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	<init> ()V <init>
	<init> (Ljava/lang/String;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Ljava/lang/String; getName
	a (Lni;)V handle
tf net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	a action
	<init> ()V <init>
	<init> (Ltf$a;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Ltf$a; getAction
	a (Lni;)V handle
tf$a net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	a SUCCESSFULLY_LOADED
	b DECLINED
	c FAILED_DOWNLOAD
	d ACCEPTED
	e $VALUES
	values ()[Ltf$a; values
	valueOf (Ljava/lang/String;)Ltf$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
tg net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	<init> ()V <init>
	<init> (Ltg$a;Lvk;)V <init>
	a (Ly;)Ltg; openedTab
	b ()Ltg; closedScreen
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	c ()Ltg$a; getAction
	d ()Lvk; getTab
	a (Lni;)V handle
tg$a net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	a OPENED_TAB
	b CLOSED_SCREEN
	c $VALUES
	values ()[Ltg$a; values
	valueOf (Ljava/lang/String;)Ltg$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
th net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getItem
	a (Lni;)V handle
ti net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	<init> ()V <init>
	<init> (II)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getPrimary
	c ()I getSecondary
	a (Lni;)V handle
tj net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	a slot
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()I getSlot
	a (Lni;)V handle
tk net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a pos
	b command
	c trackOutput
	d conditional
	e automatic
	f mode
	<init> ()V <init>
	<init> (Lfx;Ljava/lang/String;Lccl$a;ZZZ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lfx; getPos
	c ()Ljava/lang/String; getCommand
	d ()Z isTrackOutput
	e ()Z isConditional
	f ()Z isAutomatic
	g ()Lccl$a; getMode
	a (Lni;)V handle
tl net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	<init> ()V <init>
	<init> (ILjava/lang/String;Z)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	a (Lbru;)Lbqv; getCommandBlock
	b ()Ljava/lang/String; getCommand
	c ()Z isTrackOutput
	a (Lni;)V handle
tm net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	a slotNum
	b itemStack
	<init> ()V <init>
	<init> (ILbly;)V <init>
	a (Lsa;)V handle
	a (Lnf;)V read
	b (Lnf;)V write
	b ()I getSlotNum
	c ()Lbly; getItem
	a (Lni;)V handle
tn net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b name
	c target
	d pool
	e finalState
	f joint
	<init> ()V <init>
	<init> (Lfx;Lvk;Lvk;Lvk;Ljava/lang/String;Lccw$a;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lfx; getPos
	c ()Lvk; getName
	d ()Lvk; getTarget
	e ()Lvk; getPool
	f ()Ljava/lang/String; getFinalState
	g ()Lccw$a; getJoint
	a (Lni;)V handle
to net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a pos
	b updateType
	c mode
	d name
	e offset
	f size
	g mirror
	h rotation
	i data
	j ignoreEntities
	k showAir
	l showBoundingBox
	m integrity
	n seed
	<init> ()V <init>
	<init> (Lfx;Lcdg$a;Lcfl;Ljava/lang/String;Lfx;Lfx;Lbyd;Lbzj;Ljava/lang/String;ZZZFJ)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lfx; getPos
	c ()Lcdg$a; getUpdateType
	d ()Lcfl; getMode
	e ()Ljava/lang/String; getName
	f ()Lfx; getOffset
	g ()Lfx; getSize
	h ()Lbyd; getMirror
	i ()Lbzj; getRotation
	j ()Ljava/lang/String; getData
	k ()Z isIgnoreEntities
	l ()Z isShowAir
	m ()Z isShowBoundingBox
	n ()F getIntegrity
	o ()J getSeed
	a (Lni;)V handle
tp net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a pos
	b lines
	<init> ()V <init>
	<init> (Lfx;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Lfx; getPos
	c ()[Ljava/lang/String; getLines
	a (Lni;)V handle
tq net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	<init> ()V <init>
	<init> (Laoq;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Laoq; getHand
	a (Lni;)V handle
tr net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	<init> ()V <init>
	<init> (Ljava/util/UUID;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	a (Laag;)Lapx; getEntity
	a (Lni;)V handle
ts net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	<init> ()V <init>
	<init> (Laoq;Ldcg;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Laoq; getHand
	c ()Ldcg; getHitResult
	a (Lni;)V handle
tt net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	<init> ()V <init>
	<init> (Laoq;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lsa;)V handle
	b ()Laoq; getHand
	a (Lni;)V handle
tu net/minecraft/network/protocol/game/package-info
tv net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a protocolVersion
	b hostName
	c port
	d intention
	<init> ()V <init>
	<init> (Ljava/lang/String;ILne;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Ltw;)V handle
	b ()Lne; getIntention
	c ()I getProtocolVersion
	d ()Ljava/lang/String; getHostName
	e ()I getPort
	a (Lni;)V handle
tw net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Ltv;)V handleIntention
tx net/minecraft/network/protocol/handshake/package-info
ty net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Lub;)V handleHello
	a (Lua;)V handleGameProfile
	a (Lud;)V handleDisconnect
	a (Luc;)V handleCompression
	a (Ltz;)V handleCustomQuery
tz net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a transactionId
	b identifier
	c data
	<init> ()V <init>
	<init> (ILvk;Lnf;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lty;)V handle
	b ()I getTransactionId
	c ()Lvk; getIdentifier
	d ()Lnf; getData
	a (Lni;)V handle
ua net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	<init> ()V <init>
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lty;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	a (Lni;)V handle
ub net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c nonce
	<init> ()V <init>
	<init> (Ljava/lang/String;Ljava/security/PublicKey;[B)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lty;)V handle
	b ()Ljava/lang/String; getServerId
	c ()Ljava/security/PublicKey; getPublicKey
	d ()[B getNonce
	a (Lni;)V handle
uc net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	<init> ()V <init>
	<init> (I)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lty;)V handle
	b ()I getCompressionThreshold
	a (Lni;)V handle
ud net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	<init> ()V <init>
	<init> (Lnr;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lty;)V handle
	b ()Lnr; getReason
	a (Lni;)V handle
ue net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Lug;)V handleHello
	a (Luh;)V handleKey
	a (Luf;)V handleCustomQueryPacket
uf net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	a transactionId
	b data
	<init> ()V <init>
	<init> (ILnf;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lue;)V handle
	b ()I getTransactionId
	c ()Lnf; getData
	a (Lni;)V handle
ug net/minecraft/network/protocol/login/ServerboundHelloPacket
	a gameProfile
	<init> ()V <init>
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lue;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	a (Lni;)V handle
uh net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b nonce
	<init> ()V <init>
	<init> (Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lue;)V handle
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	b (Ljava/security/PrivateKey;)[B getNonce
	a (Lni;)V handle
ui net/minecraft/network/protocol/login/package-info
uj net/minecraft/network/protocol/package-info
uk net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Lum;)V handleStatusResponse
	a (Lul;)V handlePongResponse
ul net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	<init> ()V <init>
	<init> (J)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Luk;)V handle
	b ()J getTime
	a (Lni;)V handle
um net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a GSON
	b status
	<init> ()V <init>
	<init> (Lun;)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Luk;)V handle
	b ()Lun; getStatus
	a (Lni;)V handle
	<clinit> ()V <clinit>
un net/minecraft/network/protocol/status/ServerStatus
	a description
	b players
	c version
	d favicon
	<init> ()V <init>
	a ()Lnr; getDescription
	a (Lnr;)V setDescription
	b ()Lun$a; getPlayers
	a (Lun$a;)V setPlayers
	c ()Lun$c; getVersion
	a (Lun$c;)V setVersion
	a (Ljava/lang/String;)V setFavicon
	d ()Ljava/lang/String; getFavicon
un$a net/minecraft/network/protocol/status/ServerStatus$Players
	a maxPlayers
	b numPlayers
	c sample
	<init> (II)V <init>
	a ()I getMaxPlayers
	b ()I getNumPlayers
	c ()[Lcom/mojang/authlib/GameProfile; getSample
	a ([Lcom/mojang/authlib/GameProfile;)V setSample
un$a$a net/minecraft/network/protocol/status/ServerStatus$Players$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lun$a; deserialize
	a (Lun$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
un$b net/minecraft/network/protocol/status/ServerStatus$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lun; deserialize
	a (Lun;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
un$c net/minecraft/network/protocol/status/ServerStatus$Version
	a name
	b protocol
	<init> (Ljava/lang/String;I)V <init>
	a ()Ljava/lang/String; getName
	b ()I getProtocol
un$c$a net/minecraft/network/protocol/status/ServerStatus$Version$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lun$c; deserialize
	a (Lun$c;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
uo net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Lup;)V handlePingRequest
	a (Luq;)V handleStatusRequest
up net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	<init> ()V <init>
	<init> (J)V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Luo;)V handle
	b ()J getTime
	a (Lni;)V handle
uq net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	<init> ()V <init>
	a (Lnf;)V read
	b (Lnf;)V write
	a (Luo;)V handle
	a (Lni;)V handle
ur net/minecraft/network/protocol/status/package-info
us net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	<init> (ILut;)V <init>
	a ()I getId
	b ()Lut; getSerializer
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
ut net/minecraft/network/syncher/EntityDataSerializer
	a (Lnf;Ljava/lang/Object;)V write
	a (Lnf;)Ljava/lang/Object; read
	a (I)Lus; createAccessor
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
uu net/minecraft/network/syncher/EntityDataSerializers
	t SERIALIZERS
	a BYTE
	b INT
	c FLOAT
	d STRING
	e COMPONENT
	f OPTIONAL_COMPONENT
	g ITEM_STACK
	h BLOCK_STATE
	i BOOLEAN
	j PARTICLE
	k ROTATIONS
	l BLOCK_POS
	m OPTIONAL_BLOCK_POS
	n DIRECTION
	o OPTIONAL_UUID
	p COMPOUND_TAG
	q VILLAGER_DATA
	r OPTIONAL_UNSIGNED_INT
	s POSE
	a (Lut;)V registerSerializer
	a (I)Lut; getSerializer
	b (Lut;)I getSerializedId
	<init> ()V <init>
	<clinit> ()V <clinit>
uu$1 net/minecraft/network/syncher/EntityDataSerializers$1
	<init> ()V <init>
	a (Lnf;Ljava/lang/Byte;)V write
	b (Lnf;)Ljava/lang/Byte; read
	a (Ljava/lang/Byte;)Ljava/lang/Byte; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$2 net/minecraft/network/syncher/EntityDataSerializers$10
	<init> ()V <init>
	a (Lnf;Lhf;)V write
	b (Lnf;)Lhf; read
	a (Lnf;Lhg;)Lhf; readParticle
	a (Lhf;)Lhf; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$3 net/minecraft/network/syncher/EntityDataSerializers$11
	<init> ()V <init>
	a (Lnf;Lgo;)V write
	b (Lnf;)Lgo; read
	a (Lgo;)Lgo; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$4 net/minecraft/network/syncher/EntityDataSerializers$12
	<init> ()V <init>
	a (Lnf;Lfx;)V write
	b (Lnf;)Lfx; read
	a (Lfx;)Lfx; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$5 net/minecraft/network/syncher/EntityDataSerializers$13
	<init> ()V <init>
	a (Lnf;Ljava/util/Optional;)V write
	b (Lnf;)Ljava/util/Optional; read
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$6 net/minecraft/network/syncher/EntityDataSerializers$14
	<init> ()V <init>
	a (Lnf;Lgc;)V write
	b (Lnf;)Lgc; read
	a (Lgc;)Lgc; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$7 net/minecraft/network/syncher/EntityDataSerializers$15
	<init> ()V <init>
	a (Lnf;Ljava/util/Optional;)V write
	b (Lnf;)Ljava/util/Optional; read
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$8 net/minecraft/network/syncher/EntityDataSerializers$16
	<init> ()V <init>
	a (Lnf;Lmd;)V write
	b (Lnf;)Lmd; read
	a (Lmd;)Lmd; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$9 net/minecraft/network/syncher/EntityDataSerializers$17
	<init> ()V <init>
	a (Lnf;Lbfh;)V write
	b (Lnf;)Lbfh; read
	a (Lbfh;)Lbfh; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$10 net/minecraft/network/syncher/EntityDataSerializers$18
	<init> ()V <init>
	a (Lnf;Ljava/util/OptionalInt;)V write
	b (Lnf;)Ljava/util/OptionalInt; read
	a (Ljava/util/OptionalInt;)Ljava/util/OptionalInt; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$11 net/minecraft/network/syncher/EntityDataSerializers$19
	<init> ()V <init>
	a (Lnf;Laqu;)V write
	b (Lnf;)Laqu; read
	a (Laqu;)Laqu; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$12 net/minecraft/network/syncher/EntityDataSerializers$2
	<init> ()V <init>
	a (Lnf;Ljava/lang/Integer;)V write
	b (Lnf;)Ljava/lang/Integer; read
	a (Ljava/lang/Integer;)Ljava/lang/Integer; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$13 net/minecraft/network/syncher/EntityDataSerializers$3
	<init> ()V <init>
	a (Lnf;Ljava/lang/Float;)V write
	b (Lnf;)Ljava/lang/Float; read
	a (Ljava/lang/Float;)Ljava/lang/Float; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$14 net/minecraft/network/syncher/EntityDataSerializers$4
	<init> ()V <init>
	a (Lnf;Ljava/lang/String;)V write
	b (Lnf;)Ljava/lang/String; read
	a (Ljava/lang/String;)Ljava/lang/String; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$15 net/minecraft/network/syncher/EntityDataSerializers$5
	<init> ()V <init>
	a (Lnf;Lnr;)V write
	b (Lnf;)Lnr; read
	a (Lnr;)Lnr; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$16 net/minecraft/network/syncher/EntityDataSerializers$6
	<init> ()V <init>
	a (Lnf;Ljava/util/Optional;)V write
	b (Lnf;)Ljava/util/Optional; read
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$17 net/minecraft/network/syncher/EntityDataSerializers$7
	<init> ()V <init>
	a (Lnf;Lbly;)V write
	b (Lnf;)Lbly; read
	a (Lbly;)Lbly; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$18 net/minecraft/network/syncher/EntityDataSerializers$8
	<init> ()V <init>
	a (Lnf;Ljava/util/Optional;)V write
	b (Lnf;)Ljava/util/Optional; read
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uu$19 net/minecraft/network/syncher/EntityDataSerializers$9
	<init> ()V <init>
	a (Lnf;Ljava/lang/Boolean;)V write
	b (Lnf;)Ljava/lang/Boolean; read
	a (Ljava/lang/Boolean;)Ljava/lang/Boolean; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnf;)Ljava/lang/Object; read
	a (Lnf;Ljava/lang/Object;)V write
uv net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	c entity
	d itemsById
	e lock
	f isEmpty
	g isDirty
	<init> (Lapx;)V <init>
	a (Ljava/lang/Class;Lut;)Lus; defineId
	a (Lus;Ljava/lang/Object;)V define
	c (Lus;Ljava/lang/Object;)V createDataItem
	b (Lus;)Luv$a; getItem
	a (Lus;)Ljava/lang/Object; get
	b (Lus;Ljava/lang/Object;)V set
	a ()Z isDirty
	a (Ljava/util/List;Lnf;)V pack
	b ()Ljava/util/List; packDirty
	c ()Ljava/util/List; getAll
	a (Lnf;Luv$a;)V writeDataItem
	a (Lnf;)Ljava/util/List; unpack
	a (Lnf;ILut;)Luv$a; genericHelper
	a (Ljava/util/List;)V assignValues
	a (Luv$a;Luv$a;)V assignValue
	d ()Z isEmpty
	e ()V clearDirty
	<clinit> ()V <clinit>
uv$a net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c dirty
	<init> (Lus;Ljava/lang/Object;)V <init>
	a ()Lus; getAccessor
	a (Ljava/lang/Object;)V setValue
	b ()Ljava/lang/Object; getValue
	c ()Z isDirty
	a (Z)V setDirty
	d ()Luv$a; copy
	a (Luv$a;)Lus; access$000
	b (Luv$a;)Ljava/lang/Object; access$100
uw net/minecraft/network/syncher/package-info
net/minecraft/obfuscate/DontObfuscateOrShrink net/minecraft/obfuscate/DontObfuscateOrShrink
net/minecraft/obfuscate/KeepAfterObfuscation net/minecraft/obfuscate/KeepAfterObfuscation
ux net/minecraft/obfuscate/package-info
uy net/minecraft/package-info
eoa net/minecraft/realms/DisconnectedRealmsScreen
	a title
	b reason
	c message
	p parent
	q textHeight
	<init> (Ldoq;Lnr;Lnr;)V <init>
	b ()V init
	au_ ()V onClose
	a (Ldfj;IIF)V render
	a (Ldjw;Ldlg;)V lambda$init$0
eob net/minecraft/realms/NarrationHelper
	a REPEATED_NARRATOR
	<init> ()V <init>
	a (Ljava/lang/String;)V now
	c (Ljava/lang/String;)Ljava/lang/String; fixNarrationNewlines
	a ([Ljava/lang/String;)V now
	a (Ljava/lang/Iterable;)V now
	b (Ljava/lang/Iterable;)Ljava/lang/String; join
	b (Ljava/lang/String;)V repeatedly
	<clinit> ()V <clinit>
eoc net/minecraft/realms/RealmsBridge
	a previousScreen
	<init> ()V <init>
	a (Ldoq;)V switchToRealms
	b (Ldoq;)Leog; getNotificationScreen
	b ()V init
eod net/minecraft/realms/RealmsConnect
	a LOGGER
	b onlineScreen
	c aborted
	d connection
	<init> (Ldoq;)V <init>
	a (Ljava/lang/String;I)V connect
	a ()V abort
	b ()V tick
	a (Leod;)Z access$000
	a (Leod;Lnd;)Lnd; access$102
	b (Leod;)Lnd; access$100
	c (Leod;)Ldoq; access$200
	c ()Lorg/apache/logging/log4j/Logger; access$300
	<clinit> ()V <clinit>
eod$1 net/minecraft/realms/RealmsConnect$1
	a val$hostname
	b val$port
	c val$minecraft
	d this$0
	<init> (Leod;Ljava/lang/String;Ljava/lang/String;ILdjw;)V <init>
	run ()V run
	a (Ldjw;Leoa;)V lambda$run$2
	b (Ldjw;Leoa;)V lambda$run$1
	a (Lnr;)V lambda$run$0
eoe net/minecraft/realms/RealmsLabel
	a text
	b x
	c y
	d color
	<init> (Lnr;III)V <init>
	a (Ldoq;Ldfj;)V render
	a ()Ljava/lang/String; getText
eof net/minecraft/realms/RealmsObjectSelectionList
	<init> (IIIII)V <init>
	j (I)V setSelectedItem
	a (I)V selectItem
	a (IIDDI)V itemClicked
	c ()I getMaxPosition
	e ()I getScrollbarPosition
	d ()I getRowWidth
	a (Ljava/util/Collection;)V replaceEntries
	l ()I getItemCount
	h (I)I getRowTop
	p ()I getRowLeft
	a (Ldls$a;)I addEntry
	a ()V clear
	b (Ldlc$a;)I addEntry
eog net/minecraft/realms/RealmsScreen
	<init> ()V <init>
	j (I)I row
	d ()V tick
	A ()V narrateLabels
eoh net/minecraft/realms/RealmsServerAddress
	a host
	b port
	<init> (Ljava/lang/String;I)V <init>
	a ()Ljava/lang/String; getHost
	b ()I getPort
	a (Ljava/lang/String;)Leoh; parseString
eoi net/minecraft/realms/RepeatedNarrator
	a permitsPerSecond
	b params
	<init> (Ljava/time/Duration;)V <init>
	a (Ljava/lang/String;)V narrate
	a (Ljava/lang/String;Leoi$a;)Leoi$a; lambda$narrate$0
eoi$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
	<init> (Ljava/lang/String;Lcom/google/common/util/concurrent/RateLimiter;)V <init>
	a (Leoi$a;)Lcom/google/common/util/concurrent/RateLimiter; access$000
	b (Leoi$a;)Ljava/lang/String; access$100
eoj net/minecraft/realms/package-info
uz net/minecraft/recipebook/PlaceRecipe
	a (IIILbon;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
va net/minecraft/recipebook/ServerPlaceRecipe
	a LOGGER
	b stackedContents
	c inventory
	d menu
	<init> (Lbjg;)V <init>
	a (Laah;Lbon;Z)V recipeClicked
	a ()V clearGrid
	a (I)V moveItemToInventory
	a (Lbon;Z)V handleRecipeClicked
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (ZIZ)I getStackSize
	a (Lbjo;Lbly;)V moveItemToGrid
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
	<clinit> ()V <clinit>
vb net/minecraft/recipebook/ServerPlaceSmeltingRecipe
	e recipeMatchesPlaced
	<init> (Lbjg;)V <init>
	a (Lbon;Z)V handleRecipeClicked
	a ()V clearGrid
	a (ILit/unimi/dsi/fastutil/ints/IntList;)V placeRecipe
vc net/minecraft/recipebook/package-info
vd net/minecraft/resources/DelegatingOps
	a delegate
	<init> (Lcom/mojang/serialization/DynamicOps;)V <init>
	empty ()Ljava/lang/Object; empty
	convertTo (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; convertTo
	getNumberValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getNumberValue
	createNumeric (Ljava/lang/Number;)Ljava/lang/Object; createNumeric
	createByte (B)Ljava/lang/Object; createByte
	createShort (S)Ljava/lang/Object; createShort
	createInt (I)Ljava/lang/Object; createInt
	createLong (J)Ljava/lang/Object; createLong
	createFloat (F)Ljava/lang/Object; createFloat
	createDouble (D)Ljava/lang/Object; createDouble
	getBooleanValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getBooleanValue
	createBoolean (Z)Ljava/lang/Object; createBoolean
	getStringValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStringValue
	createString (Ljava/lang/String;)Ljava/lang/Object; createString
	mergeToList (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToList
	mergeToList (Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	mergeToMap (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToMap
	mergeToMap (Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	getMapValues (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapValues
	getMapEntries (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapEntries
	createMap (Ljava/util/stream/Stream;)Ljava/lang/Object; createMap
	getMap (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMap
	getStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStream
	getList (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getList
	createList (Ljava/util/stream/Stream;)Ljava/lang/Object; createList
	getByteBuffer (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getByteBuffer
	createByteList (Ljava/nio/ByteBuffer;)Ljava/lang/Object; createByteList
	getIntStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getIntStream
	createIntList (Ljava/util/stream/IntStream;)Ljava/lang/Object; createIntList
	getLongStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getLongStream
	createLongList (Ljava/util/stream/LongStream;)Ljava/lang/Object; createLongList
	remove (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; remove
	compressMaps ()Z compressMaps
	listBuilder ()Lcom/mojang/serialization/ListBuilder; listBuilder
	mapBuilder ()Lcom/mojang/serialization/RecordBuilder; mapBuilder
ve net/minecraft/resources/RegistryDataPackCodec
	a directCodec
	b registryKey
	c elementCodec
	a (Lvj;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lve; create
	<init> (Lvj;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)V <init>
	a (Lgi;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$decode$1
	a (Lcom/mojang/datafixers/util/Pair;Lgi;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
vf net/minecraft/resources/RegistryFileCodec
	a registryKey
	b elementCodec
	c allowInline
	a (Lvj;Lcom/mojang/serialization/Codec;)Lvf; create
	b (Lvj;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lvj;Lcom/mojang/serialization/Codec;Z)Lvf; create
	<init> (Lvj;Lcom/mojang/serialization/Codec;Z)V <init>
	a (Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$7
	a (Ljava/lang/Object;)Ljava/util/function/Supplier; lambda$null$6
	b (Ljava/lang/Object;)Ljava/lang/Object; lambda$null$5
	a (Lcom/mojang/datafixers/util/Either;)Ljava/util/List; lambda$homogeneousList$4
	a (Ljava/util/List;)Ljava/util/List; lambda$null$3
	b (Ljava/util/List;)Ljava/util/List; lambda$null$2
	c (Ljava/lang/Object;)Ljava/util/function/Supplier; lambda$homogeneousList$1
	d (Ljava/lang/Object;)Ljava/lang/Object; lambda$null$0
vg net/minecraft/resources/RegistryLookupCodec
	a registryKey
	a (Lvj;)Lvg; create
	<init> (Lvj;)V <init>
	a (Lgm;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	decode (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
vh net/minecraft/resources/RegistryReadOps
	b LOGGER
	c resources
	d registryHolder
	e readCache
	f jsonOps
	a (Lcom/mojang/serialization/DynamicOps;Lacf;Lgn$b;)Lvh; create
	a (Lcom/mojang/serialization/DynamicOps;Lvh$b;Lgn$b;)Lvh; create
	<init> (Lcom/mojang/serialization/DynamicOps;Lvh$b;Lgn$b;Ljava/util/IdentityHashMap;)V <init>
	a (Ljava/lang/Object;Lvj;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/DataResult; decodeElement
	a (Lgi;Lvj;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; decodeElements
	a (Lvj;Lgs;Lcom/mojang/serialization/Codec;Lvk;)Lcom/mojang/serialization/DataResult; readAndRegisterElement
	b (Lvj;)Lvh$a; readCache
	a (Lvj;)Lcom/mojang/serialization/DataResult; registry
	c (Lvj;)Lcom/mojang/serialization/DataResult; lambda$registry$12
	a (Lgs;)Lcom/mojang/serialization/DataResult; lambda$registry$11
	d (Lvj;)Lvh$a; lambda$readCache$10
	a (Lgs;Lvj;Lcom/mojang/datafixers/util/Pair;)Ljava/util/function/Supplier; lambda$readAndRegisterElement$9
	a (Lgs;Lvj;)Ljava/lang/Object; lambda$null$8
	b (Lgs;Lvj;)Ljava/lang/Object; lambda$readAndRegisterElement$7
	c (Lgs;Lvj;)Ljava/lang/Object; lambda$readAndRegisterElement$6
	a (Lvj;Lcom/mojang/serialization/Codec;Lvk;Lgi;)Lcom/mojang/serialization/DataResult; lambda$decodeElements$5
	a (Lgi;Ljava/util/function/Supplier;)Lgi; lambda$null$4
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/util/Pair; lambda$decodeElement$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decodeElement$2
	a (Ljava/lang/Object;)Ljava/util/function/Supplier; lambda$null$1
	b (Ljava/lang/Object;)Ljava/lang/Object; lambda$null$0
	a ()Lorg/apache/logging/log4j/Logger; access$100
	<clinit> ()V <clinit>
vh$1 net/minecraft/resources/RegistryReadOps$1
vh$a net/minecraft/resources/RegistryReadOps$ReadCache
	a values
	<init> ()V <init>
	a (Lvh$a;)Ljava/util/Map; access$000
	<init> (Lvh$1;)V <init>
vh$b net/minecraft/resources/RegistryReadOps$ResourceAccess
	a (Lvj;)Ljava/util/Collection; listResources
	a (Lcom/mojang/serialization/DynamicOps;Lvj;Lvj;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; parseElement
	a (Lacf;)Lvh$b; forResourceManager
vh$b$1 net/minecraft/resources/RegistryReadOps$ResourceAccess$1
	a val$manager
	<init> (Lacf;)V <init>
	a (Lvj;)Ljava/util/Collection; listResources
	a (Lcom/mojang/serialization/DynamicOps;Lvj;Lvj;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; parseElement
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$parseElement$1
	a (Ljava/lang/String;)Z lambda$listResources$0
vh$b$a net/minecraft/resources/RegistryReadOps$ResourceAccess$MemoryMap
	a data
	b ids
	c lifecycles
	<init> ()V <init>
	a (Lgn$b;Lvj;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V add
	a (Lvj;)Ljava/util/Collection; listResources
	a (Lcom/mojang/serialization/DynamicOps;Lvj;Lvj;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; parseElement
	a (Lvj;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$parseElement$2
	a (Lvj;Lvj;)Lvk; lambda$listResources$1
	b (Lvj;Lvj;)Z lambda$listResources$0
vi net/minecraft/resources/RegistryWriteOps
	b registryHolder
	a (Lcom/mojang/serialization/DynamicOps;Lgn;)Lvi; create
	<init> (Lcom/mojang/serialization/DynamicOps;Lgn;)V <init>
	a (Ljava/lang/Object;Ljava/lang/Object;Lvj;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; encode
vj net/minecraft/resources/ResourceKey
	a VALUES
	b registryName
	c location
	a (Lvj;Lvk;)Lvj; create
	a (Lvk;)Lvj; createRegistryKey
	a (Lvk;Lvk;)Lvj; create
	<init> (Lvk;Lvk;)V <init>
	toString ()Ljava/lang/String; toString
	a (Lvj;)Z isFor
	a ()Lvk; location
	b (Lvj;)Ljava/util/function/Function; elementKey
	b (Lvj;Lvk;)Lvj; lambda$elementKey$1
	a (Lvk;Lvk;Ljava/lang/String;)Lvj; lambda$create$0
	<clinit> ()V <clinit>
vk net/minecraft/resources/ResourceLocation
	a CODEC
	d ERROR_INVALID
	b namespace
	c path
	<init> ([Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Ljava/lang/String;C)Lvk; of
	a (Ljava/lang/String;)Lvk; tryParse
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; read
	a ()Ljava/lang/String; getPath
	b ()Ljava/lang/String; getNamespace
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lvk;)I compareTo
	c ()Ljava/lang/String; toDebugFileName
	a (Lcom/mojang/brigadier/StringReader;)Lvk; read
	a (C)Z isAllowedInResourceLocation
	d (Ljava/lang/String;)Z isValidPath
	e (Ljava/lang/String;)Z isValidNamespace
	b (C)Z validPathChar
	c (C)Z validNamespaceChar
	b (Ljava/lang/String;)Z isValidResourceLocation
	compareTo (Ljava/lang/Object;)I compareTo
	<clinit> ()V <clinit>
vk$a net/minecraft/resources/ResourceLocation$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lvk; deserialize
	a (Lvk;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
vl net/minecraft/resources/package-info
vm net/minecraft/server/Bootstrap
	a STDOUT
	b isBootstrapped
	c LOGGER
	<init> ()V <init>
	a ()V bootStrap
	a (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	a (Ljava/util/Set;)V checkGameruleTranslations
	b ()Ljava/util/Set; getMissingTranslations
	c ()V validate
	d ()V wrapStreams
	a (Ljava/lang/String;)V realStdoutPrintln
	b (Ljava/lang/String;)V lambda$validate$2
	a (Lvk;)Ljava/lang/String; lambda$getMissingTranslations$1
	a (Ljava/util/function/Function;Lly;Ljava/util/Set;Ljava/lang/Object;)V lambda$checkTranslations$0
	<clinit> ()V <clinit>
vm$1 net/minecraft/server/Bootstrap$1
	a val$language
	b val$missing
	<init> (Lly;Ljava/util/Set;)V <init>
	a (Lbrq$e;Lbrq$f;)V visit
vn net/minecraft/server/ChainedJsonException
	a entries
	b message
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
	getMessage ()Ljava/lang/String; getMessage
	a (Ljava/lang/Exception;)Lvn; forException
vn$1 net/minecraft/server/ChainedJsonException$1
vn$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	<init> ()V <init>
	a (Ljava/lang/String;)V addJsonKey
	a ()Ljava/lang/String; getFilename
	b ()Ljava/lang/String; getJsonKeys
	toString ()Ljava/lang/String; toString
	<init> (Lvn$1;)V <init>
	a (Lvn$a;Ljava/lang/String;)V access$100
	b (Lvn$a;Ljava/lang/String;)Ljava/lang/String; access$202
vo net/minecraft/server/ConsoleInput
	a msg
	b source
	<init> (Ljava/lang/String;Ldb;)V <init>
vp net/minecraft/server/ConsoleInputSource
	a (Ljava/lang/String;)V info
	b (Ljava/lang/String;)V warn
vq net/minecraft/server/DebugLoggedPrintStream
	<init> (Ljava/lang/String;Ljava/io/OutputStream;)V <init>
	a (Ljava/lang/String;)V logLine
vr net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	<init> (Ljava/nio/file/Path;)V <init>
	b ()Z readFile
	a ()Z hasAgreedToEULA
	c ()V saveDefaults
	<clinit> ()V <clinit>
vs net/minecraft/server/LoggedPrintStream
	a LOGGER
	b name
	<init> (Ljava/lang/String;Ljava/io/OutputStream;)V <init>
	println (Ljava/lang/String;)V println
	println (Ljava/lang/Object;)V println
	a (Ljava/lang/String;)V logLine
	<clinit> ()V <clinit>
net/minecraft/server/Main net/minecraft/server/Main
	a LOGGER
	<init> ()V <init>
	main ([Ljava/lang/String;)V main
	a (Lcyd$a;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V forceUpgrade
	a (Lgn$b;Lcyd$a;Labu;Lvz;Lcyk;Lzi;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Laco;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lzg; lambda$main$1
	a ()Z lambda$main$0
	<clinit> ()V <clinit>
net/minecraft/server/Main$1 net/minecraft/server/Main$1
	a val$dedicatedServer
	<init> (Ljava/lang/String;Lzg;)V <init>
	run ()V run
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	j LOGGER
	b USERID_CACHE_FILE
	c DEMO_SETTINGS
	d storageSource
	e playerDataStorage
	k snooper
	l tickables
	m continousProfiler
	n profiler
	o connection
	p progressListenerFactory
	q status
	r random
	s fixerUpper
	t localIp
	u port
	f registryHolder
	v levels
	w playerList
	x running
	y stopped
	z tickCount
	g proxy
	A onlineMode
	B preventProxyConnections
	C pvp
	D allowFlight
	E motd
	F maxBuildHeight
	G playerIdleTimeout
	h tickTimes
	H keyPair
	I singleplayerName
	J isDemo
	K resourcePack
	L resourcePackHash
	M isReady
	N lastOverloadWarning
	O delayProfilerStart
	P forceGameType
	Q sessionService
	R profileRepository
	S profileCache
	T lastServerStatus
	U serverThread
	V nextTickTime
	W delayedTasksMaxNextTickTime
	X mayHaveDelayedTasks
	Y hasWorldScreenshot
	Z packRepository
	aa scoreboard
	ab commandStorage
	ac customBossEvents
	ad functionManager
	ae frameTimer
	af enforceWhitelist
	ag averageTickTime
	ah executor
	ai serverId
	aj resources
	ak structureManager
	i worldData
	a (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; spin
	<init> (Ljava/lang/Thread;Lgn$b;Lcyd$a;Lcyk;Labu;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Lvz;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Laco;Laaq;)V <init>
	a (Lcxz;)V readScoreboard
	d ()Z initServer
	a (Lcyd$a;)V convertFromRegionFormatIfNeeded
	l_ ()V loadLevel
	q ()V forceDifficulty
	a (Laap;)V createLevels
	a (Laag;Lcyj;ZZZ)V setInitialSpawn
	a (Lcyk;)V setupDebugLevel
	b (Laap;)V prepareLevels
	r ()V detectBundledResources
	s ()Lbrr; getDefaultGameType
	f ()Z isHardcore
	g ()I getOperatorUserPermissionLevel
	h ()I getFunctionCompilationLevel
	i ()Z shouldRconBroadcast
	a (ZZZ)Z saveAllChunks
	close ()V close
	t ()V stopServer
	u ()Ljava/lang/String; getLocalIp
	a_ (Ljava/lang/String;)V setLocalIp
	v ()Z isRunning
	a (Z)V halt
	w ()V runServer
	aZ ()Z haveTime
	x ()V waitUntilNextTick
	a (Ljava/lang/Runnable;)Lwb; wrapRunnable
	a (Lwb;)Z shouldRun
	y ()Z pollTask
	ba ()Z pollTaskInternal
	b (Lwb;)V doRunTask
	a (Lun;)V updateStatusIcon
	z ()Z hasWorldScreenshot
	A ()Ljava/io/File; getWorldScreenshotFile
	B ()Ljava/io/File; getServerDirectory
	a (Ll;)V onServerCrash
	e ()V onServerExit
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	C ()Z isNetherEnabled
	b (Ljava/lang/Runnable;)V addTickable
	b (Ljava/lang/String;)V setId
	D ()Z isShutdown
	c (Ljava/lang/String;)Ljava/io/File; getFile
	E ()Laag; overworld
	a (Lvj;)Laag; getLevel
	F ()Ljava/util/Set; levelKeys
	G ()Ljava/lang/Iterable; getAllLevels
	H ()Ljava/lang/String; getServerVersion
	I ()I getPlayerCount
	J ()I getMaxPlayers
	K ()[Ljava/lang/String; getPlayerNames
	getServerModName ()Ljava/lang/String; getServerModName
	b (Ll;)Ll; fillReport
	o ()Ljava/util/Optional; getModdedStatus
	a (Lnr;Ljava/util/UUID;)V sendMessage
	L ()Ljava/security/KeyPair; getKeyPair
	M ()I getPort
	a (I)V setPort
	N ()Ljava/lang/String; getSingleplayerName
	d (Ljava/lang/String;)V setSingleplayerName
	O ()Z isSingleplayer
	a (Ljava/security/KeyPair;)V setKeyPair
	a (Laoo;Z)V setDifficulty
	b (I)I getScaledTrackingDistance
	bb ()V updateMobSpawningFlags
	b (Z)V setDifficultyLocked
	a (Laah;)V sendDifficultyUpdate
	P ()Z isSpawningMonsters
	Q ()Z isDemo
	c (Z)V setDemo
	R ()Ljava/lang/String; getResourcePack
	S ()Ljava/lang/String; getResourcePackHash
	a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
	a (Laoz;)V populateSnooper
	b (Laoz;)V populateSnooperInitial
	T ()Z isSnooperEnabled
	j ()Z isDedicatedServer
	k ()I getRateLimitPacketsPerSecond
	U ()Z usesAuthentication
	d (Z)V setUsesAuthentication
	V ()Z getPreventProxyConnections
	e (Z)V setPreventProxyConnections
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	l ()Z isEpollEnabled
	Y ()Z isPvpAllowed
	f (Z)V setPvpAllowed
	Z ()Z isFlightAllowed
	g (Z)V setFlightAllowed
	m ()Z isCommandBlockEnabled
	aa ()Ljava/lang/String; getMotd
	e (Ljava/lang/String;)V setMotd
	ab ()I getMaxBuildHeight
	c (I)V setMaxBuildHeight
	ac ()Z isStopped
	ad ()Lacs; getPlayerList
	a (Lacs;)V setPlayerList
	n ()Z isPublished
	a (Lbrr;)V setDefaultGameType
	ae ()Laax; getConnection
	af ()Z isReady
	ag ()Z hasGui
	a (Lbrr;ZI)Z publishServer
	ah ()I getTickCount
	ai ()Laoz; getSnooper
	aj ()I getSpawnProtectionRadius
	a (Laag;Lfx;Lbft;)Z isUnderSpawnProtection
	h (Z)V setForceGameType
	ak ()Z getForceGameType
	al ()Z repliesToStatus
	am ()Ljava/net/Proxy; getProxy
	an ()I getPlayerIdleTimeout
	d (I)V setPlayerIdleTimeout
	ao ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getSessionService
	ap ()Lcom/mojang/authlib/GameProfileRepository; getProfileRepository
	aq ()Laco; getProfileCache
	ar ()Lun; getStatus
	as ()V invalidateStatus
	at ()I getAbsoluteMaxWorldSize
	au ()Z scheduleExecutables
	av ()Ljava/lang/Thread; getRunningThread
	aw ()I getCompressionThreshold
	ax ()J getNextTickTime
	ay ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	a (Laag;)I getSpawnRadius
	az ()Lvv; getAdvancements
	aA ()Lvx; getFunctions
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; reloadResources
	a (Labu;Lbrh;Z)Lbrh; configurePackRepository
	a (Labu;)Lbrh; getSelectedPacks
	a (Ldb;)V kickUnlistedPlayers
	aB ()Labu; getPackRepository
	aC ()Ldc; getCommands
	aD ()Ldb; createCommandSourceStack
	a ()Z acceptsSuccess
	b ()Z acceptsFailure
	R_ ()Z shouldInformAdmins
	aE ()Lboo; getRecipeManager
	aF ()Lael; getTags
	aG ()Lwa; getScoreboard
	aH ()Lcxx; getCommandStorage
	aI ()Lcyw; getLootTables
	aJ ()Lcyx; getPredicateManager
	aK ()Lbrq; getGameRules
	aL ()Lwd; getCustomBossEvents
	aM ()Z isEnforceWhitelist
	i (Z)V setEnforceWhitelist
	aN ()F getAverageTickTime
	b (Lcom/mojang/authlib/GameProfile;)I getProfilePermissions
	aO ()Laez; getFrameTimer
	aP ()Lant; getProfiler
	aQ ()Ljava/util/concurrent/Executor; getBackgroundTaskExecutor
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/nio/file/Path;)V saveDebugReport
	b (Ljava/nio/file/Path;)V dumpMiscStats
	c (Ljava/nio/file/Path;)V dumpCrashCategory
	d (Ljava/nio/file/Path;)V dumpGameRules
	e (Ljava/nio/file/Path;)V dumpClasspath
	f (Ljava/nio/file/Path;)V dumpThreads
	a (Lanw;)V startProfilerTick
	b (Lanw;)V endProfilerTick
	aR ()Z isProfiling
	aS ()V startProfiling
	aT ()Lans; finishProfiling
	a (Lcyb;)Ljava/nio/file/Path; getWorldPath
	aU ()Z forceSynchronousWrites
	aV ()Lcst; getStructureManager
	aW ()Lcyk; getWorldData
	aX ()Lgn; registryAccess
	c (Ljava/lang/Runnable;)V doRunTask
	d (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	a (Ljava/util/Collection;Ljava/lang/String;)Z lambda$getSelectedPacks$11
	a (Ljava/util/Collection;Lvz;)V lambda$reloadResources$10
	a (Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage; lambda$reloadResources$9
	b (Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList; lambda$reloadResources$8
	bc ()Ljava/lang/String; lambda$fillReport$7
	bd ()Ljava/lang/String; lambda$fillReport$6
	be ()Ljava/lang/String; lambda$fillReport$5
	b (Laag;)Ljava/lang/String; lambda$tickChildren$4
	bf ()Z lambda$waitUntilNextTick$3
	a (Lbss;)Z lambda$setInitialSpawn$2
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$spin$1
	a (Ljava/util/concurrent/atomic/AtomicReference;)V lambda$spin$0
	aY ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
net/minecraft/server/MinecraftServer$1 net/minecraft/server/MinecraftServer$1
	a timeStamp
	<init> ()V <init>
	a (Lnr;)V progressStartNoAbort
	b (Lnr;)V progressStart
	a (I)V progressStagePercentage
	a ()V stop
	c (Lnr;)V progressStage
net/minecraft/server/MinecraftServer$2 net/minecraft/server/MinecraftServer$2
	a val$entries
	b val$gameRules
	c this$0
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/List;Lbrq;)V <init>
	a (Lbrq$e;Lbrq$f;)V visit
vt net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c TYPE_TOKEN
	d dataFixer
	e playerList
	f file
	g advancements
	h visible
	i visibilityChanged
	j progressChanged
	k player
	l lastSelectedTab
	m isFirstPacket
	<init> (Lcom/mojang/datafixers/DataFixer;Lacs;Lvv;Ljava/io/File;Laah;)V <init>
	a (Laah;)V setPlayer
	a ()V stopListening
	a (Lvv;)V reload
	b (Lvv;)V registerListeners
	c ()V ensureAllVisible
	c (Lvv;)V checkForAutomaticTriggers
	d (Lvv;)V load
	b ()V save
	a (Ly;Ljava/lang/String;)Z award
	b (Ly;Ljava/lang/String;)Z revoke
	c (Ly;)V registerListeners
	d (Ly;)V unregisterListeners
	b (Laah;)V flushDirty
	a (Ly;)V setSelectedTab
	b (Ly;)Laa; getOrStartProgress
	a (Ly;Laa;)V startProgress
	e (Ly;)V ensureVisibility
	f (Ly;)Z shouldBeVisible
	g (Ly;)Z hasCompletedChildrenOrSelf
	<clinit> ()V <clinit>
vt$1 net/minecraft/server/PlayerAdvancements$1
	<init> ()V <init>
vu net/minecraft/server/RunningOnDifferentThreadException
	a RUNNING_ON_DIFFERENT_THREAD
	<init> ()V <init>
	fillInStackTrace ()Ljava/lang/Throwable; fillInStackTrace
	<clinit> ()V <clinit>
vv net/minecraft/server/ServerAdvancementManager
	a LOGGER
	b GSON
	c advancements
	d predicateManager
	<init> (Lcyx;)V <init>
	a (Ljava/util/Map;Lacf;Lant;)V apply
	a (Lvk;)Ly; getAdvancement
	a ()Ljava/util/Collection; getAllAdvancements
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	a (Ljava/util/Map;Lvk;Lcom/google/gson/JsonElement;)V lambda$apply$0
	<clinit> ()V <clinit>
vw net/minecraft/server/ServerFunctionLibrary
	a LOGGER
	b PATH_PREFIX_LENGTH
	c PATH_SUFFIX_LENGTH
	d functions
	e tagsLoader
	f tags
	g functionCompilationLevel
	h dispatcher
	a (Lvk;)Ljava/util/Optional; getFunction
	a ()Ljava/util/Map; getFunctions
	b ()Laek; getTags
	b (Lvk;)Laej; getTag
	<init> (ILcom/mojang/brigadier/CommandDispatcher;)V <init>
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lacf;Lvk;)Ljava/util/List; readLines
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$reload$7
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lvk;Ljava/util/concurrent/CompletableFuture;)V lambda$null$6
	a (Lvk;Lcom/google/common/collect/ImmutableMap$Builder;Lcy;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$null$5
	a (Lacf;Ljava/util/concurrent/Executor;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage; lambda$reload$4
	a (Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map; lambda$null$3
	a (Lacf;Lvk;Lvk;Ldb;)Lcy; lambda$null$2
	a (Lacf;)Ljava/util/Collection; lambda$reload$1
	a (Ljava/lang/String;)Z lambda$null$0
	<clinit> ()V <clinit>
vx net/minecraft/server/ServerFunctionManager
	a TICK_FUNCTION_TAG
	b LOAD_FUNCTION_TAG
	c server
	d isInFunction
	e commandQueue
	f nestedCalls
	g ticking
	h postReload
	i library
	<init> (Lnet/minecraft/server/MinecraftServer;Lvw;)V <init>
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	b ()I getCommandLimit
	c ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	d ()V tick
	a (Ljava/util/Collection;Lvk;)V executeTagFunctions
	a (Lcy;Ldb;)I execute
	a (Lvw;)V replaceLibrary
	b (Lvw;)V postReload
	e ()Ldb; getGameLoopSender
	a (Lvk;)Ljava/util/Optional; get
	b (Lvk;)Laej; getTag
	f ()Ljava/lang/Iterable; getFunctionNames
	g ()Ljava/lang/Iterable; getTagNames
	<clinit> ()V <clinit>
vx$a net/minecraft/server/ServerFunctionManager$QueuedCommand
	a manager
	b sender
	c entry
	<init> (Lvx;Ldb;Lcy$c;)V <init>
	a (Ljava/util/ArrayDeque;I)V execute
	toString ()Ljava/lang/String; toString
vy net/minecraft/server/ServerInterface
	g_ ()Lzh; getProperties
	h_ ()Ljava/lang/String; getServerIp
	p ()I getServerPort
	i_ ()Ljava/lang/String; getServerName
	H ()Ljava/lang/String; getServerVersion
	I ()I getPlayerCount
	J ()I getMaxPlayers
	K ()[Ljava/lang/String; getPlayerNames
	k_ ()Ljava/lang/String; getLevelIdName
	j_ ()Ljava/lang/String; getPluginNames
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
vz net/minecraft/server/ServerResources
	a DATA_RELOAD_INITIAL_TASK
	b resources
	c commands
	d recipes
	e tagManager
	f predicateManager
	g lootTables
	h advancements
	i functionLibrary
	<init> (Ldc$a;I)V <init>
	a ()Lvw; getFunctionLibrary
	b ()Lcyx; getPredicateManager
	c ()Lcyw; getLootTables
	d ()Lael; getTags
	e ()Lboo; getRecipeManager
	f ()Ldc; getCommands
	g ()Lvv; getAdvancements
	h ()Lacf; getResourceManager
	a (Ljava/util/List;Ldc$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadResources
	i ()V updateGlobals
	close ()V close
	a (Lvz;Lafu;)Lvz; lambda$loadResources$1
	a (Lvz;Lafu;Ljava/lang/Throwable;)V lambda$loadResources$0
	<clinit> ()V <clinit>
wa net/minecraft/server/ServerScoreboard
	a server
	b trackedObjectives
	c dirtyListeners
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	a (Lddj;)V onScoreChanged
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lddh;)V onPlayerScoreRemoved
	a (ILddh;)V setDisplayObjective
	a (Ljava/lang/String;Lddi;)Z addPlayerToTeam
	b (Ljava/lang/String;Lddi;)V removePlayerFromTeam
	a (Lddh;)V onObjectiveAdded
	b (Lddh;)V onObjectiveChanged
	c (Lddh;)V onObjectiveRemoved
	a (Lddi;)V onTeamAdded
	b (Lddi;)V onTeamChanged
	c (Lddi;)V onTeamRemoved
	a (Ljava/lang/Runnable;)V addDirtyListener
	b ()V setDirty
	d (Lddh;)Ljava/util/List; getStartTrackingPackets
	e (Lddh;)V startTrackingObjective
	f (Lddh;)Ljava/util/List; getStopTrackingPackets
	g (Lddh;)V stopTrackingObjective
	h (Lddh;)I getObjectiveDisplaySlotCount
wa$a net/minecraft/server/ServerScoreboard$Method
	a CHANGE
	b REMOVE
	c $VALUES
	values ()[Lwa$a; values
	valueOf (Ljava/lang/String;)Lwa$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
wb net/minecraft/server/TickTask
	a tick
	b runnable
	<init> (ILjava/lang/Runnable;)V <init>
	a ()I getTick
	run ()V run
wc net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	<init> (Lvk;Lnr;)V <init>
	a ()Lvk; getTextId
	a (Laah;)V addPlayer
	a (Ljava/util/UUID;)V addOfflinePlayer
	b (Laah;)V removePlayer
	b ()V removeAllPlayers
	c ()I getValue
	d ()I getMax
	a (I)V setValue
	b (I)V setMax
	e ()Lnr; getDisplayName
	a (Ljava/util/Collection;)Z setPlayers
	f ()Lmd; save
	a (Lmd;Lvk;)Lwc; load
	c (Laah;)V onPlayerConnect
	d (Laah;)V onPlayerDisconnect
	a (Lob;)Lob; lambda$getDisplayName$0
wd net/minecraft/server/bossevents/CustomBossEvents
	a events
	<init> ()V <init>
	a (Lvk;)Lwc; get
	a (Lvk;Lnr;)Lwc; create
	a (Lwc;)V remove
	a ()Ljava/util/Collection; getIds
	b ()Ljava/util/Collection; getEvents
	c ()Lmd; save
	a (Lmd;)V load
	a (Laah;)V onPlayerConnect
	b (Laah;)V onPlayerDisconnect
we net/minecraft/server/bossevents/package-info
wf net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lwf$a;Ljava/util/Collection;)I perform
	a (Ldb;Ljava/util/Collection;Lwf$a;Ly;Ljava/lang/String;)I performCriterion
	a (Ly;Lwf$b;)Ljava/util/List; getAdvancements
	a (Ly;Ljava/util/List;)V addChildren
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$10
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ldb;)Z lambda$register$1
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
wf$1 net/minecraft/server/commands/AdvancementCommands$1
wf$a net/minecraft/server/commands/AdvancementCommands$Action
	a GRANT
	b REVOKE
	c key
	d $VALUES
	values ()[Lwf$a; values
	valueOf (Ljava/lang/String;)Lwf$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Laah;Ljava/lang/Iterable;)I perform
	a (Laah;Ly;)Z perform
	a (Laah;Ly;Ljava/lang/String;)Z performCriterion
	a ()Ljava/lang/String; getKey
	<init> (Ljava/lang/String;ILjava/lang/String;Lwf$1;)V <init>
	<clinit> ()V <clinit>
wf$a$1 net/minecraft/server/commands/AdvancementCommands$Action$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Laah;Ly;)Z perform
	a (Laah;Ly;Ljava/lang/String;)Z performCriterion
wf$a$2 net/minecraft/server/commands/AdvancementCommands$Action$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Laah;Ly;)Z perform
	a (Laah;Ly;Ljava/lang/String;)Z performCriterion
wf$b net/minecraft/server/commands/AdvancementCommands$Mode
	a ONLY
	b THROUGH
	c FROM
	d UNTIL
	e EVERYTHING
	f parents
	g children
	h $VALUES
	values ()[Lwf$b; values
	valueOf (Ljava/lang/String;)Lwf$b; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a (Lwf$b;)Z access$000
	b (Lwf$b;)Z access$100
	<clinit> ()V <clinit>
wg net/minecraft/server/commands/AttributeCommand
	a AVAILABLE_ATTRIBUTES
	b ERROR_NOT_LIVING_ENTITY
	c ERROR_NO_SUCH_ATTRIBUTE
	d ERROR_NO_SUCH_MODIFIER
	e ERROR_MODIFIER_ALREADY_PRESENT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lapx;Lard;)Lare; getAttributeInstance
	a (Lapx;)Laqj; getLivingEntity
	b (Lapx;Lard;)Laqj; getEntityWithAttribute
	a (Ldb;Lapx;Lard;D)I getAttributeValue
	b (Ldb;Lapx;Lard;D)I getAttributeBase
	a (Ldb;Lapx;Lard;Ljava/util/UUID;D)I getAttributeModifier
	c (Ldb;Lapx;Lard;D)I setAttributeBase
	a (Ldb;Lapx;Lard;Ljava/util/UUID;Ljava/lang/String;DLarg$a;)I addModifier
	a (Ldb;Lapx;Lard;Ljava/util/UUID;)I removeModifier
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Ldb;)Z lambda$register$5
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
wh net/minecraft/server/commands/BanIpCommands
	a IP_ADDRESS_PATTERN
	b ERROR_INVALID_IP
	c ERROR_ALREADY_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/lang/String;Lnr;)I banIpOrName
	b (Ldb;Ljava/lang/String;Lnr;)I banIp
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
wi net/minecraft/server/commands/BanListCommands
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I showList
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
wj net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lnr;)I banPlayers
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
wk net/minecraft/server/commands/BossBarCommands
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a SUGGEST_BOSS_BAR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lwc;)I getValue
	b (Ldb;Lwc;)I getMax
	c (Ldb;Lwc;)I getVisible
	d (Ldb;Lwc;)I getPlayers
	a (Ldb;Lwc;Z)I setVisible
	a (Ldb;Lwc;I)I setValue
	b (Ldb;Lwc;I)I setMax
	a (Ldb;Lwc;Laoh$a;)I setColor
	a (Ldb;Lwc;Laoh$b;)I setStyle
	a (Ldb;Lwc;Lnr;)I setName
	a (Ldb;Lwc;Ljava/util/Collection;)I setPlayers
	a (Ldb;)I listBars
	a (Ldb;Lvk;Lnr;)I createBar
	e (Ldb;Lwc;)I removeBar
	a (Lcom/mojang/brigadier/context/CommandContext;)Lwc; getBossBar
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Ldb;)Z lambda$register$3
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wl net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lbly;)Z lambda$null$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lbly;)Z lambda$null$3
	a (Ldb;)Z lambda$register$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wm net/minecraft/server/commands/CloneCommands
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a FILTER_AIR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lfx;Lfx;Lfx;Ljava/util/function/Predicate;Lwm$b;)I clone
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	a (Lcei;)Z lambda$null$11
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	b (Lcei;)Z lambda$null$9
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcei;)Z lambda$null$7
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcei;)Z lambda$null$5
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcei;)Z lambda$null$3
	a (Ldb;)Z lambda$register$2
	f (Lcei;)Z lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wm$a net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
	<init> (Lfx;Lcee;Lmd;)V <init>
wm$b net/minecraft/server/commands/CloneCommands$Mode
	a FORCE
	b MOVE
	c NORMAL
	d canOverlap
	e $VALUES
	values ()[Lwm$b; values
	valueOf (Ljava/lang/String;)Lwm$b; valueOf
	<init> (Ljava/lang/String;IZ)V <init>
	a ()Z canOverlap
	<clinit> ()V <clinit>
wn net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d SELECTED_PACKS
	e UNSELECTED_PACKS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Labs;Lwn$a;)I enablePack
	a (Ldb;Labs;)I disablePack
	a (Ldb;)I listPacks
	b (Ldb;)I listAvailablePacks
	c (Ldb;)I listEnabledPacks
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Labs; getPack
	a (Labs;)Lnr; lambda$listEnabledPacks$23
	b (Labs;)Lnr; lambda$listAvailablePacks$22
	a (Ljava/util/Collection;Labs;)Z lambda$listAvailablePacks$21
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	a (Ljava/util/List;Labs;)V lambda$null$15
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Labs;)V lambda$null$12
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Labs;)V lambda$null$10
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Ljava/util/List;Labs;)V lambda$null$8
	c (Labs;)Labs; lambda$null$7
	d (Ldb;)Z lambda$register$6
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
	a (Ljava/util/Collection;Ljava/lang/String;)Z lambda$null$4
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wn$a net/minecraft/server/commands/DataPackCommand$Inserter
	apply (Ljava/util/List;Labs;)V apply
wo net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I deopPlayers
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
wp net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	d ZIP_FS_PROVIDER
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;)I start
	b (Ldb;)I stop
	c (Ldb;)I report
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Ldb;)Z lambda$register$1
	a (Ljava/nio/file/spi/FileSystemProvider;)Z lambda$static$0
	<clinit> ()V <clinit>
wq net/minecraft/server/commands/DebugMobSpawningCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Laql;Lfx;)I spawnMobs
	a (Laql;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
wr net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lfx;)I fillBlocks
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
ws net/minecraft/server/commands/DefaultGameModeCommands
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lbrr;)I setMode
	a (Lbrr;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
wt net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Laoo;)I setDifficulty
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ldb;)Z lambda$register$2
	a (Laoo;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wu net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lapp;Ljava/lang/Integer;IZ)I giveEffect
	a (Ldb;Ljava/util/Collection;)I clearEffects
	a (Ldb;Ljava/util/Collection;Lapp;)I clearEffect
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
wv net/minecraft/server/commands/EmoteCommands
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
ww net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lbpp;I)I enchant
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	a (Ldb;)Z lambda$register$4
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wx net/minecraft/server/commands/ExecuteCommand
	a ERROR_AREA_TOO_LARGE
	b ERROR_CONDITIONAL_FAILED
	c ERROR_CONDITIONAL_FAILED_COUNT
	d CALLBACK_CHAINER
	e SUGGEST_PREDICATE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Ldb;Ljava/util/Collection;Lddh;Z)Ldb; storeValue
	a (Ldb;Lwc;ZZ)Ldb; storeValue
	a (Ldb;Lyz;Ldr$h;Ljava/util/function/IntFunction;Z)Ldb; storeData
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (ZLwx$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	a (Lyz;Ldr$h;)I checkMatchingData
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lbz$d;)Z checkScore
	a (Ldb;Ldbl;)Z checkCustomPredicate
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLwx$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
	a (Laag;Lfx;Lfx;Lfx;Z)Ljava/util/OptionalInt; checkRegions
	a (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$61
	b (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$60
	a (ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addIfBlocksConditional$59
	a (ZLwx$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditional$58
	b (ZLwx$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditional$57
	a (Lwx$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$56
	b (Lwx$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$55
	a (Lcom/mojang/brigadier/tree/CommandNode;ZLza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$addConditionals$54
	a (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$53
	a (ZLza$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$null$52
	a (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$51
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditionals$50
	c (ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditionals$49
	c (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$48
	d (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$47
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$46
	e (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$45
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$44
	f (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$43
	c (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$42
	g (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$41
	d (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$40
	h (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$39
	i (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$38
	a (Lyz;ZLdr$h;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeData$37
	a (Ljava/util/function/IntFunction;I)Lmt; lambda$null$36
	a (ZZLwc;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$35
	a (Ljava/util/Collection;Lddk;Lddh;ZLcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$34
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lza$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$wrapStores$33
	a (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$null$32
	a (Lcom/mojang/brigadier/context/CommandContext;I)Lmt; lambda$null$31
	b (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$null$30
	b (Lcom/mojang/brigadier/context/CommandContext;I)Lmt; lambda$null$29
	c (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$null$28
	c (Lcom/mojang/brigadier/context/CommandContext;I)Lmt; lambda$null$27
	d (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$null$26
	d (Lcom/mojang/brigadier/context/CommandContext;I)Lmt; lambda$null$25
	e (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$null$24
	e (Lcom/mojang/brigadier/context/CommandContext;I)Lmt; lambda$null$23
	f (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$null$22
	f (Lcom/mojang/brigadier/context/CommandContext;I)Lmt; lambda$null$21
	d (ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$wrapStores$20
	e (ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$wrapStores$19
	f (ZLcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$wrapStores$18
	j (Lcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$register$17
	k (Lcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$register$16
	l (Lcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$register$15
	m (Lcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$register$14
	n (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$13
	o (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$12
	p (Lcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$register$11
	q (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$10
	r (Lcom/mojang/brigadier/context/CommandContext;)Ldb; lambda$register$9
	s (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$8
	t (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$7
	a (Ldb;)Z lambda$register$6
	b (Ldb;)Z lambda$register$5
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$4
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer; lambda$static$3
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$null$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
wx$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
	test (Lcom/mojang/brigadier/context/CommandContext;)I test
wx$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
	test (Lcom/mojang/brigadier/context/CommandContext;)Z test
wy net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Laah;Lwy$a;)I queryExperience
	a (Ldb;Ljava/util/Collection;ILwy$a;)I addExperience
	b (Ldb;Ljava/util/Collection;ILwy$a;)I setExperience
	a (Ldb;)Z lambda$register$9
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
wy$a net/minecraft/server/commands/ExperienceCommand$Type
	a POINTS
	b LEVELS
	c add
	d set
	e name
	f query
	g $VALUES
	values ()[Lwy$a; values
	valueOf (Ljava/lang/String;)Lwy$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V <init>
	a (Laah;)I lambda$static$3
	a (Laah;Ljava/lang/Integer;)Z lambda$static$2
	b (Laah;)I lambda$static$1
	b (Laah;Ljava/lang/Integer;)Z lambda$static$0
	a (Lwy$a;)Ljava/util/function/ToIntFunction; access$000
	<clinit> ()V <clinit>
wz net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lcqx;Lef;Lwz$a;Ljava/util/function/Predicate;)I fillBlocks
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lcei;)Z lambda$null$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ldb;)Z lambda$register$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a ()Lef; access$000
	<clinit> ()V <clinit>
wz$a net/minecraft/server/commands/FillCommand$Mode
	a REPLACE
	b OUTLINE
	c HOLLOW
	d DESTROY
	e filter
	f $VALUES
	values ()[Lwz$a; values
	valueOf (Ljava/lang/String;)Lwz$a; valueOf
	<init> (Ljava/lang/String;ILye$a;)V <init>
	a (Lcqx;Lfx;Lef;Laag;)Lef; lambda$static$3
	b (Lcqx;Lfx;Lef;Laag;)Lef; lambda$static$2
	c (Lcqx;Lfx;Lef;Laag;)Lef; lambda$static$1
	d (Lcqx;Lfx;Lef;Laag;)Lef; lambda$static$0
	<clinit> ()V <clinit>
xa net/minecraft/server/commands/ForceLoadCommand
	a ERROR_TOO_MANY_CHUNKS
	b ERROR_NOT_TICKING
	c ERROR_ALL_ADDED
	d ERROR_NONE_REMOVED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lzw;)I queryForceLoad
	a (Ldb;)I listForceLoad
	b (Ldb;)I removeAll
	a (Ldb;Lzw;Lzw;Z)I changeForceLoad
	a (Laag;J)V lambda$removeAll$10
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Ldb;)Z lambda$register$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
xb net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I runFunction
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ldb;)Z lambda$register$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
xc net/minecraft/server/commands/GameModeCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Laah;Lbrr;)V logGamemodeChange
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lbrr;)I setMode
	a (Lbrr;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lbrr;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
xd net/minecraft/server/commands/GameRuleCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	b (Lcom/mojang/brigadier/context/CommandContext;Lbrq$e;)I setRule
	b (Ldb;Lbrq$e;)I queryRule
	a (Ldb;)Z lambda$register$0
	a (Lcom/mojang/brigadier/context/CommandContext;Lbrq$e;)I access$000
	a (Ldb;Lbrq$e;)I access$100
xd$1 net/minecraft/server/commands/GameRuleCommand$1
	a val$base
	<init> (Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)V <init>
	a (Lbrq$e;Lbrq$f;)V visit
	a (Lbrq$e;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$1
	b (Lbrq$e;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$0
xe net/minecraft/server/commands/GiveCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lex;Ljava/util/Collection;I)I giveItem
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
xf net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	<clinit> ()V <clinit>
xg net/minecraft/server/commands/KickCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lnr;)I kickPlayers
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
xh net/minecraft/server/commands/KillCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I kill
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
xi net/minecraft/server/commands/ListPlayersCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;)I listPlayers
	b (Ldb;)I listPlayersWithUuids
	a (Ldb;Ljava/util/function/Function;)I format
	a (Laah;)Lnr; lambda$listPlayersWithUuids$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
xj net/minecraft/server/commands/LocateBiomeCommand
	a ERROR_INVALID_BIOME
	b ERROR_BIOME_NOT_FOUND
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lvk;)I locateBiome
	a (Lvk;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$locateBiome$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ldb;)Z lambda$register$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
xk net/minecraft/server/commands/LocateCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lckx;)I locate
	a (Ldb;Ljava/lang/String;Lfx;Lfx;Ljava/lang/String;)I showLocateResult
	a (IIII)F dist
	a (Lfx;Lob;)Lob; lambda$showLocateResult$2
	a (Ljava/util/Map$Entry;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xl net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lxl$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Ldb;Lfx;)Laok; getContainer
	a (Ldb;Lfx;Ljava/util/List;Lxl$a;)I blockDistribute
	a (Laok;Lbly;)Z distributeToContainer
	a (Ldb;Lfx;IILjava/util/List;Lxl$a;)I blockReplace
	a (Lbly;Lbly;)Z canMergeItems
	a (Ljava/util/Collection;Ljava/util/List;Lxl$a;)I playerGive
	a (Lapx;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Ljava/util/Collection;IILjava/util/List;Lxl$a;)I entityReplace
	a (Ldb;Ldck;Ljava/util/List;Lxl$a;)I dropInWorld
	a (Ldb;Ljava/util/List;)V callback
	a (Ldb;Ljava/util/List;Lvk;)V callback
	a (Ldb;Laqc;)Lbly; getSourceHandItem
	a (Lcom/mojang/brigadier/context/CommandContext;Lfx;Lbly;Lxl$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lapx;Lxl$b;)I dropKillLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lvk;Lxl$b;)I dropChestLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lvk;Lfx;Lbly;Lxl$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lvk;Lcys;Lxl$b;)I drop
	b (Ldb;Ljava/util/List;)V lambda$drop$25
	a (Ldb;Lvk;Ljava/util/List;)V lambda$dropKillLoot$24
	a (Ldb;Lcee;Ljava/util/List;)V lambda$dropBlockLoot$23
	a (Laag;Ldck;Lbly;)V lambda$dropInWorld$22
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$21
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$20
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$19
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$18
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$17
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$16
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$15
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lxl$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$14
	a (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$13
	b (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
	c (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
	d (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
	e (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$9
	f (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
	g (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$7
	h (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$6
	i (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$5
	j (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$4
	a (Ldb;)Z lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
xl$a net/minecraft/server/commands/LootCommand$Callback
	accept (Ljava/util/List;)V accept
xl$b net/minecraft/server/commands/LootCommand$DropConsumer
	accept (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I accept
xl$c net/minecraft/server/commands/LootCommand$TailProvider
	construct (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lxl$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; construct
xm net/minecraft/server/commands/MsgCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lnr;)I sendMessage
	a (Ldb;Lnr;Lnr;)V lambda$sendMessage$2
	a (Laah;Lnr;Lnr;)V lambda$sendMessage$1
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
xn net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I opPlayers
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	a (Laah;)Ljava/lang/String; lambda$null$2
	a (Lacs;Laah;)Z lambda$null$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xo net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I pardonPlayers
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xp net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/lang/String;)I unban
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xq net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lhf;Ldck;Ldck;FIZLjava/util/Collection;)I sendParticles
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xr net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ladp;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
	a (Ldb;Ljava/util/Collection;Lvk;Ladp;Ldck;FFF)I playSound
	a (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$5
	b (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$4
	c (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$3
	d (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$2
	e (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xs net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;I)I publish
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ldb;)Z lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
xt net/minecraft/server/commands/RaidCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;)I glow
	a (Ldb;I)I setBadOmenLevel
	b (Ldb;)I spawnLeader
	a (Ldb;Lnr;)I playSound
	b (Ldb;I)I start
	c (Ldb;)I stop
	d (Ldb;)I check
	a (Laah;)Lbgy; getRaid
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	e (Ldb;)Z lambda$register$0
xu net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Ldb;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xv net/minecraft/server/commands/ReloadCommand
	a LOGGER
	<init> ()V <init>
	a (Ljava/util/Collection;Ldb;)V reloadPacks
	a (Labu;Lcyk;Ljava/util/Collection;)Ljava/util/Collection; discoverNewPacks
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ldb;)Z lambda$register$1
	a (Ldb;Ljava/lang/Throwable;)Ljava/lang/Void; lambda$reloadPacks$0
	<clinit> ()V <clinit>
xw net/minecraft/server/commands/ReplaceItemCommand
	a ERROR_NOT_A_CONTAINER
	b ERROR_INAPPLICABLE_SLOT
	c ERROR_ENTITY_SLOT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lfx;ILbly;)I setBlockItem
	a (Ldb;Ljava/util/Collection;ILbly;)I setEntityItem
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ldb;)Z lambda$register$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
xx net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Z)I saveAll
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xy net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
xz net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
ya net/minecraft/server/commands/SayCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yb net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	b ERROR_CANT_REMOVE
	c SUGGEST_SCHEDULE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lcom/mojang/datafixers/util/Pair;IZ)I schedule
	a (Ldb;Ljava/lang/String;)I remove
	a (Lvk;ZLdcc;JLdb;ILaej;)V lambda$schedule$8
	a (Lvk;ZLdcc;JLdb;ILcy;)V lambda$schedule$7
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ldb;)Z lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
yc net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Ldb;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Ldb;Ljava/lang/String;Lddh;)I getScore
	a (Ldb;Ljava/util/Collection;Lddh;Ldv$a;Ljava/util/Collection;Lddh;)I performOperation
	a (Ldb;Ljava/util/Collection;Lddh;)I enableTrigger
	a (Ldb;Ljava/util/Collection;)I resetScores
	b (Ldb;Ljava/util/Collection;Lddh;)I resetScore
	a (Ldb;Ljava/util/Collection;Lddh;I)I setScore
	b (Ldb;Ljava/util/Collection;Lddh;I)I addScore
	c (Ldb;Ljava/util/Collection;Lddh;I)I removeScore
	a (Ldb;)I listTrackedPlayers
	a (Ldb;Ljava/lang/String;)I listTrackedPlayerScores
	a (Ldb;I)I clearDisplaySlot
	a (Ldb;ILddh;)I setDisplaySlot
	a (Ldb;Lddh;Lnr;)I setDisplayName
	a (Ldb;Lddh;Lddn$a;)I setRenderType
	a (Ldb;Lddh;)I removeObjective
	a (Ldb;Ljava/lang/String;Lddn;Lnr;)I addObjective
	b (Ldb;)I listObjectives
	a (Lddn$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createRenderTypeModify$20
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$17
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Ldb;)Z lambda$register$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
yd net/minecraft/server/commands/SeedCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Z)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (JLob;)Lob; lambda$null$1
	a (ZLdb;)Z lambda$register$0
ye net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lfx;Lef;Lye$b;Ljava/util/function/Predicate;)I setBlock
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcei;)Z lambda$null$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
ye$a net/minecraft/server/commands/SetBlockCommand$Filter
	filter (Lcqx;Lfx;Lef;Laag;)Lef; filter
ye$b net/minecraft/server/commands/SetBlockCommand$Mode
	a REPLACE
	b DESTROY
	c $VALUES
	values ()[Lye$b; values
	valueOf (Ljava/lang/String;)Lye$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
yf net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;I)I setIdleTimeout
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yg net/minecraft/server/commands/SetSpawnCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lfx;F)I setSpawn
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yh net/minecraft/server/commands/SetWorldSpawnCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lfx;F)I setSpawn
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yi net/minecraft/server/commands/SpectateCommand
	a ERROR_SELF
	b ERROR_NOT_SPECTATOR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lapx;Laah;)I spectate
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ldb;)Z lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
yj net/minecraft/server/commands/SpreadPlayersCommand
	a ERROR_FAILED_TO_SPREAD_TEAMS
	b ERROR_FAILED_TO_SPREAD_ENTITIES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ldcj;FFIZLjava/util/Collection;)I spreadPlayers
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Ldcj;DLaag;Ljava/util/Random;DDDDI[Lyj$a;Z)V spreadPositions
	a (Ljava/util/Collection;Laag;[Lyj$a;IZ)D setPlayerPositions
	a (Ljava/util/Random;IDDDD)[Lyj$a; createInitialPositions
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ldb;)Z lambda$register$2
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
yj$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	<init> ()V <init>
	<init> (DD)V <init>
	a (DD)V set
	a (Lyj$a;)D dist
	a ()V normalize
	b ()F getLength
	b (Lyj$a;)V moveAway
	a (DDDD)Z clamp
	a (Lbqz;I)I getSpawnY
	b (Lbqz;I)Z isSafe
	a (Ljava/util/Random;DDDD)V randomize
	c (Lyj$a;)D access$000
	a (Lyj$a;D)D access$002
	d (Lyj$a;)D access$100
	b (Lyj$a;D)D access$102
yk net/minecraft/server/commands/StopCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yl net/minecraft/server/commands/StopSoundCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Ladp;Lvk;)I stopSound
	a (Ldb;)Z lambda$register$4
	a (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Ladp;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
ym net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	b ERROR_DUPLICATE_UUID
	c INVALID_POSITION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lvk;Ldck;Lmd;Z)I spawnEntity
	a (Ldck;Lapx;)Lapx; lambda$spawnEntity$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
yn net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Ldb;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Ldb;Ljava/util/Collection;Ljava/lang/String;)I removeTag
	a (Ldb;Ljava/util/Collection;)I listTags
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
yo net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_NAME_TOO_LONG
	c ERROR_TEAM_ALREADY_EMPTY
	d ERROR_TEAM_ALREADY_NAME
	e ERROR_TEAM_ALREADY_COLOR
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	g ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	i ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	j ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	k ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	l ERROR_TEAM_COLLISION_UNCHANGED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I leaveTeam
	a (Ldb;Lddi;Ljava/util/Collection;)I joinTeam
	a (Ldb;Lddi;Lddm$b;)I setNametagVisibility
	b (Ldb;Lddi;Lddm$b;)I setDeathMessageVisibility
	a (Ldb;Lddi;Lddm$a;)I setCollision
	a (Ldb;Lddi;Z)I setFriendlySight
	b (Ldb;Lddi;Z)I setFriendlyFire
	a (Ldb;Lddi;Lnr;)I setDisplayName
	a (Ldb;Lddi;Lk;)I setColor
	a (Ldb;Lddi;)I emptyTeam
	b (Ldb;Lddi;)I deleteTeam
	a (Ldb;Ljava/lang/String;)I createTeam
	a (Ldb;Ljava/lang/String;Lnr;)I createTeam
	c (Ldb;Lddi;)I listMembers
	a (Ldb;)I listTeams
	b (Ldb;Lddi;Lnr;)I setPrefix
	c (Ldb;Lddi;Lnr;)I setSuffix
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	A (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Ldb;)Z lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
yp net/minecraft/server/commands/TeamMsgCommand
	a SUGGEST_STYLE
	b ERROR_NOT_ON_TEAM
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lnr;)I sendMessage
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	<clinit> ()V <clinit>
yq net/minecraft/server/commands/TeleportCommand
	a INVALID_POSITION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;Lapx;)I teleportToEntity
	a (Ldb;Ljava/util/Collection;Laag;Lem;Lem;Lyq$a;)I teleportToPos
	a (Ldb;Lapx;Laag;DDDLjava/util/Set;FFLyq$a;)V performTeleport
	a (Ldb;)Z lambda$register$9
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
yq$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	<init> (Lapx;Ldj$a;)V <init>
	<init> (Ldck;)V <init>
	a (Ldb;Lapx;)V perform
yr net/minecraft/server/commands/TellRawCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
ys net/minecraft/server/commands/TimeCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Laag;)I getDayTime
	c (Ldb;I)I queryTime
	a (Ldb;I)I setTime
	b (Ldb;I)I addTime
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yt net/minecraft/server/commands/TitleCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Ljava/util/Collection;)I clearTitle
	b (Ldb;Ljava/util/Collection;)I resetTitle
	a (Ldb;Ljava/util/Collection;Lnr;Lrl$a;)I showTitle
	a (Ldb;Ljava/util/Collection;III)I setTimes
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yu net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Ldb;Lddj;I)I addValue
	b (Ldb;Lddj;I)I setValue
	a (Ldb;Lddj;)I simpleTrigger
	a (Laah;Lddh;)Lddj; getScore
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$0
	<clinit> ()V <clinit>
yv net/minecraft/server/commands/WeatherCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;I)I setClear
	b (Ldb;I)I setRain
	c (Ldb;I)I setThunder
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ldb;)Z lambda$register$0
yw net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;)I reload
	a (Ldb;Ljava/util/Collection;)I addPlayers
	b (Ldb;Ljava/util/Collection;)I removePlayers
	b (Ldb;)I enableWhitelist
	c (Ldb;)I disableWhitelist
	d (Ldb;)I showList
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$6
	a (Laah;)Ljava/lang/String; lambda$null$5
	a (Lacs;Laah;)Z lambda$null$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	e (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
yx net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_SAME_WARNING_TIME
	f ERROR_SAME_WARNING_DISTANCE
	g ERROR_SAME_DAMAGE_BUFFER
	h ERROR_SAME_DAMAGE_AMOUNT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ldb;F)I setDamageBuffer
	b (Ldb;F)I setDamageAmount
	a (Ldb;I)I setWarningTime
	b (Ldb;I)I setWarningDistance
	a (Ldb;)I getSize
	a (Ldb;Ldcj;)I setCenter
	a (Ldb;DJ)I setSize
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Ldb;)Z lambda$register$0
	<clinit> ()V <clinit>
yy net/minecraft/server/commands/data/BlockDataAccessor
	b ERROR_NOT_A_BLOCK_ENTITY
	a PROVIDER
	c entity
	d pos
	<init> (Lccg;Lfx;)V <init>
	a (Lmd;)V setData
	a ()Lmd; getData
	b ()Lnr; getModifiedSuccess
	a (Lmt;)Lnr; getPrintSuccess
	a (Ldr$h;DI)Lnr; getPrintSuccess
	a (Ljava/lang/String;)Lza$c; lambda$static$0
	c ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; access$000
	<clinit> ()V <clinit>
yy$1 net/minecraft/server/commands/data/BlockDataAccessor$1
	a val$argPrefix
	<init> (Ljava/lang/String;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Lyz; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
yz net/minecraft/server/commands/data/DataAccessor
	a (Lmd;)V setData
	a ()Lmd; getData
	b ()Lnr; getModifiedSuccess
	a (Lmt;)Lnr; getPrintSuccess
	a (Ldr$h;DI)Lnr; getPrintSuccess
za net/minecraft/server/commands/data/DataCommands
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_LIST
	i ERROR_EXPECTED_OBJECT
	j ERROR_INVALID_INDEX
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (ILmd;Ldr$h;Ljava/util/List;)I insertAtIndex
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Lcom/mojang/brigadier/context/CommandContext;Lza$c;Lza$a;Ljava/util/List;)I manipulateData
	a (Ldb;Lyz;Ldr$h;)I removeData
	a (Ldr$h;Lyz;)Lmt; getSingleTag
	b (Ldb;Lyz;Ldr$h;)I getData
	a (Ldb;Lyz;Ldr$h;D)I getNumeric
	a (Ldb;Lyz;)I getData
	a (Ldb;Lyz;Lmd;)I mergeData
	a (Ljava/util/function/BiConsumer;Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$28
	a (Lza$c;Lza$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$27
	a (Lza$c;Lza$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$26
	a (Lza$c;Lza$c;Lza$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$25
	a (Lza$c;Lza$c;Lza$a;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$24
	a (Lza$c;Lza$c;Lza$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$23
	b (Lza$c;Lza$c;Lza$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$22
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lza$b;)V lambda$register$21
	a (Lcom/mojang/brigadier/context/CommandContext;Lmd;Ldr$h;Ljava/util/List;)I lambda$null$20
	b (Lcom/mojang/brigadier/context/CommandContext;Lmd;Ldr$h;Ljava/util/List;)I lambda$null$19
	c (Lcom/mojang/brigadier/context/CommandContext;Lmd;Ldr$h;Ljava/util/List;)I lambda$null$18
	d (Lcom/mojang/brigadier/context/CommandContext;Lmd;Ldr$h;Ljava/util/List;)I lambda$null$17
	e (Lcom/mojang/brigadier/context/CommandContext;Lmd;Ldr$h;Ljava/util/List;)I lambda$null$16
	a (Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$15
	a (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$14
	b (Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$13
	b (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
	c (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
	d (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
	c (Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$9
	e (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
	a (Ldb;)Z lambda$register$7
	a (Ljava/util/function/Function;)Lza$c; lambda$static$6
	b (Ljava/util/function/Function;)Lza$c; lambda$static$5
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
za$a net/minecraft/server/commands/data/DataCommands$DataManipulator
	modify (Lcom/mojang/brigadier/context/CommandContext;Lmd;Ldr$h;Ljava/util/List;)I modify
za$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
	create (Lza$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; create
za$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/context/CommandContext;)Lyz; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
zb net/minecraft/server/commands/data/EntityDataAccessor
	b ERROR_NO_PLAYERS
	a PROVIDER
	c entity
	<init> (Lapx;)V <init>
	a (Lmd;)V setData
	a ()Lmd; getData
	b ()Lnr; getModifiedSuccess
	a (Lmt;)Lnr; getPrintSuccess
	a (Ldr$h;DI)Lnr; getPrintSuccess
	a (Ljava/lang/String;)Lza$c; lambda$static$0
	<clinit> ()V <clinit>
zb$1 net/minecraft/server/commands/data/EntityDataAccessor$1
	a val$arg
	<init> (Ljava/lang/String;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Lyz; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
zc net/minecraft/server/commands/data/StorageDataAccessor
	b SUGGEST_STORAGE
	a PROVIDER
	c storage
	d id
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcxx; getGlobalTags
	<init> (Lcxx;Lvk;)V <init>
	a (Lmd;)V setData
	a ()Lmd; getData
	b ()Lnr; getModifiedSuccess
	a (Lmt;)Lnr; getPrintSuccess
	a (Ldr$h;DI)Lnr; getPrintSuccess
	a (Ljava/lang/String;)Lza$c; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Lcom/mojang/brigadier/context/CommandContext;)Lcxx; access$000
	<init> (Lcxx;Lvk;Lzc$1;)V <init>
	c ()Lcom/mojang/brigadier/suggestion/SuggestionProvider; access$200
	<clinit> ()V <clinit>
zc$1 net/minecraft/server/commands/data/StorageDataAccessor$1
	a val$arg
	<init> (Ljava/lang/String;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Lyz; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
zd net/minecraft/server/commands/data/package-info
ze net/minecraft/server/commands/package-info
zf net/minecraft/server/dedicated/DedicatedPlayerList
	a LOGGER
	<init> (Lzg;Lgn$b;Lcyh;)V <init>
	a (Z)V setUsingWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	b (Lcom/mojang/authlib/GameProfile;)V deop
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	a ()V reloadWhiteList
	v ()V saveIpBanList
	w ()V saveUserBanList
	x ()V loadIpBanList
	y ()V loadUserBanList
	z ()V loadOps
	A ()V saveOps
	B ()V loadWhiteList
	C ()V saveWhiteList
	e (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	b ()Lzg; getServer
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	<clinit> ()V <clinit>
zg net/minecraft/server/dedicated/DedicatedServer
	j LOGGER
	k SHA1
	l consoleInput
	m queryThreadGs4
	n rconConsoleSource
	o rconThread
	p settings
	q gui
	<init> (Ljava/lang/Thread;Lgn$b;Lcyd$a;Labu;Lvz;Lcyk;Lzi;Lcom/mojang/datafixers/DataFixer;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Laco;Laaq;)V <init>
	d ()Z initServer
	W ()Z isSpawningAnimals
	P ()Z isSpawningMonsters
	X ()Z areNpcsEnabled
	aZ ()Ljava/lang/String; getPackHash
	g_ ()Lzh; getProperties
	q ()V forceDifficulty
	f ()Z isHardcore
	b (Ll;)Ll; fillReport
	o ()Ljava/util/Optional; getModdedStatus
	e ()V onServerExit
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	C ()Z isNetherEnabled
	a (Laoz;)V populateSnooper
	T ()Z isSnooperEnabled
	a (Ljava/lang/String;Ldb;)V handleConsoleInput
	ba ()V handleConsoleInputs
	j ()Z isDedicatedServer
	k ()I getRateLimitPacketsPerSecond
	l ()Z isEpollEnabled
	bb ()Lzf; getPlayerList
	n ()Z isPublished
	h_ ()Ljava/lang/String; getServerIp
	p ()I getServerPort
	i_ ()Ljava/lang/String; getServerName
	bc ()V showGui
	ag ()Z hasGui
	a (Lbrr;ZI)Z publishServer
	m ()Z isCommandBlockEnabled
	aj ()I getSpawnProtectionRadius
	a (Laag;Lfx;Lbft;)Z isUnderSpawnProtection
	al ()Z repliesToStatus
	g ()I getOperatorUserPermissionLevel
	h ()I getFunctionCompilationLevel
	d (I)V setPlayerIdleTimeout
	i ()Z shouldRconBroadcast
	R_ ()Z shouldInformAdmins
	at ()I getAbsoluteMaxWorldSize
	aw ()I getCompressionThreshold
	bd ()Z convertOldUsers
	bn ()V waitForRetry
	be ()J getMaxTickLength
	j_ ()Ljava/lang/String; getPluginNames
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	j (Z)V storeUsingWhiteList
	t ()V stopServer
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	b (I)I getScaledTrackingDistance
	k_ ()Ljava/lang/String; getLevelIdName
	aU ()Z forceSynchronousWrites
	ad ()Lacs; getPlayerList
	a (ZLzh;)Lzh; lambda$storeUsingWhiteList$4
	f (Ljava/lang/String;)V lambda$runCommand$3
	a (ILzh;)Lzh; lambda$setPlayerIdleTimeout$2
	bo ()Ljava/lang/String; lambda$fillReport$1
	bp ()Ljava/lang/String; lambda$fillReport$0
	bf ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
zg$1 net/minecraft/server/dedicated/DedicatedServer$1
	a this$0
	<init> (Lzg;Ljava/lang/String;)V <init>
	run ()V run
zh net/minecraft/server/dedicated/DedicatedServerProperties
	a onlineMode
	b preventProxyConnections
	c serverIp
	d spawnAnimals
	e spawnNpcs
	f pvp
	g allowFlight
	h resourcePack
	i motd
	j forceGameMode
	k enforceWhitelist
	l difficulty
	m gamemode
	n levelName
	o serverPort
	p maxBuildHeight
	q announcePlayerAchievements
	r enableQuery
	s queryPort
	t enableRcon
	u rconPort
	v rconPassword
	w resourcePackHash
	x resourcePackSha1
	y hardcore
	z allowNether
	A spawnMonsters
	B snooperEnabled
	C useNativeTransport
	D enableCommandBlock
	E spawnProtection
	F opPermissionLevel
	G functionPermissionLevel
	H maxTickTime
	I rateLimitPacketsPerSecond
	J viewDistance
	K maxPlayers
	L networkCompressionThreshold
	M broadcastRconToOps
	N broadcastConsoleToOps
	O maxWorldSize
	P syncChunkWrites
	Q enableJmxMonitoring
	R enableStatus
	S entityBroadcastRangePercentage
	T playerIdleTimeout
	U whiteList
	V worldGenSettings
	<init> (Ljava/util/Properties;Lgn;)V <init>
	a (Lgn;Ljava/nio/file/Path;)Lzh; fromFile
	a (Lgn;Ljava/util/Properties;)Lzh; reload
	b (Lgn;Ljava/util/Properties;)Lzk; reload
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$2
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$1
	c (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$0
zi net/minecraft/server/dedicated/DedicatedServerSettings
	a source
	b properties
	<init> (Lgn;Ljava/nio/file/Path;)V <init>
	a ()Lzh; getProperties
	b ()V forceSave
	a (Ljava/util/function/UnaryOperator;)Lzi; update
zj net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b server
	c maxTickTime
	<init> (Lzg;)V <init>
	run ()V run
	a ()V exit
	<clinit> ()V <clinit>
zj$1 net/minecraft/server/dedicated/ServerWatchdog$1
	a this$0
	<init> (Lzj;)V <init>
	run ()V run
zk net/minecraft/server/dedicated/Settings
	a LOGGER
	b properties
	<init> (Ljava/util/Properties;)V <init>
	a (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	b (Ljava/nio/file/Path;)V store
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lzk$a; getMutable
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lzk$a; getMutable
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;I)I get
	b (Ljava/lang/String;I)Lzk$a; getMutable
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/lang/String;J)J get
	a (Ljava/lang/String;Z)Z get
	b (Ljava/lang/String;Z)Lzk$a; getMutable
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	a ()Ljava/util/Properties; cloneProperties
	b (Lgn;Ljava/util/Properties;)Lzk; reload
	a (Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object; lambda$get$2
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object; lambda$dispatchNumberOrString$1
	a (Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number; lambda$wrapNumberDeserializer$0
	<clinit> ()V <clinit>
zk$1 net/minecraft/server/dedicated/Settings$1
zk$a net/minecraft/server/dedicated/Settings$MutableValue
	b key
	c value
	d serializer
	a this$0
	<init> (Lzk;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V <init>
	get ()Ljava/lang/Object; get
	a (Lgn;Ljava/lang/Object;)Lzk; update
	<init> (Lzk;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Lzk$1;)V <init>
zl net/minecraft/server/dedicated/package-info
zm net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c server
	d logAppenderThread
	e finalizers
	f isClosing
	a (Lzg;)Lzm; showFrameFor
	<init> (Lzg;)V <init>
	a (Ljava/lang/Runnable;)V addFinalizer
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	a ()V start
	b ()V close
	f ()V runFinalizers
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	b (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V lambda$print$2
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V lambda$buildChatPanel$1
	a (Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V lambda$buildChatPanel$0
	a (Lzm;)Ljava/util/concurrent/atomic/AtomicBoolean; access$000
	b (Lzm;)V access$100
	<clinit> ()V <clinit>
zm$1 net/minecraft/server/gui/MinecraftServerGui$1
	a val$gui
	b val$frame
	c val$server
	<init> (Lzm;Ljavax/swing/JFrame;Lzg;)V <init>
	windowClosing (Ljava/awt/event/WindowEvent;)V windowClosing
zm$2 net/minecraft/server/gui/MinecraftServerGui$2
	a this$0
	<init> (Lzm;)V <init>
	focusGained (Ljava/awt/event/FocusEvent;)V focusGained
zn net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a ()V tick
zo net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	b ()V tick
	a ([J)D getAverage
	paint (Ljava/awt/Graphics;)V paint
	a ()V close
	a (Ljava/awt/event/ActionEvent;)V lambda$new$1
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	<clinit> ()V <clinit>
zp net/minecraft/server/gui/package-info
zq net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	<init> (ILfx;)V <init>
	a ()I getId
	b ()Lfx; getPos
	a (I)V setProgress
	c ()I getProgress
	b (I)V updateTick
	d ()I getUpdatedRenderTick
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lzq;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
zr net/minecraft/server/level/ChunkHolder
	a UNLOADED_CHUNK
	b UNLOADED_CHUNK_FUTURE
	c UNLOADED_LEVEL_CHUNK
	d UNLOADED_LEVEL_CHUNK_FUTURE
	e CHUNK_STATUSES
	f FULL_CHUNK_STATUSES
	g futures
	h fullChunkFuture
	i tickingChunkFuture
	j entityTickingChunkFuture
	k chunkToSave
	l oldTicketLevel
	m ticketLevel
	n queueLevel
	o pos
	p hasChangedSections
	q changedBlocksPerSection
	r blockChangedLightSectionFilter
	s skyChangedLightSectionFilter
	t lightEngine
	u onLevelChange
	v playerProvider
	w wasAccessibleSinceLastSave
	x resendLight
	<init> (Lbra;ILcul;Lzr$c;Lzr$d;)V <init>
	a (Lcfx;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	b (Lcfx;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	d ()Lcge; getTickingChunk
	e ()Lcfx; getLastAvailableStatus
	f ()Lcft; getLastAvailable
	g ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	a (Lfx;)V blockChanged
	a (Lbsc;I)V sectionLightChanged
	a (Lcge;)V broadcastChanges
	a (Lbru;Lfx;Lcee;)V broadcastBlockEntityIfNeeded
	a (Lbru;Lfx;)V broadcastBlockEntity
	a (Loj;Z)V broadcast
	a (Lcfx;Lzs;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Ljava/util/concurrent/CompletableFuture;)V updateChunkToSave
	h ()Lzr$b; getFullStatus
	i ()Lbra; getPos
	j ()I getTicketLevel
	k ()I getQueueLevel
	d (I)V setQueueLevel
	a (I)V setTicketLevel
	a (Lzs;)V updateFutures
	b (I)Lcfx; getStatus
	c (I)Lzr$b; getFullChunkStatus
	l ()Z wasAccessibleSinceLastSave
	m ()V refreshAccessibility
	a (Lcgd;)V replaceProtoChunk
	a (Lzs;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFutures$5
	a (Lcft;Lcom/mojang/datafixers/util/Either;)Lcft; lambda$updateChunkToSave$4
	a (Lcft;Lzr$a;)Lcft; lambda$null$3
	a (Lcft;)Lcft; lambda$null$2
	a (Loj;Laah;)V lambda$broadcast$1
	b (Lbru;Lfx;Lcee;)V lambda$broadcastChanges$0
	a (Lzr;)Lbra; access$000
	<clinit> ()V <clinit>
zr$1 net/minecraft/server/level/ChunkHolder$1
	a this$0
	<init> (Lzr;)V <init>
	toString ()Ljava/lang/String; toString
zr$a net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
	<clinit> ()V <clinit>
zr$a$1 net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
zr$b net/minecraft/server/level/ChunkHolder$FullChunkStatus
	a INACCESSIBLE
	b BORDER
	c TICKING
	d ENTITY_TICKING
	e $VALUES
	values ()[Lzr$b; values
	valueOf (Ljava/lang/String;)Lzr$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lzr$b;)Z isOrAfter
	<clinit> ()V <clinit>
zr$c net/minecraft/server/level/ChunkHolder$LevelChangeListener
	a (Lbra;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
zr$d net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lbra;Z)Ljava/util/stream/Stream; getPlayers
zs net/minecraft/server/level/ChunkMap
	c LOGGER
	a MAX_CHUNK_DISTANCE
	d updatingChunkMap
	e visibleChunkMap
	f pendingUnloads
	g entitiesInLevel
	h level
	i lightEngine
	j mainThreadExecutor
	k generator
	l overworldDataStorage
	m poiManager
	n toDrop
	o modified
	p queueSorter
	q worldgenMailbox
	r mainThreadMailbox
	s progressListener
	t distanceManager
	u tickingGenerated
	v structureManager
	w storageFolder
	x playerMap
	y entityMap
	z chunkTypeCache
	A unloadQueue
	B viewDistance
	<init> (Laag;Lcyd$a;Lcom/mojang/datafixers/DataFixer;Lcst;Ljava/util/concurrent/Executor;Lany;Lcgg;Lcfv;Laap;Ljava/util/function/Supplier;IZ)V <init>
	a (Lbra;Lapx;)D euclideanDistanceSquared
	b (Lbra;Laah;Z)I checkerboardDistance
	b (Lbra;Lapx;)I checkerboardDistance
	a (Lbra;II)I checkerboardDistance
	a ()Laaj; getLightEngine
	a (J)Lzr; getUpdatingChunkIfPresent
	b (J)Lzr; getVisibleChunkIfPresent
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	a (Lbra;)Ljava/lang/String; getChunkDebugData
	a (Lbra;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	b (Lbra;)Ljava/util/concurrent/CompletableFuture; getEntityTickingRangeFuture
	a (JILzr;I)Lzr; updateChunkScheduling
	close ()V close
	a (Z)V saveAllChunks
	a (Ljava/util/function/BooleanSupplier;)V tick
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	a (JLzr;)V scheduleUnload
	b ()Z promoteChunkMap
	a (Lzr;Lcfx;)Ljava/util/concurrent/CompletableFuture; schedule
	f (Lbra;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	g (Lbra;)V markPositionReplaceable
	a (Lbra;Lcfx$a;)B markPosition
	b (Lzr;Lcfx;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	c (Lbra;)V releaseLightTicket
	a (Lcfx;I)Lcfx; getDependencyStatus
	c (Lzr;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	a (Lzr;)Ljava/util/concurrent/CompletableFuture; postProcess
	b (Lzr;)Ljava/util/concurrent/CompletableFuture; unpackTicks
	c ()I getTickingGenerated
	a (Lcft;)Z save
	h (Lbra;)Z isExistingChunkFull
	a (I)V setViewDistance
	a (Laah;Lbra;[Loj;ZZ)V updateChunkTracking
	d ()I size
	e ()Lzs$a; getDistanceManager
	f ()Ljava/lang/Iterable; getChunks
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	i (Lbra;)Lmd; readChunk
	d (Lbra;)Z noPlayersCloseForSpawning
	b (Laah;)Z skipPlayer
	a (Laah;Z)V updatePlayerStatus
	c (Laah;)Lgp; updatePlayerPos
	a (Laah;)V move
	a (Lbra;Z)Ljava/util/stream/Stream; getPlayers
	a (Lapx;)V addEntity
	b (Lapx;)V removeEntity
	g ()V tick
	a (Lapx;Loj;)V broadcast
	b (Lapx;Loj;)V broadcastAndSend
	a (Laah;[Loj;Lcge;)V playerLoadedChunk
	h ()Lazl; getPoiManager
	a (Lcge;)Ljava/util/concurrent/CompletableFuture; packTicks
	b (Lcge;)V lambda$packTicks$47
	a (Lbra;ZLaah;)Z lambda$getPlayers$46
	a (Lbra;Laah;)Z lambda$noPlayersCloseForSpawning$45
	a (Lzr$a;)Ljava/lang/String; lambda$printFuture$44
	c (Lcge;)Ljava/lang/String; lambda$printFuture$43
	d (Lcge;)Ljava/lang/Integer; lambda$dumpChunks$42
	e (Lcge;)Ljava/lang/Integer; lambda$dumpChunks$41
	b (Lcft;)Ljava/util/Optional; lambda$dumpChunks$40
	a (Lbra;I[Loj;Laah;)V lambda$setViewDistance$39
	a (Lzr;Ljava/lang/Runnable;)V lambda$unpackTicks$38
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$unpackTicks$37
	c (Lcft;)Lcge; lambda$null$36
	b (Lzr;Ljava/lang/Runnable;)V lambda$postProcess$35
	a (Lbra;Lcom/mojang/datafixers/util/Either;)V lambda$postProcess$34
	a (Lbra;Lcge;)Lcom/mojang/datafixers/util/Either; lambda$null$33
	a ([Loj;Lcge;Laah;)V lambda$null$32
	c (Lzr;Ljava/lang/Runnable;)V lambda$postProcess$31
	b (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$postProcess$30
	a (Ljava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$null$29
	b (I)Lcfx; lambda$postProcess$28
	d (Lzr;Ljava/lang/Runnable;)V lambda$protoChunkToFullChunk$27
	a (Lzr;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$protoChunkToFullChunk$26
	a (Lzr;Lcft;)Lcft; lambda$null$25
	d (Lzr;)Lzr$b; lambda$null$24
	j (Lbra;)Ljava/lang/String; lambda$releaseLightTicket$23
	k (Lbra;)V lambda$releaseLightTicket$22
	e (Lzr;Ljava/lang/Runnable;)V lambda$scheduleChunkGeneration$21
	a (Lbra;Lzr;Lcfx;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$scheduleChunkGeneration$20
	a (Lbra;Lzr$a;)Ljava/util/concurrent/CompletableFuture; lambda$null$19
	a (Lbra;Lzr;Lcfx;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; lambda$null$18
	b (Lzr;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$null$17
	a (Lcfx;)Ljava/lang/String; lambda$scheduleChunkGeneration$16
	b (Lcfx;I)Lcfx; lambda$scheduleChunkGeneration$15
	l (Lbra;)Lcom/mojang/datafixers/util/Either; lambda$scheduleChunkLoad$14
	a (Lcfx;Lbra;Lzr;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$schedule$13
	c (Lzr;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$null$12
	a (Lzr;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$scheduleUnload$11
	a (Lzr;Ljava/util/concurrent/CompletableFuture;JLcft;)V lambda$scheduleUnload$10
	e (Lzr;)V lambda$saveAllChunks$9
	j ()Z lambda$saveAllChunks$8
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcft;)V lambda$saveAllChunks$7
	d (Lcft;)Z lambda$saveAllChunks$6
	f (Lzr;)Lcft; lambda$saveAllChunks$5
	c (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$getEntityTickingRangeFuture$4
	b (Ljava/util/List;)Lcge; lambda$null$3
	c (I)Lcfx; lambda$getEntityTickingRangeFuture$2
	a (IIILjava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$getChunkRangeFuture$1
	d (J)I lambda$getChunkQueueLevel$0
	a (Lzs;)Lit/unimi/dsi/fastutil/longs/LongSet; access$300
	a (Lzs;JILzr;I)Lzr; access$400
	b (Lzs;)Laag; access$500
	c (Lzs;)I access$600
	a (Lbra;Laah;Z)I access$700
	<clinit> ()V <clinit>
zs$1 net/minecraft/server/level/ChunkMap$1
	a val$k
	c this$0
	<init> (Lzs;Lbra;)V <init>
	toString ()Ljava/lang/String; toString
zs$2 net/minecraft/server/level/ChunkMap$2
	a val$startX
	c val$finalI
	d val$range
	e val$startZ
	f val$either
	g this$0
	<init> (Lzs;IIIILcom/mojang/datafixers/util/Either;)V <init>
	toString ()Ljava/lang/String; toString
zs$a net/minecraft/server/level/ChunkMap$DistanceManager
	a this$0
	<init> (Lzs;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V <init>
	a (J)Z isChunkToRemove
	b (J)Lzr; getChunk
	a (JILzr;I)Lzr; updateChunkScheduling
zs$b net/minecraft/server/level/ChunkMap$TrackedEntity
	b serverEntity
	c entity
	d range
	e lastSectionPos
	f seenBy
	a this$0
	<init> (Lzs;Lapx;IIZ)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Loj;)V broadcast
	b (Loj;)V broadcastAndSend
	a ()V broadcastRemoved
	a (Laah;)V removePlayer
	b (Laah;)V updatePlayer
	a (I)I scaledRange
	b ()I getEffectiveRange
	a (Ljava/util/List;)V updatePlayers
	a (Lzs$b;)Lapx; access$000
	b (Lzs$b;)Lgp; access$100
	a (Lzs$b;Lgp;)Lgp; access$102
	c (Lzs$b;)Laaf; access$200
zt net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	<init> (Ljava/lang/String;I)V <init>
	a (ILbra;I)V resortChunkTasks
	a (Ljava/util/Optional;JI)V submit
	a (JZ)V release
	a (J)Ljava/lang/Runnable; acquire
	a ()Ljava/util/stream/Stream; pop
	toString ()Ljava/lang/String; toString
	b ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
	a (JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either; lambda$pop$6
	b (J)Lcom/mojang/datafixers/util/Either; lambda$null$5
	c (J)V lambda$acquire$4
	a (Ljava/util/Optional;)Z lambda$release$3
	d (J)Ljava/util/List; lambda$submit$2
	e (J)Ljava/util/List; lambda$resortChunkTasks$1
	a (I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap; lambda$new$0
	<clinit> ()V <clinit>
zu net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	<init> (Ljava/util/List;Ljava/util/concurrent/Executor;I)V <init>
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lzu$a; message
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lzu$a; message
	a (Lzr;Ljava/lang/Runnable;)Lzu$a; message
	a (Lzr;Ljava/util/function/Function;)Lzu$a; message
	a (Ljava/lang/Runnable;JZ)Lzu$b; release
	a (Laoa;Z)Laoa; getProcessor
	a (Laoa;)Laoa; getReleaseProcessor
	a (Lbra;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
	a (Laoa;JLjava/lang/Runnable;Z)V release
	a (Laoa;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lzt;Laoa;)V pollTask
	b (Laoa;)Lzt; getQueue
	a ()Ljava/lang/String; getDebugStatus
	close ()V close
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$getDebugStatus$18
	a (Ljava/lang/Long;)Ljava/lang/String; lambda$null$17
	b (Lzt;Laoa;)V lambda$pollTask$16
	a (Lzt;Laoa;Ljava/util/List;)V lambda$null$15
	a (Laoa;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture; lambda$null$14
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; lambda$null$13
	a (Laoa;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V lambda$submit$12
	a (Laoa;JZLjava/lang/Runnable;)V lambda$release$11
	a (Ljava/util/function/IntSupplier;Lbra;ILjava/util/function/IntConsumer;)V lambda$onLevelChange$10
	a (ILbra;ILzt;)V lambda$null$9
	a (Laoa;Laoa;)Laod$b; lambda$getReleaseProcessor$8
	b (Laoa;Laoa;)V lambda$null$7
	a (Laoa;Lzu$b;)V lambda$null$6
	a (Laoa;ZLaoa;)Laod$b; lambda$getProcessor$5
	a (Laoa;Laoa;Z)V lambda$null$4
	a (Laoa;ZLzu$a;)V lambda$null$3
	a (Ljava/lang/Runnable;Laoa;)Ljava/lang/Runnable; lambda$message$2
	b (Ljava/lang/Runnable;Laoa;)V lambda$null$1
	a (ILaoa;)Lzt; lambda$new$0
	<clinit> ()V <clinit>
zu$1 net/minecraft/server/level/ChunkTaskPriorityQueueSorter$1
zu$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
	<init> (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V <init>
	<init> (Ljava/util/function/Function;JLjava/util/function/IntSupplier;Lzu$1;)V <init>
	a (Lzu$a;)Ljava/util/function/Function; access$500
	b (Lzu$a;)J access$600
	c (Lzu$a;)Ljava/util/function/IntSupplier; access$700
zu$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
	<init> (Ljava/lang/Runnable;JZ)V <init>
	<init> (Ljava/lang/Runnable;JZLzu$1;)V <init>
	a (Lzu$b;)J access$200
	b (Lzu$b;)Ljava/lang/Runnable; access$300
	c (Lzu$b;)Z access$400
zv net/minecraft/server/level/ChunkTracker
	<init> (III)V <init>
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (JJI)I computeLevelFromNeighbor
	b (J)I getLevelFromSource
	b (JIZ)V update
zw net/minecraft/server/level/ColumnPos
	a x
	b z
	<init> (II)V <init>
	<init> (Lfx;)V <init>
	a ()Lbra; toChunkPos
	b ()J toLong
	a (II)J asLong
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
zx net/minecraft/server/level/DemoMode
	c displayedIntro
	d demoHasEnded
	e demoEndedReminder
	f gameModeTicks
	<init> (Laag;)V <init>
	a ()V tick
	f ()V outputDemoReminder
	a (Lfx;Lsz$a;Lgc;I)V handleBlockBreakAction
	a (Laah;Lbru;Lbly;Laoq;)Laor; useItem
	a (Laah;Lbru;Lbly;Laoq;Ldcg;)Laor; useItemOn
zy net/minecraft/server/level/DistanceManager
	a LOGGER
	b PLAYER_TICKET_LEVEL
	c playersPerChunk
	d tickets
	e ticketTracker
	f naturalSpawnChunkCounter
	g playerTicketManager
	h chunksToUpdateFutures
	i ticketThrottler
	j ticketThrottlerInput
	k ticketThrottlerReleaser
	l ticketsToRelease
	m mainThreadExecutor
	n ticketTickCounter
	<init> (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V <init>
	a ()V purgeStaleTickets
	a (Lafn;)I getTicketLevelAt
	a (J)Z isChunkToRemove
	b (J)Lzr; getChunk
	a (JILzr;I)Lzr; updateChunkScheduling
	a (Lzs;)Z runAllUpdates
	a (JLaak;)V addTicket
	b (JLaak;)V removeTicket
	a (Laal;Lbra;ILjava/lang/Object;)V addTicket
	b (Laal;Lbra;ILjava/lang/Object;)V removeTicket
	c (Laal;Lbra;ILjava/lang/Object;)V addRegionTicket
	d (Laal;Lbra;ILjava/lang/Object;)V removeRegionTicket
	e (J)Lafn; getTickets
	a (Lbra;Z)V updateChunkForced
	a (Lgp;Laah;)V addPlayer
	b (Lgp;Laah;)V removePlayer
	c (J)Ljava/lang/String; getTicketDebugString
	a (I)V updatePlayerTickets
	b ()I getNaturalSpawnChunkCount
	d (J)Z hasPlayersNearby
	c ()Ljava/lang/String; getDebugStatus
	a (Ljava/lang/String;)V dumpTickets
	f (J)Lit/unimi/dsi/fastutil/objects/ObjectSet; lambda$addPlayer$7
	g (J)Lafn; lambda$getTickets$6
	a (JLcom/mojang/datafixers/util/Either;)V lambda$runAllUpdates$5
	h (J)V lambda$null$4
	f ()V lambda$null$3
	a (Laak;)Z lambda$runAllUpdates$2
	a (Lzs;Lzr;)V lambda$runAllUpdates$1
	b (Laak;)Z lambda$purgeStaleTickets$0
	a (Lzy;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; access$000
	d ()Lorg/apache/logging/log4j/Logger; access$100
	e ()I access$200
	b (Lzy;)Laoa; access$300
	c (Lzy;)Laoa; access$400
	d (Lzy;)Lzu; access$500
	e (Lzy;)Ljava/util/concurrent/Executor; access$600
	a (Lzy;JLaak;)V access$700
	b (Lzy;JLaak;)V access$800
	f (Lzy;)Lit/unimi/dsi/fastutil/longs/LongSet; access$900
	g (Lzy;)Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap; access$1000
	h (Lzy;)Ljava/util/Set; access$1100
	<clinit> ()V <clinit>
zy$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	a this$0
	<init> (Lzy;)V <init>
	b (J)I getLevelFromSource
	c (J)I getLevel
	a (JI)V setLevel
	a (I)I runDistanceUpdates
zy$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	c this$0
	<init> (Lzy;I)V <init>
	c (J)I getLevel
	a (JI)V setLevel
	a (JII)V onLevelChange
	b (J)I getLevelFromSource
	d (J)Z havePlayer
	a ()V runAllUpdates
	a (Ljava/lang/String;)V dumpChunks
zy$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	e viewDistance
	f queueLevels
	g toUpdate
	d this$0
	<init> (Lzy;I)V <init>
	a (JII)V onLevelChange
	a (I)V updateViewDistance
	a (JIZZ)V onLevelChange
	a ()V runAllUpdates
	c (I)Z haveTicketFor
	b (JI)V lambda$runAllUpdates$7
	d (J)I lambda$runAllUpdates$6
	a (JLaak;)V lambda$onLevelChange$5
	b (JLaak;)V lambda$null$4
	d (I)I lambda$onLevelChange$3
	c (JLaak;)V lambda$onLevelChange$2
	d (JLaak;)V lambda$null$1
	d ()V lambda$null$0
zz net/minecraft/server/level/FeatureSimulator
	a minPos
	b maxPos
	<init> ()V <init>
	a (Lfx;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lfx;Ljava/util/function/Predicate;)Z isFluidAtPosition
	a (Lfx;Lcee;II)Z setBlock
	a (Lfx;Z)Z removeBlock
	a (Lfx;ZLapx;I)Z destroyBlock
	a ()Lcqx; getBoundingBox
	toString ()Ljava/lang/String; toString
	a (Lchk$a;Lfx;)Lfx; getHeightmapPos
aaa net/minecraft/server/level/PlayerMap
	a players
	<init> ()V <init>
	a (J)Ljava/util/stream/Stream; getPlayers
	a (JLaah;Z)V addPlayer
	a (JLaah;)V removePlayer
	a (Laah;)V ignorePlayer
	b (Laah;)V unIgnorePlayer
	c (Laah;)Z ignoredOrUnknown
	d (Laah;)Z ignored
	a (JJLaah;)V updatePlayer
aab net/minecraft/server/level/PlayerRespawnLogic
	<init> ()V <init>
	a (Laag;IIZ)Lfx; getOverworldRespawnPos
	a (Laag;Lbra;Z)Lfx; getSpawnPosInChunk
aac net/minecraft/server/level/SectionTracker
	<init> (III)V <init>
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (JJI)I computeLevelFromNeighbor
	b (J)I getLevelFromSource
	b (JIZ)V update
aad net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	j visible
	<init> (Lnr;Laoh$a;Laoh$b;)V <init>
	a (F)V setPercent
	a (Laoh$a;)V setColor
	a (Laoh$b;)V setOverlay
	a (Z)Laoh; setDarkenScreen
	b (Z)Laoh; setPlayBossMusic
	c (Z)Laoh; setCreateWorldFog
	a (Lnr;)V setName
	a (Loz$a;)V broadcast
	a (Laah;)V addPlayer
	b (Laah;)V removePlayer
	b ()V removeAllPlayers
	g ()Z isVisible
	d (Z)V setVisible
	h ()Ljava/util/Collection; getPlayers
aae net/minecraft/server/level/ServerChunkCache
	b CHUNK_STATUSES
	c distanceManager
	d generator
	e level
	f mainThread
	g lightEngine
	h mainThreadProcessor
	a chunkMap
	i dataStorage
	j lastInhabitedUpdate
	k spawnEnemies
	l spawnFriendlies
	m lastChunkPos
	n lastChunkStatus
	o lastChunk
	p lastSpawnState
	<init> (Laag;Lcyd$a;Lcom/mojang/datafixers/DataFixer;Lcst;Ljava/util/concurrent/Executor;Lcfv;IZLaap;Ljava/util/function/Supplier;)V <init>
	a ()Laaj; getLightEngine
	a (J)Lzr; getVisibleChunkIfPresent
	b ()I getTickingGenerated
	a (JLcft;Lcfx;)V storeInCache
	a (IILcfx;Z)Lcft; getChunk
	a (II)Lcge; getChunkNow
	n ()V clearCache
	b (IILcfx;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	c (IILcfx;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
	a (Lzr;I)Z chunkAbsent
	b (II)Z hasChunk
	c (II)Lbqz; getChunkForLighting
	c ()Lbru; getLevel
	d ()Z pollTask
	o ()Z runDistanceManagerUpdates
	a (Lapx;)Z isEntityTickingChunk
	a (Lbra;)Z isEntityTickingChunk
	a (Lfx;)Z isTickingChunk
	a (JLjava/util/function/Function;)Z checkChunkFuture
	a (Z)V save
	close ()V close
	a (Ljava/util/function/BooleanSupplier;)V tick
	p ()V tickChunks
	a (JLjava/util/function/Consumer;)V getFullChunk
	e ()Ljava/lang/String; gatherStats
	f ()I getPendingTasksCount
	g ()Lcfv; getGenerator
	h ()I getLoadedChunksCount
	b (Lfx;)V blockChanged
	a (Lbsc;Lgp;)V onLightUpdate
	a (Laal;Lbra;ILjava/lang/Object;)V addRegionTicket
	b (Laal;Lbra;ILjava/lang/Object;)V removeRegionTicket
	a (Lbra;Z)V updateChunkForced
	a (Laah;)V move
	b (Lapx;)V removeEntity
	c (Lapx;)V addEntity
	a (Lapx;Loj;)V broadcastAndSend
	b (Lapx;Loj;)V broadcast
	a (I)V setViewDistance
	a (ZZ)V setSpawnSettings
	b (Lbra;)Ljava/lang/String; getChunkDebugData
	i ()Lcxz; getDataStorage
	j ()Lazl; getPoiManager
	k ()Lbsd$d; getLastSpawnState
	l ()Lcul; getLightEngine
	m ()Lbqz; getLevel
	a (Lgp;Lbsc;)V lambda$onLightUpdate$6
	a (JZLbsd$d;ZILzr;)V lambda$tickChunks$5
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$getChunkFuture$4
	d (IILcfx;Z)Ljava/util/concurrent/CompletableFuture; lambda$getChunkFuture$3
	a (ZLzr$a;)Lcft; lambda$getChunk$2
	a (Lcft;)Lcft; lambda$getChunk$1
	e (IILcfx;Z)Lcft; lambda$getChunk$0
	a (Laae;)Ljava/lang/Thread; access$100
	b (Laae;)Laag; access$200
	c (Laae;)Z access$300
	d (Laae;)Laaj; access$400
	<clinit> ()V <clinit>
aae$1 net/minecraft/server/level/ServerChunkCache$1
aae$a net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	a this$0
	<init> (Laae;Lbru;)V <init>
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Ljava/lang/Runnable;)Z shouldRun
	au ()Z scheduleExecutables
	av ()Ljava/lang/Thread; getRunningThread
	c (Ljava/lang/Runnable;)V doRunTask
	y ()Z pollTask
	<init> (Laae;Lbru;Laae$1;)V <init>
aaf net/minecraft/server/level/ServerEntity
	a LOGGER
	b level
	c entity
	d updateInterval
	e trackDelta
	f broadcast
	g xp
	h yp
	i zp
	j yRotp
	k xRotp
	l yHeadRotp
	m ap
	n tickCount
	o teleportDelay
	p lastPassengers
	q wasRiding
	r wasOnGround
	<init> (Laag;Lapx;IZLjava/util/function/Consumer;)V <init>
	a ()V sendChanges
	a (Laah;)V removePairing
	b (Laah;)V addPairing
	a (Ljava/util/function/Consumer;)V sendPairingData
	c ()V sendDirtyEntityData
	d ()V updateSentPos
	b ()Ldck; sentPos
	a (Loj;)V broadcastAndSend
	<clinit> ()V <clinit>
aag net/minecraft/server/level/ServerLevel
	a END_SPAWN_POINT
	x LOGGER
	y entitiesById
	z entitiesByUuid
	A toAddAfterTick
	B players
	C chunkSource
	b tickingEntities
	D server
	E serverLevelData
	c noSave
	F allPlayersSleeping
	G emptyTime
	H portalForcer
	I blockTicks
	J liquidTicks
	K navigations
	d raids
	L blockEvents
	M handlingTick
	N customSpawners
	O dragonFight
	P structureFeatureManager
	Q tickTime
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Lcyd$a;Lcyj;Lvj;Lcha;Laap;Lcfv;ZJLjava/util/List;Z)V <init>
	a (IIZZ)V setWeatherParameters
	a (III)Lbss; getUncachedNoiseBiome
	a ()Lbsk; structureFeatureManager
	a (Ljava/util/function/BooleanSupplier;)V tick
	b ()V tickTime
	a (J)V setDayTime
	a (ZZ)V tickCustomSpawners
	ag ()V wakeUpAllPlayers
	a (Lcge;I)V tickChunk
	a (Lfx;)Lfx; findLightingTargetAround
	m_ ()Z isHandlingTick
	n_ ()V updateSleepingPlayerList
	o_ ()Lwa; getScoreboard
	ah ()V stopWeather
	p_ ()V resetEmptyTime
	a (Lbsm;)V tickLiquid
	b (Lbsm;)V tickBlock
	a (Lapx;)V tickNonPassenger
	a (Lapx;Lapx;)V tickPassenger
	b (Lapx;)V updateChunkPos
	a (Lbft;Lfx;)Z mayInteract
	a (Lafk;ZZ)V save
	ai ()V saveLevelData
	a (Laqb;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	g ()Ljava/util/List; getDragons
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	q_ ()Laah; getRandomPlayer
	c (Lapx;)Z addFreshEntity
	d (Lapx;)Z addWithUUID
	e (Lapx;)V addFromAnotherDimension
	a (Laah;)V addDuringCommandTeleport
	b (Laah;)V addDuringPortalTeleport
	c (Laah;)V addNewPlayer
	d (Laah;)V addRespawnedPlayer
	f (Laah;)V addPlayer
	m (Lapx;)Z addEntity
	f (Lapx;)Z loadFromChunk
	n (Lapx;)Z isUUIDUsed
	c (Ljava/util/UUID;)Lapx; findAddedOrPendingEntity
	g (Lapx;)Z tryAddFreshEntityWithPassengers
	a (Lcge;)V unload
	h (Lapx;)V onEntityRemoved
	o (Lapx;)V add
	i (Lapx;)V despawn
	p (Lapx;)V removeFromChunk
	e (Laah;)V removePlayerImmediately
	a (ILfx;I)V destroyBlockProgress
	a (Lbft;DDDLadn;Ladp;FF)V playSound
	a (Lbft;Lapx;Ladn;Ladp;FF)V playSound
	b (ILfx;I)V globalLevelEvent
	a (Lbft;ILfx;I)V levelEvent
	a (Lfx;Lcee;Lcee;I)V sendBlockUpdated
	a (Lapx;B)V broadcastEntityEvent
	i ()Laae; getChunkSource
	a (Lapx;Laph;Lbrn;DDDFZLbrm$a;)Lbrm; explode
	a (Lfx;Lbul;II)V blockEvent
	aj ()V runBlockEvents
	a (Lbqy;)Z doBlockEvent
	j ()Lbsi; getBlockTicks
	r_ ()Lbsi; getLiquidTicks
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	m ()Lcxi; getPortalForcer
	n ()Lcst; getStructureManager
	a (Lhf;DDDIDDDD)I sendParticles
	a (Laah;Lhf;ZDDDIDDDD)Z sendParticles
	a (Laah;ZDDDLoj;)Z sendParticles
	a (I)Lapx; getEntity
	a (Ljava/util/UUID;)Lapx; getEntity
	a (Lckx;Lfx;IZ)Lfx; findNearestMapFeature
	a (Lbss;Lfx;II)Lfx; findNearestBiome
	o ()Lboo; getRecipeManager
	p ()Lael; getTagManager
	q ()Z noSave
	r ()Lgn; registryAccess
	s ()Lcxz; getDataStorage
	a (Ljava/lang/String;)Lcxu; getMapData
	a (Lcxu;)V setMapData
	t ()I getFreeMapId
	a (Lfx;F)V setDefaultSpawnPos
	u ()Lfx; getSharedSpawnPos
	v ()F getSharedSpawnAngle
	w ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	a (IIZ)Z setChunkForced
	x ()Ljava/util/List; players
	a (Lfx;Lcee;Lcee;)V onBlockStateChange
	y ()Lazl; getPoiManager
	a_ (Lfx;)Z isVillage
	a (Lgp;)Z isVillage
	a (Lfx;I)Z isCloseToVillage
	b (Lgp;)I sectionsToVillage
	z ()Lbha; getRaids
	b_ (Lfx;)Lbgy; getRaidAt
	c_ (Lfx;)Z isRaided
	a (Lazi;Lapx;Laqw;)V onReputationEvent
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/io/Writer;)V dumpBlockEntities
	a (Lcqx;)V clearBlockEvents
	a (Lfx;Lbul;)V blockUpdated
	a (Lgc;Z)F getShade
	A ()Ljava/lang/Iterable; getAllEntities
	toString ()Ljava/lang/String; toString
	B ()Z isFlat
	C ()J getSeed
	D ()Lchd; dragonFight
	a (Lgp;Lckx;)Ljava/util/stream/Stream; startsForFeature
	E ()Laag; getLevel
	a (Laag;)V makeObsidianPlatform
	F ()Lddk; getScoreboard
	G ()Lcfw; getChunkSource
	H ()Lbsl; getLiquidTicks
	I ()Lbsl; getBlockTicks
	a (Laag;Lfx;)V lambda$makeObsidianPlatform$17
	b (Laag;Lfx;)V lambda$makeObsidianPlatform$16
	a (Lcqx;Lbqy;)Z lambda$clearBlockEvents$15
	a (Lfx;Lazo;)V lambda$onBlockStateChange$14
	b (Lfx;Lazo;)V lambda$null$13
	c (Lfx;Lazo;)V lambda$onBlockStateChange$12
	D (Lfx;)V lambda$null$11
	b (Ljava/lang/String;)Lcxu; lambda$getMapData$10
	a (Lbss;Lbss;)Z lambda$findNearestBiome$9
	q (Lapx;)Ljava/lang/String; lambda$tickPassenger$8
	r (Lapx;)Ljava/lang/String; lambda$tickNonPassenger$7
	a (Laqj;)Z lambda$findLightingTargetAround$6
	g (Laah;)V lambda$wakeUpAllPlayers$5
	h (Laah;)Z lambda$tick$4
	ak ()Lbha; lambda$new$3
	a (Lnet/minecraft/server/MinecraftServer;)Lcxz; lambda$new$2
	a (Lcut;)Z lambda$new$1
	a (Lbul;)Z lambda$new$0
	<clinit> ()V <clinit>
aah net/minecraft/server/level/ServerPlayer
	bJ LOGGER
	b connection
	c server
	d gameMode
	bK entitiesToRemove
	bL advancements
	bM stats
	bN lastRecordedHealthAndAbsorption
	bO lastRecordedFoodLevel
	bP lastRecordedAirLevel
	bQ lastRecordedArmor
	bR lastRecordedLevel
	bS lastRecordedExperience
	bT lastSentHealth
	bU lastSentFood
	bV lastFoodSaturationZero
	bW lastSentExp
	bX spawnInvulnerableTime
	bY chatVisibility
	bZ canChatColor
	ca lastActionTime
	cb camera
	cc isChangingDimension
	cd seenCredits
	ce recipeBook
	cf levitationStartPos
	cg levitationStartTime
	ch disconnected
	ci enteredNetherPosition
	cj lastSectionPos
	ck respawnDimension
	cl respawnPosition
	cm respawnForced
	cn respawnAngle
	co containerCounter
	e ignoreSlotUpdateHack
	f latency
	g wonGame
	<init> (Lnet/minecraft/server/MinecraftServer;Laag;Lcom/mojang/authlib/GameProfile;Laai;)V <init>
	c (Laag;)V fudgeSpawnLocation
	u (I)I getCoprime
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	a (I)V setExperiencePoints
	b (I)V setExperienceLevels
	c (I)V giveExperienceLevels
	a (Lbly;I)V onEnchantmentPerformed
	f ()V initMenu
	g ()V onEnterCombat
	h ()V onLeaveCombat
	a (Lcee;)V onInsideBlock
	i ()Lblv; createItemCooldowns
	j ()V tick
	v_ ()V doTick
	a (Lddn;I)V updateScoreForCriteria
	a (Laph;)V die
	eV ()V tellNeutralMobsThatIDied
	a (Lapx;ILaph;)V awardKillScore
	a (Ljava/lang/String;Ljava/lang/String;[Lddn;)V handleTeamKill
	a (Laph;F)Z hurt
	a (Lbft;)Z canHarmPlayer
	eW ()Z isPvpAllowed
	a (Laag;)Lcxj; findDimensionEntryPoint
	b (Laag;)Lapx; changeDimension
	a (Laag;Lfx;)V createEndPlatform
	a (Laag;Lfx;Z)Ljava/util/Optional; getExitPortal
	d (Laag;)V triggerDimensionChangeTriggers
	a (Laah;)Z broadcastToPlayer
	a (Lccg;)V broadcast
	a (Lapx;I)V take
	a (Lfx;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	b (Lfx;)V startSleeping
	a (Lfx;Lgc;)Z bedInRange
	g (Lfx;)Z isReachableBedBlock
	b (Lfx;Lgc;)Z bedBlocked
	a (ZZ)V stopSleepInBed
	a (Lapx;Z)Z startRiding
	l ()V stopRiding
	b (Laph;)Z isInvulnerableTo
	a (DZLcee;Lfx;)V checkFallDamage
	c (Lfx;)V onChangedBlock
	a (DZ)V doCheckFallDamage
	a (Lcdc;)V openTextEdit
	eX ()V nextContainerCounter
	a (Laou;)Ljava/util/OptionalInt; openMenu
	a (ILbqt;IIZZ)V sendMerchantOffers
	a (Lbay;Laok;)V openHorseInventory
	a (Lbly;Laoq;)V openItemGui
	a (Lccl;)V openCommandBlock
	a (Lbhz;ILbly;)V slotChanged
	a (Lbhz;)V refreshContainer
	a (Lbhz;Lgj;)V refreshContainer
	a (Lbhz;II)V setContainerData
	m ()V closeContainer
	n ()V broadcastCarriedItem
	o ()V doCloseContainer
	a (FFZZ)V setPlayerInput
	a (Ladv;I)V awardStat
	a (Ladv;)V resetStat
	a (Ljava/util/Collection;)I awardRecipes
	a ([Lvk;)V awardRecipesByKey
	b (Ljava/util/Collection;)I resetRecipes
	d (I)V giveExperiencePoints
	p ()V disconnect
	q ()Z hasDisconnected
	r ()V resetSentInfo
	a (Lnr;Z)V displayClientMessage
	s ()V completeUsingItem
	a (Ldj$a;Ldck;)V lookAt
	a (Ldj$a;Lapx;Ldj$a;)V lookAt
	a (Laah;Z)V restoreFrom
	a (Lapr;)V onEffectAdded
	a (Lapr;Z)V onEffectUpdated
	b (Lapr;)V onEffectRemoved
	a (DDD)V teleportTo
	b (DDD)V moveTo
	a (Lapx;)V crit
	b (Lapx;)V magicCrit
	t ()V onUpdateAbilities
	u ()Laag; getLevel
	a (Lbrr;)V setGameMode
	a_ ()Z isSpectator
	b_ ()Z isCreative
	a (Lnr;Ljava/util/UUID;)V sendMessage
	a (Lnr;Lno;Ljava/util/UUID;)V sendMessage
	v ()Ljava/lang/String; getIpAddress
	a (Lsg;)V updateOptions
	w ()Z canChatInColor
	x ()Lbfr; getChatVisibility
	a (Ljava/lang/String;Ljava/lang/String;)V sendTexturePack
	y ()I getPermissionLevel
	z ()V resetLastActionTime
	A ()Ladu; getStats
	B ()Ladt; getRecipeBook
	c (Lapx;)V sendRemoveEntity
	d (Lapx;)V cancelRemoveEntity
	C ()V updateInvisibilityStatus
	D ()Lapx; getCamera
	e (Lapx;)V setCamera
	E ()V processPortalCooldown
	f (Lapx;)V attack
	F ()J getLastActionTime
	G ()Lnr; getTabListDisplayName
	a (Laoq;)V swing
	H ()Z isChangingDimension
	I ()V hasChangedDimension
	J ()Lvt; getAdvancements
	a (Laag;DDDFF)V teleportTo
	K ()Lfx; getRespawnPosition
	L ()F getRespawnAngle
	M ()Lvj; getRespawnDimension
	N ()Z isRespawnForced
	a (Lvj;Lfx;FZZ)V setRespawnPosition
	a (Lbra;Loj;Loj;)V trackChunk
	a (Lbra;)V untrackChunk
	O ()Lgp; getLastSectionPos
	a (Lgp;)V setLastSectionPos
	a (Ladn;Ladp;FF)V playNotifySound
	P ()Loj; getAddEntityPacket
	a (Lbly;ZZ)Lbcs; drop
	a (Lno;Lnr;Ljava/util/UUID;Lio/netty/util/concurrent/Future;)V lambda$sendMessage$9
	a (ILddj;)V lambda$awardStat$8
	a (Lafu;)V lambda$startSleepInBed$7
	a (Lbdn;)Z lambda$startSleepInBed$6
	a (Laqk;)V lambda$tellNeutralMobsThatIDied$5
	b (Laqk;)Z lambda$tellNeutralMobsThatIDied$4
	a (Lnr;Lio/netty/util/concurrent/Future;)V lambda$die$3
	a (Lnr;Lob;)Lob; lambda$null$2
	b (ILddj;)V lambda$updateScoreForCriteria$1
	a (Lmd;Lmt;)V lambda$addAdditionalSaveData$0
	<clinit> ()V <clinit>
aai net/minecraft/server/level/ServerPlayerGameMode
	c LOGGER
	a level
	b player
	d gameModeForPlayer
	e previousGameModeForPlayer
	f isDestroyingBlock
	g destroyProgressStart
	h destroyPos
	i gameTicks
	j hasDelayedDestroy
	k delayedDestroyPos
	l delayedTickStart
	m lastSentState
	<init> (Laag;)V <init>
	a (Lbrr;)V setGameModeForPlayer
	a (Lbrr;Lbrr;)V setGameModeForPlayer
	b ()Lbrr; getGameModeForPlayer
	c ()Lbrr; getPreviousGameModeForPlayer
	d ()Z isSurvival
	e ()Z isCreative
	b (Lbrr;)V updateGameMode
	a ()V tick
	a (Lcee;Lfx;I)F incrementDestroyProgress
	a (Lfx;Lsz$a;Lgc;I)V handleBlockBreakAction
	a (Lfx;Lsz$a;Ljava/lang/String;)V destroyAndAck
	a (Lfx;)Z destroyBlock
	a (Laah;Lbru;Lbly;Laoq;)Laor; useItem
	a (Laah;Lbru;Lbly;Laoq;Ldcg;)Laor; useItemOn
	a (Laag;)V setLevel
	<clinit> ()V <clinit>
aaj net/minecraft/server/level/ThreadedLevelLightEngine
	a LOGGER
	b taskMailbox
	c lightTasks
	d chunkMap
	e sorterMailbox
	f taskPerBatch
	g scheduled
	<init> (Lcgg;Lzs;ZLaob;Laoa;)V <init>
	close ()V close
	a (IZZ)I runUpdates
	a (Lfx;I)V onBlockEmissionIncrease
	a (Lfx;)V checkBlock
	a (Lbra;)V updateChunkStatus
	a (Lgp;Z)V updateSectionStatus
	a (Lbra;Z)V enableLightSources
	a (Lbsc;Lgp;Lcfy;Z)V queueSectionData
	a (IILaaj$a;Ljava/lang/Runnable;)V addTask
	a (IILjava/util/function/IntSupplier;Laaj$a;Ljava/lang/Runnable;)V addTask
	b (Lbra;Z)V retainData
	a (Lcft;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	z_ ()V tryScheduleUpdate
	b ()V runUpdate
	a (I)V setTaskPerBatch
	c ()V lambda$tryScheduleUpdate$22
	a (Lbra;Ljava/lang/Runnable;)V lambda$lightChunk$21
	a (Lcft;Lbra;)Lcft; lambda$lightChunk$20
	c (Lbra;Z)Ljava/lang/String; lambda$lightChunk$19
	a (Lcft;Lbra;Z)V lambda$lightChunk$18
	a (Lcft;Lfx;)V lambda$null$17
	b (Lbra;)Ljava/lang/String; lambda$retainData$16
	d (Lbra;Z)V lambda$retainData$15
	d ()I lambda$retainData$14
	a (Laaj$a;Ljava/lang/Runnable;)V lambda$addTask$13
	a (Lgp;)Ljava/lang/String; lambda$queueSectionData$12
	b (Lbsc;Lgp;Lcfy;Z)V lambda$queueSectionData$11
	e ()I lambda$queueSectionData$10
	e (Lbra;Z)Ljava/lang/String; lambda$enableLightSources$9
	f (Lbra;Z)V lambda$enableLightSources$8
	b (Lgp;Z)Ljava/lang/String; lambda$updateSectionStatus$7
	c (Lgp;Z)V lambda$updateSectionStatus$6
	f ()I lambda$updateSectionStatus$5
	c (Lbra;)Ljava/lang/String; lambda$updateChunkStatus$4
	d (Lbra;)V lambda$updateChunkStatus$3
	g ()I lambda$updateChunkStatus$2
	b (Lfx;)Ljava/lang/String; lambda$checkBlock$1
	c (Lfx;)V lambda$checkBlock$0
	<clinit> ()V <clinit>
aaj$a net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	a PRE_UPDATE
	b POST_UPDATE
	c $VALUES
	values ()[Laaj$a; values
	valueOf (Ljava/lang/String;)Laaj$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
aak net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	c key
	d createdTick
	<init> (Laal;ILjava/lang/Object;)V <init>
	a (Laak;)I compareTo
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Laal; getType
	b ()I getTicketLevel
	a (J)V setCreatedTick
	b (J)Z timedOut
	compareTo (Ljava/lang/Object;)I compareTo
aal net/minecraft/server/level/TicketType
	i name
	j comparator
	k timeout
	a START
	b DRAGON
	c PLAYER
	d FORCED
	e LIGHT
	f PORTAL
	g POST_TELEPORT
	h UNKNOWN
	a (Ljava/lang/String;Ljava/util/Comparator;)Laal; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Laal; create
	<init> (Ljava/lang/String;Ljava/util/Comparator;J)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/util/Comparator; getComparator
	b ()J timeout
	a (Lafu;Lafu;)I lambda$static$1
	b (Lafu;Lafu;)I lambda$static$0
	<clinit> ()V <clinit>
aam net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c x
	d z
	e size
	f level
	g seed
	h levelData
	i random
	j dimensionType
	k blockTicks
	l liquidTicks
	m biomeManager
	n firstPos
	o lastPos
	<init> (Laag;Ljava/util/List;)V <init>
	a ()I getCenterX
	b ()I getCenterZ
	a (II)Lcft; getChunk
	a (IILcfx;Z)Lcft; getChunk
	b (II)Z hasChunk
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	a (DDDDLjava/util/function/Predicate;)Lbft; getNearestPlayer
	c ()I getSkyDarken
	d ()Lbsu; getBiomeManager
	a (III)Lbss; getUncachedNoiseBiome
	a (Lgc;Z)F getShade
	e ()Lcul; getLightEngine
	a (Lfx;ZLapx;I)Z destroyBlock
	c (Lfx;)Lccg; getBlockEntity
	a (Lfx;Lcee;II)Z setBlock
	j (Lfx;)V markPosForPostprocessing
	c (Lapx;)Z addFreshEntity
	a (Lfx;Z)Z removeBlock
	f ()Lcfr; getWorldBorder
	s_ ()Z isClientSide
	E ()Laag; getLevel
	r ()Lgn; registryAccess
	h ()Lcya; getLevelData
	d (Lfx;)Laop; getCurrentDifficultyAt
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	G ()Lcfw; getChunkSource
	C ()J getSeed
	I ()Lbsl; getBlockTicks
	H ()Lbsl; getLiquidTicks
	t_ ()I getSeaLevel
	u_ ()Ljava/util/Random; getRandom
	a (Lchk$a;II)I getHeight
	a (Lbft;Lfx;Ladn;Ladp;FF)V playSound
	a (Lhf;DDDDDD)V addParticle
	a (Lbft;ILfx;I)V levelEvent
	k ()Lcha; dimensionType
	a (Lfx;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lfx;Ljava/util/function/Predicate;)Z isFluidAtPosition
	a (Ljava/lang/Class;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	x ()Ljava/util/List; players
	a (Lgp;Lckx;)Ljava/util/stream/Stream; startsForFeature
	k (Lfx;)Lbsl; lambda$new$1
	l (Lfx;)Lbsl; lambda$new$0
	<clinit> ()V <clinit>
aan net/minecraft/server/level/WorldGenTickList
	a index
	<init> (Ljava/util/function/Function;)V <init>
	a (Lfx;Ljava/lang/Object;)Z hasScheduledTick
	a (Lfx;Ljava/lang/Object;ILbsn;)V scheduleTick
	b (Lfx;Ljava/lang/Object;)Z willTickThisTick
	a ()I size
aao net/minecraft/server/level/package-info
aap net/minecraft/server/level/progress/ChunkProgressListener
	a (Lbra;)V updateSpawnPos
	a (Lbra;Lcfx;)V onStatusChange
	a ()V start
	b ()V stop
aaq net/minecraft/server/level/progress/ChunkProgressListenerFactory
	create (I)Laap; create
aar net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	<init> (I)V <init>
	a (Lbra;)V updateSpawnPos
	a (Lbra;Lcfx;)V onStatusChange
	a ()V start
	b ()V stop
	c ()I getProgress
	<clinit> ()V <clinit>
aas net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	<init> (Laap;Ljava/util/concurrent/Executor;)V <init>
	a (Lbra;)V updateSpawnPos
	a (Lbra;Lcfx;)V onStatusChange
	a ()V start
	b ()V stop
	b (Lbra;Lcfx;)V lambda$onStatusChange$1
	b (Lbra;)V lambda$updateSpawnPos$0
aat net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	<init> (I)V <init>
	a (Lbra;)V updateSpawnPos
	a (Lbra;Lcfx;)V onStatusChange
	a ()V start
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
	a (II)Lcfx; getStatus
aau net/minecraft/server/level/progress/package-info
aav net/minecraft/server/network/LegacyQueryHandler
	a LOGGER
	b serverConnectionListener
	<init> (Laax;)V <init>
	channelRead (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createReply
	<clinit> ()V <clinit>
aaw net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	<init> (Lnet/minecraft/server/MinecraftServer;Lnd;)V <init>
	a (Ltv;)V handleIntention
	a (Lnr;)V onDisconnect
	a ()Lnd; getConnection
aax net/minecraft/server/network/ServerConnectionListener
	d LOGGER
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	e server
	c running
	f channels
	g connections
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	a ()Ljava/net/SocketAddress; startMemoryChannel
	b ()V stop
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
	a (Lnd;Lnr;Lio/netty/util/concurrent/Future;)V lambda$tick$2
	e ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	f ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
	a (Laax;)Lnet/minecraft/server/MinecraftServer; access$000
	b (Laax;)Ljava/util/List; access$100
	<clinit> ()V <clinit>
aax$1 net/minecraft/server/network/ServerConnectionListener$1
	a this$0
	<init> (Laax;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
aax$2 net/minecraft/server/network/ServerConnectionListener$2
	a this$0
	<init> (Laax;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
aax$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	c jitter
	d queuedMessages
	<init> (II)V <init>
	channelRead (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
	a (Lio/netty/util/Timeout;)V onTimeout
	<clinit> ()V <clinit>
aax$a$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	a ctx
	b msg
	<init> (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V <init>
aay net/minecraft/server/network/ServerGamePacketListenerImpl
	c LOGGER
	a connection
	d server
	b player
	e tickCount
	f keepAliveTime
	g keepAlivePending
	h keepAliveChallenge
	i chatSpamTickCount
	j dropSpamTickCount
	k expectedAcks
	l firstGoodX
	m firstGoodY
	n firstGoodZ
	o lastGoodX
	p lastGoodY
	q lastGoodZ
	r lastVehicle
	s vehicleFirstGoodX
	t vehicleFirstGoodY
	u vehicleFirstGoodZ
	v vehicleLastGoodX
	w vehicleLastGoodY
	x vehicleLastGoodZ
	y awaitingPositionFromClient
	z awaitingTeleport
	A awaitingTeleportTime
	B clientIsFloating
	C aboveGroundTickCount
	D clientVehicleIsFloating
	E aboveGroundVehicleTickCount
	F receivedMovePacketCount
	G knownMovePacketCount
	<init> (Lnet/minecraft/server/MinecraftServer;Lnd;Laah;)V <init>
	b ()V tick
	c ()V resetPosition
	a ()Lnd; getConnection
	d ()Z isSingleplayerOwner
	b (Lnr;)V disconnect
	a (Ltb;)V handlePlayerInput
	b (Lst;)Z containsInvalidValues
	b (Lsu;)Z containsInvalidValues
	a (Lsu;)V handleMoveVehicle
	a (Lapx;)Z noBlocksAround
	a (Lsb;)V handleAcceptTeleportPacket
	a (Ltd;)V handleRecipeBookSeenRecipePacket
	a (Ltc;)V handleRecipeBookChangeSettingsPacket
	a (Ltg;)V handleSeenAdvancements
	a (Lsh;)V handleCustomCommandSuggestions
	a (Ltk;)V handleSetCommandBlock
	a (Ltl;)V handleSetCommandMinecart
	a (Lsw;)V handlePickItem
	a (Lte;)V handleRenameItem
	a (Lti;)V handleSetBeaconPacket
	a (Lto;)V handleSetStructureBlock
	a (Ltn;)V handleSetJigsawBlock
	a (Lsq;)V handleJigsawGenerate
	a (Lth;)V handleSelectTrade
	a (Lsn;)V handleEditBook
	a (Lso;)V handleEntityTagQuery
	a (Lsc;)V handleBlockEntityTagQuery
	a (Lst;)V handleMovePlayer
	a (Lbrw;Ldcf;)Z isPlayerCollidingWithAnythingNew
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (Lsz;)V handlePlayerAction
	a (Laah;Lbly;)Z wasBlockPlacementAttempt
	a (Lts;)V handleUseItemOn
	a (Ltt;)V handleUseItem
	a (Ltr;)V handleTeleportToEntityPacket
	a (Ltf;)V handleResourcePackResponse
	a (Lsv;)V handlePaddleBoat
	a (Lnr;)V onDisconnect
	a (Loj;)V send
	a (Loj;Lio/netty/util/concurrent/GenericFutureListener;)V send
	a (Ltj;)V handleSetCarriedItem
	a (Lse;)V handleChat
	c (Ljava/lang/String;)V handleCommand
	a (Ltq;)V handleAnimate
	a (Lta;)V handlePlayerCommand
	a (Ljava/lang/String;)V info
	b (Ljava/lang/String;)V warn
	a (Lsp;)V handleInteract
	a (Lsf;)V handleClientCommand
	a (Lsl;)V handleContainerClose
	a (Lsk;)V handleContainerClick
	a (Lsx;)V handlePlaceRecipe
	a (Lsj;)V handleContainerButtonClick
	a (Ltm;)V handleSetCreativeModeSlot
	a (Lsi;)V handleContainerAck
	a (Ltp;)V handleSignUpdate
	a (Lsr;)V handleKeepAlive
	a (Lsy;)V handlePlayerAbilities
	a (Lsg;)V handleClientInformation
	a (Lsm;)V handleCustomPayload
	a (Lsd;)V handleChangeDifficulty
	a (Lss;)V handleLockDifficulty
	a (Lsx;Lbon;)V lambda$handlePlaceRecipe$5
	b (Loj;)Ljava/lang/String; lambda$send$4
	a (Ldde;Ldde;)Z lambda$isPlayerCollidingWithAnythingNew$3
	b (Lapx;)Z lambda$isPlayerCollidingWithAnythingNew$2
	a (Lsh;Lcom/mojang/brigadier/suggestion/Suggestions;)V lambda$handleCustomCommandSuggestions$1
	a (Lnr;Lio/netty/util/concurrent/Future;)V lambda$disconnect$0
	<clinit> ()V <clinit>
aay$1 net/minecraft/server/network/ServerGamePacketListenerImpl$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	b $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	c $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	d $SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
	<clinit> ()V <clinit>
aaz net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a IGNORE_STATUS_REASON
	b server
	c connection
	<init> (Lnet/minecraft/server/MinecraftServer;Lnd;)V <init>
	a (Ltv;)V handleIntention
	a (Lnr;)V onDisconnect
	a ()Lnd; getConnection
	<clinit> ()V <clinit>
aaz$1 net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	a $SwitchMap$net$minecraft$network$ConnectionProtocol
	<clinit> ()V <clinit>
aba net/minecraft/server/network/ServerLoginPacketListenerImpl
	b UNIQUE_THREAD_ID
	c LOGGER
	d RANDOM
	e nonce
	f server
	a connection
	g state
	h tick
	i gameProfile
	j serverId
	k secretKey
	l delayedAcceptPlayer
	<init> (Lnet/minecraft/server/MinecraftServer;Lnd;)V <init>
	b ()V tick
	a ()Lnd; getConnection
	b (Lnr;)V disconnect
	c ()V handleAcceptedLogin
	a (Lnr;)V onDisconnect
	d ()Ljava/lang/String; getUserName
	a (Lug;)V handleHello
	a (Luh;)V handleKey
	a (Luf;)V handleCustomQueryPacket
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; createFakeProfile
	a (Lio/netty/channel/ChannelFuture;)V lambda$handleAcceptedLogin$0
	a (Laba;)Lcom/mojang/authlib/GameProfile; access$000
	b (Laba;)Lnet/minecraft/server/MinecraftServer; access$100
	c (Laba;)Ljavax/crypto/SecretKey; access$200
	a (Laba;Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; access$002
	e ()Lorg/apache/logging/log4j/Logger; access$300
	a (Laba;Laba$a;)Laba$a; access$402
	<clinit> ()V <clinit>
aba$1 net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	a this$0
	<init> (Laba;Ljava/lang/String;)V <init>
	run ()V run
	a ()Ljava/net/InetAddress; getAddress
aba$a net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	a HELLO
	b KEY
	c AUTHENTICATING
	d NEGOTIATING
	e READY_TO_ACCEPT
	f DELAY_ACCEPT
	g ACCEPTED
	h $VALUES
	values ()[Laba$a; values
	valueOf (Ljava/lang/String;)Laba$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
abb net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	b server
	c connection
	d hasRequestedStatus
	<init> (Lnet/minecraft/server/MinecraftServer;Lnd;)V <init>
	a (Lnr;)V onDisconnect
	a ()Lnd; getConnection
	a (Luq;)V handleStatusRequest
	a (Lup;)V handlePingRequest
	<clinit> ()V <clinit>
abc net/minecraft/server/network/package-info
abd net/minecraft/server/package-info
abe net/minecraft/server/packs/AbstractPackResources
	b LOGGER
	a file
	<init> (Ljava/io/File;)V <init>
	c (Labi;Lvk;)Ljava/lang/String; getPathFromLocation
	a (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; getRelativePath
	a (Labi;Lvk;)Ljava/io/InputStream; getResource
	b (Labi;Lvk;)Z hasResource
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	c (Ljava/lang/String;)Z hasResource
	d (Ljava/lang/String;)V logWarning
	a (Labl;)Ljava/lang/Object; getMetadataSection
	a (Labl;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	a ()Ljava/lang/String; getName
	<clinit> ()V <clinit>
abf net/minecraft/server/packs/FilePackResources
	b SPLITTER
	c zipFile
	<init> (Ljava/io/File;)V <init>
	b ()Ljava/util/zip/ZipFile; getOrCreateZipFile
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	c (Ljava/lang/String;)Z hasResource
	a (Labi;)Ljava/util/Set; getNamespaces
	finalize ()V finalize
	close ()V close
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	<clinit> ()V <clinit>
abg net/minecraft/server/packs/FolderPackResources
	b LOGGER
	c ON_WINDOWS
	d BACKSLASH_MATCHER
	<init> (Ljava/io/File;)V <init>
	a (Ljava/io/File;Ljava/lang/String;)Z validatePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	c (Ljava/lang/String;)Z hasResource
	e (Ljava/lang/String;)Ljava/io/File; getFile
	a (Labi;)Ljava/util/Set; getNamespaces
	close ()V close
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V listResources
	<clinit> ()V <clinit>
abh net/minecraft/server/packs/PackResources
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	a (Labi;Lvk;)Ljava/io/InputStream; getResource
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b (Labi;Lvk;)Z hasResource
	a (Labi;)Ljava/util/Set; getNamespaces
	a (Labl;)Ljava/lang/Object; getMetadataSection
	a ()Ljava/lang/String; getName
	close ()V close
abi net/minecraft/server/packs/PackType
	a CLIENT_RESOURCES
	b SERVER_DATA
	c directory
	d $VALUES
	values ()[Labi; values
	valueOf (Ljava/lang/String;)Labi; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getDirectory
	<clinit> ()V <clinit>
abj net/minecraft/server/packs/ResourcePackFileNotFoundException
	<init> (Ljava/io/File;Ljava/lang/String;)V <init>
abk net/minecraft/server/packs/VanillaPackResources
	a generatedDir
	d LOGGER
	b clientObject
	e JAR_FILESYSTEM_BY_TYPE
	c namespaces
	<init> ([Ljava/lang/String;)V <init>
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	a (Labi;Lvk;)Ljava/io/InputStream; getResource
	a (Labi;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V getResources
	c (Labi;Lvk;)Ljava/io/InputStream; getResourceAsStream
	d (Labi;Lvk;)Ljava/lang/String; createPath
	a (Ljava/lang/String;Ljava/net/URL;)Z isResourceUrlValid
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	b (Labi;Lvk;)Z hasResource
	a (Labi;)Ljava/util/Set; getNamespaces
	a (Labl;)Ljava/lang/Object; getMetadataSection
	a ()Ljava/lang/String; getName
	close ()V close
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)Lvk; lambda$getResources$2
	a (Ljava/util/function/Predicate;Ljava/nio/file/Path;)Z lambda$getResources$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
abl net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
abm net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a SERIALIZER
	b description
	c packFormat
	<init> (Lnr;I)V <init>
	a ()Lnr; getDescription
	b ()I getPackFormat
	<clinit> ()V <clinit>
abn net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Labm; fromJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
abo net/minecraft/server/packs/metadata/pack/package-info
abp net/minecraft/server/packs/metadata/package-info
abq net/minecraft/server/packs/package-info
abr net/minecraft/server/packs/repository/FolderRepositorySource
	a RESOURCEPACK_FILTER
	b folder
	c packSource
	<init> (Ljava/io/File;Labv;)V <init>
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
	a (Ljava/io/File;)Ljava/util/function/Supplier; createSupplier
	b (Ljava/io/File;)Labh; lambda$createSupplier$2
	c (Ljava/io/File;)Labh; lambda$createSupplier$1
	d (Ljava/io/File;)Z lambda$static$0
	<clinit> ()V <clinit>
abs net/minecraft/server/packs/repository/Pack
	a LOGGER
	b BROKEN_ASSETS_FALLBACK
	c id
	d supplier
	e title
	f description
	g compatibility
	h defaultPosition
	i required
	j fixedPosition
	k packSource
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Labs$a;Labs$b;Labv;)Labs; create
	<init> (Ljava/lang/String;ZLjava/util/function/Supplier;Lnr;Lnr;Labt;Labs$b;ZLabv;)V <init>
	<init> (Ljava/lang/String;ZLjava/util/function/Supplier;Labh;Labm;Labs$b;Labv;)V <init>
	a ()Lnr; getTitle
	b ()Lnr; getDescription
	a (Z)Lnr; getChatLink
	c ()Labt; getCompatibility
	d ()Labh; open
	e ()Ljava/lang/String; getId
	f ()Z isRequired
	g ()Z isFixedPosition
	h ()Labs$b; getDefaultPosition
	i ()Labv; getPackSource
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	close ()V close
	a (ZLob;)Lob; lambda$getChatLink$0
	<clinit> ()V <clinit>
abs$a net/minecraft/server/packs/repository/Pack$PackConstructor
	create (Ljava/lang/String;ZLjava/util/function/Supplier;Labh;Labm;Labs$b;Labv;)Labs; create
abs$b net/minecraft/server/packs/repository/Pack$Position
	a TOP
	b BOTTOM
	c $VALUES
	values ()[Labs$b; values
	valueOf (Ljava/lang/String;)Labs$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
	a ()Labs$b; opposite
	<clinit> ()V <clinit>
abt net/minecraft/server/packs/repository/PackCompatibility
	a TOO_OLD
	b TOO_NEW
	c COMPATIBLE
	d description
	e confirmation
	f $VALUES
	values ()[Labt; values
	valueOf (Ljava/lang/String;)Labt; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Z isCompatible
	a (I)Labt; forFormat
	b ()Lnr; getDescription
	c ()Lnr; getConfirmation
	<clinit> ()V <clinit>
abu net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	d constructor
	<init> (Labs$a;[Labw;)V <init>
	<init> ([Labw;)V <init>
	a ()V reload
	g ()Ljava/util/Map; discoverAvailable
	a (Ljava/util/Collection;)V setSelected
	b (Ljava/util/Collection;)Ljava/util/List; rebuildSelected
	c (Ljava/util/Collection;)Ljava/util/stream/Stream; getAvailablePacks
	b ()Ljava/util/Collection; getAvailableIds
	c ()Ljava/util/Collection; getAvailablePacks
	d ()Ljava/util/Collection; getSelectedIds
	e ()Ljava/util/Collection; getSelectedPacks
	a (Ljava/lang/String;)Labs; getPack
	close ()V close
	b (Ljava/lang/String;)Z isAvailable
	f ()Ljava/util/List; openAllSelected
	a (Ljava/util/Map;Labs;)V lambda$discoverAvailable$0
abv net/minecraft/server/packs/repository/PackSource
	a DEFAULT
	b BUILT_IN
	c WORLD
	d SERVER
	decorate (Lnr;)Lnr; decorate
	a ()Labv; passThrough
	a (Ljava/lang/String;)Labv; decorating
	a (Lnr;Lnr;)Lnr; lambda$decorating$1
	a (Lnr;)Lnr; lambda$passThrough$0
	<clinit> ()V <clinit>
abw net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
abx net/minecraft/server/packs/repository/ServerPacksSource
	a vanillaPack
	<init> ()V <init>
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
	a ()Labh; lambda$loadPacks$0
aby net/minecraft/server/packs/repository/package-info
abz net/minecraft/server/packs/resources/FallbackResourceManager
	b LOGGER
	a fallbacks
	c type
	d namespace
	<init> (Labi;Ljava/lang/String;)V <init>
	a (Labh;)V add
	a ()Ljava/util/Set; getNamespaces
	a (Lvk;)Lace; getResource
	b (Lvk;)Z hasResource
	a (Lvk;Labh;)Ljava/io/InputStream; getWrappedResource
	e (Lvk;)V validateLocation
	f (Lvk;)Z isValidLocation
	c (Lvk;)Ljava/util/List; getResources
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	b ()Ljava/util/stream/Stream; listPacks
	d (Lvk;)Lvk; getMetadataLocation
	c ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
abz$a net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a message
	b closed
	<init> (Ljava/io/InputStream;Lvk;Ljava/lang/String;)V <init>
	close ()V close
	finalize ()V finalize
aca net/minecraft/server/packs/resources/PreparableReloadListener
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	c ()Ljava/lang/String; getName
aca$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
acb net/minecraft/server/packs/resources/ProfiledReloadInstance
	d LOGGER
	e total
	<init> (Lacf;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljava/util/List;)V finish
	a (Ljava/util/concurrent/Executor;Laca$a;Lacf;Laca;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$new$7
	a (Laca;Lanm;Lanm;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lacb$a; lambda$null$6
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$5
	a (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$4
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$3
	b (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$2
	f ()I lambda$null$1
	g ()I lambda$null$0
	<clinit> ()V <clinit>
acb$1 net/minecraft/server/packs/resources/ProfiledReloadInstance$1
acb$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
	<init> (Ljava/lang/String;Lans;Lans;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V <init>
	a (Lacb$a;)Lans; access$000
	b (Lacb$a;)Lans; access$100
	c (Lacb$a;)Ljava/util/concurrent/atomic/AtomicLong; access$200
	d (Lacb$a;)Ljava/util/concurrent/atomic/AtomicLong; access$300
	e (Lacb$a;)Ljava/lang/String; access$400
	<init> (Ljava/lang/String;Lans;Lans;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Lacb$1;)V <init>
acc net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
acd net/minecraft/server/packs/resources/ReloadableResourceManager
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lacc; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lacc; createFullReload
	a (Laca;)V registerReloadListener
	close ()V close
ace net/minecraft/server/packs/resources/Resource
	a ()Lvk; getLocation
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	a (Labl;)Ljava/lang/Object; getMetadata
	d ()Ljava/lang/String; getSourceName
acf net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Lvk;)Lace; getResource
	b (Lvk;)Z hasResource
	c (Lvk;)Ljava/util/List; getResources
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	b ()Ljava/util/stream/Stream; listPacks
acf$a net/minecraft/server/packs/resources/ResourceManager$Empty
	a INSTANCE
	b $VALUES
	values ()[Lacf$a; values
	valueOf (Ljava/lang/String;)Lacf$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Ljava/util/Set; getNamespaces
	a (Lvk;)Lace; getResource
	b (Lvk;)Z hasResource
	c (Lvk;)Ljava/util/List; getResources
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	b ()Ljava/util/stream/Stream; listPacks
	<clinit> ()V <clinit>
acg net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lacf;)V onResourceManagerReload
	a (Lant;Lacf;)V lambda$reload$0
ach net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b PATH_SUFFIX_LENGTH
	c gson
	d directory
	<init> (Lcom/google/gson/Gson;Ljava/lang/String;)V <init>
	a (Lacf;Lant;)Ljava/util/Map; prepare
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	a (Ljava/lang/String;)Z lambda$prepare$0
	<clinit> ()V <clinit>
aci net/minecraft/server/packs/resources/SimplePreparableReloadListener
	<init> ()V <init>
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lacf;Lant;)Ljava/lang/Object; prepare
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	a (Lacf;Lant;Ljava/lang/Object;)V lambda$reload$1
	a (Lacf;Lant;)Ljava/lang/Object; lambda$reload$0
acj net/minecraft/server/packs/resources/SimpleReloadInstance
	a resourceManager
	b allPreparations
	c allDone
	d preparingListeners
	e listenerCount
	f startedReloads
	g finishedReloads
	h startedTaskCounter
	i doneTaskCounter
	a (Lacf;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lacj; of
	<init> (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lacf;Ljava/util/List;Lacj$a;Ljava/util/concurrent/CompletableFuture;)V <init>
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
	a (Ljava/util/List;)Lafu; lambda$done$5
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$4
	a (Ljava/lang/Runnable;)V lambda$null$3
	b (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$2
	b (Ljava/lang/Runnable;)V lambda$null$1
	a (Ljava/util/concurrent/Executor;Laca$a;Lacf;Laca;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$of$0
	a (Lacj;)Ljava/util/Set; access$000
acj$1 net/minecraft/server/packs/resources/SimpleReloadInstance$1
	a val$mainThreadExecutor
	b val$listener
	c val$previousTask
	d this$0
	<init> (Lacj;Ljava/util/concurrent/Executor;Laca;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
	a (Ljava/lang/Object;Lafu;Ljava/lang/Object;)Ljava/lang/Object; lambda$wait$1
	a (Laca;)V lambda$wait$0
acj$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
	create (Laca$a;Lacf;Laca;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; create
ack net/minecraft/server/packs/resources/SimpleReloadableResourceManager
	a LOGGER
	b namespacedPacks
	c listeners
	d recentlyRegistered
	e namespaces
	f packs
	g type
	<init> (Labi;)V <init>
	a (Labh;)V add
	a ()Ljava/util/Set; getNamespaces
	a (Lvk;)Lace; getResource
	b (Lvk;)Z hasResource
	c (Lvk;)Ljava/util/List; getResources
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	c ()V clear
	close ()V close
	a (Laca;)V registerReloadListener
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lacc; createReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lacc; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lacc; createFullReload
	b ()Ljava/util/stream/Stream; listPacks
	a (Ljava/util/List;)Ljava/lang/Object; lambda$createFullReload$0
	<clinit> ()V <clinit>
ack$a net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance
	a exception
	b failedFuture
	<init> (Lack$b;)V <init>
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
ack$b net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure
	a pack
	<init> (Labh;Ljava/lang/Throwable;)V <init>
	a ()Labh; getPack
acl net/minecraft/server/packs/resources/SimpleResource
	a sourceName
	b location
	c resourceStream
	d metadataStream
	e triedMetadata
	f metadata
	<init> (Ljava/lang/String;Lvk;Ljava/io/InputStream;Ljava/io/InputStream;)V <init>
	a ()Lvk; getLocation
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	a (Labl;)Ljava/lang/Object; getMetadata
	d ()Ljava/lang/String; getSourceName
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	close ()V close
acm net/minecraft/server/packs/resources/package-info
acn net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b created
	c source
	d expires
	e reason
	<init> (Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/Object;Lcom/google/gson/JsonObject;)V <init>
	a ()Ljava/util/Date; getCreated
	b ()Ljava/lang/String; getSource
	c ()Ljava/util/Date; getExpires
	d ()Ljava/lang/String; getReason
	e ()Lnr; getDisplayName
	f ()Z hasExpired
	a (Lcom/google/gson/JsonObject;)V serialize
	<clinit> ()V <clinit>
aco net/minecraft/server/players/GameProfileCache
	a LOGGER
	b usesAuthentication
	c profilesByName
	d profilesByUUID
	e profileRepository
	f gson
	g file
	h operationCount
	<init> (Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V <init>
	a (Laco$a;)V safeAdd
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; lookupGameProfile
	a (Z)V setUsesAuthentication
	c ()Z usesAuthentication
	a (Lcom/mojang/authlib/GameProfile;)V add
	d ()J getNextOperation
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; get
	a (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; get
	e ()Ljava/text/DateFormat; createDateFormat
	a ()Ljava/util/List; load
	b ()V save
	a (I)Ljava/util/stream/Stream; getTopMRUProfiles
	a (Laco$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; writeGameProfile
	a (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Laco$a; readGameProfile
	a (Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Laco$a;)V lambda$save$1
	a (Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V lambda$load$0
	<clinit> ()V <clinit>
aco$1 net/minecraft/server/players/GameProfileCache$1
	a val$result
	<init> (Ljava/util/concurrent/atomic/AtomicReference;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
aco$a net/minecraft/server/players/GameProfileCache$GameProfileInfo
	a profile
	b expirationDate
	c lastAccess
	<init> (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V <init>
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()Ljava/util/Date; getExpirationDate
	a (J)V setLastAccess
	c ()J getLastAccess
	<init> (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Laco$1;)V <init>
	a (Laco$a;)Ljava/util/Date; access$100
acp net/minecraft/server/players/IpBanList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lacv; createEntry
	a (Ljava/net/SocketAddress;)Z isBanned
	a (Ljava/lang/String;)Z isBanned
	b (Ljava/net/SocketAddress;)Lacq; get
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
acq net/minecraft/server/players/IpBanListEntry
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V <init>
	e ()Lnr; getDisplayName
	<init> (Lcom/google/gson/JsonObject;)V <init>
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	a (Lcom/google/gson/JsonObject;)V serialize
acr net/minecraft/server/players/OldUsersConverter
	e LOGGER
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	<init> ()V <init>
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; convertMobOwnerIfNecessary
	a (Lzg;)Z convertPlayers
	b (Ljava/io/File;)V ensureDirectoryExists
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	b ()Z areOldUserlistsRemoved
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
	c (Ljava/io/File;)V renameOldFile
	b (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	a (I)[Ljava/lang/String; lambda$lookupPlayers$1
	a (Ljava/lang/String;)Z lambda$lookupPlayers$0
	a ()Lorg/apache/logging/log4j/Logger; access$000
	a (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; access$200
	a (Ljava/io/File;)V access$400
	<clinit> ()V <clinit>
acr$1 net/minecraft/server/players/OldUsersConverter$1
	a val$server
	b val$userMap
	c val$bans
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/Map;Lacx;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
acr$2 net/minecraft/server/players/OldUsersConverter$2
	a val$server
	b val$opsList
	<init> (Lnet/minecraft/server/MinecraftServer;Lact;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
acr$3 net/minecraft/server/players/OldUsersConverter$3
	a val$server
	b val$whitelist
	<init> (Lnet/minecraft/server/MinecraftServer;Lacz;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
acr$4 net/minecraft/server/players/OldUsersConverter$4
	a val$server
	b val$profiles
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/List;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
acr$5 net/minecraft/server/players/OldUsersConverter$5
	a val$server
	b val$worldNewPlayerDirectory
	c val$unknownPlayerDirectory
	d val$worldPlayerDirectory
	e val$names
	<init> (Lzg;Ljava/io/File;Ljava/io/File;Ljava/io/File;[Ljava/lang/String;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
	a (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V movePlayerFile
	a (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getFileNameForProfile
acr$a net/minecraft/server/players/OldUsersConverter$ConversionError
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Lacr$1;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;Lacr$1;)V <init>
acs net/minecraft/server/players/PlayerList
	b USERBANLIST_FILE
	c IPBANLIST_FILE
	d OPLIST_FILE
	e WHITELIST_FILE
	a LOGGER
	g BAN_DATE_FORMAT
	h server
	i players
	j playersByUUID
	k bans
	l ipBans
	m ops
	n whitelist
	o stats
	p advancements
	q playerIo
	r doWhiteList
	s registryHolder
	f maxPlayers
	t viewDistance
	u overrideGameMode
	v allowCheatsForAllPlayers
	w sendAllPlayerInfoIn
	<init> (Lnet/minecraft/server/MinecraftServer;Lgn$b;Lcyh;I)V <init>
	a (Lnd;Laah;)V placeNewPlayer
	a (Lwa;Laah;)V updateEntireScoreboard
	a (Laag;)V setLevel
	a (Laah;)Lmd; load
	b (Laah;)V save
	c (Laah;)V remove
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnr; canPlayerLogin
	g (Lcom/mojang/authlib/GameProfile;)Laah; getPlayerForLogin
	a (Laah;Z)Laah; respawn
	d (Laah;)V sendPlayerPermissionLevel
	d ()V tick
	a (Loj;)V broadcastAll
	a (Loj;Lvj;)V broadcastAll
	a (Lbft;Lnr;)V broadcastToTeam
	b (Lbft;Lnr;)V broadcastToAllExceptTeam
	e ()[Ljava/lang/String; getPlayerNamesArray
	f ()Lacx; getBans
	g ()Lacp; getIpBans
	a (Lcom/mojang/authlib/GameProfile;)V op
	b (Lcom/mojang/authlib/GameProfile;)V deop
	a (Laah;I)V sendPlayerPermissionLevel
	e (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	h (Lcom/mojang/authlib/GameProfile;)Z isOp
	a (Ljava/lang/String;)Laah; getPlayerByName
	a (Lbft;DDDDLvj;Loj;)V broadcast
	h ()V saveAll
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	i ()Lacz; getWhiteList
	j ()[Ljava/lang/String; getWhiteListNames
	k ()Lact; getOps
	l ()[Ljava/lang/String; getOpNames
	a ()V reloadWhiteList
	a (Laah;Laag;)V sendLevelInfo
	e (Laah;)V sendAllPlayerInfo
	m ()I getPlayerCount
	n ()I getMaxPlayers
	o ()Z isUsingWhitelist
	a (Z)V setUsingWhiteList
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	p ()I getViewDistance
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	q ()Lmd; getSingleplayerData
	a (Lbrr;)V setOverrideGameMode
	a (Laah;Laah;Laag;)V updatePlayerGameMode
	b (Z)V setAllowCheatsForAllPlayers
	r ()V removeAll
	a (Lnr;Lno;Ljava/util/UUID;)V broadcastMessage
	a (Lbft;)Ladu; getPlayerStats
	f (Laah;)Lvt; getPlayerAdvancements
	a (I)V setViewDistance
	s ()Ljava/util/List; getPlayers
	a (Ljava/util/UUID;)Laah; getPlayer
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	t ()V reloadResources
	u ()Z isAllowCheatsForAllPlayers
	a (Laag;Lapx;)Lapx; lambda$placeNewPlayer$0
	<clinit> ()V <clinit>
acs$1 net/minecraft/server/players/PlayerList$1
	a this$0
	<init> (Lacs;)V <init>
	a (Lcfr;D)V onBorderSizeSet
	a (Lcfr;DDJ)V onBorderSizeLerping
	a (Lcfr;DD)V onBorderCenterSet
	a (Lcfr;I)V onBorderSetWarningTime
	b (Lcfr;I)V onBorderSetWarningBlocks
	b (Lcfr;D)V onBorderSetDamagePerBlock
	c (Lcfr;D)V onBorderSetDamageSafeZOne
act net/minecraft/server/players/ServerOpList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lacv; createEntry
	a ()[Ljava/lang/String; getUserList
	a (Lcom/mojang/authlib/GameProfile;)I getOpLevel
	b (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	c (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
acu net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	<init> (Lcom/mojang/authlib/GameProfile;IZ)V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a ()I getLevel
	b ()Z getBypassesPlayerLimit
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
acv net/minecraft/server/players/StoredUserEntry
	a user
	<init> (Ljava/lang/Object;)V <init>
	g ()Ljava/lang/Object; getUser
	f ()Z hasExpired
	a (Lcom/google/gson/JsonObject;)V serialize
acw net/minecraft/server/players/StoredUserList
	a LOGGER
	b GSON
	c file
	d map
	<init> (Ljava/io/File;)V <init>
	b ()Ljava/io/File; getFile
	a (Lacv;)V add
	b (Ljava/lang/Object;)Lacv; get
	c (Ljava/lang/Object;)V remove
	b (Lacv;)V remove
	a ()[Ljava/lang/String; getUserList
	c ()Z isEmpty
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	d (Ljava/lang/Object;)Z contains
	g ()V removeExpired
	a (Lcom/google/gson/JsonObject;)Lacv; createEntry
	d ()Ljava/util/Collection; getEntries
	e ()V save
	f ()V load
	c (Lacv;)Lcom/google/gson/JsonObject; lambda$save$0
	<clinit> ()V <clinit>
acx net/minecraft/server/players/UserBanList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lacv; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isBanned
	a ()[Ljava/lang/String; getUserList
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
acy net/minecraft/server/players/UserBanListEntry
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	<init> (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a (Lcom/google/gson/JsonObject;)V serialize
	e ()Lnr; getDisplayName
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
acz net/minecraft/server/players/UserWhiteList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lacv; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	a ()[Ljava/lang/String; getUserList
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
ada net/minecraft/server/players/UserWhiteListEntry
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
adb net/minecraft/server/players/package-info
adc net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	<init> (I)V <init>
	a ([B)V writeBytes
	a (Ljava/lang/String;)V writeString
	a (I)V write
	a (S)V writeShort
	b (I)V writeInt
	a (F)V writeFloat
	a ()[B toByteArray
	b ()V reset
add net/minecraft/server/rcon/PktUtils
	a HEX_CHAR
	<init> ()V <init>
	a ([BII)Ljava/lang/String; stringFromByteArray
	a ([BI)I intFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
	a (B)Ljava/lang/String; toHexString
	<clinit> ()V <clinit>
ade net/minecraft/server/rcon/RconConsoleSource
	b RCON_COMPONENT
	c buffer
	d server
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	d ()V prepareForCommand
	e ()Ljava/lang/String; getCommandResponse
	f ()Ldb; createCommandSourceStack
	a (Lnr;Ljava/util/UUID;)V sendMessage
	a ()Z acceptsSuccess
	b ()Z acceptsFailure
	R_ ()Z shouldInformAdmins
	<clinit> ()V <clinit>
adf net/minecraft/server/rcon/package-info
adg net/minecraft/server/rcon/thread/GenericThread
	d LOGGER
	e UNIQUE_THREAD_ID
	a running
	b name
	c thread
	<init> (Ljava/lang/String;)V <init>
	run ()V run
	a ()Z start
	b ()V stop
	c ()Z isRunning
	<clinit> ()V <clinit>
adh net/minecraft/server/rcon/thread/QueryThreadGs4
	d LOGGER
	e lastChallengeCheck
	f port
	g serverPort
	h maxPlayers
	i serverName
	j worldName
	k socket
	l buffer
	m hostIp
	n serverIp
	o validChallenges
	p rulesResponse
	q lastRulesResponse
	r serverInterface
	<init> (Lvy;I)V <init>
	a (Lvy;)Ladh; create
	a ([BLjava/net/DatagramPacket;)V sendTo
	a (Ljava/net/DatagramPacket;)Z processPacket
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d (Ljava/net/DatagramPacket;)V sendChallenge
	d ()V pruneChallenges
	run ()V run
	a ()Z start
	a (Ljava/lang/Exception;)V recoverSocketError
	e ()Z initSocket
	a (JLadh$a;)Z lambda$pruneChallenges$0
	<clinit> ()V <clinit>
adh$a net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	a time
	b challenge
	c identBytes
	d challengeBytes
	e ident
	<init> (Ljava/net/DatagramPacket;)V <init>
	a (J)Ljava/lang/Boolean; before
	a ()I getChallenge
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
adi net/minecraft/server/rcon/thread/RconClient
	d LOGGER
	e authed
	f client
	g buf
	h rconPassword
	i serverInterface
	<init> (Lvy;Ljava/lang/String;Ljava/net/Socket;)V <init>
	run ()V run
	a (IILjava/lang/String;)V send
	d ()V sendAuthFailure
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	e ()V closeSocket
	<clinit> ()V <clinit>
adj net/minecraft/server/rcon/thread/RconThread
	d LOGGER
	e socket
	f rconPassword
	g clients
	h serverInterface
	<init> (Lvy;Ljava/net/ServerSocket;Ljava/lang/String;)V <init>
	d ()V clearClients
	run ()V run
	a (Lvy;)Ladj; create
	b ()V stop
	a (Ljava/net/ServerSocket;)V closeSocket
	a (Ladi;)Z lambda$clearClients$0
	<clinit> ()V <clinit>
adk net/minecraft/server/rcon/thread/package-info
adl net/minecraft/sounds/Music
	a CODEC
	b event
	c minDelay
	d maxDelay
	e replaceCurrentMusic
	<init> (Ladn;IIZ)V <init>
	a ()Ladn; getEvent
	b ()I getMinDelay
	c ()I getMaxDelay
	d ()Z replaceCurrentMusic
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ladl;)Ljava/lang/Boolean; lambda$null$3
	b (Ladl;)Ljava/lang/Integer; lambda$null$2
	c (Ladl;)Ljava/lang/Integer; lambda$null$1
	d (Ladl;)Ladn; lambda$null$0
	<clinit> ()V <clinit>
adm net/minecraft/sounds/Musics
	a MENU
	b CREATIVE
	c CREDITS
	d END_BOSS
	e END
	f UNDER_WATER
	g GAME
	<init> ()V <init>
	a (Ladn;)Ladl; createGameMusic
	<clinit> ()V <clinit>
adn net/minecraft/sounds/SoundEvent
	a CODEC
	b location
	<init> (Lvk;)V <init>
	a ()Lvk; getLocation
	a (Ladn;)Lvk; lambda$static$0
	<clinit> ()V <clinit>
ado net/minecraft/sounds/SoundEvents
	a AMBIENT_CAVE
	b AMBIENT_BASALT_DELTAS_ADDITIONS
	c AMBIENT_BASALT_DELTAS_LOOP
	d AMBIENT_BASALT_DELTAS_MOOD
	e AMBIENT_CRIMSON_FOREST_ADDITIONS
	f AMBIENT_CRIMSON_FOREST_LOOP
	g AMBIENT_CRIMSON_FOREST_MOOD
	h AMBIENT_NETHER_WASTES_ADDITIONS
	i AMBIENT_NETHER_WASTES_LOOP
	j AMBIENT_NETHER_WASTES_MOOD
	k AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	l AMBIENT_SOUL_SAND_VALLEY_LOOP
	m AMBIENT_SOUL_SAND_VALLEY_MOOD
	n AMBIENT_WARPED_FOREST_ADDITIONS
	o AMBIENT_WARPED_FOREST_LOOP
	p AMBIENT_WARPED_FOREST_MOOD
	q AMBIENT_UNDERWATER_ENTER
	r AMBIENT_UNDERWATER_EXIT
	s AMBIENT_UNDERWATER_LOOP
	t AMBIENT_UNDERWATER_LOOP_ADDITIONS
	u AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	v AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	w ANCIENT_DEBRIS_BREAK
	x ANCIENT_DEBRIS_STEP
	y ANCIENT_DEBRIS_PLACE
	z ANCIENT_DEBRIS_HIT
	A ANCIENT_DEBRIS_FALL
	B ANVIL_BREAK
	C ANVIL_DESTROY
	D ANVIL_FALL
	E ANVIL_HIT
	F ANVIL_LAND
	G ANVIL_PLACE
	H ANVIL_STEP
	I ANVIL_USE
	J ARMOR_EQUIP_CHAIN
	K ARMOR_EQUIP_DIAMOND
	L ARMOR_EQUIP_ELYTRA
	M ARMOR_EQUIP_GENERIC
	N ARMOR_EQUIP_GOLD
	O ARMOR_EQUIP_IRON
	P ARMOR_EQUIP_LEATHER
	Q ARMOR_EQUIP_NETHERITE
	R ARMOR_EQUIP_TURTLE
	S ARMOR_STAND_BREAK
	T ARMOR_STAND_FALL
	U ARMOR_STAND_HIT
	V ARMOR_STAND_PLACE
	W ARROW_HIT
	X ARROW_HIT_PLAYER
	Y ARROW_SHOOT
	Z AXE_STRIP
	aa BAMBOO_BREAK
	ab BAMBOO_FALL
	ac BAMBOO_HIT
	ad BAMBOO_PLACE
	ae BAMBOO_STEP
	af BAMBOO_SAPLING_BREAK
	ag BAMBOO_SAPLING_HIT
	ah BAMBOO_SAPLING_PLACE
	ai BARREL_CLOSE
	aj BARREL_OPEN
	ak BASALT_BREAK
	al BASALT_STEP
	am BASALT_PLACE
	an BASALT_HIT
	ao BASALT_FALL
	ap BAT_AMBIENT
	aq BAT_DEATH
	ar BAT_HURT
	as BAT_LOOP
	at BAT_TAKEOFF
	au BEACON_ACTIVATE
	av BEACON_AMBIENT
	aw BEACON_DEACTIVATE
	ax BEACON_POWER_SELECT
	ay BEE_DEATH
	az BEE_HURT
	aA BEE_LOOP_AGGRESSIVE
	aB BEE_LOOP
	aC BEE_STING
	aD BEE_POLLINATE
	aE BEEHIVE_DRIP
	aF BEEHIVE_ENTER
	aG BEEHIVE_EXIT
	aH BEEHIVE_SHEAR
	aI BEEHIVE_WORK
	aJ BELL_BLOCK
	aK BELL_RESONATE
	aL BLAZE_AMBIENT
	aM BLAZE_BURN
	aN BLAZE_DEATH
	aO BLAZE_HURT
	aP BLAZE_SHOOT
	aQ BOAT_PADDLE_LAND
	aR BOAT_PADDLE_WATER
	aS BONE_BLOCK_BREAK
	aT BONE_BLOCK_FALL
	aU BONE_BLOCK_HIT
	aV BONE_BLOCK_PLACE
	aW BONE_BLOCK_STEP
	aX BOOK_PAGE_TURN
	aY BOOK_PUT
	aZ BLASTFURNACE_FIRE_CRACKLE
	ba BOTTLE_EMPTY
	bb BOTTLE_FILL
	bc BOTTLE_FILL_DRAGONBREATH
	bd BREWING_STAND_BREW
	be BUBBLE_COLUMN_BUBBLE_POP
	bf BUBBLE_COLUMN_UPWARDS_AMBIENT
	bg BUBBLE_COLUMN_UPWARDS_INSIDE
	bh BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	bi BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	bj BUCKET_EMPTY
	bk BUCKET_EMPTY_FISH
	bl BUCKET_EMPTY_LAVA
	bm BUCKET_FILL
	bn BUCKET_FILL_FISH
	bo BUCKET_FILL_LAVA
	bp CAMPFIRE_CRACKLE
	bq CAT_AMBIENT
	br CAT_STRAY_AMBIENT
	bs CAT_DEATH
	bt CAT_EAT
	bu CAT_HISS
	bv CAT_BEG_FOR_FOOD
	bw CAT_HURT
	bx CAT_PURR
	by CAT_PURREOW
	bz CHAIN_BREAK
	bA CHAIN_FALL
	bB CHAIN_HIT
	bC CHAIN_PLACE
	bD CHAIN_STEP
	bE CHEST_CLOSE
	bF CHEST_LOCKED
	bG CHEST_OPEN
	bH CHICKEN_AMBIENT
	bI CHICKEN_DEATH
	bJ CHICKEN_EGG
	bK CHICKEN_HURT
	bL CHICKEN_STEP
	bM CHORUS_FLOWER_DEATH
	bN CHORUS_FLOWER_GROW
	bO CHORUS_FRUIT_TELEPORT
	bP COD_AMBIENT
	bQ COD_DEATH
	bR COD_FLOP
	bS COD_HURT
	bT COMPARATOR_CLICK
	bU COMPOSTER_EMPTY
	bV COMPOSTER_FILL
	bW COMPOSTER_FILL_SUCCESS
	bX COMPOSTER_READY
	bY CONDUIT_ACTIVATE
	bZ CONDUIT_AMBIENT
	ca CONDUIT_AMBIENT_SHORT
	cb CONDUIT_ATTACK_TARGET
	cc CONDUIT_DEACTIVATE
	cd CORAL_BLOCK_BREAK
	ce CORAL_BLOCK_FALL
	cf CORAL_BLOCK_HIT
	cg CORAL_BLOCK_PLACE
	ch CORAL_BLOCK_STEP
	ci COW_AMBIENT
	cj COW_DEATH
	ck COW_HURT
	cl COW_MILK
	cm COW_STEP
	cn CREEPER_DEATH
	co CREEPER_HURT
	cp CREEPER_PRIMED
	cq CROP_BREAK
	cr CROP_PLANTED
	cs CROSSBOW_HIT
	ct CROSSBOW_LOADING_END
	cu CROSSBOW_LOADING_MIDDLE
	cv CROSSBOW_LOADING_START
	cw CROSSBOW_QUICK_CHARGE_1
	cx CROSSBOW_QUICK_CHARGE_2
	cy CROSSBOW_QUICK_CHARGE_3
	cz CROSSBOW_SHOOT
	cA DISPENSER_DISPENSE
	cB DISPENSER_FAIL
	cC DISPENSER_LAUNCH
	cD DOLPHIN_AMBIENT
	cE DOLPHIN_AMBIENT_WATER
	cF DOLPHIN_ATTACK
	cG DOLPHIN_DEATH
	cH DOLPHIN_EAT
	cI DOLPHIN_HURT
	cJ DOLPHIN_JUMP
	cK DOLPHIN_PLAY
	cL DOLPHIN_SPLASH
	cM DOLPHIN_SWIM
	cN DONKEY_AMBIENT
	cO DONKEY_ANGRY
	cP DONKEY_CHEST
	cQ DONKEY_DEATH
	cR DONKEY_EAT
	cS DONKEY_HURT
	cT DROWNED_AMBIENT
	cU DROWNED_AMBIENT_WATER
	cV DROWNED_DEATH
	cW DROWNED_DEATH_WATER
	cX DROWNED_HURT
	cY DROWNED_HURT_WATER
	cZ DROWNED_SHOOT
	da DROWNED_STEP
	db DROWNED_SWIM
	dc EGG_THROW
	dd ELDER_GUARDIAN_AMBIENT
	de ELDER_GUARDIAN_AMBIENT_LAND
	df ELDER_GUARDIAN_CURSE
	dg ELDER_GUARDIAN_DEATH
	dh ELDER_GUARDIAN_DEATH_LAND
	di ELDER_GUARDIAN_FLOP
	dj ELDER_GUARDIAN_HURT
	dk ELDER_GUARDIAN_HURT_LAND
	dl ELYTRA_FLYING
	dm ENCHANTMENT_TABLE_USE
	dn ENDER_CHEST_CLOSE
	do ENDER_CHEST_OPEN
	dp ENDER_DRAGON_AMBIENT
	dq ENDER_DRAGON_DEATH
	dr DRAGON_FIREBALL_EXPLODE
	ds ENDER_DRAGON_FLAP
	dt ENDER_DRAGON_GROWL
	du ENDER_DRAGON_HURT
	dv ENDER_DRAGON_SHOOT
	dw ENDER_EYE_DEATH
	dx ENDER_EYE_LAUNCH
	dy ENDERMAN_AMBIENT
	dz ENDERMAN_DEATH
	dA ENDERMAN_HURT
	dB ENDERMAN_SCREAM
	dC ENDERMAN_STARE
	dD ENDERMAN_TELEPORT
	dE ENDERMITE_AMBIENT
	dF ENDERMITE_DEATH
	dG ENDERMITE_HURT
	dH ENDERMITE_STEP
	dI ENDER_PEARL_THROW
	dJ END_GATEWAY_SPAWN
	dK END_PORTAL_FRAME_FILL
	dL END_PORTAL_SPAWN
	dM EVOKER_AMBIENT
	dN EVOKER_CAST_SPELL
	dO EVOKER_CELEBRATE
	dP EVOKER_DEATH
	dQ EVOKER_FANGS_ATTACK
	dR EVOKER_HURT
	dS EVOKER_PREPARE_ATTACK
	dT EVOKER_PREPARE_SUMMON
	dU EVOKER_PREPARE_WOLOLO
	dV EXPERIENCE_BOTTLE_THROW
	dW EXPERIENCE_ORB_PICKUP
	dX FENCE_GATE_CLOSE
	dY FENCE_GATE_OPEN
	dZ FIRECHARGE_USE
	ea FIREWORK_ROCKET_BLAST
	eb FIREWORK_ROCKET_BLAST_FAR
	ec FIREWORK_ROCKET_LARGE_BLAST
	ed FIREWORK_ROCKET_LARGE_BLAST_FAR
	ee FIREWORK_ROCKET_LAUNCH
	ef FIREWORK_ROCKET_SHOOT
	eg FIREWORK_ROCKET_TWINKLE
	eh FIREWORK_ROCKET_TWINKLE_FAR
	ei FIRE_AMBIENT
	ej FIRE_EXTINGUISH
	ek FISH_SWIM
	el FISHING_BOBBER_RETRIEVE
	em FISHING_BOBBER_SPLASH
	en FISHING_BOBBER_THROW
	eo FLINTANDSTEEL_USE
	ep FOX_AGGRO
	eq FOX_AMBIENT
	er FOX_BITE
	es FOX_DEATH
	et FOX_EAT
	eu FOX_HURT
	ev FOX_SCREECH
	ew FOX_SLEEP
	ex FOX_SNIFF
	ey FOX_SPIT
	ez FOX_TELEPORT
	eA ROOTS_BREAK
	eB ROOTS_STEP
	eC ROOTS_PLACE
	eD ROOTS_HIT
	eE ROOTS_FALL
	eF FURNACE_FIRE_CRACKLE
	eG GENERIC_BIG_FALL
	eH GENERIC_BURN
	eI GENERIC_DEATH
	eJ GENERIC_DRINK
	eK GENERIC_EAT
	eL GENERIC_EXPLODE
	eM GENERIC_EXTINGUISH_FIRE
	eN GENERIC_HURT
	eO GENERIC_SMALL_FALL
	eP GENERIC_SPLASH
	eQ GENERIC_SWIM
	eR GHAST_AMBIENT
	eS GHAST_DEATH
	eT GHAST_HURT
	eU GHAST_SCREAM
	eV GHAST_SHOOT
	eW GHAST_WARN
	eX GILDED_BLACKSTONE_BREAK
	eY GILDED_BLACKSTONE_FALL
	eZ GILDED_BLACKSTONE_HIT
	fa GILDED_BLACKSTONE_PLACE
	fb GILDED_BLACKSTONE_STEP
	fc GLASS_BREAK
	fd GLASS_FALL
	fe GLASS_HIT
	ff GLASS_PLACE
	fg GLASS_STEP
	fh GRASS_BREAK
	fi GRASS_FALL
	fj GRASS_HIT
	fk GRASS_PLACE
	fl GRASS_STEP
	fm GRAVEL_BREAK
	fn GRAVEL_FALL
	fo GRAVEL_HIT
	fp GRAVEL_PLACE
	fq GRAVEL_STEP
	fr GRINDSTONE_USE
	fs GUARDIAN_AMBIENT
	ft GUARDIAN_AMBIENT_LAND
	fu GUARDIAN_ATTACK
	fv GUARDIAN_DEATH
	fw GUARDIAN_DEATH_LAND
	fx GUARDIAN_FLOP
	fy GUARDIAN_HURT
	fz GUARDIAN_HURT_LAND
	fA HOE_TILL
	fB HOGLIN_AMBIENT
	fC HOGLIN_ANGRY
	fD HOGLIN_ATTACK
	fE HOGLIN_CONVERTED_TO_ZOMBIFIED
	fF HOGLIN_DEATH
	fG HOGLIN_HURT
	fH HOGLIN_RETREAT
	fI HOGLIN_STEP
	fJ HONEY_BLOCK_BREAK
	fK HONEY_BLOCK_FALL
	fL HONEY_BLOCK_HIT
	fM HONEY_BLOCK_PLACE
	fN HONEY_BLOCK_SLIDE
	fO HONEY_BLOCK_STEP
	fP HONEY_DRINK
	fQ HORSE_AMBIENT
	fR HORSE_ANGRY
	fS HORSE_ARMOR
	fT HORSE_BREATHE
	fU HORSE_DEATH
	fV HORSE_EAT
	fW HORSE_GALLOP
	fX HORSE_HURT
	fY HORSE_JUMP
	fZ HORSE_LAND
	ga HORSE_SADDLE
	gb HORSE_STEP
	gc HORSE_STEP_WOOD
	gd HOSTILE_BIG_FALL
	ge HOSTILE_DEATH
	gf HOSTILE_HURT
	gg HOSTILE_SMALL_FALL
	gh HOSTILE_SPLASH
	gi HOSTILE_SWIM
	gj HUSK_AMBIENT
	gk HUSK_CONVERTED_TO_ZOMBIE
	gl HUSK_DEATH
	gm HUSK_HURT
	gn HUSK_STEP
	go ILLUSIONER_AMBIENT
	gp ILLUSIONER_CAST_SPELL
	gq ILLUSIONER_DEATH
	gr ILLUSIONER_HURT
	gs ILLUSIONER_MIRROR_MOVE
	gt ILLUSIONER_PREPARE_BLINDNESS
	gu ILLUSIONER_PREPARE_MIRROR
	gv IRON_DOOR_CLOSE
	gw IRON_DOOR_OPEN
	gx IRON_GOLEM_ATTACK
	gy IRON_GOLEM_DAMAGE
	gz IRON_GOLEM_DEATH
	gA IRON_GOLEM_HURT
	gB IRON_GOLEM_REPAIR
	gC IRON_GOLEM_STEP
	gD IRON_TRAPDOOR_CLOSE
	gE IRON_TRAPDOOR_OPEN
	gF ITEM_FRAME_ADD_ITEM
	gG ITEM_FRAME_BREAK
	gH ITEM_FRAME_PLACE
	gI ITEM_FRAME_REMOVE_ITEM
	gJ ITEM_FRAME_ROTATE_ITEM
	gK ITEM_BREAK
	gL ITEM_PICKUP
	gM LADDER_BREAK
	gN LADDER_FALL
	gO LADDER_HIT
	gP LADDER_PLACE
	gQ LADDER_STEP
	gR LANTERN_BREAK
	gS LANTERN_FALL
	gT LANTERN_HIT
	gU LANTERN_PLACE
	gV LANTERN_STEP
	gW LAVA_AMBIENT
	gX LAVA_EXTINGUISH
	gY LAVA_POP
	gZ LEASH_KNOT_BREAK
	ha LEASH_KNOT_PLACE
	hb LEVER_CLICK
	hc LIGHTNING_BOLT_IMPACT
	hd LIGHTNING_BOLT_THUNDER
	he LINGERING_POTION_THROW
	hf LLAMA_AMBIENT
	hg LLAMA_ANGRY
	hh LLAMA_CHEST
	hi LLAMA_DEATH
	hj LLAMA_EAT
	hk LLAMA_HURT
	hl LLAMA_SPIT
	hm LLAMA_STEP
	hn LLAMA_SWAG
	ho MAGMA_CUBE_DEATH_SMALL
	hp LODESTONE_BREAK
	hq LODESTONE_STEP
	hr LODESTONE_PLACE
	hs LODESTONE_HIT
	ht LODESTONE_FALL
	hu LODESTONE_COMPASS_LOCK
	hv MAGMA_CUBE_DEATH
	hw MAGMA_CUBE_HURT
	hx MAGMA_CUBE_HURT_SMALL
	hy MAGMA_CUBE_JUMP
	hz MAGMA_CUBE_SQUISH
	hA MAGMA_CUBE_SQUISH_SMALL
	hB METAL_BREAK
	hC METAL_FALL
	hD METAL_HIT
	hE METAL_PLACE
	hF METAL_PRESSURE_PLATE_CLICK_OFF
	hG METAL_PRESSURE_PLATE_CLICK_ON
	hH METAL_STEP
	hI MINECART_INSIDE
	hJ MINECART_RIDING
	hK MOOSHROOM_CONVERT
	hL MOOSHROOM_EAT
	hM MOOSHROOM_MILK
	hN MOOSHROOM_MILK_SUSPICIOUSLY
	hO MOOSHROOM_SHEAR
	hP MULE_AMBIENT
	hQ MULE_ANGRY
	hR MULE_CHEST
	hS MULE_DEATH
	hT MULE_EAT
	hU MULE_HURT
	hV MUSIC_CREATIVE
	hW MUSIC_CREDITS
	hX MUSIC_DISC_11
	hY MUSIC_DISC_13
	hZ MUSIC_DISC_BLOCKS
	ia MUSIC_DISC_CAT
	ib MUSIC_DISC_CHIRP
	ic MUSIC_DISC_FAR
	id MUSIC_DISC_MALL
	ie MUSIC_DISC_MELLOHI
	if MUSIC_DISC_PIGSTEP
	ig MUSIC_DISC_STAL
	ih MUSIC_DISC_STRAD
	ii MUSIC_DISC_WAIT
	ij MUSIC_DISC_WARD
	ik MUSIC_DRAGON
	il MUSIC_END
	im MUSIC_GAME
	in MUSIC_MENU
	io MUSIC_BIOME_BASALT_DELTAS
	ip MUSIC_BIOME_NETHER_WASTES
	iq MUSIC_BIOME_SOUL_SAND_VALLEY
	ir MUSIC_BIOME_CRIMSON_FOREST
	is MUSIC_BIOME_WARPED_FOREST
	it MUSIC_UNDER_WATER
	iu NETHER_BRICKS_BREAK
	iv NETHER_BRICKS_STEP
	iw NETHER_BRICKS_PLACE
	ix NETHER_BRICKS_HIT
	iy NETHER_BRICKS_FALL
	iz NETHER_WART_BREAK
	iA NETHER_WART_PLANTED
	iB STEM_BREAK
	iC STEM_STEP
	iD STEM_PLACE
	iE STEM_HIT
	iF STEM_FALL
	iG NYLIUM_BREAK
	iH NYLIUM_STEP
	iI NYLIUM_PLACE
	iJ NYLIUM_HIT
	iK NYLIUM_FALL
	iL NETHER_SPROUTS_BREAK
	iM NETHER_SPROUTS_STEP
	iN NETHER_SPROUTS_PLACE
	iO NETHER_SPROUTS_HIT
	iP NETHER_SPROUTS_FALL
	iQ FUNGUS_BREAK
	iR FUNGUS_STEP
	iS FUNGUS_PLACE
	iT FUNGUS_HIT
	iU FUNGUS_FALL
	iV WEEPING_VINES_BREAK
	iW WEEPING_VINES_STEP
	iX WEEPING_VINES_PLACE
	iY WEEPING_VINES_HIT
	iZ WEEPING_VINES_FALL
	ja WART_BLOCK_BREAK
	jb WART_BLOCK_STEP
	jc WART_BLOCK_PLACE
	jd WART_BLOCK_HIT
	je WART_BLOCK_FALL
	jf NETHERITE_BLOCK_BREAK
	jg NETHERITE_BLOCK_STEP
	jh NETHERITE_BLOCK_PLACE
	ji NETHERITE_BLOCK_HIT
	jj NETHERITE_BLOCK_FALL
	jk NETHERRACK_BREAK
	jl NETHERRACK_STEP
	jm NETHERRACK_PLACE
	jn NETHERRACK_HIT
	jo NETHERRACK_FALL
	jp NOTE_BLOCK_BASEDRUM
	jq NOTE_BLOCK_BASS
	jr NOTE_BLOCK_BELL
	js NOTE_BLOCK_CHIME
	jt NOTE_BLOCK_FLUTE
	ju NOTE_BLOCK_GUITAR
	jv NOTE_BLOCK_HARP
	jw NOTE_BLOCK_HAT
	jx NOTE_BLOCK_PLING
	jy NOTE_BLOCK_SNARE
	jz NOTE_BLOCK_XYLOPHONE
	jA NOTE_BLOCK_IRON_XYLOPHONE
	jB NOTE_BLOCK_COW_BELL
	jC NOTE_BLOCK_DIDGERIDOO
	jD NOTE_BLOCK_BIT
	jE NOTE_BLOCK_BANJO
	jF OCELOT_HURT
	jG OCELOT_AMBIENT
	jH OCELOT_DEATH
	jI PAINTING_BREAK
	jJ PAINTING_PLACE
	jK PANDA_PRE_SNEEZE
	jL PANDA_SNEEZE
	jM PANDA_AMBIENT
	jN PANDA_DEATH
	jO PANDA_EAT
	jP PANDA_STEP
	jQ PANDA_CANT_BREED
	jR PANDA_AGGRESSIVE_AMBIENT
	jS PANDA_WORRIED_AMBIENT
	jT PANDA_HURT
	jU PANDA_BITE
	jV PARROT_AMBIENT
	jW PARROT_DEATH
	jX PARROT_EAT
	jY PARROT_FLY
	jZ PARROT_HURT
	ka PARROT_IMITATE_BLAZE
	kb PARROT_IMITATE_CREEPER
	kc PARROT_IMITATE_DROWNED
	kd PARROT_IMITATE_ELDER_GUARDIAN
	ke PARROT_IMITATE_ENDER_DRAGON
	kf PARROT_IMITATE_ENDERMITE
	kg PARROT_IMITATE_EVOKER
	kh PARROT_IMITATE_GHAST
	ki PARROT_IMITATE_GUARDIAN
	kj PARROT_IMITATE_HOGLIN
	kk PARROT_IMITATE_HUSK
	kl PARROT_IMITATE_ILLUSIONER
	km PARROT_IMITATE_MAGMA_CUBE
	kn PARROT_IMITATE_PHANTOM
	ko PARROT_IMITATE_PIGLIN
	kp PARROT_IMITATE_PIGLIN_BRUTE
	kq PARROT_IMITATE_PILLAGER
	kr PARROT_IMITATE_RAVAGER
	ks PARROT_IMITATE_SHULKER
	kt PARROT_IMITATE_SILVERFISH
	ku PARROT_IMITATE_SKELETON
	kv PARROT_IMITATE_SLIME
	kw PARROT_IMITATE_SPIDER
	kx PARROT_IMITATE_STRAY
	ky PARROT_IMITATE_VEX
	kz PARROT_IMITATE_VINDICATOR
	kA PARROT_IMITATE_WITCH
	kB PARROT_IMITATE_WITHER
	kC PARROT_IMITATE_WITHER_SKELETON
	kD PARROT_IMITATE_ZOGLIN
	kE PARROT_IMITATE_ZOMBIE
	kF PARROT_IMITATE_ZOMBIE_VILLAGER
	kG PARROT_STEP
	kH PHANTOM_AMBIENT
	kI PHANTOM_BITE
	kJ PHANTOM_DEATH
	kK PHANTOM_FLAP
	kL PHANTOM_HURT
	kM PHANTOM_SWOOP
	kN PIG_AMBIENT
	kO PIG_DEATH
	kP PIG_HURT
	kQ PIG_SADDLE
	kR PIG_STEP
	kS PIGLIN_ADMIRING_ITEM
	kT PIGLIN_AMBIENT
	kU PIGLIN_ANGRY
	kV PIGLIN_CELEBRATE
	kW PIGLIN_DEATH
	kX PIGLIN_JEALOUS
	kY PIGLIN_HURT
	kZ PIGLIN_RETREAT
	la PIGLIN_STEP
	lb PIGLIN_CONVERTED_TO_ZOMBIFIED
	lc PIGLIN_BRUTE_AMBIENT
	ld PIGLIN_BRUTE_ANGRY
	le PIGLIN_BRUTE_DEATH
	lf PIGLIN_BRUTE_HURT
	lg PIGLIN_BRUTE_STEP
	lh PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	li PILLAGER_AMBIENT
	lj PILLAGER_CELEBRATE
	lk PILLAGER_DEATH
	ll PILLAGER_HURT
	lm PISTON_CONTRACT
	ln PISTON_EXTEND
	lo PLAYER_ATTACK_CRIT
	lp PLAYER_ATTACK_KNOCKBACK
	lq PLAYER_ATTACK_NODAMAGE
	lr PLAYER_ATTACK_STRONG
	ls PLAYER_ATTACK_SWEEP
	lt PLAYER_ATTACK_WEAK
	lu PLAYER_BIG_FALL
	lv PLAYER_BREATH
	lw PLAYER_BURP
	lx PLAYER_DEATH
	ly PLAYER_HURT
	lz PLAYER_HURT_DROWN
	lA PLAYER_HURT_ON_FIRE
	lB PLAYER_HURT_SWEET_BERRY_BUSH
	lC PLAYER_LEVELUP
	lD PLAYER_SMALL_FALL
	lE PLAYER_SPLASH
	lF PLAYER_SPLASH_HIGH_SPEED
	lG PLAYER_SWIM
	lH POLAR_BEAR_AMBIENT
	lI POLAR_BEAR_AMBIENT_BABY
	lJ POLAR_BEAR_DEATH
	lK POLAR_BEAR_HURT
	lL POLAR_BEAR_STEP
	lM POLAR_BEAR_WARNING
	lN PORTAL_AMBIENT
	lO PORTAL_TRAVEL
	lP PORTAL_TRIGGER
	lQ PUFFER_FISH_AMBIENT
	lR PUFFER_FISH_BLOW_OUT
	lS PUFFER_FISH_BLOW_UP
	lT PUFFER_FISH_DEATH
	lU PUFFER_FISH_FLOP
	lV PUFFER_FISH_HURT
	lW PUFFER_FISH_STING
	lX PUMPKIN_CARVE
	lY RABBIT_AMBIENT
	lZ RABBIT_ATTACK
	ma RABBIT_DEATH
	mb RABBIT_HURT
	mc RABBIT_JUMP
	md RAID_HORN
	me RAVAGER_AMBIENT
	mf RAVAGER_ATTACK
	mg RAVAGER_CELEBRATE
	mh RAVAGER_DEATH
	mi RAVAGER_HURT
	mj RAVAGER_STEP
	mk RAVAGER_STUNNED
	ml RAVAGER_ROAR
	mm NETHER_GOLD_ORE_BREAK
	mn NETHER_GOLD_ORE_FALL
	mo NETHER_GOLD_ORE_HIT
	mp NETHER_GOLD_ORE_PLACE
	mq NETHER_GOLD_ORE_STEP
	mr NETHER_ORE_BREAK
	ms NETHER_ORE_FALL
	mt NETHER_ORE_HIT
	mu NETHER_ORE_PLACE
	mv NETHER_ORE_STEP
	mw REDSTONE_TORCH_BURNOUT
	mx RESPAWN_ANCHOR_AMBIENT
	my RESPAWN_ANCHOR_CHARGE
	mz RESPAWN_ANCHOR_DEPLETE
	mA RESPAWN_ANCHOR_SET_SPAWN
	mB SALMON_AMBIENT
	mC SALMON_DEATH
	mD SALMON_FLOP
	mE SALMON_HURT
	mF SAND_BREAK
	mG SAND_FALL
	mH SAND_HIT
	mI SAND_PLACE
	mJ SAND_STEP
	mK SCAFFOLDING_BREAK
	mL SCAFFOLDING_FALL
	mM SCAFFOLDING_HIT
	mN SCAFFOLDING_PLACE
	mO SCAFFOLDING_STEP
	mP SHEEP_AMBIENT
	mQ SHEEP_DEATH
	mR SHEEP_HURT
	mS SHEEP_SHEAR
	mT SHEEP_STEP
	mU SHIELD_BLOCK
	mV SHIELD_BREAK
	mW SHROOMLIGHT_BREAK
	mX SHROOMLIGHT_STEP
	mY SHROOMLIGHT_PLACE
	mZ SHROOMLIGHT_HIT
	na SHROOMLIGHT_FALL
	nb SHOVEL_FLATTEN
	nc SHULKER_AMBIENT
	nd SHULKER_BOX_CLOSE
	ne SHULKER_BOX_OPEN
	nf SHULKER_BULLET_HIT
	ng SHULKER_BULLET_HURT
	nh SHULKER_CLOSE
	ni SHULKER_DEATH
	nj SHULKER_HURT
	nk SHULKER_HURT_CLOSED
	nl SHULKER_OPEN
	nm SHULKER_SHOOT
	nn SHULKER_TELEPORT
	no SILVERFISH_AMBIENT
	np SILVERFISH_DEATH
	nq SILVERFISH_HURT
	nr SILVERFISH_STEP
	ns SKELETON_AMBIENT
	nt SKELETON_DEATH
	nu SKELETON_HORSE_AMBIENT
	nv SKELETON_HORSE_DEATH
	nw SKELETON_HORSE_HURT
	nx SKELETON_HORSE_SWIM
	ny SKELETON_HORSE_AMBIENT_WATER
	nz SKELETON_HORSE_GALLOP_WATER
	nA SKELETON_HORSE_JUMP_WATER
	nB SKELETON_HORSE_STEP_WATER
	nC SKELETON_HURT
	nD SKELETON_SHOOT
	nE SKELETON_STEP
	nF SLIME_ATTACK
	nG SLIME_DEATH
	nH SLIME_HURT
	nI SLIME_JUMP
	nJ SLIME_SQUISH
	nK SLIME_BLOCK_BREAK
	nL SLIME_BLOCK_FALL
	nM SLIME_BLOCK_HIT
	nN SLIME_BLOCK_PLACE
	nO SLIME_BLOCK_STEP
	nP SOUL_SAND_BREAK
	nQ SOUL_SAND_STEP
	nR SOUL_SAND_PLACE
	nS SOUL_SAND_HIT
	nT SOUL_SAND_FALL
	nU SOUL_SOIL_BREAK
	nV SOUL_SOIL_STEP
	nW SOUL_SOIL_PLACE
	nX SOUL_SOIL_HIT
	nY SOUL_SOIL_FALL
	nZ SOUL_ESCAPE
	oa STRIDER_AMBIENT
	ob STRIDER_HAPPY
	oc STRIDER_RETREAT
	od STRIDER_DEATH
	oe STRIDER_HURT
	of STRIDER_STEP
	og STRIDER_STEP_LAVA
	oh STRIDER_EAT
	oi STRIDER_SADDLE
	oj SLIME_DEATH_SMALL
	ok SLIME_HURT_SMALL
	ol SLIME_JUMP_SMALL
	om SLIME_SQUISH_SMALL
	on SMITHING_TABLE_USE
	oo SMOKER_SMOKE
	op SNOWBALL_THROW
	oq SNOW_BREAK
	or SNOW_FALL
	os SNOW_GOLEM_AMBIENT
	ot SNOW_GOLEM_DEATH
	ou SNOW_GOLEM_HURT
	ov SNOW_GOLEM_SHOOT
	ow SNOW_GOLEM_SHEAR
	ox SNOW_HIT
	oy SNOW_PLACE
	oz SNOW_STEP
	oA SPIDER_AMBIENT
	oB SPIDER_DEATH
	oC SPIDER_HURT
	oD SPIDER_STEP
	oE SPLASH_POTION_BREAK
	oF SPLASH_POTION_THROW
	oG SQUID_AMBIENT
	oH SQUID_DEATH
	oI SQUID_HURT
	oJ SQUID_SQUIRT
	oK STONE_BREAK
	oL STONE_BUTTON_CLICK_OFF
	oM STONE_BUTTON_CLICK_ON
	oN STONE_FALL
	oO STONE_HIT
	oP STONE_PLACE
	oQ STONE_PRESSURE_PLATE_CLICK_OFF
	oR STONE_PRESSURE_PLATE_CLICK_ON
	oS STONE_STEP
	oT STRAY_AMBIENT
	oU STRAY_DEATH
	oV STRAY_HURT
	oW STRAY_STEP
	oX SWEET_BERRY_BUSH_BREAK
	oY SWEET_BERRY_BUSH_PLACE
	oZ SWEET_BERRY_BUSH_PICK_BERRIES
	pa THORNS_HIT
	pb TNT_PRIMED
	pc TOTEM_USE
	pd TRIDENT_HIT
	pe TRIDENT_HIT_GROUND
	pf TRIDENT_RETURN
	pg TRIDENT_RIPTIDE_1
	ph TRIDENT_RIPTIDE_2
	pi TRIDENT_RIPTIDE_3
	pj TRIDENT_THROW
	pk TRIDENT_THUNDER
	pl TRIPWIRE_ATTACH
	pm TRIPWIRE_CLICK_OFF
	pn TRIPWIRE_CLICK_ON
	po TRIPWIRE_DETACH
	pp TROPICAL_FISH_AMBIENT
	pq TROPICAL_FISH_DEATH
	pr TROPICAL_FISH_FLOP
	ps TROPICAL_FISH_HURT
	pt TURTLE_AMBIENT_LAND
	pu TURTLE_DEATH
	pv TURTLE_DEATH_BABY
	pw TURTLE_EGG_BREAK
	px TURTLE_EGG_CRACK
	py TURTLE_EGG_HATCH
	pz TURTLE_HURT
	pA TURTLE_HURT_BABY
	pB TURTLE_LAY_EGG
	pC TURTLE_SHAMBLE
	pD TURTLE_SHAMBLE_BABY
	pE TURTLE_SWIM
	pF UI_BUTTON_CLICK
	pG UI_LOOM_SELECT_PATTERN
	pH UI_LOOM_TAKE_RESULT
	pI UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	pJ UI_STONECUTTER_TAKE_RESULT
	pK UI_STONECUTTER_SELECT_RECIPE
	pL UI_TOAST_CHALLENGE_COMPLETE
	pM UI_TOAST_IN
	pN UI_TOAST_OUT
	pO VEX_AMBIENT
	pP VEX_CHARGE
	pQ VEX_DEATH
	pR VEX_HURT
	pS VILLAGER_AMBIENT
	pT VILLAGER_CELEBRATE
	pU VILLAGER_DEATH
	pV VILLAGER_HURT
	pW VILLAGER_NO
	pX VILLAGER_TRADE
	pY VILLAGER_YES
	pZ VILLAGER_WORK_ARMORER
	qa VILLAGER_WORK_BUTCHER
	qb VILLAGER_WORK_CARTOGRAPHER
	qc VILLAGER_WORK_CLERIC
	qd VILLAGER_WORK_FARMER
	qe VILLAGER_WORK_FISHERMAN
	qf VILLAGER_WORK_FLETCHER
	qg VILLAGER_WORK_LEATHERWORKER
	qh VILLAGER_WORK_LIBRARIAN
	qi VILLAGER_WORK_MASON
	qj VILLAGER_WORK_SHEPHERD
	qk VILLAGER_WORK_TOOLSMITH
	ql VILLAGER_WORK_WEAPONSMITH
	qm VINDICATOR_AMBIENT
	qn VINDICATOR_CELEBRATE
	qo VINDICATOR_DEATH
	qp VINDICATOR_HURT
	qq VINE_STEP
	qr LILY_PAD_PLACE
	qs WANDERING_TRADER_AMBIENT
	qt WANDERING_TRADER_DEATH
	qu WANDERING_TRADER_DISAPPEARED
	qv WANDERING_TRADER_DRINK_MILK
	qw WANDERING_TRADER_DRINK_POTION
	qx WANDERING_TRADER_HURT
	qy WANDERING_TRADER_NO
	qz WANDERING_TRADER_REAPPEARED
	qA WANDERING_TRADER_TRADE
	qB WANDERING_TRADER_YES
	qC WATER_AMBIENT
	qD WEATHER_RAIN
	qE WEATHER_RAIN_ABOVE
	qF WET_GRASS_BREAK
	qG WET_GRASS_FALL
	qH WET_GRASS_HIT
	qI WET_GRASS_PLACE
	qJ WET_GRASS_STEP
	qK WITCH_AMBIENT
	qL WITCH_CELEBRATE
	qM WITCH_DEATH
	qN WITCH_DRINK
	qO WITCH_HURT
	qP WITCH_THROW
	qQ WITHER_AMBIENT
	qR WITHER_BREAK_BLOCK
	qS WITHER_DEATH
	qT WITHER_HURT
	qU WITHER_SHOOT
	qV WITHER_SKELETON_AMBIENT
	qW WITHER_SKELETON_DEATH
	qX WITHER_SKELETON_HURT
	qY WITHER_SKELETON_STEP
	qZ WITHER_SPAWN
	ra WOLF_AMBIENT
	rb WOLF_DEATH
	rc WOLF_GROWL
	rd WOLF_HOWL
	re WOLF_HURT
	rf WOLF_PANT
	rg WOLF_SHAKE
	rh WOLF_STEP
	ri WOLF_WHINE
	rj WOODEN_DOOR_CLOSE
	rk WOODEN_DOOR_OPEN
	rl WOODEN_TRAPDOOR_CLOSE
	rm WOODEN_TRAPDOOR_OPEN
	rn WOOD_BREAK
	ro WOODEN_BUTTON_CLICK_OFF
	rp WOODEN_BUTTON_CLICK_ON
	rq WOOD_FALL
	rr WOOD_HIT
	rs WOOD_PLACE
	rt WOODEN_PRESSURE_PLATE_CLICK_OFF
	ru WOODEN_PRESSURE_PLATE_CLICK_ON
	rv WOOD_STEP
	rw WOOL_BREAK
	rx WOOL_FALL
	ry WOOL_HIT
	rz WOOL_PLACE
	rA WOOL_STEP
	rB ZOGLIN_AMBIENT
	rC ZOGLIN_ANGRY
	rD ZOGLIN_ATTACK
	rE ZOGLIN_DEATH
	rF ZOGLIN_HURT
	rG ZOGLIN_STEP
	rH ZOMBIE_AMBIENT
	rI ZOMBIE_ATTACK_WOODEN_DOOR
	rJ ZOMBIE_ATTACK_IRON_DOOR
	rK ZOMBIE_BREAK_WOODEN_DOOR
	rL ZOMBIE_CONVERTED_TO_DROWNED
	rM ZOMBIE_DEATH
	rN ZOMBIE_DESTROY_EGG
	rO ZOMBIE_HORSE_AMBIENT
	rP ZOMBIE_HORSE_DEATH
	rQ ZOMBIE_HORSE_HURT
	rR ZOMBIE_HURT
	rS ZOMBIE_INFECT
	rT ZOMBIFIED_PIGLIN_AMBIENT
	rU ZOMBIFIED_PIGLIN_ANGRY
	rV ZOMBIFIED_PIGLIN_DEATH
	rW ZOMBIFIED_PIGLIN_HURT
	rX ZOMBIE_STEP
	rY ZOMBIE_VILLAGER_AMBIENT
	rZ ZOMBIE_VILLAGER_CONVERTED
	sa ZOMBIE_VILLAGER_CURE
	sb ZOMBIE_VILLAGER_DEATH
	sc ZOMBIE_VILLAGER_HURT
	sd ZOMBIE_VILLAGER_STEP
	<init> ()V <init>
	a (Ljava/lang/String;)Ladn; register
	<clinit> ()V <clinit>
adp net/minecraft/sounds/SoundSource
	a MASTER
	b MUSIC
	c RECORDS
	d WEATHER
	e BLOCKS
	f HOSTILE
	g NEUTRAL
	h PLAYERS
	i AMBIENT
	j VOICE
	k BY_NAME
	l name
	m $VALUES
	values ()[Ladp; values
	valueOf (Ljava/lang/String;)Ladp; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ladp; byName
	b ()Ljava/util/Set; getNames
	<clinit> ()V <clinit>
adq net/minecraft/sounds/package-info
adr net/minecraft/stats/RecipeBook
	a known
	b highlight
	c bookSettings
	<init> ()V <init>
	a (Ladr;)V copyOverData
	a (Lbon;)V add
	a (Lvk;)V add
	b (Lbon;)Z contains
	b (Lvk;)Z contains
	c (Lbon;)V remove
	c (Lvk;)V remove
	d (Lbon;)Z willHighlight
	e (Lbon;)V removeHighlight
	f (Lbon;)V addHighlight
	d (Lvk;)V addHighlight
	a (Lbjh;)Z isOpen
	a (Lbjh;Z)V setOpen
	a (Lbjg;)Z isFiltering
	b (Lbjh;)Z isFiltering
	b (Lbjh;Z)V setFiltering
	a (Lads;)V setBookSettings
	a ()Lads; getBookSettings
	a (Lbjh;ZZ)V setBookSetting
ads net/minecraft/stats/RecipeBookSettings
	a TAG_FIELDS
	b states
	<init> (Ljava/util/Map;)V <init>
	<init> ()V <init>
	a (Lbjh;)Z isOpen
	a (Lbjh;Z)V setOpen
	b (Lbjh;)Z isFiltering
	b (Lbjh;Z)V setFiltering
	a (Lnf;)Lads; read
	b (Lnf;)V write
	a (Lmd;)Lads; read
	b (Lmd;)V write
	a ()Lads; copy
	a (Lads;)V replaceFrom
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lmd;Lbjh;Lcom/mojang/datafixers/util/Pair;)V lambda$write$2
	a (Lmd;Ljava/util/Map;Lbjh;Lcom/mojang/datafixers/util/Pair;)V lambda$read$1
	a (Ljava/util/EnumMap;)V lambda$new$0
	<clinit> ()V <clinit>
ads$a net/minecraft/stats/RecipeBookSettings$TypeSettings
	a open
	b filtering
	<init> (ZZ)V <init>
	a ()Lads$a; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lads$a;)Z access$000
	a (Lads$a;Z)Z access$002
	b (Lads$a;)Z access$100
	b (Lads$a;Z)Z access$102
adt net/minecraft/stats/ServerRecipeBook
	c LOGGER
	<init> ()V <init>
	a (Ljava/util/Collection;Laah;)I addRecipes
	b (Ljava/util/Collection;Laah;)I removeRecipes
	a (Lql$a;Laah;Ljava/util/List;)V sendRecipes
	b ()Lmd; toNbt
	a (Lmd;Lboo;)V fromNbt
	a (Lmj;Ljava/util/function/Consumer;Lboo;)V loadRecipes
	a (Laah;)V sendInitialRecipeBook
	<clinit> ()V <clinit>
adu net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	f lastStatRequest
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V <init>
	a ()V save
	a (Lbft;Ladv;I)V setValue
	d ()Ljava/util/Set; getDirty
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Ladx;Ljava/lang/String;)Ljava/util/Optional; getStat
	a (Lcom/google/gson/JsonObject;)Lmd; fromJson
	b ()Ljava/lang/String; toJson
	b (Ladv;)Lvk; getKey
	c ()V markAllDirty
	a (Laah;)V sendStats
	a (Ladx;)Lcom/google/gson/JsonObject; lambda$toJson$4
	a (Ljava/lang/String;)V lambda$parseLocal$3
	a (Lmd;Ljava/lang/String;Ladx;)V lambda$parseLocal$2
	b (Ljava/lang/String;)V lambda$null$1
	a (Lmd;Ljava/lang/String;Ladv;)V lambda$null$0
	<clinit> ()V <clinit>
adv net/minecraft/stats/Stat
	o formatter
	p value
	q type
	<init> (Ladx;Ljava/lang/Object;Ladw;)V <init>
	a (Ladx;Ljava/lang/Object;)Ljava/lang/String; buildName
	a (Lvk;)Ljava/lang/String; locationToKey
	a ()Ladx; getType
	b ()Ljava/lang/Object; getValue
	a (I)Ljava/lang/String; format
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
adw net/minecraft/stats/StatFormatter
	a DECIMAL_FORMAT
	b DEFAULT
	c DIVIDE_BY_TEN
	d DISTANCE
	e TIME
	format (I)Ljava/lang/String; format
	a (I)Ljava/lang/String; lambda$static$3
	b (I)Ljava/lang/String; lambda$static$2
	c (I)Ljava/lang/String; lambda$static$1
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	<clinit> ()V <clinit>
adx net/minecraft/stats/StatType
	a registry
	b map
	c displayName
	<init> (Lgm;)V <init>
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Ladw;)Ladv; get
	a ()Lgm; getRegistry
	b ()I size
	iterator ()Ljava/util/Iterator; iterator
	b (Ljava/lang/Object;)Ladv; get
	c ()Ljava/lang/String; getTranslationKey
	d ()Lnr; getDisplayName
	a (Ladw;Ljava/lang/Object;)Ladv; lambda$get$0
ady net/minecraft/stats/Stats
	a BLOCK_MINED
	b ITEM_CRAFTED
	c ITEM_USED
	d ITEM_BROKEN
	e ITEM_PICKED_UP
	f ITEM_DROPPED
	g ENTITY_KILLED
	h ENTITY_KILLED_BY
	i CUSTOM
	j LEAVE_GAME
	k PLAY_ONE_MINUTE
	l TIME_SINCE_DEATH
	m TIME_SINCE_REST
	n CROUCH_TIME
	o WALK_ONE_CM
	p CROUCH_ONE_CM
	q SPRINT_ONE_CM
	r WALK_ON_WATER_ONE_CM
	s FALL_ONE_CM
	t CLIMB_ONE_CM
	u FLY_ONE_CM
	v WALK_UNDER_WATER_ONE_CM
	w MINECART_ONE_CM
	x BOAT_ONE_CM
	y PIG_ONE_CM
	z HORSE_ONE_CM
	A AVIATE_ONE_CM
	B SWIM_ONE_CM
	C STRIDER_ONE_CM
	D JUMP
	E DROP
	F DAMAGE_DEALT
	G DAMAGE_DEALT_ABSORBED
	H DAMAGE_DEALT_RESISTED
	I DAMAGE_TAKEN
	J DAMAGE_BLOCKED_BY_SHIELD
	K DAMAGE_ABSORBED
	L DAMAGE_RESISTED
	M DEATHS
	N MOB_KILLS
	O ANIMALS_BRED
	P PLAYER_KILLS
	Q FISH_CAUGHT
	R TALKED_TO_VILLAGER
	S TRADED_WITH_VILLAGER
	T EAT_CAKE_SLICE
	U FILL_CAULDRON
	V USE_CAULDRON
	W CLEAN_ARMOR
	X CLEAN_BANNER
	Y CLEAN_SHULKER_BOX
	Z INTERACT_WITH_BREWINGSTAND
	aa INTERACT_WITH_BEACON
	ab INSPECT_DROPPER
	ac INSPECT_HOPPER
	ad INSPECT_DISPENSER
	ae PLAY_NOTEBLOCK
	af TUNE_NOTEBLOCK
	ag POT_FLOWER
	ah TRIGGER_TRAPPED_CHEST
	ai OPEN_ENDERCHEST
	aj ENCHANT_ITEM
	ak PLAY_RECORD
	al INTERACT_WITH_FURNACE
	am INTERACT_WITH_CRAFTING_TABLE
	an OPEN_CHEST
	ao SLEEP_IN_BED
	ap OPEN_SHULKER_BOX
	aq OPEN_BARREL
	ar INTERACT_WITH_BLAST_FURNACE
	as INTERACT_WITH_SMOKER
	at INTERACT_WITH_LECTERN
	au INTERACT_WITH_CAMPFIRE
	av INTERACT_WITH_CARTOGRAPHY_TABLE
	aw INTERACT_WITH_LOOM
	ax INTERACT_WITH_STONECUTTER
	ay BELL_RING
	az RAID_TRIGGER
	aA RAID_WIN
	aB INTERACT_WITH_ANVIL
	aC INTERACT_WITH_GRINDSTONE
	aD TARGET_HIT
	aE INTERACT_WITH_SMITHING_TABLE
	<init> ()V <init>
	a (Ljava/lang/String;Ladw;)Lvk; makeCustomStat
	a (Ljava/lang/String;Lgm;)Ladx; makeRegistryStatType
	<clinit> ()V <clinit>
adz net/minecraft/stats/StatsCounter
	a stats
	<init> ()V <init>
	b (Lbft;Ladv;I)V increment
	a (Lbft;Ladv;I)V setValue
	a (Ladx;Ljava/lang/Object;)I getValue
	a (Ladv;)I getValue
aea net/minecraft/stats/package-info
aeb net/minecraft/tags/BlockTags
	a HELPER
	b WOOL
	c PLANKS
	d STONE_BRICKS
	e WOODEN_BUTTONS
	f BUTTONS
	g CARPETS
	h WOODEN_DOORS
	i WOODEN_STAIRS
	j WOODEN_SLABS
	k WOODEN_FENCES
	l PRESSURE_PLATES
	m WOODEN_PRESSURE_PLATES
	n STONE_PRESSURE_PLATES
	o WOODEN_TRAPDOORS
	p DOORS
	q SAPLINGS
	r LOGS_THAT_BURN
	s LOGS
	t DARK_OAK_LOGS
	u OAK_LOGS
	v BIRCH_LOGS
	w ACACIA_LOGS
	x JUNGLE_LOGS
	y SPRUCE_LOGS
	z CRIMSON_STEMS
	A WARPED_STEMS
	B BANNERS
	C SAND
	D STAIRS
	E SLABS
	F WALLS
	G ANVIL
	H RAILS
	I LEAVES
	J TRAPDOORS
	K SMALL_FLOWERS
	L BEDS
	M FENCES
	N TALL_FLOWERS
	O FLOWERS
	P PIGLIN_REPELLENTS
	Q GOLD_ORES
	R NON_FLAMMABLE_WOOD
	S FLOWER_POTS
	T ENDERMAN_HOLDABLE
	U ICE
	V VALID_SPAWN
	W IMPERMEABLE
	X UNDERWATER_BONEMEALS
	Y CORAL_BLOCKS
	Z WALL_CORALS
	aa CORAL_PLANTS
	ab CORALS
	ac BAMBOO_PLANTABLE_ON
	ad STANDING_SIGNS
	ae WALL_SIGNS
	af SIGNS
	ag DRAGON_IMMUNE
	ah WITHER_IMMUNE
	ai WITHER_SUMMON_BASE_BLOCKS
	aj BEEHIVES
	ak CROPS
	al BEE_GROWABLES
	am PORTALS
	an FIRE
	ao NYLIUM
	ap WART_BLOCKS
	aq BEACON_BASE_BLOCKS
	ar SOUL_SPEED_BLOCKS
	as WALL_POST_OVERRIDE
	at CLIMBABLE
	au SHULKER_BOXES
	av HOGLIN_REPELLENTS
	aw SOUL_FIRE_BASE_BLOCKS
	ax STRIDER_WARM_BLOCKS
	ay CAMPFIRES
	az GUARDED_BY_PIGLINS
	aA PREVENT_MOB_SPAWNING_INSIDE
	aB FENCE_GATES
	aC UNSTABLE_BOTTOM_CENTER
	aD MUSHROOM_GROW_BLOCK
	aE INFINIBURN_OVERWORLD
	aF INFINIBURN_NETHER
	aG INFINIBURN_END
	aH BASE_STONE_OVERWORLD
	aI BASE_STONE_NETHER
	<init> ()V <init>
	a (Ljava/lang/String;)Laej$e; bind
	a ()Laek; getAllTags
	b ()Ljava/util/List; getWrappers
	<clinit> ()V <clinit>
aec net/minecraft/tags/EntityTypeTags
	a HELPER
	b SKELETONS
	c RAIDERS
	d BEEHIVE_INHABITORS
	e ARROWS
	f IMPACT_PROJECTILES
	<init> ()V <init>
	a (Ljava/lang/String;)Laej$e; bind
	a ()Laek; getAllTags
	b ()Ljava/util/List; getWrappers
	<clinit> ()V <clinit>
aed net/minecraft/tags/FluidTags
	a HELPER
	b WATER
	c LAVA
	<init> ()V <init>
	a (Ljava/lang/String;)Laej$e; bind
	a ()Laek; getAllTags
	b ()Ljava/util/List; getWrappers
	<clinit> ()V <clinit>
aee net/minecraft/tags/ItemTags
	a HELPER
	b WOOL
	c PLANKS
	d STONE_BRICKS
	e WOODEN_BUTTONS
	f BUTTONS
	g CARPETS
	h WOODEN_DOORS
	i WOODEN_STAIRS
	j WOODEN_SLABS
	k WOODEN_FENCES
	l WOODEN_PRESSURE_PLATES
	m WOODEN_TRAPDOORS
	n DOORS
	o SAPLINGS
	p LOGS_THAT_BURN
	q LOGS
	r DARK_OAK_LOGS
	s OAK_LOGS
	t BIRCH_LOGS
	u ACACIA_LOGS
	v JUNGLE_LOGS
	w SPRUCE_LOGS
	x CRIMSON_STEMS
	y WARPED_STEMS
	z BANNERS
	A SAND
	B STAIRS
	C SLABS
	D WALLS
	E ANVIL
	F RAILS
	G LEAVES
	H TRAPDOORS
	I SMALL_FLOWERS
	J BEDS
	K FENCES
	L TALL_FLOWERS
	M FLOWERS
	N PIGLIN_REPELLENTS
	O PIGLIN_LOVED
	P GOLD_ORES
	Q NON_FLAMMABLE_WOOD
	R SOUL_FIRE_BASE_BLOCKS
	S BOATS
	T FISHES
	U SIGNS
	V MUSIC_DISCS
	W CREEPER_DROP_MUSIC_DISCS
	X COALS
	Y ARROWS
	Z LECTERN_BOOKS
	aa BEACON_PAYMENT_ITEMS
	ab STONE_TOOL_MATERIALS
	ac STONE_CRAFTING_MATERIALS
	<init> ()V <init>
	a (Ljava/lang/String;)Laej$e; bind
	a ()Laek; getAllTags
	b ()Ljava/util/List; getWrappers
	<clinit> ()V <clinit>
aef net/minecraft/tags/SerializationTags
	a instance
	<init> ()V <init>
	a ()Lael; getInstance
	a (Lael;)V bind
	a (Laej$e;)Laej; lambda$static$3
	b (Laej$e;)Laej; lambda$static$2
	c (Laej$e;)Laej; lambda$static$1
	d (Laej$e;)Laej; lambda$static$0
	<clinit> ()V <clinit>
aeg net/minecraft/tags/SetTag
	b valuesList
	c values
	a closestCommonSuperType
	<init> (Ljava/util/Set;Ljava/lang/Class;)V <init>
	a ()Laeg; empty
	a (Ljava/util/Set;)Laeg; create
	a (Ljava/lang/Object;)Z contains
	b ()Ljava/util/List; getValues
	c (Ljava/util/Set;)Ljava/lang/Class; findCommonSuperClass
	a (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class; findClosestAncestor
aeh net/minecraft/tags/StaticTagHelper
	a source
	b wrappers
	c collectionGetter
	<init> (Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Laej$e; bind
	a ()V resetToEmpty
	a (Lael;)V reset
	b ()Laek; getAllTags
	c ()Ljava/util/List; getWrappers
	b (Lael;)Ljava/util/Set; getMissingTags
	a (Laek;Laeh$a;)V lambda$reset$2
	a (Laej;Laeh$a;)V lambda$resetToEmpty$1
	a (Laej;Lvk;)Laej; lambda$null$0
aeh$1 net/minecraft/tags/StaticTagHelper$1
aeh$a net/minecraft/tags/StaticTagHelper$Wrapper
	b tag
	a name
	<init> (Lvk;)V <init>
	a ()Lvk; getName
	c ()Laej; resolve
	a (Ljava/util/function/Function;)V rebind
	a (Ljava/lang/Object;)Z contains
	b ()Ljava/util/List; getValues
	<init> (Lvk;Laeh$1;)V <init>
aei net/minecraft/tags/StaticTags
	a HELPERS
	<init> ()V <init>
	a (Lvk;Ljava/util/function/Function;)Laeh; create
	a (Lael;)V resetAll
	a ()V resetAllToEmpty
	b (Lael;)Lcom/google/common/collect/Multimap; getAllMissingTags
	b ()V bootStrap
	a (Laeh;)Z lambda$bootStrap$2
	a (Lcom/google/common/collect/Multimap;Lael;Lvk;Laeh;)V lambda$getAllMissingTags$1
	a (Lael;Laeh;)V lambda$resetAll$0
	<clinit> ()V <clinit>
aej net/minecraft/tags/Tag
	a (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;)Z contains
	b ()Ljava/util/List; getValues
	a (Ljava/util/Random;)Ljava/lang/Object; getRandomElement
	b (Ljava/util/Set;)Laej; fromSet
	a (Ljava/util/function/Supplier;Laej;)Lcom/mojang/serialization/DataResult; lambda$codec$3
	a (Laej;)Lcom/mojang/serialization/DataResult; lambda$null$2
	a (Ljava/util/function/Supplier;Lvk;)Lcom/mojang/serialization/DataResult; lambda$codec$1
	a (Lvk;)Lcom/mojang/serialization/DataResult; lambda$null$0
aej$1 net/minecraft/tags/Tag$1
aej$a net/minecraft/tags/Tag$Builder
	a entries
	<init> ()V <init>
	a ()Laej$a; tag
	a (Laej$b;)Laej$a; add
	a (Laej$d;Ljava/lang/String;)Laej$a; add
	a (Lvk;Ljava/lang/String;)Laej$a; addElement
	b (Lvk;Ljava/lang/String;)Laej$a; addOptionalElement
	c (Lvk;Ljava/lang/String;)Laej$a; addTag
	d (Lvk;Ljava/lang/String;)Laej$a; addOptionalTag
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional; build
	b ()Ljava/util/stream/Stream; getEntries
	b (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream; getUnresolvedEntries
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Laej$a; addFromJson
	a (Lcom/google/gson/JsonElement;)Laej$d; parseEntry
	c ()Lcom/google/gson/JsonObject; serializeToJson
	a (Ljava/lang/String;Laej$d;)V lambda$addFromJson$2
	a (Ljava/util/function/Function;Ljava/util/function/Function;Laej$b;)Z lambda$getUnresolvedEntries$1
	a (Ljava/lang/Object;)V lambda$null$0
aej$b net/minecraft/tags/Tag$BuilderEntry
	a entry
	b source
	<init> (Laej$d;Ljava/lang/String;)V <init>
	a ()Laej$d; getEntry
	b ()Ljava/lang/String; getSource
	toString ()Ljava/lang/String; toString
	<init> (Laej$d;Ljava/lang/String;Laej$1;)V <init>
aej$c net/minecraft/tags/Tag$ElementEntry
	a id
	<init> (Lvk;)V <init>
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
	a (Lcom/google/gson/JsonArray;)V serializeTo
	toString ()Ljava/lang/String; toString
aej$d net/minecraft/tags/Tag$Entry
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
	a (Lcom/google/gson/JsonArray;)V serializeTo
aej$e net/minecraft/tags/Tag$Named
	a ()Lvk; getName
aej$f net/minecraft/tags/Tag$OptionalElementEntry
	a id
	<init> (Lvk;)V <init>
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
	a (Lcom/google/gson/JsonArray;)V serializeTo
	toString ()Ljava/lang/String; toString
aej$g net/minecraft/tags/Tag$OptionalTagEntry
	a id
	<init> (Lvk;)V <init>
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
	a (Lcom/google/gson/JsonArray;)V serializeTo
	toString ()Ljava/lang/String; toString
aej$h net/minecraft/tags/Tag$TagEntry
	a id
	<init> (Lvk;)V <init>
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
	a (Lcom/google/gson/JsonArray;)V serializeTo
	toString ()Ljava/lang/String; toString
aek net/minecraft/tags/TagCollection
	a ()Ljava/util/Map; getAllTags
	a (Lvk;)Laej; getTag
	b (Lvk;)Laej; getTagOrEmpty
	a (Laej$e;)Lvk; getId
	a (Laej;)Lvk; getId
	b (Laej;)Lvk; getIdOrThrow
	c (Lvk;)Z hasTag
	b ()Ljava/util/Collection; getAvailableTags
	a (Ljava/lang/Object;)Ljava/util/Collection; getMatchingTags
	a (Lnf;Lgb;)V serializeToNetwork
	a (Lnf;Lgm;)Laek; loadFromNetwork
	c ()Laek; empty
	a (Ljava/util/Map;)Laek; of
aek$1 net/minecraft/tags/TagCollection$1
	b empty
	a val$tags
	<init> (Lcom/google/common/collect/BiMap;)V <init>
	b (Lvk;)Laej; getTagOrEmpty
	a (Laej;)Lvk; getId
	a ()Ljava/util/Map; getAllTags
ael net/minecraft/tags/TagContainer
	a EMPTY
	a ()Laek; getBlocks
	b ()Laek; getItems
	c ()Laek; getFluids
	d ()Laek; getEntityTypes
	e ()V bindToGlobal
	a (Lnf;)V serializeToNetwork
	b (Lnf;)Lael; deserializeFromNetwork
	a (Laek;Laek;Laek;Laek;)Lael; of
	<clinit> ()V <clinit>
ael$1 net/minecraft/tags/TagContainer$1
	b val$blocks
	c val$items
	d val$fluids
	e val$entityTypes
	<init> (Laek;Laek;Laek;Laek;)V <init>
	a ()Laek; getBlocks
	b ()Laek; getItems
	c ()Laek; getFluids
	d ()Laek; getEntityTypes
aem net/minecraft/tags/TagLoader
	a LOGGER
	b GSON
	c PATH_SUFFIX_LENGTH
	d idToValue
	e directory
	f name
	<init> (Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lacf;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; prepare
	a (Ljava/util/Map;)Laek; load
	a (Ljava/util/function/Function;Ljava/util/function/Function;Lvk;Laej$a;)V lambda$load$4
	a (Lvk;)Ljava/lang/Object; lambda$load$3
	a (Lacf;)Ljava/util/Map; lambda$prepare$2
	b (Lvk;)Laej$a; lambda$null$1
	a (Ljava/lang/String;)Z lambda$null$0
	<clinit> ()V <clinit>
aen net/minecraft/tags/TagManager
	a blocks
	b items
	c fluids
	d entityTypes
	e tags
	<init> ()V <init>
	a ()Lael; getTags
	a (Laca$a;Lacf;Lant;Lant;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)V lambda$reload$1
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$null$0
aeo net/minecraft/tags/package-info
aep net/minecraft/util/BitStorage
	a MAGIC
	b data
	c bits
	d mask
	e size
	f valuesPerLong
	g divideMul
	h divideAdd
	i divideShift
	<init> (II)V <init>
	<init> (II[J)V <init>
	b (I)I cellIndex
	a (II)I getAndSet
	b (II)V set
	a (I)I get
	a ()[J getRaw
	b ()I getSize
	c ()I getBits
	a (Ljava/util/function/IntConsumer;)V getAll
	<clinit> ()V <clinit>
aeq net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	<init> (Ljava/lang/Class;)V <init>
	add (Ljava/lang/Object;)Z add
	remove (Ljava/lang/Object;)Z remove
	contains (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Class;)Ljava/util/Collection; find
	iterator ()Ljava/util/Iterator; iterator
	a ()Ljava/util/List; getAllInstances
	size ()I size
	b (Ljava/lang/Class;)Ljava/util/List; lambda$find$0
aer net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	a EMPTY_SLOT
	b keys
	c values
	d byId
	e nextId
	f size
	<init> (I)V <init>
	a (Ljava/lang/Object;)I getId
	a (I)Ljava/lang/Object; byId
	c (I)I getValue
	b (Ljava/lang/Object;)Z contains
	b (I)Z contains
	c (Ljava/lang/Object;)I add
	c ()I nextId
	d (I)V grow
	a (Ljava/lang/Object;I)V addMapping
	d (Ljava/lang/Object;)I hash
	b (Ljava/lang/Object;I)I indexOf
	e (I)I findEmpty
	iterator ()Ljava/util/Iterator; iterator
	a ()V clear
	b ()I size
	<clinit> ()V <clinit>
aes net/minecraft/util/Crypt
	a LOGGER
	<init> ()V <init>
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	b ()Ljava/security/KeyPair; generateKeyPair
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a (Ljava/lang/String;[[B)[B digestData
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a (Ljava/security/Key;[B)[B encryptUsingKey
	b (Ljava/security/Key;[B)[B decryptUsingKey
	a (ILjava/security/Key;[B)[B cipherData
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	<clinit> ()V <clinit>
aet net/minecraft/util/CsvOutput
	a output
	b columnCount
	<init> (Ljava/io/Writer;Ljava/util/List;)V <init>
	a ()Laet$a; builder
	a ([Ljava/lang/Object;)V writeRow
	a (Ljava/util/stream/Stream;)V writeLine
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
	<init> (Ljava/io/Writer;Ljava/util/List;Laet$1;)V <init>
aet$1 net/minecraft/util/CsvOutput$1
aet$a net/minecraft/util/CsvOutput$Builder
	a headers
	<init> ()V <init>
	a (Ljava/lang/String;)Laet$a; addColumn
	a (Ljava/io/Writer;)Laet; build
net/minecraft/util/CubicSampler net/minecraft/util/CubicSampler
	a GAUSSIAN_SAMPLE_KERNEL
	<init> ()V <init>
	a (Ldck;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Ldck; gaussianSampleVec3
	<clinit> ()V <clinit>
net/minecraft/util/CubicSampler$Vec3Fetcher net/minecraft/util/CubicSampler$Vec3Fetcher
	fetch (III)Ldck; fetch
aeu net/minecraft/util/DirectoryLock
	a lockFile
	b lock
	c DUMMY
	a (Ljava/nio/file/Path;)Laeu; create
	<init> (Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V <init>
	close ()V close
	a ()Z isValid
	b (Ljava/nio/file/Path;)Z isLocked
	<clinit> ()V <clinit>
aeu$a net/minecraft/util/DirectoryLock$LockException
	<init> (Ljava/nio/file/Path;Ljava/lang/String;)V <init>
	a (Ljava/nio/file/Path;)Laeu$a; alreadyLocked
aev net/minecraft/util/ExceptionCollector
	a result
	<init> ()V <init>
	a (Ljava/lang/Throwable;)V add
	a ()V throwIfPresent
aew net/minecraft/util/FastColor
	<init> ()V <init>
aew$a net/minecraft/util/FastColor$ARGB32
	<init> ()V <init>
	a (I)I alpha
	b (I)I red
	c (I)I green
	d (I)I blue
	a (IIII)I color
	a (II)I multiply
aex net/minecraft/util/FormattedCharSequence
	a EMPTY
	accept (Laey;)Z accept
	a (ILob;)Laex; codepoint
	a (Ljava/lang/String;Lob;)Laex; forward
	a (Ljava/lang/String;Lob;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laex; forward
	b (Ljava/lang/String;Lob;)Laex; backward
	b (Ljava/lang/String;Lob;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laex; backward
	a (Laey;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laey; decorateOutput
	a ()Laex; composite
	a (Laex;)Laex; composite
	a (Laex;Laex;)Laex; composite
	a ([Laex;)Laex; composite
	a (Ljava/util/List;)Laex; composite
	b (Laex;Laex;)Laex; fromPair
	b (Ljava/util/List;)Laex; fromList
	a (Ljava/util/List;Laey;)Z lambda$fromList$8
	a (Laex;Laex;Laey;)Z lambda$fromPair$7
	a (Laey;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILob;I)Z lambda$decorateOutput$6
	a (Ljava/lang/String;Lob;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laey;)Z lambda$backward$5
	a (Ljava/lang/String;Lob;Laey;)Z lambda$backward$4
	b (Ljava/lang/String;Lob;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laey;)Z lambda$forward$3
	b (Ljava/lang/String;Lob;Laey;)Z lambda$forward$2
	a (Lob;ILaey;)Z lambda$codepoint$1
	a (Laey;)Z lambda$static$0
	<clinit> ()V <clinit>
aey net/minecraft/util/FormattedCharSink
	accept (ILob;I)Z accept
aez net/minecraft/util/FrameTimer
	a loggedTimes
	b logStart
	c logLength
	d logEnd
	<init> ()V <init>
	a (J)V logFrameDuration
	a (I)J getAverageDuration
	a (II)I scaleAverageDurationTo
	a (JII)I scaleSampleTo
	a ()I getLogStart
	b ()I getLogEnd
	b (I)I wrapIndex
	c ()[J getLog
afa net/minecraft/util/GsonHelper
	a GSON
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lblu; convertToItem
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lblu; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lblu;)Lblu; getAsItem
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$convertToItem$0
	<clinit> ()V <clinit>
afb net/minecraft/util/HeapDumper
	a hotspotMBean
	<init> ()V <init>
	a ()Lcom/sun/management/HotSpotDiagnosticMXBean; getHotspotMBean
	a (Ljava/lang/String;Z)V dumpHeap
afc net/minecraft/util/HttpUtil
	b LOGGER
	a DOWNLOAD_EXECUTOR
	<init> ()V <init>
	a (Ljava/util/Map;)Ljava/lang/String; buildQuery
	a (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILafk;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
	a ()I getAvailablePort
	a (Lafk;Ljava/lang/String;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object; lambda$downloadTo$0
	<clinit> ()V <clinit>
afd net/minecraft/util/InsensitiveStringMap
	a map
	<init> ()V <init>
	size ()I size
	isEmpty ()Z isEmpty
	containsKey (Ljava/lang/Object;)Z containsKey
	containsValue (Ljava/lang/Object;)Z containsValue
	get (Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; put
	remove (Ljava/lang/Object;)Ljava/lang/Object; remove
	putAll (Ljava/util/Map;)V putAll
	clear ()V clear
	keySet ()Ljava/util/Set; keySet
	values ()Ljava/util/Collection; values
	entrySet ()Ljava/util/Set; entrySet
	put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; put
afe net/minecraft/util/IntRange
	a minInclusive
	b maxInclusive
	<init> (II)V <init>
	a (II)Lafe; of
	a (Ljava/util/Random;)I randomValue
	a ()I getMinInclusive
	b ()I getMaxInclusive
	toString ()Ljava/lang/String; toString
aff net/minecraft/util/LazyLoadedValue
	a factory
	b value
	<init> (Ljava/util/function/Supplier;)V <init>
	a ()Ljava/lang/Object; get
afg net/minecraft/util/LimitedCapacityList
	a items
	b clazz
	c locks
	d size
	e head
	<init> (Ljava/lang/Class;I)V <init>
	a (Ljava/lang/Object;)Ljava/lang/Object; add
	a ()I getSize
	b ()I getMaxSize
	c ()[Ljava/lang/Object; getItems
afh net/minecraft/util/LinearCongruentialGenerator
	<init> ()V <init>
	a (JJ)J next
afi net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	<init> ()V <init>
	create (Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter; create
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
	a (Lafi;Ljava/lang/Object;)Ljava/lang/String; access$000
afi$1 net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	a val$lowercaseToConstant
	b this$0
	<init> (Lafi;Ljava/util/Map;)V <init>
	write (Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V write
	read (Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object; read
afj net/minecraft/util/Mth
	a SQRT_OF_TWO
	b SIN
	c RANDOM
	d MULTIPLY_DE_BRUIJN_BIT_POSITION
	e FRAC_BIAS
	f ASIN_TAB
	g COS_TAB
	<init> ()V <init>
	a (F)F sin
	b (F)F cos
	c (F)F sqrt
	a (D)F sqrt
	d (F)I floor
	b (D)I fastFloor
	c (D)I floor
	d (D)J lfloor
	e (D)I absFloor
	e (F)F abs
	a (I)I abs
	f (F)I ceil
	f (D)I ceil
	a (BBB)B clamp
	a (III)I clamp
	a (JJJ)J clamp
	a (FFF)F clamp
	a (DDD)D clamp
	b (DDD)D clampedLerp
	a (DD)D absMax
	a (II)I intFloorDiv
	a (Ljava/util/Random;II)I nextInt
	a (Ljava/util/Random;FF)F nextFloat
	a (Ljava/util/Random;DD)D nextDouble
	a ([J)D average
	a (FF)Z equal
	b (DD)Z equal
	b (II)I positiveModulo
	b (FF)F positiveModulo
	c (DD)D positiveModulo
	b (I)I wrapDegrees
	g (F)F wrapDegrees
	g (D)D wrapDegrees
	c (FF)F degreesDifference
	d (FF)F degreesDifferenceAbs
	b (FFF)F rotateIfNecessary
	c (FFF)F approach
	d (FFF)F approachDegrees
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/lang/String;D)D getDouble
	a (Ljava/lang/String;DD)D getDouble
	c (I)I smallestEncompassingPowerOfTwo
	d (I)Z isPowerOfTwo
	e (I)I ceillog2
	f (I)I log2
	c (II)I roundUp
	e (FFF)I color
	b (III)I color
	d (II)I colorMultiply
	a (IFFF)I colorMultiply
	h (F)F frac
	h (D)D frac
	a (Ldck;Ldck;Ldck;Ldck;D)Ldck; catmullRomSplinePos
	a (Lgr;)J getSeed
	c (III)J getSeed
	a (Ljava/util/Random;)Ljava/util/UUID; createInsecureUUID
	a ()Ljava/util/UUID; createInsecureUUID
	c (DDD)D inverseLerp
	a (Ldck;Ldck;Ldcf;)Z rayIntersectsAABB
	d (DD)D atan2
	i (F)F fastInvSqrt
	i (D)D fastInvSqrt
	j (F)F fastInvCubeRoot
	f (FFF)I hsvToRgb
	g (I)I murmurHash3Mixer
	a (J)J murmurHash3Mixer
	a ([D)[D cumulativeSum
	a (Ljava/util/Random;[D)I getRandomForDistributionIntegral
	a (DDDII)[D binNormalDistribution
	a (DDDDDDII)[D binBiModalNormalDistribution
	a (DDII)[D binLogDistribution
	a (IILjava/util/function/IntPredicate;)I binarySearch
	g (FFF)F lerp
	d (DDD)D lerp
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	j (D)D smoothstep
	k (D)I sign
	h (FFF)F rotLerp
	i (FFF)F diffuseLight
	j (FFF)F rotlerp
	l (D)F rotWrap
	e (FF)F triangleWave
	k (F)F square
	m (D)D square
	a ([F)V lambda$static$0
	<clinit> ()V <clinit>
afk net/minecraft/util/ProgressListener
	a (Lnr;)V progressStartNoAbort
	b (Lnr;)V progressStart
	c (Lnr;)V progressStage
	a (I)V progressStagePercentage
	a ()V stop
afl net/minecraft/util/RewindableStream
	a cache
	b source
	<init> (Ljava/util/stream/Stream;)V <init>
	a ()Ljava/util/stream/Stream; getStream
	a (Lafl;)Ljava/util/List; access$000
	b (Lafl;)Ljava/util/Spliterator; access$100
afl$1 net/minecraft/util/RewindableStream$1
	b index
	a this$0
	<init> (Lafl;JI)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
afm net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	<init> ()V <init>
	a (DD)D getNewDeltaValue
	a ()V reset
afn net/minecraft/util/SortedArraySet
	a comparator
	b contents
	c size
	<init> (ILjava/util/Comparator;)V <init>
	a ()Lafn; create
	a (I)Lafn; create
	a (Ljava/util/Comparator;)Lafn; create
	a (Ljava/util/Comparator;I)Lafn; create
	a ([Ljava/lang/Object;)[Ljava/lang/Object; castRawArray
	c (Ljava/lang/Object;)I findIndex
	b (I)I getInsertionPosition
	add (Ljava/lang/Object;)Z add
	c (I)V grow
	a (Ljava/lang/Object;I)V addInternal
	d (I)V removeInternal
	e (I)Ljava/lang/Object; getInternal
	a (Ljava/lang/Object;)Ljava/lang/Object; addOrGet
	remove (Ljava/lang/Object;)Z remove
	b (Ljava/lang/Object;)Ljava/lang/Object; get
	b ()Ljava/lang/Object; first
	c ()Ljava/lang/Object; last
	contains (Ljava/lang/Object;)Z contains
	iterator ()Ljava/util/Iterator; iterator
	size ()I size
	toArray ()[Ljava/lang/Object; toArray
	toArray ([Ljava/lang/Object;)[Ljava/lang/Object; toArray
	clear ()V clear
	equals (Ljava/lang/Object;)Z equals
	a (Lafn;)I access$000
	b (Lafn;)[Ljava/lang/Object; access$100
	a (Lafn;I)V access$200
afn$1 net/minecraft/util/SortedArraySet$1
afn$a net/minecraft/util/SortedArraySet$ArrayIterator
	b index
	c last
	a this$0
	<init> (Lafn;)V <init>
	hasNext ()Z hasNext
	next ()Ljava/lang/Object; next
	remove ()V remove
	<init> (Lafn;Lafn$1;)V <init>
afo net/minecraft/util/StringDecomposer
	a STOP_ITERATION
	<init> ()V <init>
	a (Lob;Laey;IC)Z feedChar
	a (Ljava/lang/String;Lob;Laey;)Z iterate
	b (Ljava/lang/String;Lob;Laey;)Z iterateBackwards
	c (Ljava/lang/String;Lob;Laey;)Z iterateFormatted
	a (Ljava/lang/String;ILob;Laey;)Z iterateFormatted
	a (Ljava/lang/String;ILob;Lob;Laey;)Z iterateFormatted
	a (Lnu;Lob;Laey;)Z iterateFormatted
	a (Ljava/lang/String;)Ljava/lang/String; filterBrokenSurrogates
	a (Ljava/lang/StringBuilder;ILob;I)Z lambda$filterBrokenSurrogates$1
	a (Laey;Lob;Ljava/lang/String;)Ljava/util/Optional; lambda$iterateFormatted$0
	<clinit> ()V <clinit>
afp net/minecraft/util/StringRepresentable
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; fromEnum
	a (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; fromStringResolver
	a ([Lafp;)Lcom/mojang/serialization/Keyable; keys
	a ([Ljava/lang/Enum;I)Ljava/lang/Enum; lambda$fromEnum$0
afp$1 net/minecraft/util/StringRepresentable$1
	a val$idResolver
	b val$byId
	c val$resolver
	<init> (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;Ljava/util/function/Function;)V <init>
	a (Lafp;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Lafp;)Lcom/mojang/datafixers/util/Pair; lambda$decode$5
	a (Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$decode$4
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$null$3
	b (Lcom/mojang/serialization/DynamicOps;Lafp;)Lcom/mojang/datafixers/util/Pair; lambda$decode$2
	a (Ljava/util/function/IntFunction;Ljava/lang/Number;)Lcom/mojang/serialization/DataResult; lambda$decode$1
	a (Ljava/lang/Number;)Lcom/mojang/serialization/DataResult; lambda$null$0
afp$2 net/minecraft/util/StringRepresentable$2
	a val$values
	<init> ([Lafp;)V <init>
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
afq net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	<init> ()V <init>
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	b (Ljava/lang/String;)Z isNullOrEmpty
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	<clinit> ()V <clinit>
afr net/minecraft/util/TimeUtil
	<init> ()V <init>
	a (II)Lafe; rangeOfSeconds
afs net/minecraft/util/Tuple
	a a
	b b
	<init> (Ljava/lang/Object;Ljava/lang/Object;)V <init>
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
aft net/minecraft/util/UniformInt
	a CODEC
	b baseValue
	c spread
	a (III)Lcom/mojang/serialization/Codec; codec
	<init> (II)V <init>
	a (I)Laft; fixed
	a (II)Laft; of
	a (Ljava/util/Random;)I sample
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (IIILaft;)Lcom/mojang/serialization/DataResult; lambda$codec$7
	a (Laft;)Lcom/mojang/datafixers/util/Either; lambda$static$6
	a (Lcom/mojang/datafixers/util/Either;)Laft; lambda$static$5
	b (Laft;)Laft; lambda$null$4
	c (Laft;)Lcom/mojang/serialization/DataResult; lambda$static$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	d (Laft;)Ljava/lang/Integer; lambda$null$1
	e (Laft;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
afu net/minecraft/util/Unit
	a INSTANCE
	b $VALUES
	values ()[Lafu; values
	valueOf (Ljava/lang/String;)Lafu; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
afv net/minecraft/util/VisibleForDebug
afw net/minecraft/util/WeighedRandom
	<init> ()V <init>
	a (Ljava/util/List;)I getTotalWeight
	a (Ljava/util/Random;Ljava/util/List;I)Lafw$a; getRandomItem
	a (Ljava/util/List;I)Lafw$a; getWeightedItem
	a (Ljava/util/Random;Ljava/util/List;)Lafw$a; getRandomItem
afw$a net/minecraft/util/WeighedRandom$WeighedRandomItem
	a weight
	<init> (I)V <init>
afx net/minecraft/util/datafix/DataFixTypes
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k WORLD_GEN_SETTINGS
	l type
	m $VALUES
	values ()[Lafx; values
	valueOf (Ljava/lang/String;)Lafx; valueOf
	<init> (Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V <init>
	a ()Lcom/mojang/datafixers/DSL$TypeReference; getType
	<clinit> ()V <clinit>
afy net/minecraft/util/datafix/DataFixers
	a SAME
	b SAME_NAMESPACED
	c DATA_FIXER
	<init> ()V <init>
	b ()Lcom/mojang/datafixers/DataFixer; createFixerUpper
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	a (Ljava/util/Map;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$createRenamer$4
	a (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String; lambda$createRenamer$3
	a (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$2
	b (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$1
	c (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$0
	<clinit> ()V <clinit>
afy$1 net/minecraft/util/datafix/DataFixers$1
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
afy$2 net/minecraft/util/datafix/DataFixers$2
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
afz net/minecraft/util/datafix/PackedBitStorage
	a data
	b bits
	c mask
	d size
	<init> (II)V <init>
	<init> (II[J)V <init>
	a (II)V set
	a (I)I get
	a ()[J getRaw
	b ()I getBits
aga net/minecraft/util/datafix/fixes/AbstractUUIDFix
	a LOGGER
	b typeReference
	<init> (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V <init>
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateNamedChoice
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDString
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDMLTag
	c (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDLeastMost
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromString
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; createUUIDFromML
	d (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromLongs
	a (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; createUUIDTag
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$createUUIDFromString$4
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDLeastMost$3
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDMLTag$2
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDString$1
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateNamedChoice$0
	<clinit> ()V <clinit>
agb net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
agc net/minecraft/util/datafix/fixes/AdvancementsFix
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
agd net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	a name
	b renamer
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
age net/minecraft/util/datafix/fixes/AttributesRename
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixName
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixItemStackTag
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixEntity
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixEntity$9
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$8
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixItemStackTag$5
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$3
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fixName$1
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
agf net/minecraft/util/datafix/fixes/BedBlockEntityInjecter
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$4
	a ()Ljava/lang/IllegalStateException; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
agg net/minecraft/util/datafix/fixes/BedItemColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
agh net/minecraft/util/datafix/fixes/BeehivePoiRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
agi net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	<clinit> ()V <clinit>
agj net/minecraft/util/datafix/fixes/BitStorageAlignFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateHeightmaps
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateSections
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBitStorage
	a (II[J)[J addPadding
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateSections$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$9
	a (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$8
	a (Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	a (Ljava/util/List;)Ljava/lang/Integer; lambda$null$6
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateHeightmaps$5
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
agk net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$4
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$3
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
agl net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a ()Ljava/lang/IllegalStateException; lambda$fix$1
	b ()Ljava/lang/IllegalStateException; lambda$fix$0
agm net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
agn net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ago net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
agp net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
agq net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
agr net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateLine
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
	<clinit> ()V <clinit>
agr$1 net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnx; deserialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ags net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkull
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateConduit
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkull$2
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkull$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
agt net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/String; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
agu net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
agu$1 net/minecraft/util/datafix/fixes/BlockRenameFix$1
	a val$fixBlock
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
agv net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	b (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
agv$1 net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	a val$fixBlock
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
agw net/minecraft/util/datafix/fixes/BlockStateData
	a LOGGER
	b MAP
	c BLOCK_DEFAULTS
	d ID_BY_OLD
	e ID_BY_OLD_NAME
	<init> ()V <init>
	a (ILjava/lang/String;[Ljava/lang/String;)V register
	a ()V finalizeMaps
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	a (I)Ljava/lang/String; upgradeBlock
	b (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; parse
	b (I)Lcom/mojang/serialization/Dynamic; getTag
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$1
	b (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
agx net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
agy net/minecraft/util/datafix/fixes/CatTypeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
agz net/minecraft/util/datafix/fixes/ChunkBiomeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
aha net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ahb net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	a LOGGER
	b VIRTUAL
	c FIX
	d PUMPKIN
	e SNOWY_PODZOL
	f SNOWY_GRASS
	g SNOWY_MYCELIUM
	h UPPER_SUNFLOWER
	i UPPER_LILAC
	j UPPER_TALL_GRASS
	k UPPER_LARGE_FERN
	l UPPER_ROSE_BUSH
	m UPPER_PEONY
	n FLOWER_POT_MAP
	o SKULL_MAP
	p DOOR_MAP
	q NOTE_BLOCK_MAP
	r DYE_COLOR_MAP
	s BED_BLOCK_MAP
	t BANNER_BLOCK_MAP
	u AIR
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Laer;Lcom/mojang/serialization/Dynamic;)I idFor
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (ZZZZ)I getSideMask
	a (Ljava/util/HashMap;)V lambda$static$6
	b (Ljava/util/HashMap;)V lambda$static$5
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$4
	c (Ljava/util/HashMap;)V lambda$static$3
	d (Ljava/util/HashMap;)V lambda$static$2
	e (Ljava/util/HashMap;)V lambda$static$1
	f (Ljava/util/HashMap;)V lambda$static$0
	a ()Lcom/mojang/serialization/Dynamic; access$000
	b ()Ljava/util/BitSet; access$100
	c ()Ljava/util/BitSet; access$200
	d ()Lcom/mojang/serialization/Dynamic; access$400
	e ()Lcom/mojang/serialization/Dynamic; access$500
	f ()Lcom/mojang/serialization/Dynamic; access$600
	g ()Ljava/util/Map; access$700
	h ()Ljava/util/Map; access$800
	i ()Ljava/util/Map; access$900
	j ()Lcom/mojang/serialization/Dynamic; access$1000
	k ()Ljava/util/Map; access$1100
	l ()Ljava/util/Map; access$1200
	m ()Ljava/util/Map; access$1300
	n ()Lcom/mojang/serialization/Dynamic; access$1400
	o ()Lcom/mojang/serialization/Dynamic; access$1500
	p ()Lcom/mojang/serialization/Dynamic; access$1600
	q ()Lcom/mojang/serialization/Dynamic; access$1700
	r ()Lcom/mojang/serialization/Dynamic; access$1800
	s ()Lcom/mojang/serialization/Dynamic; access$1900
	t ()Lorg/apache/logging/log4j/Logger; access$2100
	<clinit> ()V <clinit>
ahb$1 net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	a $SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
	<clinit> ()V <clinit>
ahb$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a data
	<init> ()V <init>
	<init> ([B)V <init>
	a (III)I get
	a (I)Z isFirst
	b (I)I getPosition
ahb$b net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g axis
	h axisDirection
	i $VALUES
	values ()[Lahb$b; values
	valueOf (Ljava/lang/String;)Lahb$b; valueOf
	<init> (Ljava/lang/String;ILahb$b$b;Lahb$b$a;)V <init>
	a ()Lahb$b$b; getAxisDirection
	b ()Lahb$b$a; getAxis
	<clinit> ()V <clinit>
ahb$b$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	a X
	b Y
	c Z
	d $VALUES
	values ()[Lahb$b$a; values
	valueOf (Ljava/lang/String;)Lahb$b$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ahb$b$b net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d $VALUES
	values ()[Lahb$b$b; values
	valueOf (Ljava/lang/String;)Lahb$b$b; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getStep
	<clinit> ()V <clinit>
ahb$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	a y
	h seen
	i buffer
	<init> (Lcom/mojang/serialization/Dynamic;)V <init>
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	b (I)I upgrade
	a (II)V addFix
	a ()Lcom/mojang/serialization/Dynamic; write
	a (Ljava/nio/ByteBuffer;)Lahb$a; lambda$upgrade$1
	b (Ljava/nio/ByteBuffer;)Lahb$a; lambda$upgrade$0
	a (Lahb$c;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; access$300
	b (Lahb$c;)Lit/unimi/dsi/fastutil/ints/IntList; access$2000
ahb$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	<init> (Lcom/mojang/serialization/Dynamic;)V <init>
	b (I)Lcom/mojang/serialization/Dynamic; getBlockEntity
	c (I)Lcom/mojang/serialization/Dynamic; removeBlockEntity
	a (ILahb$b;)I relative
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	d (I)Lahb$c; getSection
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a ()Lcom/mojang/serialization/Dynamic; write
	a (Ljava/util/stream/Stream;)V lambda$new$3
	a (Lcom/mojang/serialization/Dynamic;)V lambda$null$2
	b (Ljava/util/stream/Stream;)V lambda$new$1
	b (Lcom/mojang/serialization/Dynamic;)V lambda$null$0
ahc net/minecraft/util/datafix/fixes/ChunkStatusFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
ahd net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
	<clinit> ()V <clinit>
ahe net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	<clinit> ()V <clinit>
ahf net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (III)S packOffsetCoordinates
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	a ()Ljava/lang/IllegalStateException; lambda$null$5
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	a (Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V lambda$null$3
	a (I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$0
ahg net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
ahh net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
	<init> ()V <init>
	<clinit> ()V <clinit>
ahi net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
ahj net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)I getBlockId
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateBlockToBlockState$12
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$11
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFallingBlock$10
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer; lambda$null$9
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer; lambda$null$8
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer; lambda$null$7
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$6
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	c (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	d (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ahk net/minecraft/util/datafix/fixes/EntityCatSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
ahl net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
ahm net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTagCustomName
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ahn net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
aho net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a ()Ljava/lang/IllegalStateException; lambda$null$0
ahp net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
ahq net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
ahr net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
ahs net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aht net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (B)B direction2dTo3d
ahu net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a ()Ljava/lang/IllegalStateException; lambda$null$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$null$0
	<clinit> ()V <clinit>
ahv net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; doFix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	<clinit> ()V <clinit>
ahw net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ahx net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerArrow
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerLlamaSpit
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItemPotion
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerThrowable
	a (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; setUUID
	a (JJ)[I createUUIDArray
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateEntity$0
ahy net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
ahz net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
aia net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	a FLOAT_LIST_CODEC
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/OptionalDynamic;I)Z isZeroList
	a (ILjava/util/List;)Ljava/lang/Boolean; lambda$isZeroList$3
	a (Ljava/lang/Float;)Z lambda$null$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	<clinit> ()V <clinit>
aib net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	<init> (Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
aic net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$6
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	a ()Ljava/lang/IllegalStateException; lambda$null$4
	b ()Ljava/lang/IllegalStateException; lambda$null$3
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either; lambda$null$2
	c ()Ljava/lang/IllegalStateException; lambda$null$1
	d ()Ljava/lang/IllegalStateException; lambda$null$0
aid net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aie net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double; lambda$fixTag$0
aif net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
aig net/minecraft/util/datafix/fixes/EntityStringUuidFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
aih net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
aii net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
aij net/minecraft/util/datafix/fixes/EntityUUIDFix
	c ABSTRACT_HORSES
	d TAMEABLE_ANIMALS
	e ANIMALS
	f MOBS
	g LIVING_ENTITIES
	h PROJECTILES
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePiglin
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEvokerFangs
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateZombieVillager
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAreaEffectCloud
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateShulkerBullet
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItem
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateFox
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHurtBy
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimalOwner
	m (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimal
	n (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMob
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLivingEntity
	o (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateProjectile
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntityUUID
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateProjectile$14
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateLivingEntity$13
	p (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$12
	c (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$11
	q (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$10
	r (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateMob$9
	d (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$8
	e (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$7
	s (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	t (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	u (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updatePiglin$4
	v (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	w (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	x (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
aik net/minecraft/util/datafix/fixes/EntityWolfColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
ail net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
aim net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a RANDOM
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	<clinit> ()V <clinit>
ain net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	a RENAMED_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
aio net/minecraft/util/datafix/fixes/ForcePoiRebuild
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
aip net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFurnaceContents
	a (Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V lambda$updateFurnaceContents$5
	a (Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V lambda$null$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$3
	b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	c (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	d (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
aiq net/minecraft/util/datafix/fixes/GossipUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$1
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
air net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
ais net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; removeIglooPieces
	c (Lcom/mojang/serialization/Dynamic;)Z isIglooPiece
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$removeIglooPieces$2
	d (Lcom/mojang/serialization/Dynamic;)Z lambda$null$1
	b (Ljava/util/stream/Stream;)Ljava/lang/Boolean; lambda$fixTag$0
ait net/minecraft/util/datafix/fixes/ItemBannerColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
aiu net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
aiv net/minecraft/util/datafix/fixes/ItemIdFix
	a ITEM_NAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (I)Ljava/lang/String; getItem
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aiw net/minecraft/util/datafix/fixes/ItemLoreFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixLoreList$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
aix net/minecraft/util/datafix/fixes/ItemPotionFix
	a POTIONS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a ([Ljava/lang/String;)V lambda$static$0
	<clinit> ()V <clinit>
aiy net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
aiy$1 net/minecraft/util/datafix/fixes/ItemRenameFix$1
	a val$fixItem
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
aiz net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
aja net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	a ID_TO_ENTITY
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$6
	a ()Ljava/lang/IllegalStateException; lambda$null$5
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$null$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$3
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$2
	c (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$1
	a ([Ljava/lang/String;)V lambda$static$0
	<clinit> ()V <clinit>
ajb net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$7
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$6
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ajc net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ajd net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aje net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ajf net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAttributeModifiers
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkullOwner
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkullOwner$6
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateAttributeModifiers$5
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean; lambda$null$0
ajg net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ajh net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$2
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
aji net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
ajj net/minecraft/util/datafix/fixes/JigsawRotationFix
	a renames
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
	<clinit> ()V <clinit>
ajk net/minecraft/util/datafix/fixes/LeavesFix
	a DIRECTIONS
	b LEAVES
	c LOGS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (III)I getIndex
	a (I)I getX
	b (I)I getY
	c (I)I getZ
	a (ZZZZ)I getSideMask
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	a ([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	a (Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lajk$a;)Lajk$a; lambda$null$2
	a (Lcom/mojang/datafixers/Typed;)Lajk$a; lambda$null$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	a ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; access$000
	b ()Ljava/util/Set; access$100
	<clinit> ()V <clinit>
ajk$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	e leaveIds
	f logIds
	g stateToIdMap
	<init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a ()Z skippable
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; makeLeafTag
	a (I)Z isLog
	b (I)Z isLeaf
	d (I)I getDistance
	a (III)V setDistance
	a (Lajk$a;I)I access$200
	a (Lajk$a;III)V access$300
ajk$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	e blockStateType
	a paletteFinder
	b palette
	c index
	d storage
	<init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)V readStorage
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	b ()Z isSkippable
	c (I)I getBlock
	a (Ljava/lang/String;ZI)I getStateId
	c ()I getIndex
	a ()Z skippable
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$write$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$write$1
	a (Ljava/util/List;)Ljava/util/List; lambda$new$0
ajl net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; convert
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	a (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$convert$6
	b (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object; lambda$convert$4
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a ()Ljava/lang/IllegalStateException; lambda$null$2
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ajm net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	a SPLITTER
	b LAYER_SPLITTER
	c OLD_AMOUNT_SPLITTER
	d AMOUNT_SPLITTER
	e BLOCK_SPLITTER
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Ljava/lang/String;)Ljava/lang/String; fixString
	a (Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String; lambda$fixString$2
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
ajn net/minecraft/util/datafix/fixes/LevelUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateWanderingTrader
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDragonFight
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateCustomBossEvents
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$12
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$11
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$10
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$9
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$8
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateDragonFight$6
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ajo net/minecraft/util/datafix/fixes/MapIdFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ajp net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateBrain
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMemories
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; updateMemoryEntry
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; wrapMemoryValue
ajq net/minecraft/util/datafix/fixes/MissingDimensionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; fields
	b (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; recreateSettings
	a (Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
ajr net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
ajs net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ajt net/minecraft/util/datafix/fixes/NewVillageFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$13
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$12
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$11
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$9
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$8
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Ljava/util/List;)Ljava/util/List; lambda$null$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$null$0
aju net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
ajv net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Lddn$a; getRenderType
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ajw net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
ajx net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ajy net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)D calculateBackground
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ajz net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
aka net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
akb net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
akc net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
akd net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	a fixName
	b fieldFrom
	c fieldTo
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
ake net/minecraft/util/datafix/fixes/PlayerUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
akf net/minecraft/util/datafix/fixes/PoiTypeRename
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	b (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; renameRecords
	a (Ljava/lang/String;)Ljava/lang/String; rename
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic; lambda$renameRecords$8
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$5
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$4
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
akg net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
akh net/minecraft/util/datafix/fixes/RecipesRenameFix
	a name
	b renamer
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
aki net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
akj net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateRedstoneConnections
	a (Ljava/lang/String;)Z isConnected
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$5
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	b (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	c (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	d (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
akk net/minecraft/util/datafix/fixes/References
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k BLOCK_ENTITY
	l ITEM_STACK
	m BLOCK_STATE
	n ENTITY_NAME
	o ENTITY_TREE
	p ENTITY
	q BLOCK_NAME
	r ITEM_NAME
	s UNTAGGED_SPAWNER
	t STRUCTURE_FEATURE
	u OBJECTIVE
	v TEAM
	w RECIPE
	x BIOME
	y WORLD_GEN_SETTINGS
	<init> ()V <init>
	a ()Ljava/lang/String; lambda$static$24
	b ()Ljava/lang/String; lambda$static$23
	c ()Ljava/lang/String; lambda$static$22
	d ()Ljava/lang/String; lambda$static$21
	e ()Ljava/lang/String; lambda$static$20
	f ()Ljava/lang/String; lambda$static$19
	g ()Ljava/lang/String; lambda$static$18
	h ()Ljava/lang/String; lambda$static$17
	i ()Ljava/lang/String; lambda$static$16
	j ()Ljava/lang/String; lambda$static$15
	k ()Ljava/lang/String; lambda$static$14
	l ()Ljava/lang/String; lambda$static$13
	m ()Ljava/lang/String; lambda$static$12
	n ()Ljava/lang/String; lambda$static$11
	o ()Ljava/lang/String; lambda$static$10
	p ()Ljava/lang/String; lambda$static$9
	q ()Ljava/lang/String; lambda$static$8
	r ()Ljava/lang/String; lambda$static$7
	s ()Ljava/lang/String; lambda$static$6
	t ()Ljava/lang/String; lambda$static$5
	u ()Ljava/lang/String; lambda$static$4
	v ()Ljava/lang/String; lambda$static$3
	w ()Ljava/lang/String; lambda$static$2
	x ()Ljava/lang/String; lambda$static$1
	y ()Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
akl net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$1
	b (Lcom/mojang/serialization/Dynamic;)Z lambda$null$0
akm net/minecraft/util/datafix/fixes/RenameBiomesFix
	a name
	b biomes
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/Map;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
akn net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
	<init> ()V <init>
	<clinit> ()V <clinit>
ako net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
	<init> ()V <init>
	<clinit> ()V <clinit>
akp net/minecraft/util/datafix/fixes/ReorganizePoi
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
akq net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
akr net/minecraft/util/datafix/fixes/SavedDataVillageCropFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateChildren
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSingleField
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDoubleField
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateCrop
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateChildren$0
aks net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	<init> (Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
akt net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	<init> (Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; rename
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String; lambda$null$0
aku net/minecraft/util/datafix/fixes/StatsCounterFix
	a SKIP
	b CUSTOM_MAP
	c ITEM_KEYS
	d ENTITY_KEYS
	e ENTITIES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a ()Ljava/lang/IllegalStateException; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	<clinit> ()V <clinit>
akv net/minecraft/util/datafix/fixes/StriderGravityFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
akw net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; setCountToAtLeastOne
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$setCountToAtLeastOne$2
	a (Ljava/lang/Integer;)Z lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
akx net/minecraft/util/datafix/fixes/SwimStatsRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
aky net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
akz net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
	<clinit> ()V <clinit>
akz$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	e chestIds
	<init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a ()Z skippable
	a (I)Z isTrappedChest
ala net/minecraft/util/datafix/fixes/VillagerDataFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (II)Ljava/lang/String; upgradeData
alb net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
alc net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
	a (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addXpFromLevel$6
	b (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addLevel$5
	c (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer; lambda$null$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$0
	<clinit> ()V <clinit>
ald net/minecraft/util/datafix/fixes/VillagerTradeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateItemStack$5
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$0
ale net/minecraft/util/datafix/fixes/WallPropertyFix
	a WALL_BLOCKS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; mapProperty
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; fixWallProperty
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$upgradeBlockStateTag$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixWallProperty$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
alf net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	a DEFAULTS
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; noise
	a (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; vanillaBiomeSource
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; defaultOverworld
	a (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; vanillaLevels
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; fixFlatStructures
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V setSpacing
	a (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic; lambda$fixFlatStructures$12
	a (Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic; lambda$fixFlatStructures$11
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V lambda$fixFlatStructures$10
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$null$9
	a (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V lambda$null$8
	a (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$null$7
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V lambda$fix$6
	b (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$fix$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
	a (Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$fix$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fix$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
alf$a net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	<init> (III)V <init>
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	d (Lalf$a;)Ljava/lang/Integer; lambda$null$2
	e (Lalf$a;)Ljava/lang/Integer; lambda$null$1
	f (Lalf$a;)Ljava/lang/Integer; lambda$null$0
	a (Lalf$a;)I access$000
	b (Lalf$a;)I access$100
	c (Lalf$a;)I access$200
	<clinit> ()V <clinit>
alg net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
alh net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
ali net/minecraft/util/datafix/fixes/package-info
alj net/minecraft/util/datafix/package-info
alk net/minecraft/util/datafix/schemas/NamespacedSchema
	a NAMESPACED_STRING_CODEC
	b NAMESPACED_STRING
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
	a ()Lcom/mojang/datafixers/types/Type; namespacedString
	getChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; getChoiceType
	<clinit> ()V <clinit>
alk$1 net/minecraft/util/datafix/schemas/NamespacedSchema$1
	<init> ()V <init>
	read (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; read
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object; write
	toString ()Ljava/lang/String; toString
	write (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; write
all net/minecraft/util/datafix/schemas/V100
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
alm net/minecraft/util/datafix/schemas/V102
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
aln net/minecraft/util/datafix/schemas/V1022
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
alo net/minecraft/util/datafix/schemas/V106
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
alp net/minecraft/util/datafix/schemas/V107
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
alq net/minecraft/util/datafix/schemas/V1125
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
alr net/minecraft/util/datafix/schemas/V135
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
als net/minecraft/util/datafix/schemas/V143
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
alt net/minecraft/util/datafix/schemas/V1451
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
alu net/minecraft/util/datafix/schemas/V1451_1
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
alv net/minecraft/util/datafix/schemas/V1451_2
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
alw net/minecraft/util/datafix/schemas/V1451_3
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
alx net/minecraft/util/datafix/schemas/V1451_4
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
aly net/minecraft/util/datafix/schemas/V1451_5
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
alz net/minecraft/util/datafix/schemas/V1451_6
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ama net/minecraft/util/datafix/schemas/V1451_7
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
amb net/minecraft/util/datafix/schemas/V1460
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$45
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$44
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$43
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$42
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$41
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$40
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$39
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$38
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$37
	e ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$36
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$35
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$34
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$33
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$32
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	f ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$26
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$25
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$24
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	w (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	x (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	y (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	m (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amc net/minecraft/util/datafix/schemas/V1466
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
amd net/minecraft/util/datafix/schemas/V1470
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
ame net/minecraft/util/datafix/schemas/V1481
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
amf net/minecraft/util/datafix/schemas/V1483
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
amg net/minecraft/util/datafix/schemas/V1486
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
amh net/minecraft/util/datafix/schemas/V1510
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
ami net/minecraft/util/datafix/schemas/V1800
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amj net/minecraft/util/datafix/schemas/V1801
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amk net/minecraft/util/datafix/schemas/V1904
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
aml net/minecraft/util/datafix/schemas/V1906
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
amm net/minecraft/util/datafix/schemas/V1909
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
amn net/minecraft/util/datafix/schemas/V1920
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
amo net/minecraft/util/datafix/schemas/V1928
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amp net/minecraft/util/datafix/schemas/V1929
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
amq net/minecraft/util/datafix/schemas/V1931
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amr net/minecraft/util/datafix/schemas/V2100
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
ams net/minecraft/util/datafix/schemas/V2501
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerFurnace
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerFurnace$0
amt net/minecraft/util/datafix/schemas/V2502
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amu net/minecraft/util/datafix/schemas/V2505
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amv net/minecraft/util/datafix/schemas/V2509
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amw net/minecraft/util/datafix/schemas/V2519
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amx net/minecraft/util/datafix/schemas/V2522
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
amy net/minecraft/util/datafix/schemas/V2551
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$4
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$3
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$2
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$1
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$0
amz net/minecraft/util/datafix/schemas/V2568
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
ana net/minecraft/util/datafix/schemas/V501
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
anb net/minecraft/util/datafix/schemas/V700
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
anc net/minecraft/util/datafix/schemas/V701
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
and net/minecraft/util/datafix/schemas/V702
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
ane net/minecraft/util/datafix/schemas/V703
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
anf net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	getChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; getChoiceType
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Ljava/util/HashMap;)V lambda$static$6
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$3
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	<clinit> ()V <clinit>
anf$1 net/minecraft/util/datafix/schemas/V704$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
ang net/minecraft/util/datafix/schemas/V705
	b ADD_NAMES
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	<clinit> ()V <clinit>
ang$1 net/minecraft/util/datafix/schemas/V705$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
anh net/minecraft/util/datafix/schemas/V808
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
ani net/minecraft/util/datafix/schemas/V99
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a ADD_NAMES
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addNames$35
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$34
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$33
	a (Ljava/util/HashMap;)V lambda$static$32
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$26
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$23
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$22
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$21
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$20
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$19
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$3
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMinecart$2
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a ()Ljava/util/Map; access$000
	<clinit> ()V <clinit>
ani$1 net/minecraft/util/datafix/schemas/V99$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
anj net/minecraft/util/datafix/schemas/package-info
ank net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	a LOGGER
	b server
	c mBeanInfo
	d attributeDescriptionByName
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;)V registerJmxMonitoring
	a ()F getAverageTickTime
	b ()[J getTickTimes
	getAttribute (Ljava/lang/String;)Ljava/lang/Object; getAttribute
	setAttribute (Ljavax/management/Attribute;)V setAttribute
	getAttributes ([Ljava/lang/String;)Ljavax/management/AttributeList; getAttributes
	setAttributes (Ljavax/management/AttributeList;)Ljavax/management/AttributeList; setAttributes
	invoke (Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object; invoke
	getMBeanInfo ()Ljavax/management/MBeanInfo; getMBeanInfo
	a (Lank$a;)Ljavax/management/Attribute; lambda$getAttributes$3
	a (I)[Ljavax/management/MBeanAttributeInfo; lambda$new$2
	a (Ljava/lang/Object;)Ljavax/management/MBeanAttributeInfo; lambda$new$1
	b (Lank$a;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
ank$1 net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$1
ank$a net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	a name
	b getter
	c description
	d type
	<init> (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V <init>
	a ()Ljavax/management/MBeanAttributeInfo; asMBeanAttributeInfo
	<init> (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;Lank$1;)V <init>
	a (Lank$a;)Ljava/util/function/Supplier; access$100
	b (Lank$a;)Ljava/lang/String; access$200
	c (Lank$a;)Ljavax/management/MBeanAttributeInfo; access$300
anl net/minecraft/util/package-info
anm net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	b LOGGER
	c paths
	d startTimes
	e entries
	f getTickTime
	g getRealTime
	h startTimeNano
	i startTimeTicks
	j path
	k started
	l currentEntry
	m warn
	<init> (Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V <init>
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	e ()Lanm$a; getCurrentEntry
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	d ()Lans; getResults
	d (Ljava/lang/String;)Lanm$a; lambda$getCurrentEntry$3
	a (J)Ljava/lang/Object; lambda$pop$2
	f ()Ljava/lang/Object; lambda$pop$1
	g ()Ljava/lang/Object; lambda$endTick$0
	<clinit> ()V <clinit>
anm$1 net/minecraft/util/profiling/ActiveProfiler$1
anm$a net/minecraft/util/profiling/ActiveProfiler$PathEntry
	a duration
	b count
	c counters
	<init> ()V <init>
	a ()J getDuration
	b ()J getCount
	c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
	a (Lanm$a;)J access$000
	a (Lanm$a;J)J access$002
	b (Lanm$a;)J access$100
	b (Lanm$a;J)J access$102
	c (Lanm$a;)Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap; access$200
	<init> (Lanm$1;)V <init>
ann net/minecraft/util/profiling/ContinuousProfiler
	a realTime
	b tickCount
	c profiler
	<init> (Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V <init>
	a ()Z isEnabled
	b ()V disable
	c ()V enable
	d ()Lant; getFiller
	e ()Lans; getResults
ano net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/io/File;)Z saveResults
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	<clinit> ()V <clinit>
anp net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b EMPTY
	c SPLITTER
	d COUNTER_ENTRY_COMPARATOR
	e entries
	f startTimeNano
	g startTimeTicks
	h endTimeNano
	i endTimeTicks
	j tickDuration
	<init> (Ljava/util/Map;JIJI)V <init>
	c (Ljava/lang/String;)Lanu; getEntry
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/lang/String;Ljava/lang/String;)Z isDirectChild
	h ()Ljava/util/Map; getCounterValues
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	a (Ljava/io/File;)Z saveResults
	a (JI)Ljava/lang/String; getProfilerResults
	e ()Ljava/lang/String; getProfilerResults
	a (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; indentLine
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (ILjava/lang/String;Lanp$a;ILjava/lang/StringBuilder;)V appendCounterResults
	a (Ljava/util/Map;Ljava/lang/StringBuilder;I)V appendCounters
	i ()Ljava/lang/String; getComment
	f ()I getTickDuration
	a (Ljava/lang/StringBuilder;ILjava/lang/String;Lanp$a;)V lambda$appendCounters$6
	a (IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V lambda$appendCounterResults$5
	a (Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V lambda$appendProfilerResults$4
	a (Ljava/util/Map;Ljava/lang/String;Lanu;)V lambda$getCounterValues$3
	a (Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V lambda$null$2
	d (Ljava/lang/String;)Lanp$a; lambda$null$1
	a (Lanp$a;)J lambda$static$0
	<clinit> ()V <clinit>
anp$1 net/minecraft/util/profiling/FilledProfileResults$1
	<init> ()V <init>
	a ()J getDuration
	b ()J getCount
	c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
anp$a net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	a selfValue
	b totalValue
	c children
	<init> ()V <init>
	a (Ljava/util/Iterator;J)V addValue
	a (Ljava/lang/String;)Lanp$a; lambda$addValue$0
	a (Lanp$a;)J access$000
	b (Lanp$a;)J access$100
	c (Lanp$a;)Ljava/util/Map; access$200
	<init> (Lanp$1;)V <init>
anq net/minecraft/util/profiling/InactiveProfiler
	a INSTANCE
	<init> ()V <init>
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	d ()Lans; getResults
	<clinit> ()V <clinit>
anr net/minecraft/util/profiling/ProfileCollector
	d ()Lans; getResults
ans net/minecraft/util/profiling/ProfileResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/io/File;)Z saveResults
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	g ()J getNanoDuration
	f ()I getTickDuration
	e ()Ljava/lang/String; getProfilerResults
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
ant net/minecraft/util/profiling/ProfilerFiller
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	a (Lant;Lant;)Lant; tee
ant$1 net/minecraft/util/profiling/ProfilerFiller$1
	a val$first
	b val$second
	<init> (Lant;Lant;)V <init>
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
anu net/minecraft/util/profiling/ProfilerPathEntry
	a ()J getDuration
	b ()J getCount
	c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
anv net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	<init> (Ljava/lang/String;DDJ)V <init>
	a (Lanv;)I compareTo
	a ()I getColor
	compareTo (Ljava/lang/Object;)I compareTo
anw net/minecraft/util/profiling/SingleTickProfiler
	a LOGGER
	b realTime
	c saveThreshold
	d tick
	e location
	f profiler
	<init> (Ljava/util/function/LongSupplier;Ljava/lang/String;J)V <init>
	a ()Lant; startTick
	b ()V endTick
	a (Ljava/lang/String;)Lanw; createTickProfiler
	a (Lant;Lanw;)Lant; decorateFiller
	c ()I lambda$startTick$0
	<clinit> ()V <clinit>
anx net/minecraft/util/profiling/package-info
any net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	<init> (Ljava/lang/String;)V <init>
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Ljava/lang/Runnable;)Z shouldRun
	bg ()Z isSameThread
	av ()Ljava/lang/Thread; getRunningThread
	au ()Z scheduleExecutables
	bh ()I getPendingTasksCount
	bi ()Ljava/lang/String; name
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	f (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	g (Ljava/lang/Runnable;)V executeBlocking
	h (Ljava/lang/Runnable;)V tell
	execute (Ljava/lang/Runnable;)V execute
	bj ()V dropAllTasks
	bk ()V runAllTasks
	y ()Z pollTask
	c (Ljava/util/function/BooleanSupplier;)V managedBlock
	bl ()V waitForTasks
	c (Ljava/lang/Runnable;)V doRunTask
	a (Ljava/lang/Object;)V tell
	b (Ljava/lang/Runnable;)Ljava/lang/Void; lambda$submitAsync$0
	<clinit> ()V <clinit>
anz net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
	<init> (Ljava/lang/String;)V <init>
	newThread (Ljava/lang/Runnable;)Ljava/lang/Thread; newThread
	a (Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$newThread$0
	<clinit> ()V <clinit>
aoa net/minecraft/util/thread/ProcessorHandle
	bi ()Ljava/lang/String; name
	a (Ljava/lang/Object;)V tell
	close ()V close
	b (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; askEither
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Laoa; of
	a (Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V lambda$askEither$0
aoa$1 net/minecraft/util/thread/ProcessorHandle$1
	a val$name
	b val$tell
	<init> (Ljava/lang/String;Ljava/util/function/Consumer;)V <init>
	bi ()Ljava/lang/String; name
	a (Ljava/lang/Object;)V tell
	toString ()Ljava/lang/String; toString
aob net/minecraft/util/thread/ProcessorMailbox
	b LOGGER
	c status
	a queue
	d dispatcher
	e name
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Laob; create
	<init> (Laod;Ljava/util/concurrent/Executor;Ljava/lang/String;)V <init>
	a ()Z setAsScheduled
	b ()V setAsIdle
	c ()Z canBeScheduled
	close ()V close
	d ()Z shouldProcess
	e ()Z pollTask
	run ()V run
	a (Ljava/lang/Object;)V tell
	f ()V registerForExecution
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	toString ()Ljava/lang/String; toString
	bi ()Ljava/lang/String; name
	a (I)Z lambda$run$0
	<clinit> ()V <clinit>
aoc net/minecraft/util/thread/ReentrantBlockableEventLoop
	b reentrantCount
	<init> (Ljava/lang/String;)V <init>
	au ()Z scheduleExecutables
	bm ()Z runningTask
	c (Ljava/lang/Runnable;)V doRunTask
aod net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
aod$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queueList
	<init> (I)V <init>
	c ()Ljava/lang/Runnable; pop
	a (Laod$b;)Z push
	b ()Z isEmpty
	a (Ljava/lang/Object;)Z push
	a ()Ljava/lang/Object; pop
	a (I)Ljava/util/concurrent/ConcurrentLinkedQueue; lambda$new$0
aod$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	<init> (ILjava/lang/Runnable;)V <init>
	run ()V run
	a ()I getPriority
aod$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	<init> (Ljava/util/Queue;)V <init>
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
aoe net/minecraft/util/thread/package-info
aof net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c levels
	d eraseCache
	e levelStorage
	f thread
	g dataFixer
	h running
	i finished
	j progress
	k totalChunks
	l converted
	m skipped
	n progressMap
	o status
	p REGEX
	q overworldDataStorage
	<init> (Lcyd$a;Lcom/mojang/datafixers/DataFixer;Lcom/google/common/collect/ImmutableSet;Z)V <init>
	a ()V cancel
	i ()V work
	b (Lvj;)Ljava/util/List; getAllChunkPos
	b ()Z isFinished
	c ()Lcom/google/common/collect/ImmutableSet; levels
	a (Lvj;)F dimensionProgress
	d ()F getProgress
	e ()I getTotalChunks
	f ()I getConverted
	g ()I getSkipped
	h ()Lnr; getStatus
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$getAllChunkPos$2
	j ()Lcxz; lambda$work$1
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$new$0
	<clinit> ()V <clinit>
aog net/minecraft/util/worldupdate/package-info
aoh net/minecraft/world/BossEvent
	h id
	a name
	b percent
	c color
	d overlay
	e darkenScreen
	f playBossMusic
	g createWorldFog
	<init> (Ljava/util/UUID;Lnr;Laoh$a;Laoh$b;)V <init>
	i ()Ljava/util/UUID; getId
	j ()Lnr; getName
	a (Lnr;)V setName
	k ()F getPercent
	a (F)V setPercent
	l ()Laoh$a; getColor
	a (Laoh$a;)V setColor
	m ()Laoh$b; getOverlay
	a (Laoh$b;)V setOverlay
	n ()Z shouldDarkenScreen
	a (Z)Laoh; setDarkenScreen
	o ()Z shouldPlayBossMusic
	b (Z)Laoh; setPlayBossMusic
	c (Z)Laoh; setCreateWorldFog
	p ()Z shouldCreateWorldFog
aoh$a net/minecraft/world/BossEvent$BossBarColor
	a PINK
	b BLUE
	c RED
	d GREEN
	e YELLOW
	f PURPLE
	g WHITE
	h name
	i formatting
	j $VALUES
	values ()[Laoh$a; values
	valueOf (Ljava/lang/String;)Laoh$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lk;)V <init>
	a ()Lk; getFormatting
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Laoh$a; byName
	<clinit> ()V <clinit>
aoh$b net/minecraft/world/BossEvent$BossBarOverlay
	a PROGRESS
	b NOTCHED_6
	c NOTCHED_10
	d NOTCHED_12
	e NOTCHED_20
	f name
	g $VALUES
	values ()[Laoh$b; values
	valueOf (Ljava/lang/String;)Laoh$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Laoh$b; byName
	<clinit> ()V <clinit>
aoi net/minecraft/world/Clearable
	Y_ ()V clearContent
	a (Ljava/lang/Object;)V tryClear
aoj net/minecraft/world/CompoundContainer
	a container1
	b container2
	<init> (Laok;Laok;)V <init>
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (Laok;)Z contains
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	c_ (Lbft;)V startOpen
	b_ (Lbft;)V stopOpen
	b (ILbly;)Z canPlaceItem
	Y_ ()V clearContent
aok net/minecraft/world/Container
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	c_ (Lbft;)V startOpen
	b_ (Lbft;)V stopOpen
	b (ILbly;)Z canPlaceItem
	a (Lblu;)I countItem
	a (Ljava/util/Set;)Z hasAnyOf
aol net/minecraft/world/ContainerHelper
	<init> ()V <init>
	a (Ljava/util/List;II)Lbly; removeItem
	a (Ljava/util/List;I)Lbly; takeItem
	a (Lmd;Lgj;)Lmd; saveAllItems
	a (Lmd;Lgj;Z)Lmd; saveAllItems
	b (Lmd;Lgj;)V loadAllItems
	a (Laok;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	a (Lbly;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
aom net/minecraft/world/ContainerListener
	a (Laok;)V containerChanged
aon net/minecraft/world/Containers
	a RANDOM
	<init> ()V <init>
	a (Lbru;Lfx;Laok;)V dropContents
	a (Lbru;Lapx;Laok;)V dropContents
	a (Lbru;DDDLaok;)V dropContents
	a (Lbru;Lfx;Lgj;)V dropContents
	a (Lbru;DDDLbly;)V dropItemStack
	a (Lbru;Lfx;Lbly;)V lambda$dropContents$0
	<clinit> ()V <clinit>
aoo net/minecraft/world/Difficulty
	a PEACEFUL
	b EASY
	c NORMAL
	d HARD
	e BY_ID
	f id
	g key
	h $VALUES
	values ()[Laoo; values
	valueOf (Ljava/lang/String;)Laoo; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Lnr; getDisplayName
	a (I)Laoo; byId
	a (Ljava/lang/String;)Laoo; byName
	c ()Ljava/lang/String; getKey
	d ()Laoo; nextById
	b (I)[Laoo; lambda$static$0
	<clinit> ()V <clinit>
aop net/minecraft/world/DifficultyInstance
	a base
	b effectiveDifficulty
	<init> (Laoo;JJF)V <init>
	a ()Laoo; getDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	a (F)Z isHarderThan
	d ()F getSpecialMultiplier
	a (Laoo;JJF)F calculateDifficulty
aoq net/minecraft/world/InteractionHand
	a MAIN_HAND
	b OFF_HAND
	c $VALUES
	values ()[Laoq; values
	valueOf (Ljava/lang/String;)Laoq; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
aor net/minecraft/world/InteractionResult
	a SUCCESS
	b CONSUME
	c PASS
	d FAIL
	e $VALUES
	values ()[Laor; values
	valueOf (Ljava/lang/String;)Laor; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z consumesAction
	b ()Z shouldSwing
	a (Z)Laor; sidedSuccess
	<clinit> ()V <clinit>
aos net/minecraft/world/InteractionResultHolder
	a result
	b object
	<init> (Laor;Ljava/lang/Object;)V <init>
	a ()Laor; getResult
	b ()Ljava/lang/Object; getObject
	a (Ljava/lang/Object;)Laos; success
	b (Ljava/lang/Object;)Laos; consume
	c (Ljava/lang/Object;)Laos; pass
	d (Ljava/lang/Object;)Laos; fail
	a (Ljava/lang/Object;Z)Laos; sidedSuccess
aot net/minecraft/world/LockCode
	a NO_LOCK
	b key
	<init> (Ljava/lang/String;)V <init>
	a (Lbly;)Z unlocksWith
	a (Lmd;)V addToTag
	b (Lmd;)Laot; fromTag
	<clinit> ()V <clinit>
aou net/minecraft/world/MenuProvider
	d ()Lnr; getDisplayName
aov net/minecraft/world/Nameable
	Q ()Lnr; getName
	R ()Z hasCustomName
	d ()Lnr; getDisplayName
	S ()Lnr; getCustomName
aow net/minecraft/world/ShulkerSharedHelper
	<init> ()V <init>
	a (Lfx;Lgc;)Ldcf; openBoundingBox
aox net/minecraft/world/SimpleContainer
	a size
	b items
	c listeners
	<init> (I)V <init>
	<init> ([Lbly;)V <init>
	a (Laom;)V addListener
	b (Laom;)V removeListener
	a (I)Lbly; getItem
	f ()Ljava/util/List; removeAllItems
	a (II)Lbly; removeItem
	a (Lblu;I)Lbly; removeItemType
	a (Lbly;)Lbly; addItem
	b (Lbly;)Z canAddItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	Z_ ()I getContainerSize
	c ()Z isEmpty
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	Y_ ()V clearContent
	a (Lbfv;)V fillStackedContents
	toString ()Ljava/lang/String; toString
	c (Lbly;)V moveItemToEmptySlots
	d (Lbly;)V moveItemToOccupiedSlotsWithSameType
	a (Lbly;Lbly;)Z isSameItem
	b (Lbly;Lbly;)V moveItemsBetweenStacks
	a (Lmj;)V fromTag
	g ()Lmj; createTag
	e (Lbly;)Z lambda$toString$1
	f (Lbly;)Z lambda$removeAllItems$0
aoy net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	<init> (Lbja;Lnr;)V <init>
	d ()Lnr; getDisplayName
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
aoz net/minecraft/world/Snooper
	a fixedData
	b dynamicData
	c token
	d url
	e populator
	f timer
	g lock
	h startupTime
	i started
	j count
	<init> (Ljava/lang/String;Lapa;J)V <init>
	a ()V start
	h ()V populateFixedData
	i ()V setJvmArgs
	b ()V prepare
	a (Ljava/lang/String;Ljava/lang/Object;)V setDynamicData
	b (Ljava/lang/String;Ljava/lang/Object;)V setFixedData
	c ()Ljava/util/Map; getValues
	d ()Z isStarted
	e ()V interrupt
	f ()Ljava/lang/String; getToken
	g ()J getStartupTime
	a ([ILjava/lang/String;)V lambda$setJvmArgs$0
	a (Laoz;)Lapa; access$000
	b (Laoz;)Ljava/lang/Object; access$100
	c (Laoz;)Ljava/util/Map; access$200
	d (Laoz;)I access$300
	e (Laoz;)Ljava/util/Map; access$400
	f (Laoz;)I access$308
	g (Laoz;)Ljava/lang/String; access$500
	h (Laoz;)Ljava/net/URL; access$600
aoz$1 net/minecraft/world/Snooper$1
	a this$0
	<init> (Laoz;)V <init>
	run ()V run
apa net/minecraft/world/SnooperPopulator
	a (Laoz;)V populateSnooper
	b (Laoz;)V populateSnooperInitial
	T ()Z isSnooperEnabled
apb net/minecraft/world/WorldlyContainer
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
apc net/minecraft/world/WorldlyContainerHolder
	a (Lcee;Lbrv;Lfx;)Lapb; getContainer
apd net/minecraft/world/damagesource/BadRespawnPointDamage
	<init> ()V <init>
	a (Laqj;)Lnr; getLocalizedDeathMessage
	a (Lob;)Lob; lambda$getLocalizedDeathMessage$0
ape net/minecraft/world/damagesource/CombatEntry
	a source
	b time
	c damage
	d health
	e location
	f fallDistance
	<init> (Laph;IFFLjava/lang/String;F)V <init>
	a ()Laph; getSource
	b ()I getTime
	c ()F getDamage
	d ()F getHealthBeforeDamage
	e ()F getHealthAfterDamage
	f ()Z isCombatRelated
	g ()Ljava/lang/String; getLocation
	h ()Lnr; getAttackerName
	i ()Lapx; getAttacker
	j ()F getFallDistance
apf net/minecraft/world/damagesource/CombatRules
	<init> ()V <init>
	a (FFF)F getDamageAfterAbsorb
	a (FF)F getDamageAfterMagicAbsorb
apg net/minecraft/world/damagesource/CombatTracker
	a entries
	b mob
	c lastDamageTime
	d combatStartTime
	e combatEndTime
	f inCombat
	g takingDamage
	h nextLocation
	<init> (Laqj;)V <init>
	a ()V prepareForDamage
	a (Laph;FF)V recordDamage
	b ()Lnr; getDeathMessage
	c ()Laqj; getKiller
	j ()Lape; getMostSignificantFall
	a (Lape;)Ljava/lang/String; getFallLocation
	d ()Z isTakingDamage
	e ()Z isInCombat
	f ()I getCombatDuration
	k ()V resetPreparedStatus
	g ()V recheckStatus
	h ()Laqj; getMob
	i ()Lape; getLastEntry
aph net/minecraft/world/damagesource/DamageSource
	a IN_FIRE
	b LIGHTNING_BOLT
	c ON_FIRE
	d LAVA
	e HOT_FLOOR
	f IN_WALL
	g CRAMMING
	h DROWN
	i STARVE
	j CACTUS
	k FALL
	l FLY_INTO_WALL
	m OUT_OF_WORLD
	n GENERIC
	o MAGIC
	p WITHER
	q ANVIL
	r FALLING_BLOCK
	s DRAGON_BREATH
	t DRY_OUT
	u SWEET_BERRY_BUSH
	w bypassArmor
	x bypassInvul
	y bypassMagic
	z exhaustion
	A isFireSource
	B isProjectile
	C scalesWithDifficulty
	D isMagic
	E isExplosion
	v msgId
	b (Laqj;)Laph; sting
	c (Laqj;)Laph; mobAttack
	a (Lapx;Laqj;)Laph; indirectMobAttack
	a (Lbft;)Laph; playerAttack
	a (Lbfx;Lapx;)Laph; arrow
	a (Lapx;Lapx;)Laph; trident
	a (Lbge;Lapx;)Laph; fireworks
	a (Lbgd;Lapx;)Laph; fireball
	a (Lbgw;Lapx;)Laph; witherSkull
	b (Lapx;Lapx;)Laph; thrown
	c (Lapx;Lapx;)Laph; indirectMagic
	a (Lapx;)Laph; thorns
	a (Lbrm;)Laph; explosion
	d (Laqj;)Laph; explosion
	a ()Laph; badRespawnPointExplosion
	toString ()Ljava/lang/String; toString
	b ()Z isProjectile
	c ()Laph; setProjectile
	d ()Z isExplosion
	e ()Laph; setExplosion
	f ()Z isBypassArmor
	g ()F getFoodExhaustion
	h ()Z isBypassInvul
	i ()Z isBypassMagic
	<init> (Ljava/lang/String;)V <init>
	j ()Lapx; getDirectEntity
	k ()Lapx; getEntity
	l ()Laph; bypassArmor
	m ()Laph; bypassInvul
	n ()Laph; bypassMagic
	o ()Laph; setIsFire
	a (Laqj;)Lnr; getLocalizedDeathMessage
	p ()Z isFire
	q ()Ljava/lang/String; getMsgId
	r ()Laph; setScalesWithDifficulty
	s ()Z scalesWithDifficulty
	t ()Z isMagic
	u ()Laph; setMagic
	v ()Z isCreativePlayer
	w ()Ldck; getSourcePosition
	<clinit> ()V <clinit>
api net/minecraft/world/damagesource/EntityDamageSource
	w entity
	x isThorns
	<init> (Ljava/lang/String;Lapx;)V <init>
	x ()Lapi; setThorns
	y ()Z isThorns
	k ()Lapx; getEntity
	a (Laqj;)Lnr; getLocalizedDeathMessage
	s ()Z scalesWithDifficulty
	w ()Ldck; getSourcePosition
	toString ()Ljava/lang/String; toString
apj net/minecraft/world/damagesource/IndirectEntityDamageSource
	x owner
	<init> (Ljava/lang/String;Lapx;Lapx;)V <init>
	j ()Lapx; getDirectEntity
	k ()Lapx; getEntity
	a (Laqj;)Lnr; getLocalizedDeathMessage
apk net/minecraft/world/damagesource/package-info
apl net/minecraft/world/effect/AbsoptionMobEffect
	<init> (Lapq;I)V <init>
	a (Laqj;Larf;I)V removeAttributeModifiers
	b (Laqj;Larf;I)V addAttributeModifiers
apm net/minecraft/world/effect/AttackDamageMobEffect
	a multiplier
	<init> (Lapq;ID)V <init>
	a (ILarg;)D getAttributeModifierValue
apn net/minecraft/world/effect/HealthBoostMobEffect
	<init> (Lapq;I)V <init>
	a (Laqj;Larf;I)V removeAttributeModifiers
apo net/minecraft/world/effect/InstantenousMobEffect
	<init> (Lapq;I)V <init>
	a ()Z isInstantenous
	a (II)Z isDurationEffectTick
app net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	a (I)Lapp; byId
	a (Lapp;)I getId
	<init> (Lapq;I)V <init>
	a (Laqj;I)V applyEffectTick
	a (Lapx;Lapx;Laqj;ID)V applyInstantenousEffect
	a (II)Z isDurationEffectTick
	a ()Z isInstantenous
	b ()Ljava/lang/String; getOrCreateDescriptionId
	c ()Ljava/lang/String; getDescriptionId
	d ()Lnr; getDisplayName
	e ()Lapq; getCategory
	f ()I getColor
	a (Lard;Ljava/lang/String;DLarg$a;)Lapp; addAttributeModifier
	g ()Ljava/util/Map; getAttributeModifiers
	a (Laqj;Larf;I)V removeAttributeModifiers
	b (Laqj;Larf;I)V addAttributeModifiers
	a (ILarg;)D getAttributeModifierValue
	h ()Z isBeneficial
apq net/minecraft/world/effect/MobEffectCategory
	a BENEFICIAL
	b HARMFUL
	c NEUTRAL
	d tooltipFormatting
	e $VALUES
	values ()[Lapq; values
	valueOf (Ljava/lang/String;)Lapq; valueOf
	<init> (Ljava/lang/String;ILk;)V <init>
	a ()Lk; getTooltipFormatting
	<clinit> ()V <clinit>
apr net/minecraft/world/effect/MobEffectInstance
	a LOGGER
	b effect
	c duration
	d amplifier
	e splash
	f ambient
	g noCounter
	h visible
	i showIcon
	j hiddenEffect
	<init> (Lapp;)V <init>
	<init> (Lapp;I)V <init>
	<init> (Lapp;II)V <init>
	<init> (Lapp;IIZZ)V <init>
	<init> (Lapp;IIZZZ)V <init>
	<init> (Lapp;IIZZZLapr;)V <init>
	<init> (Lapr;)V <init>
	a (Lapr;)V setDetailsFrom
	b (Lapr;)Z update
	a ()Lapp; getEffect
	b ()I getDuration
	c ()I getAmplifier
	a (Z)V setSplash
	d ()Z isAmbient
	e ()Z isVisible
	f ()Z showIcon
	a (Laqj;Ljava/lang/Runnable;)Z tick
	i ()I tickDownDuration
	a (Laqj;)V applyEffect
	g ()Ljava/lang/String; getDescriptionId
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lmd;)Lmd; save
	c (Lmd;)V writeDetailsTo
	b (Lmd;)Lapr; load
	a (Lapp;Lmd;)Lapr; loadSpecifiedEffect
	b (Z)V setNoCounter
	h ()Z isNoCounter
	c (Lapr;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
	<clinit> ()V <clinit>
aps net/minecraft/world/effect/MobEffectUtil
	<init> ()V <init>
	a (Lapr;F)Ljava/lang/String; formatDuration
	a (Laqj;)Z hasDigSpeed
	b (Laqj;)I getDigSpeedAmplification
	c (Laqj;)Z hasWaterBreathing
apt net/minecraft/world/effect/MobEffects
	a MOVEMENT_SPEED
	b MOVEMENT_SLOWDOWN
	c DIG_SPEED
	d DIG_SLOWDOWN
	e DAMAGE_BOOST
	f HEAL
	g HARM
	h JUMP
	i CONFUSION
	j REGENERATION
	k DAMAGE_RESISTANCE
	l FIRE_RESISTANCE
	m WATER_BREATHING
	n INVISIBILITY
	o BLINDNESS
	p NIGHT_VISION
	q HUNGER
	r WEAKNESS
	s POISON
	t WITHER
	u HEALTH_BOOST
	v ABSORPTION
	w SATURATION
	x GLOWING
	y LEVITATION
	z LUCK
	A UNLUCK
	B SLOW_FALLING
	C CONDUIT_POWER
	D DOLPHINS_GRACE
	E BAD_OMEN
	F HERO_OF_THE_VILLAGE
	<init> ()V <init>
	a (ILjava/lang/String;Lapp;)Lapp; register
	<clinit> ()V <clinit>
apt$1 net/minecraft/world/effect/MobEffects$1
	<init> (Lapq;I)V <init>
	a (II)Z isDurationEffectTick
	a (Laqj;I)V applyEffectTick
apu net/minecraft/world/effect/package-info
apv net/minecraft/world/entity/AgableMob
	bo DATA_BABY_ID
	b age
	c forcedAge
	d forcedAgeTimer
	<init> (Laqb;Lbru;)V <init>
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Laag;Lapv;)Lapv; getBreedOffspring
	e ()V defineSynchedData
	f ()Z canBreed
	i ()I getAge
	a (IZ)V ageUp
	a (I)V ageUp
	c_ (I)V setAge
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lus;)V onSyncedDataUpdated
	k ()V aiStep
	m ()V ageBoundaryReached
	w_ ()Z isBaby
	a (Z)V setBaby
	<clinit> ()V <clinit>
apv$a net/minecraft/world/entity/AgableMob$AgableMobGroupData
	a groupSize
	b shouldSpawnBaby
	c babySpawnChance
	<init> (ZF)V <init>
	<init> (Z)V <init>
	<init> (F)V <init>
	a ()I getGroupSize
	b ()V increaseGroupSizeByOne
	c ()Z isShouldSpawnBaby
	d ()F getBabySpawnChance
apw net/minecraft/world/entity/AreaEffectCloud
	b LOGGER
	c DATA_RADIUS
	d DATA_COLOR
	e DATA_WAITING
	f DATA_PARTICLE
	g potion
	ag effects
	ah victims
	ai duration
	aj waitTime
	ak reapplicationDelay
	al fixedColor
	am durationOnUse
	an radiusOnUse
	ao radiusPerTick
	ap owner
	aq ownerUUID
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	e ()V defineSynchedData
	a (F)V setRadius
	x_ ()V refreshDimensions
	g ()F getRadius
	a (Lbnq;)V setPotion
	x ()V updateColor
	a (Lapr;)V addEffect
	h ()I getColor
	a (I)V setFixedColor
	i ()Lhf; getParticle
	a (Lhf;)V setParticle
	a (Z)V setWaiting
	k ()Z isWaiting
	m ()I getDuration
	b (I)V setDuration
	j ()V tick
	n ()F getRadiusOnUse
	b (F)V setRadiusOnUse
	o ()F getRadiusPerTick
	c (F)V setRadiusPerTick
	p ()I getDurationOnUse
	c (I)V setDurationOnUse
	q ()I getWaitTime
	r ()V use
	s ()Z canUse
	d (I)V setWaitTime
	a (Laqj;)V setOwner
	t ()Laqj; getOwner
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	a (Lus;)V onSyncedDataUpdated
	u ()Lbnq; getPotion
	v ()Ljava/util/List; getEffects
	y_ ()Lcuz; getPistonPushReaction
	P ()Loj; getAddEntityPacket
	a (Laqu;)Lapy; getDimensions
	<clinit> ()V <clinit>
apx net/minecraft/world/entity/Entity
	h LOGGER
	b ENTITY_COUNTER
	c EMPTY_LIST
	d INITIAL_AABB
	e viewScale
	f type
	g id
	i blocksBuilding
	ag passengers
	j boardingCooldown
	ah vehicle
	k forcedLoading
	l level
	m xo
	n yo
	o zo
	ai position
	aj blockPosition
	ak deltaMovement
	p yRot
	q xRot
	r yRotO
	s xRotO
	al bb
	t onGround
	u horizontalCollision
	v verticalCollision
	w hurtMarked
	x stuckSpeedMultiplier
	y removed
	z walkDistO
	A walkDist
	B moveDist
	C fallDistance
	am nextStep
	an nextFlap
	D xOld
	E yOld
	F zOld
	G maxUpStep
	H noPhysics
	I pushthrough
	J random
	K tickCount
	ao remainingFireTicks
	L wasTouchingWater
	M fluidHeight
	N wasEyeInWater
	O fluidOnEyes
	P invulnerableTime
	Q firstTick
	R entityData
	S DATA_SHARED_FLAGS_ID
	ap DATA_AIR_SUPPLY_ID
	aq DATA_CUSTOM_NAME
	ar DATA_CUSTOM_NAME_VISIBLE
	as DATA_SILENT
	at DATA_NO_GRAVITY
	T DATA_POSE
	U inChunk
	V xChunk
	W yChunk
	X zChunk
	au movedSinceLastChunkCheck
	av packetCoordinates
	Y noCulling
	Z hasImpulse
	aw portalCooldown
	aa isInsidePortal
	ab portalTime
	ac portalEntrancePos
	ax invulnerable
	ad uuid
	ae stringUUID
	af glowing
	ay tags
	az forceChunkAddition
	aA pistonDeltas
	aB pistonDeltasGameTime
	aC dimensions
	aD eyeHeight
	<init> (Laqb;Lbru;)V <init>
	a (Lfx;Lcee;)Z isColliding
	T ()I getTeamColor
	a_ ()Z isSpectator
	U ()V unRide
	c (DDD)V setPacketCoordinates
	a (Ldck;)V setPacketCoordinates
	V ()Ldck; getPacketCoordinates
	W ()Laqb; getType
	X ()I getId
	e (I)V setId
	Y ()Ljava/util/Set; getTags
	a (Ljava/lang/String;)Z addTag
	b (Ljava/lang/String;)Z removeTag
	Z ()V kill
	e ()V defineSynchedData
	aa ()Luv; getEntityData
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	ab ()V resetPos
	ac ()V remove
	a_ (Z)V setDropContainerContent
	b (Laqu;)V setPose
	ad ()Laqu; getPose
	a (Lapx;D)Z closerThan
	a (FF)V setRot
	d (DDD)V setPos
	ae ()V reapplyPosition
	a (DD)V turn
	j ()V tick
	af ()V baseTick
	ag ()V setPortalCooldown
	ah ()Z isOnPortalCooldown
	E ()V processPortalCooldown
	ai ()I getPortalWaitTime
	aj ()V lavaHurt
	f (I)V setSecondsOnFire
	g (I)V setRemainingFireTicks
	ak ()I getRemainingFireTicks
	al ()V clearFire
	am ()V outOfWorld
	e (DDD)Z isFree
	b (Ldcf;)Z isFree
	c (Z)V setOnGround
	an ()Z isOnGround
	a (Laqo;Ldck;)V move
	ao ()Lfx; getOnPos
	ap ()F getBlockJumpFactor
	aq ()F getBlockSpeedFactor
	ar ()Lfx; getBlockPosBelowThatAffectsMyMovement
	a (Ldck;Laqo;)Ldck; maybeBackOffFromEdge
	b (Ldck;)Ldck; limitPistonMovement
	a (Lgc$a;D)D applyPistonMovementRestriction
	g (Ldck;)Ldck; collide
	c (Ldck;)D getHorizontalDistanceSqr
	a (Lapx;Ldck;Ldcf;Lbru;Ldcp;Lafl;)Ldck; collideBoundingBoxHeuristically
	a (Ldck;Ldcf;Lafl;)Ldck; collideBoundingBoxLegacy
	a (Ldck;Ldcf;Lbrw;Ldcp;Lafl;)Ldck; collideBoundingBox
	as ()F nextStep
	at ()V setLocationFromBoundingbox
	au ()Ladn; getSwimSound
	av ()Ladn; getSwimSplashSound
	aw ()Ladn; getSwimHighSpeedSplashSound
	ax ()V checkInsideBlocks
	a (Lcee;)V onInsideBlock
	b (Lfx;Lcee;)V playStepSound
	d (F)V playSwimSound
	e (F)F playFlySound
	ay ()Z makeFlySound
	a (Ladn;FF)V playSound
	az ()Z isSilent
	d (Z)V setSilent
	aA ()Z isNoGravity
	e (Z)V setNoGravity
	aB ()Z isMovementNoisy
	a (DZLcee;Lfx;)V checkFallDamage
	h (I)V burn
	aC ()Z fireImmune
	b (FF)Z causeFallDamage
	aD ()Z isInWater
	i ()Z isInRain
	k ()Z isInBubbleColumn
	aE ()Z isInWaterOrRain
	aF ()Z isInWaterRainOrBubble
	aG ()Z isInWaterOrBubble
	aH ()Z isUnderWater
	aI ()V updateSwimming
	aJ ()Z updateInWaterStateAndDoFluidPushing
	aK ()V updateInWaterStateAndDoWaterCurrentPushing
	m ()V updateFluidOnEyes
	aL ()V doWaterSplashEffect
	aM ()Lcee; getBlockStateOn
	aN ()Z canSpawnSprintParticle
	aO ()V spawnSprintParticle
	a (Laej;)Z isEyeInFluid
	aP ()Z isInLava
	a (FLdck;)V moveRelative
	a (Ldck;FF)Ldck; getInputVector
	aQ ()F getBrightness
	a_ (Lbru;)V setLevel
	a (DDDFF)V absMoveTo
	f (DDD)V absMoveTo
	d (Ldck;)V moveTo
	b (DDD)V moveTo
	a (Lfx;FF)V moveTo
	b (DDDFF)V moveTo
	g (DDD)V setPosAndOldPos
	g (Lapx;)F distanceTo
	h (DDD)D distanceToSqr
	h (Lapx;)D distanceToSqr
	e (Ldck;)D distanceToSqr
	a_ (Lbft;)V playerTouch
	i (Lapx;)V push
	i (DDD)V push
	aR ()V markHurt
	a (Laph;F)Z hurt
	f (F)Ldck; getViewVector
	g (F)F getViewXRot
	h (F)F getViewYRot
	c (FF)Ldck; calculateViewVector
	i (F)Ldck; getUpVector
	d (FF)Ldck; calculateUpVector
	j (F)Ldck; getEyePosition
	k (F)Ldck; getLightProbePosition
	l (F)Ldck; getPosition
	a (DFZ)Ldci; pick
	aS ()Z isPickable
	aT ()Z isPushable
	a (Lapx;ILaph;)V awardKillScore
	j (DDD)Z shouldRender
	a (D)Z shouldRenderAtSqrDistance
	a_ (Lmd;)Z saveAsPassenger
	d (Lmd;)Z save
	e (Lmd;)Lmd; saveWithoutId
	f (Lmd;)V load
	aU ()Z repositionEntityAfterLoad
	aV ()Ljava/lang/String; getEncodeId
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	a ([D)Lmj; newDoubleList
	a ([F)Lmj; newFloatList
	a (Lbrt;)Lbcs; spawnAtLocation
	a (Lbrt;I)Lbcs; spawnAtLocation
	a (Lbly;)Lbcs; spawnAtLocation
	a (Lbly;F)Lbcs; spawnAtLocation
	aW ()Z isAlive
	aX ()Z isInWall
	a (Lbft;Laoq;)Laor; interact
	j (Lapx;)Z canCollideWith
	aY ()Z canBeCollidedWith
	aZ ()V rideTick
	k (Lapx;)V positionRider
	a (Lapx;Lapx$a;)V positionRider
	l (Lapx;)V onPassengerTurned
	ba ()D getMyRidingOffset
	bb ()D getPassengersRidingOffset
	m (Lapx;)Z startRiding
	bc ()Z showVehicleHealth
	a (Lapx;Z)Z startRiding
	n (Lapx;)Z canRide
	c (Laqu;)Z canEnterPose
	bd ()V ejectPassengers
	be ()V removeVehicle
	l ()V stopRiding
	o (Lapx;)V addPassenger
	p (Lapx;)V removePassenger
	q (Lapx;)Z canAddPassenger
	a (DDDFFIZ)V lerpTo
	a (FI)V lerpHeadTo
	bf ()F getPickRadius
	bg ()Ldck; getLookAngle
	bh ()Ldcj; getRotationVector
	bi ()Ldck; getForward
	d (Lfx;)V handleInsidePortal
	bj ()V handleNetherPortal
	bk ()I getDimensionChangingDelay
	k (DDD)V lerpMotion
	a (B)V handleEntityEvent
	bl ()V animateHurt
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	bo ()Ljava/lang/Iterable; getAllSlots
	a (Laqc;Lbly;)V setItemSlot
	bp ()Z isOnFire
	bq ()Z isPassenger
	br ()Z isVehicle
	bs ()Z rideableUnderWater
	f (Z)V setShiftKeyDown
	bt ()Z isShiftKeyDown
	bu ()Z isSteppingCarefully
	bv ()Z isSuppressingBounce
	bw ()Z isDiscrete
	bx ()Z isDescending
	by ()Z isCrouching
	bz ()Z isSprinting
	g (Z)V setSprinting
	bA ()Z isSwimming
	bB ()Z isVisuallySwimming
	bC ()Z isVisuallyCrawling
	h (Z)V setSwimming
	bD ()Z isGlowing
	i (Z)V setGlowing
	bE ()Z isInvisible
	c (Lbft;)Z isInvisibleTo
	bF ()Lddm; getTeam
	r (Lapx;)Z isAlliedTo
	a (Lddm;)Z isAlliedTo
	j (Z)V setInvisible
	i (I)Z getSharedFlag
	b (IZ)V setSharedFlag
	bG ()I getMaxAirSupply
	bH ()I getAirSupply
	j (I)V setAirSupply
	a (Laag;Laqi;)V thunderHit
	k (Z)V onAboveBubbleCol
	l (Z)V onInsideBubbleColumn
	a (Laag;Laqj;)V killed
	l (DDD)V moveTowardsClosestSpace
	a (Lcee;Ldck;)V makeStuckInBlock
	b (Lnr;)Lnr; removeAction
	Q ()Lnr; getName
	bI ()Lnr; getTypeName
	s (Lapx;)Z is
	bJ ()F getYHeadRot
	m (F)V setYHeadRot
	n (F)V setYBodyRot
	bK ()Z isAttackable
	t (Lapx;)Z skipAttackInteraction
	toString ()Ljava/lang/String; toString
	b (Laph;)Z isInvulnerableTo
	bL ()Z isInvulnerable
	m (Z)V setInvulnerable
	u (Lapx;)V copyPosition
	v (Lapx;)V restoreFrom
	b (Laag;)Lapx; changeDimension
	bM ()V removeAfterChangingDimensions
	a (Laag;)Lcxj; findDimensionEntryPoint
	a (Lgc$a;Li$a;)Ldck; getRelativePortalPosition
	a (Laag;Lfx;Z)Ljava/util/Optional; getExitPortal
	bN ()Z canChangeDimensions
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;F)F getBlockExplosionResistance
	a (Lbrm;Lbqz;Lfx;Lcee;F)Z shouldBlockExplode
	bO ()I getMaxFallDistance
	bP ()Z isIgnoringBlockTriggers
	a (Lm;)V fillCrashReportCategory
	bQ ()Z displayFireAnimation
	a_ (Ljava/util/UUID;)V setUUID
	bR ()Ljava/util/UUID; getUUID
	bS ()Ljava/lang/String; getStringUUID
	bT ()Ljava/lang/String; getScoreboardName
	bU ()Z isPushedByFluid
	bV ()D getViewScale
	b (D)V setViewScale
	d ()Lnr; getDisplayName
	a (Lnr;)V setCustomName
	S ()Lnr; getCustomName
	R ()Z hasCustomName
	n (Z)V setCustomNameVisible
	bW ()Z isCustomNameVisible
	m (DDD)V teleportToWithTicket
	a (DDD)V teleportTo
	bX ()Z shouldShowName
	a (Lus;)V onSyncedDataUpdated
	x_ ()V refreshDimensions
	bY ()Lgc; getDirection
	bZ ()Lgc; getMotionDirection
	ca ()Lnv; createHoverEvent
	a (Laah;)Z broadcastToPlayer
	cb ()Ldcf; getBoundingBox
	cc ()Ldcf; getBoundingBoxForCulling
	d (Laqu;)Ldcf; getBoundingBoxForPose
	a (Ldcf;)V setBoundingBox
	a (Laqu;Lapy;)F getEyeHeight
	e (Laqu;)F getEyeHeight
	cd ()F getEyeHeight
	ce ()Ldck; getLeashOffset
	a_ (ILbly;)Z setSlot
	a (Lnr;Ljava/util/UUID;)V sendMessage
	cf ()Lbru; getCommandSenderWorld
	cg ()Lnet/minecraft/server/MinecraftServer; getServer
	a (Lbft;Ldck;Laoq;)Laor; interactAt
	ch ()Z ignoreExplosion
	a (Laqj;Lapx;)V doEnchantDamageEffects
	b (Laah;)V startSeenByPlayer
	c (Laah;)V stopSeenByPlayer
	a (Lbzj;)F rotate
	a (Lbyd;)F mirror
	ci ()Z onlyOpCanSetNbt
	cj ()Z checkAndResetForcedChunkAdditionFlag
	ck ()Z checkAndResetUpdateChunkPos
	cl ()Lapx; getControllingPassenger
	cm ()Ljava/util/List; getPassengers
	w (Lapx;)Z hasPassenger
	a (Ljava/lang/Class;)Z hasPassenger
	cn ()Ljava/util/Collection; getIndirectPassengers
	co ()Ljava/util/stream/Stream; getSelfAndPassengers
	cp ()Z hasOnePlayerPassenger
	a (ZLjava/util/Set;)V fillIndirectPassengers
	cq ()Lapx; getRootVehicle
	x (Lapx;)Z isPassengerOfSameVehicle
	y (Lapx;)Z hasIndirectPassenger
	cr ()Z isControlledByLocalInstance
	a (DDF)Ldck; getCollisionHorizontalEscapeVector
	b (Laqj;)Ldck; getDismountLocationForPassenger
	cs ()Lapx; getVehicle
	y_ ()Lcuz; getPistonPushReaction
	ct ()Ladp; getSoundSource
	cu ()I getFireImmuneTicks
	cv ()Ldb; createCommandSourceStack
	y ()I getPermissionLevel
	k (I)Z hasPermissions
	a ()Z acceptsSuccess
	b ()Z acceptsFailure
	R_ ()Z shouldInformAdmins
	a (Ldj$a;Ldck;)V lookAt
	a (Laej;D)Z updateFluidHeightAndDoFluidPushing
	b (Laej;)D getFluidHeight
	cw ()D getFluidJumpThreshold
	cx ()F getBbWidth
	cy ()F getBbHeight
	P ()Loj; getAddEntityPacket
	a (Laqu;)Lapy; getDimensions
	cz ()Ldck; position
	cA ()Lfx; blockPosition
	cB ()Ldck; getDeltaMovement
	f (Ldck;)V setDeltaMovement
	n (DDD)V setDeltaMovement
	cC ()D getX
	c (D)D getX
	d (D)D getRandomX
	cD ()D getY
	e (D)D getY
	cE ()D getRandomY
	cF ()D getEyeY
	cG ()D getZ
	f (D)D getZ
	g (D)D getRandomZ
	o (DDD)V setPosRaw
	cH ()V checkDespawn
	o (F)Ldck; getRopeHoldPosition
	a (Laag;Lapx;)V lambda$teleportTo$10
	a (Lob;)Lob; lambda$getDisplayName$9
	n ()Ljava/lang/String; lambda$fillCrashReportCategory$8
	o ()Ljava/lang/String; lambda$fillCrashReportCategory$7
	p ()Ljava/lang/String; lambda$fillCrashReportCategory$6
	q ()Ljava/lang/String; lambda$fillCrashReportCategory$5
	a (Laag;Li$a;)Lcxj; lambda$findDimensionEntryPoint$4
	a (Lcee;Lfx;)Z lambda$null$3
	b (Lcee;Lfx;)Z lambda$isInWall$2
	a (Lapx;)Z lambda$collide$1
	b (Lcee;)Z lambda$move$0
	<clinit> ()V <clinit>
apx$1 net/minecraft/world/entity/Entity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
apx$a net/minecraft/world/entity/Entity$MoveFunction
	accept (Lapx;DDD)V accept
apy net/minecraft/world/entity/EntityDimensions
	a width
	b height
	c fixed
	<init> (FFZ)V <init>
	a (Ldck;)Ldcf; makeBoundingBox
	a (DDD)Ldcf; makeBoundingBox
	a (F)Lapy; scale
	a (FF)Lapy; scale
	b (FF)Lapy; scalable
	c (FF)Lapy; fixed
	toString ()Ljava/lang/String; toString
apz net/minecraft/world/entity/EntityEvent
	<init> ()V <init>
aqa net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f ATTACK_ALLOWED
	g NO_SPECTATORS
	<init> ()V <init>
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (Lapx;)Ljava/util/function/Predicate; pushableBy
	b (Lapx;)Ljava/util/function/Predicate; notRiding
	a (Lapx;Lapx;)Z lambda$notRiding$7
	a (Lapx;Lddm;Lddm$a;Lapx;)Z lambda$pushableBy$6
	a (DDDDLapx;)Z lambda$withinDistance$5
	c (Lapx;)Z lambda$static$4
	d (Lapx;)Z lambda$static$3
	e (Lapx;)Z lambda$static$2
	f (Lapx;)Z lambda$static$1
	g (Lapx;)Z lambda$static$0
	<clinit> ()V <clinit>
aqa$a net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	a itemStack
	<init> (Lbly;)V <init>
	a (Lapx;)Z test
	test (Ljava/lang/Object;)Z test
aqb net/minecraft/world/entity/EntityType
	be LOGGER
	a AREA_EFFECT_CLOUD
	b ARMOR_STAND
	c ARROW
	d BAT
	e BEE
	f BLAZE
	g BOAT
	h CAT
	i CAVE_SPIDER
	j CHICKEN
	k COD
	l COW
	m CREEPER
	n DOLPHIN
	o DONKEY
	p DRAGON_FIREBALL
	q DROWNED
	r ELDER_GUARDIAN
	s END_CRYSTAL
	t ENDER_DRAGON
	u ENDERMAN
	v ENDERMITE
	w EVOKER
	x EVOKER_FANGS
	y EXPERIENCE_ORB
	z EYE_OF_ENDER
	A FALLING_BLOCK
	B FIREWORK_ROCKET
	C FOX
	D GHAST
	E GIANT
	F GUARDIAN
	G HOGLIN
	H HORSE
	I HUSK
	J ILLUSIONER
	K IRON_GOLEM
	L ITEM
	M ITEM_FRAME
	N FIREBALL
	O LEASH_KNOT
	P LIGHTNING_BOLT
	Q LLAMA
	R LLAMA_SPIT
	S MAGMA_CUBE
	T MINECART
	U CHEST_MINECART
	V COMMAND_BLOCK_MINECART
	W FURNACE_MINECART
	X HOPPER_MINECART
	Y SPAWNER_MINECART
	Z TNT_MINECART
	aa MULE
	ab MOOSHROOM
	ac OCELOT
	ad PAINTING
	ae PANDA
	af PARROT
	ag PHANTOM
	ah PIG
	ai PIGLIN
	aj PIGLIN_BRUTE
	ak PILLAGER
	al POLAR_BEAR
	am TNT
	an PUFFERFISH
	ao RABBIT
	ap RAVAGER
	aq SALMON
	ar SHEEP
	as SHULKER
	at SHULKER_BULLET
	au SILVERFISH
	av SKELETON
	aw SKELETON_HORSE
	ax SLIME
	ay SMALL_FIREBALL
	az SNOW_GOLEM
	aA SNOWBALL
	aB SPECTRAL_ARROW
	aC SPIDER
	aD SQUID
	aE STRAY
	aF STRIDER
	aG EGG
	aH ENDER_PEARL
	aI EXPERIENCE_BOTTLE
	aJ POTION
	aK TRIDENT
	aL TRADER_LLAMA
	aM TROPICAL_FISH
	aN TURTLE
	aO VEX
	aP VILLAGER
	aQ VINDICATOR
	aR WANDERING_TRADER
	aS WITCH
	aT WITHER
	aU WITHER_SKELETON
	aV WITHER_SKULL
	aW WOLF
	aX ZOGLIN
	aY ZOMBIE
	aZ ZOMBIE_HORSE
	ba ZOMBIE_VILLAGER
	bb ZOMBIFIED_PIGLIN
	bc PLAYER
	bd FISHING_BOBBER
	bf factory
	bg category
	bh immuneTo
	bi serialize
	bj summon
	bk fireImmune
	bl canSpawnFarFromPlayer
	bm clientTrackingRange
	bn updateInterval
	bo descriptionId
	bp description
	bq lootTable
	br dimensions
	a (Ljava/lang/String;Laqb$a;)Laqb; register
	a (Laqb;)Lvk; getKey
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	<init> (Laqb$b;Laql;ZZZZLcom/google/common/collect/ImmutableSet;Lapy;II)V <init>
	a (Laag;Lbly;Lbft;Lfx;Laqm;ZZ)Lapx; spawn
	a (Laag;Lmd;Lnr;Lbft;Lfx;Laqm;ZZ)Lapx; spawn
	b (Laag;Lmd;Lnr;Lbft;Lfx;Laqm;ZZ)Lapx; create
	a (Lbrw;Lfx;ZLdcf;)D getYOffset
	a (Lbru;Lbft;Lapx;Lmd;)V updateCustomEntityTag
	a ()Z canSerialize
	b ()Z canSummon
	c ()Z fireImmune
	d ()Z canSpawnFarFromPlayer
	e ()Laql; getCategory
	f ()Ljava/lang/String; getDescriptionId
	g ()Lnr; getDescription
	toString ()Ljava/lang/String; toString
	h ()Ljava/lang/String; toShortString
	i ()Lvk; getDefaultLootTable
	j ()F getWidth
	k ()F getHeight
	a (Lbru;)Lapx; create
	a (ILbru;)Lapx; create
	a (Lmd;Lbru;)Ljava/util/Optional; create
	a (Lbru;Laqb;)Lapx; create
	a (DDD)Ldcf; getAABB
	a (Lcee;)Z isBlockDangerous
	l ()Lapy; getDimensions
	a (Lmd;)Ljava/util/Optional; by
	a (Lmd;Lbru;Ljava/util/function/Function;)Lapx; loadEntityRecursive
	b (Lmd;Lbru;)Ljava/util/Optional; loadStaticEntity
	m ()I clientTrackingRange
	n ()I updateInterval
	o ()Z trackDeltas
	a (Laej;)Z is
	a (Lmd;Lbru;Ljava/util/function/Function;Lapx;)Lapx; lambda$loadEntityRecursive$4
	b (Lmd;)V lambda$create$3
	a (Lmd;Lapx;)V lambda$create$2
	b (Lbru;Laqb;)Lapx; lambda$create$1
	a (Lapx;)Z lambda$getYOffset$0
	<clinit> ()V <clinit>
aqb$a net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c immuneTo
	d serialize
	e summon
	f fireImmune
	g canSpawnFarFromPlayer
	h clientTrackingRange
	i updateInterval
	j dimensions
	<init> (Laqb$b;Laql;)V <init>
	a (Laqb$b;Laql;)Laqb$a; of
	a (Laql;)Laqb$a; createNothing
	a (FF)Laqb$a; sized
	a ()Laqb$a; noSummon
	b ()Laqb$a; noSave
	c ()Laqb$a; fireImmune
	a ([Lbul;)Laqb$a; immuneTo
	d ()Laqb$a; canSpawnFarFromPlayer
	a (I)Laqb$a; clientTrackingRange
	b (I)Laqb$a; updateInterval
	a (Ljava/lang/String;)Laqb; build
	a (Laqb;Lbru;)Lapx; lambda$createNothing$0
aqb$b net/minecraft/world/entity/EntityType$EntityFactory
	create (Laqb;Lbru;)Lapx; create
aqc net/minecraft/world/entity/EquipmentSlot
	a MAINHAND
	b OFFHAND
	c FEET
	d LEGS
	e CHEST
	f HEAD
	g type
	h index
	i filterFlag
	j name
	k $VALUES
	values ()[Laqc; values
	valueOf (Ljava/lang/String;)Laqc; valueOf
	<init> (Ljava/lang/String;ILaqc$a;IILjava/lang/String;)V <init>
	a ()Laqc$a; getType
	b ()I getIndex
	c ()I getFilterFlag
	d ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Laqc; byName
	a (Laqc$a;I)Laqc; byTypeAndIndex
	<clinit> ()V <clinit>
aqc$a net/minecraft/world/entity/EquipmentSlot$Type
	a HAND
	b ARMOR
	c $VALUES
	values ()[Laqc$a; values
	valueOf (Ljava/lang/String;)Laqc$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
aqd net/minecraft/world/entity/ExperienceOrb
	b tickCount
	c age
	d throwTime
	e health
	f value
	g followingPlayer
	ag followingTime
	<init> (Lbru;DDDI)V <init>
	<init> (Laqb;Lbru;)V <init>
	aB ()Z isMovementNoisy
	e ()V defineSynchedData
	j ()V tick
	i ()V setUnderwaterMovement
	aL ()V doWaterSplashEffect
	h (I)V burn
	a (Laph;F)Z hurt
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a_ (Lbft;)V playerTouch
	b (I)I durabilityToXp
	c (I)I xpToDurability
	g ()I getValue
	h ()I getIcon
	a (I)I getExperienceValue
	bK ()Z isAttackable
	P ()Loj; getAddEntityPacket
aqe net/minecraft/world/entity/FlyingMob
	<init> (Laqb;Lbru;)V <init>
	b (FF)Z causeFallDamage
	a (DZLcee;Lfx;)V checkFallDamage
	g (Ldck;)V travel
	c_ ()Z onClimbable
aqf net/minecraft/world/entity/HumanoidArm
	a LEFT
	b RIGHT
	c name
	d $VALUES
	values ()[Laqf; values
	valueOf (Ljava/lang/String;)Laqf; valueOf
	<init> (Ljava/lang/String;ILnr;)V <init>
	a ()Laqf; getOpposite
	toString ()Ljava/lang/String; toString
	b ()Lnr; getName
	<clinit> ()V <clinit>
aqg net/minecraft/world/entity/ItemBasedSteering
	d entityData
	e boostTimeAccessor
	f hasSaddleAccessor
	a boosting
	b boostTime
	c boostTimeTotal
	<init> (Luv;Lus;Lus;)V <init>
	a ()V onSynced
	a (Ljava/util/Random;)Z boost
	a (Lmd;)V addAdditionalSaveData
	b (Lmd;)V readAdditionalSaveData
	a (Z)V setSaddle
	b ()Z hasSaddle
aqh net/minecraft/world/entity/ItemSteerable
	O_ ()Z boost
	a_ (Ldck;)V travelWithInput
	N_ ()F getSteeringSpeed
	a (Laqk;Laqg;Ldck;)Z travel
aqi net/minecraft/world/entity/LightningBolt
	c life
	b seed
	d flashes
	e visualOnly
	f cause
	<init> (Laqb;Lbru;)V <init>
	a (Z)V setVisualOnly
	ct ()Ladp; getSoundSource
	g ()Laah; getCause
	d (Laah;)V setCause
	j ()V tick
	a (I)V spawnFire
	a (D)Z shouldRenderAtSqrDistance
	e ()V defineSynchedData
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	P ()Loj; getAddEntityPacket
aqj net/minecraft/world/entity/LivingEntity
	b SPEED_MODIFIER_SPRINTING_UUID
	c SPEED_MODIFIER_SOUL_SPEED_UUID
	d SPEED_MODIFIER_SPRINTING
	ag DATA_LIVING_ENTITY_FLAGS
	e DATA_HEALTH_ID
	f DATA_EFFECT_COLOR_ID
	g DATA_EFFECT_AMBIENCE_ID
	bh DATA_ARROW_COUNT_ID
	bi DATA_STINGER_COUNT_ID
	bj SLEEPING_POS_ID
	ah SLEEPING_DIMENSIONS
	bk attributes
	bl combatTracker
	bm activeEffects
	bn lastHandItemStacks
	bo lastArmorItemStacks
	ai swinging
	aj swingingArm
	ak swingTime
	al removeArrowTime
	am removeStingerTime
	an hurtTime
	ao hurtDuration
	ap hurtDir
	aq deathTime
	ar oAttackAnim
	as attackAnim
	at attackStrengthTicker
	au animationSpeedOld
	av animationSpeed
	aw animationPosition
	ax invulnerableDuration
	ay timeOffs
	az rotA
	aA yBodyRot
	aB yBodyRotO
	aC yHeadRot
	aD yHeadRotO
	aE flyingSpeed
	aF lastHurtByPlayer
	aG lastHurtByPlayerTime
	aH dead
	aI noActionTime
	aJ oRun
	aK run
	aL animStep
	aM animStepO
	aN rotOffs
	aO deathScore
	aP lastHurt
	aQ jumping
	aR xxa
	aS yya
	aT zza
	aU lerpSteps
	aV lerpX
	aW lerpY
	aX lerpZ
	aY lerpYRot
	aZ lerpXRot
	ba lyHeadRot
	bb lerpHeadSteps
	bp effectsDirty
	bq lastHurtByMob
	br lastHurtByMobTimestamp
	bs lastHurtMob
	bt lastHurtMobTimestamp
	bu speed
	bv noJumpDelay
	bw absorptionAmount
	bc useItem
	bd useItemRemaining
	be fallFlyTicks
	bx lastPos
	by lastClimbablePos
	bz lastDamageSource
	bA lastDamageStamp
	bf autoSpinAttackTicks
	bB swimAmount
	bC swimAmountO
	bg brain
	<init> (Laqb;Lbru;)V <init>
	cI ()Larc; getBrain
	cJ ()Larc$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	Z ()V kill
	a (Laqb;)Z canAttackType
	e ()V defineSynchedData
	cK ()Larh$a; createLivingAttributes
	a (DZLcee;Lfx;)V checkFallDamage
	cL ()Z canBreatheUnderwater
	a (F)F getSwimAmount
	af ()V baseTick
	cM ()Z canSpawnSoulSpeedParticle
	cN ()V spawnSoulSpeedParticle
	cO ()Z onSoulSpeedBlock
	aq ()F getBlockSpeedFactor
	b (Lcee;)Z shouldRemoveSoulSpeed
	cP ()V removeSoulSpeed
	cQ ()V tryAddSoulSpeed
	c (Lfx;)V onChangedBlock
	w_ ()Z isBaby
	cR ()F getScale
	cS ()Z isAffectedByFluids
	bs ()Z rideableUnderWater
	cT ()V tickDeath
	cU ()Z shouldDropExperience
	cV ()Z shouldDropLoot
	l (I)I decreaseAirSupply
	m (I)I increaseAirSupply
	d (Lbft;)I getExperienceReward
	cW ()Z isAlwaysExperienceDropper
	cX ()Ljava/util/Random; getRandom
	cY ()Laqj; getLastHurtByMob
	cZ ()I getLastHurtByMobTimestamp
	e (Lbft;)V setLastHurtByPlayer
	a (Laqj;)V setLastHurtByMob
	da ()Laqj; getLastHurtMob
	db ()I getLastHurtMobTimestamp
	z (Lapx;)V setLastHurtMob
	dc ()I getNoActionTime
	n (I)V setNoActionTime
	b (Lbly;)V playEquipSound
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	dd ()V tickEffects
	C ()V updateInvisibilityStatus
	A (Lapx;)D getVisibilityPercent
	c (Laqj;)Z canAttack
	a (Laqj;Lazd;)Z canAttack
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	de ()V removeEffectParticles
	df ()Z removeAllEffects
	dg ()Ljava/util/Collection; getActiveEffects
	dh ()Ljava/util/Map; getActiveEffectsMap
	a (Lapp;)Z hasEffect
	b (Lapp;)Lapr; getEffect
	c (Lapr;)Z addEffect
	d (Lapr;)Z canBeAffected
	e (Lapr;)V forceAddEffect
	di ()Z isInvertedHealAndHarm
	c (Lapp;)Lapr; removeEffectNoUpdate
	d (Lapp;)Z removeEffect
	a (Lapr;)V onEffectAdded
	a (Lapr;Z)V onEffectUpdated
	b (Lapr;)V onEffectRemoved
	b (F)V heal
	dj ()F getHealth
	c (F)V setHealth
	dk ()Z isDeadOrDying
	a (Laph;F)Z hurt
	d (Laqj;)V blockUsingShield
	e (Laqj;)V blockedByShield
	f (Laph;)Z checkTotemDeathProtection
	dl ()Laph; getLastDamageSource
	c (Laph;)V playHurtSound
	g (Laph;)Z isDamageSourceBlocked
	g (Lbly;)V breakItem
	a (Laph;)V die
	f (Laqj;)V createWitherRose
	d (Laph;)V dropAllDeathLoot
	dm ()V dropEquipment
	dn ()V dropExperience
	a (Laph;IZ)V dropCustomDeathLoot
	do ()Lvk; getLootTable
	a (Laph;Z)V dropFromLootTable
	a (ZLaph;)Lcys$a; createLootContext
	a (FDD)V knockback
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	o (I)Ladn; getFallDamageSound
	c (Lbly;)Ladn; getDrinkingSound
	d (Lbly;)Ladn; getEatingSound
	c (Z)V setOnGround
	dq ()Ljava/util/Optional; getLastClimbablePos
	c_ ()Z onClimbable
	dr ()Lcee; getFeetBlockState
	c (Lfx;Lcee;)Z trapdoorUsableAsLadder
	aW ()Z isAlive
	b (FF)Z causeFallDamage
	e (FF)I calculateFallDamage
	ds ()V playBlockFallSound
	bl ()V animateHurt
	dt ()I getArmorValue
	b (Laph;F)V hurtArmor
	p (F)V hurtCurrentlyUsedShield
	c (Laph;F)F getDamageAfterArmorAbsorb
	d (Laph;F)F getDamageAfterMagicAbsorb
	e (Laph;F)V actuallyHurt
	du ()Lapg; getCombatTracker
	dv ()Laqj; getKillCredit
	dw ()F getMaxHealth
	dx ()I getArrowCount
	p (I)V setArrowCount
	dy ()I getStingerCount
	q (I)V setStingerCount
	m ()I getCurrentSwingDuration
	a (Laoq;)V swing
	a (Laoq;Z)V swing
	a (B)V handleEntityEvent
	o ()V swapHandItems
	am ()V outOfWorld
	dz ()V updateSwingTime
	a (Lard;)Lare; getAttribute
	b (Lard;)D getAttributeValue
	c (Lard;)D getAttributeBaseValue
	dA ()Larf; getAttributes
	dB ()Laqn; getMobType
	dC ()Lbly; getMainHandItem
	dD ()Lbly; getOffhandItem
	a (Lblu;)Z isHolding
	a (Ljava/util/function/Predicate;)Z isHolding
	bm ()Ljava/lang/Iterable; getHandSlots
	b (Laoq;)Lbly; getItemInHand
	a (Laoq;Lbly;)V setItemInHand
	a (Laqc;)Z hasItemInSlot
	bn ()Ljava/lang/Iterable; getArmorSlots
	b (Laqc;)Lbly; getItemBySlot
	a (Laqc;Lbly;)V setItemSlot
	dE ()F getArmorCoverPercentage
	g (Z)V setSprinting
	dF ()F getSoundVolume
	dG ()F getVoicePitch
	dH ()Z isImmobile
	i (Lapx;)V push
	a (Lapx;)V dismountVehicle
	bX ()Z shouldShowName
	dI ()F getJumpPower
	dJ ()V jumpFromGround
	dK ()V goDownInWater
	c (Laej;)V jumpInLiquid
	dL ()F getWaterSlowDown
	a (Lcut;)Z canStandOnFluid
	g (Ldck;)V travel
	a (Laqj;Z)V calculateEntityAnimation
	a (Ldck;F)Ldck; handleRelativeFrictionAndCalculateMovement
	a (DZLdck;)Ldck; getFluidFallingAdjustedMovement
	i (Ldck;)Ldck; handleOnClimbable
	t (F)F getFrictionInfluencedSpeed
	dM ()F getSpeed
	q (F)V setSpeed
	B (Lapx;)Z doHurtTarget
	j ()V tick
	p ()V detectEquipmentUpdates
	q ()Ljava/util/Map; collectEquipmentChanges
	a (Ljava/util/Map;)V handleHandSwap
	b (Ljava/util/Map;)V handleEquipmentChanges
	d (Laqc;)Lbly; getLastArmorItem
	b (Laqc;Lbly;)V setLastArmorItem
	e (Laqc;)Lbly; getLastHandItem
	c (Laqc;Lbly;)V setLastHandItem
	f (FF)F tickHeadTurn
	k ()V aiStep
	dN ()Z isSensitiveToWater
	r ()V updateFallFlying
	dO ()V serverAiStep
	dP ()V pushEntities
	a (Ldcf;Ldcf;)V checkAutoSpinAttack
	C (Lapx;)V doPush
	g (Laqj;)V doAutoAttackOnTouch
	r (I)V startAutoSpinAttack
	dQ ()Z isAutoSpinAttack
	l ()V stopRiding
	aZ ()V rideTick
	a (DDDFFIZ)V lerpTo
	a (FI)V lerpHeadTo
	o (Z)V setJumping
	a (Lbcs;)V onItemPickup
	a (Lapx;I)V take
	D (Lapx;)Z canSee
	h (F)F getViewYRot
	r (F)F getAttackAnim
	dR ()Z isEffectiveAi
	aS ()Z isPickable
	aT ()Z isPushable
	aR ()V markHurt
	bJ ()F getYHeadRot
	m (F)V setYHeadRot
	n (F)V setYBodyRot
	a (Lgc$a;Li$a;)Ldck; getRelativePortalPosition
	h (Ldck;)Ldck; resetForwardDirectionOfRelativePortalPosition
	dS ()F getAbsorptionAmount
	s (F)V setAbsorptionAmount
	g ()V onEnterCombat
	h ()V onLeaveCombat
	dT ()V updateEffectVisibility
	dU ()Laqf; getMainArm
	dV ()Z isUsingItem
	dW ()Laoq; getUsedItemHand
	t ()V updatingUsingItem
	u ()Z shouldTriggerItemUseEffects
	v ()V updateSwimAmount
	c (IZ)V setLivingEntityFlag
	c (Laoq;)V startUsingItem
	a (Lus;)V onSyncedDataUpdated
	a (Ldj$a;Ldck;)V lookAt
	b (Lbly;I)V triggerItemUseEffects
	a (Lbly;I)V spawnItemParticles
	s ()V completeUsingItem
	dX ()Lbly; getUseItem
	dY ()I getUseItemRemainingTicks
	dZ ()I getTicksUsingItem
	ea ()V releaseUsingItem
	eb ()V stopUsingItem
	ec ()Z isBlocking
	ed ()Z isSuppressingSlidingDownLadder
	ee ()Z isFallFlying
	bB ()Z isVisuallySwimming
	ef ()I getFallFlyingTicks
	a (DDDZ)Z randomTeleport
	eg ()Z isAffectedByPotions
	eh ()Z attackable
	a (Lfx;Z)V setRecordPlayingNearby
	e (Lbly;)Z canTakeItem
	P ()Loj; getAddEntityPacket
	a (Laqu;)Lapy; getDimensions
	ei ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	f (Laqu;)Ldcf; getLocalBoundsForPose
	ej ()Ljava/util/Optional; getSleepingPos
	e (Lfx;)V setSleepingPos
	ek ()V clearSleepingPos
	el ()Z isSleeping
	b (Lfx;)V startSleeping
	a (Lfx;)V setPosToBed
	x ()Z checkBedExists
	em ()V stopSleeping
	en ()Lgc; getBedOrientation
	aX ()Z isInWall
	a (Laqu;Lapy;)F getEyeHeight
	b (Laqu;Lapy;)F getStandingEyeHeight
	f (Lbly;)Lbly; getProjectile
	a (Lbru;Lbly;)Lbly; eat
	a (Lbly;Lbru;Laqj;)V addEatEffect
	f (Laqc;)B entityEventForEquipmentBreak
	c (Laqc;)V broadcastBreakEvent
	d (Laoq;)V broadcastBreakEvent
	cc ()Ldcf; getBoundingBoxForCulling
	f (Lfx;)V lambda$stopSleeping$10
	g (Lfx;)Ldck; lambda$null$9
	h (Lfx;)Ljava/lang/Boolean; lambda$checkBedExists$8
	h (Laqj;)V lambda$updateFallFlying$7
	a (Ljava/util/List;Laqc;Lbly;)V lambda$handleEquipmentChanges$6
	a (Lblu;Lblu;)Z lambda$isHolding$5
	i (Laqj;)V lambda$hurt$4
	f (Lapr;)V lambda$tickEffects$3
	a (Lmd;Lmt;)V lambda$addAdditionalSaveData$2
	a (Lmd;Lfx;)V lambda$addAdditionalSaveData$1
	j (Laqj;)V lambda$tryAddSoulSpeed$0
	<clinit> ()V <clinit>
aqj$1 net/minecraft/world/entity/LivingEntity$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
	<clinit> ()V <clinit>
aqk net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	e ambientSoundTime
	f xpReward
	g lookControl
	bh moveControl
	bi jumpControl
	c bodyRotationControl
	bj navigation
	bk goalSelector
	bl targetSelector
	d target
	bo sensing
	bp handItems
	bm handDropChances
	bq armorItems
	bn armorDropChances
	br canPickUpLoot
	bs persistenceRequired
	bt pathfindingMalus
	bu lootTable
	bv lootTableSeed
	bw leashHolder
	bx delayedLeashHolderId
	by leashInfoTag
	bz restrictCenter
	bA restrictRadius
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	p ()Larh$a; createMobAttributes
	b (Lbru;)Layg; createNavigation
	q ()Z shouldPassengersInheritMalus
	a (Lcww;)F getPathfindingMalus
	a (Lcww;F)V setPathfindingMalus
	b (Lcww;)Z canCutCorner
	r ()Laur; createBodyControl
	t ()Lauw; getLookControl
	u ()Lauy; getMoveControl
	v ()Lauv; getJumpControl
	x ()Layg; getNavigation
	z ()Layx; getSensing
	A ()Laqj; getTarget
	h (Laqj;)V setTarget
	a (Laqb;)Z canAttackType
	a (Lbml;)Z canFireProjectileWeapon
	B ()V ate
	e ()V defineSynchedData
	D ()I getAmbientSoundInterval
	F ()V playAmbientSound
	af ()V baseTick
	c (Laph;)V playHurtSound
	m ()V resetAmbientSoundTime
	d (Lbft;)I getExperienceReward
	G ()V spawnAnim
	a (B)V handleEntityEvent
	j ()V tick
	H ()V updateControlFlags
	f (FF)F tickHeadTurn
	I ()Ladn; getAmbientSound
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Laph;Z)V dropFromLootTable
	a (ZLaph;)Lcys$a; createLootContext
	do ()Lvk; getLootTable
	J ()Lvk; getDefaultLootTable
	t (F)V setZza
	u (F)V setYya
	v (F)V setXxa
	q (F)V setSpeed
	k ()V aiStep
	b (Lbcs;)V pickUpItem
	g (Lbly;)Z equipItemIfPossible
	b (Laqc;Lbly;)V setItemSlotAndDropWhenKilled
	d (Laqc;)V setGuaranteedDrop
	a (Lbly;Lbly;)Z canReplaceCurrentItem
	b (Lbly;Lbly;)Z canReplaceEqualItem
	h (Lbly;)Z canHoldItem
	i (Lbly;)Z wantsToPickUp
	h (D)Z removeWhenFarAway
	K ()Z requiresCustomPersistence
	L ()Z shouldDespawnInPeaceful
	cH ()V checkDespawn
	dO ()V serverAiStep
	M ()V sendDebugPackets
	N ()V customServerAiStep
	O ()I getMaxHeadXRot
	eo ()I getMaxHeadYRot
	ep ()I getHeadRotSpeed
	a (Lapx;FF)V lookAt
	a (FFF)F rotlerp
	a (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkMobSpawnRules
	a (Lbrv;Laqm;)Z checkSpawnRules
	a (Lbrw;)Z checkSpawnObstruction
	eq ()I getMaxSpawnClusterSize
	c (I)Z isMaxGroupSizeReached
	bO ()I getMaxFallDistance
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	b (Laqc;)Lbly; getItemBySlot
	a (Laqc;Lbly;)V setItemSlot
	a (Laph;IZ)V dropCustomDeathLoot
	e (Laqc;)F getEquipmentDropChance
	a (Laop;)V populateDefaultEquipmentSlots
	j (Lbly;)Laqc; getEquipmentSlotForItem
	a (Laqc;I)Lblu; getEquipmentForSlot
	b (Laop;)V populateDefaultEquipmentEnchantments
	w (F)V enchantSpawnedWeapon
	a (FLaqc;)V enchantSpawnedArmor
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	er ()Z canBeControlledByRider
	es ()V setPersistenceRequired
	a (Laqc;F)V setDropChance
	et ()Z canPickUpLoot
	p (Z)V setCanPickUpLoot
	e (Lbly;)Z canTakeItem
	eu ()Z isPersistenceRequired
	a (Lbft;Laoq;)Laor; interact
	c (Lbft;Laoq;)Laor; checkAndHandleImportantInteractions
	a (Lbft;Laqk;)V onOffspringSpawnedFromEgg
	b (Lbft;Laoq;)Laor; mobInteract
	ev ()Z isWithinRestriction
	a (Lfx;)Z isWithinRestriction
	a (Lfx;I)V restrictTo
	ew ()Lfx; getRestrictCenter
	ex ()F getRestrictRadius
	ey ()V clearRestriction
	ez ()Z hasRestriction
	a (Laqb;Z)Laqk; convertTo
	eA ()V tickLeash
	a (ZZ)V dropLeash
	a (Lbft;)Z canBeLeashed
	eB ()Z isLeashed
	eC ()Lapx; getLeashHolder
	b (Lapx;Z)V setLeashedTo
	d (I)V setDelayedLeashHolderId
	a (Lapx;Z)Z startRiding
	eI ()V restoreLeashFromSave
	a_ (ILbly;)Z setSlot
	cr ()Z isControlledByLocalInstance
	c (Laqc;Lbly;)Z isValidSlotForItem
	dR ()Z isEffectiveAi
	q (Z)V setNoAi
	r (Z)V setLeftHanded
	s (Z)V setAggressive
	eD ()Z isNoAi
	eE ()Z isLeftHanded
	eF ()Z isAggressive
	a (Z)V setBaby
	dU ()Laqf; getMainArm
	c (Laqj;)Z canAttack
	B (Lapx;)Z doHurtTarget
	a (Lbft;Lbly;Lbly;)V maybeDisableShield
	eG ()Z isSunBurnTick
	c (Laej;)V jumpInLiquid
	eH ()V removeFreeWill
	bM ()V removeAfterChangingDimensions
	b (Lbft;Laqk;)V lambda$checkAndHandleImportantInteractions$2
	c (Ljava/lang/String;)Z lambda$canReplaceEqualItem$1
	d (Ljava/lang/String;)Z lambda$canReplaceEqualItem$0
	<clinit> ()V <clinit>
aqk$1 net/minecraft/world/entity/Mob$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
	<clinit> ()V <clinit>
aql net/minecraft/world/entity/MobCategory
	a MONSTER
	b CREATURE
	c AMBIENT
	d WATER_CREATURE
	e WATER_AMBIENT
	f MISC
	g CODEC
	h BY_NAME
	i max
	j isFriendly
	k isPersistent
	l name
	m noDespawnDistance
	n despawnDistance
	o $VALUES
	values ()[Laql; values
	valueOf (Ljava/lang/String;)Laql; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;IZZI)V <init>
	b ()Ljava/lang/String; getName
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Laql; byName
	c ()I getMaxInstancesPerChunk
	d ()Z isFriendly
	e ()Z isPersistent
	f ()I getDespawnDistance
	g ()I getNoDespawnDistance
	a (Laql;)Laql; lambda$static$0
	<clinit> ()V <clinit>
aqm net/minecraft/world/entity/MobSpawnType
	a NATURAL
	b CHUNK_GENERATION
	c SPAWNER
	d STRUCTURE
	e BREEDING
	f MOB_SUMMONED
	g JOCKEY
	h EVENT
	i CONVERSION
	j REINFORCEMENT
	k TRIGGERED
	l BUCKET
	m SPAWN_EGG
	n COMMAND
	o DISPENSER
	p PATROL
	q $VALUES
	values ()[Laqm; values
	valueOf (Ljava/lang/String;)Laqm; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
aqn net/minecraft/world/entity/MobType
	a UNDEFINED
	b UNDEAD
	c ARTHROPOD
	d ILLAGER
	e WATER
	<init> ()V <init>
	<clinit> ()V <clinit>
aqo net/minecraft/world/entity/MoverType
	a SELF
	b PLAYER
	c PISTON
	d SHULKER_BOX
	e SHULKER
	f $VALUES
	values ()[Laqo; values
	valueOf (Ljava/lang/String;)Laqo; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
aqp net/minecraft/world/entity/NeutralMob
	E_ ()I getRemainingPersistentAngerTime
	a_ (I)V setRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	c (Lmd;)V addPersistentAngerSaveData
	a (Laag;Lmd;)V readPersistentAngerSaveData
	a (Laag;Z)V updatePersistentAnger
	a_ (Laqj;)Z isAngryAt
	a (Lbru;)Z isAngryAtAllPlayers
	H_ ()Z isAngry
	b (Lbft;)V playerDied
	I_ ()V forgetCurrentTargetAndRefreshUniversalAnger
	J_ ()V stopBeingAngry
	cY ()Laqj; getLastHurtByMob
	a (Laqj;)V setLastHurtByMob
	e (Lbft;)V setLastHurtByPlayer
	h (Laqj;)V setTarget
	A ()Laqj; getTarget
aqq net/minecraft/world/entity/OwnableEntity
	A_ ()Ljava/util/UUID; getOwnerUUID
	B_ ()Lapx; getOwner
aqr net/minecraft/world/entity/PathfinderMob
	<init> (Laqb;Lbru;)V <init>
	f (Lfx;)F getWalkTargetValue
	a (Lfx;Lbrw;)F getWalkTargetValue
	a (Lbrv;Laqm;)Z checkSpawnRules
	eI ()Z isPathFinding
	eA ()V tickLeash
	eJ ()D followLeashSpeed
	x (F)V onLeashDistance
aqs net/minecraft/world/entity/PlayerRideable
aqt net/minecraft/world/entity/PlayerRideableJumping
	b_ (I)V onPlayerJump
	P_ ()Z canJump
	Q_ ()F getJumpRidingScale
	a_ (F)V setJumpRidingScale
	b (I)V handleStartJump
	c ()V handleStopJump
aqu net/minecraft/world/entity/Pose
	a STANDING
	b FALL_FLYING
	c SLEEPING
	d SWIMMING
	e SPIN_ATTACK
	f CROUCHING
	g DYING
	h $VALUES
	values ()[Laqu; values
	valueOf (Ljava/lang/String;)Laqu; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
aqv net/minecraft/world/entity/PowerableMob
	S_ ()Z isPowered
aqw net/minecraft/world/entity/ReputationEventHandler
	a (Lazi;Lapx;)V onReputationEventFrom
aqx net/minecraft/world/entity/Saddleable
	L_ ()Z isSaddleable
	a (Ladp;)V equipSaddle
	M_ ()Z isSaddled
aqy net/minecraft/world/entity/Shearable
	a (Ladp;)V shear
	K_ ()Z readyForShearing
aqz net/minecraft/world/entity/SpawnGroupData
ara net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	<init> ()V <init>
	a (Laqb;Lara$c;Lchk$a;Lara$b;)V register
	a (Laqb;)Lara$c; getPlacementType
	b (Laqb;)Lchk$a; getHeightmapType
	a (Laqb;Lbsh;Laqm;Lfx;Ljava/util/Random;)Z checkSpawnRules
	<clinit> ()V <clinit>
ara$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
	<init> (Lchk$a;Lara$c;Lara$b;)V <init>
	a (Lara$a;)Lara$c; access$000
	b (Lara$a;)Lchk$a; access$100
	c (Lara$a;)Lara$b; access$200
ara$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
	test (Laqb;Lbsh;Laqm;Lfx;Ljava/util/Random;)Z test
ara$c net/minecraft/world/entity/SpawnPlacements$Type
	a ON_GROUND
	b IN_WATER
	c NO_RESTRICTIONS
	d IN_LAVA
	e $VALUES
	values ()[Lara$c; values
	valueOf (Ljava/lang/String;)Lara$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
arb net/minecraft/world/entity/TamableAnimal
	bo DATA_FLAGS_ID
	bp DATA_OWNERUUID_ID
	bq orderedToSit
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lbft;)Z canBeLeashed
	t (Z)V spawnTamingParticles
	a (B)V handleEntityEvent
	eK ()Z isTame
	u (Z)V setTame
	eL ()V reassessTameGoals
	eM ()Z isInSittingPose
	v (Z)V setInSittingPose
	A_ ()Ljava/util/UUID; getOwnerUUID
	b (Ljava/util/UUID;)V setOwnerUUID
	f (Lbft;)V tame
	eN ()Laqj; getOwner
	c (Laqj;)Z canAttack
	i (Laqj;)Z isOwnedBy
	a (Laqj;Laqj;)Z wantsToAttack
	bF ()Lddm; getTeam
	r (Lapx;)Z isAlliedTo
	a (Laph;)V die
	eO ()Z isOrderedToSit
	w (Z)V setOrderedToSit
	B_ ()Lapx; getOwner
	<clinit> ()V <clinit>
arc net/minecraft/world/entity/ai/Brain
	a LOGGER
	b codec
	c memories
	d sensors
	e availableBehaviorsByPriority
	f schedule
	g activityRequirements
	h activityMemoriesToEraseWhenStopped
	i coreActivities
	j activeActivities
	k defaultActivity
	l lastScheduleUpdate
	a (Ljava/util/Collection;Ljava/util/Collection;)Larc$b; provider
	b (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V <init>
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; serializeStart
	j ()Ljava/util/stream/Stream; memories
	a (Laya;)Z hasMemoryValue
	b (Laya;)V eraseMemory
	a (Laya;Ljava/lang/Object;)V setMemory
	a (Laya;Ljava/lang/Object;J)V setMemoryWithExpiry
	a (Laya;Ljava/util/Optional;)V setMemory
	b (Laya;Ljava/util/Optional;)V setMemoryInternal
	c (Laya;)Ljava/util/Optional; getMemory
	a ()Ljava/util/Map; getMemories
	b (Laya;Ljava/lang/Object;)Z isMemoryValue
	a (Laya;Layb;)Z checkMemory
	b ()Lbhe; getSchedule
	a (Lbhe;)V setSchedule
	a (Ljava/util/Set;)V setCoreActivities
	c ()Ljava/util/Set; getActiveActivities
	d ()Ljava/util/List; getRunningBehaviors
	e ()V useDefaultActivity
	f ()Ljava/util/Optional; getActiveNonCoreActivity
	a (Lbhc;)V setActiveActivityIfPossible
	d (Lbhc;)V setActiveActivity
	e (Lbhc;)V eraseMemoriesForOtherActivitesThan
	a (JJ)V updateActivityFromSchedule
	a (Ljava/util/List;)V setActiveActivityToFirstValid
	b (Lbhc;)V setDefaultActivity
	a (Lbhc;ILcom/google/common/collect/ImmutableList;)V addActivity
	a (Lbhc;ILcom/google/common/collect/ImmutableList;Laya;)V addActivityAndRemoveMemoryWhenStopped
	a (Lbhc;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lbhc;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivityWithConditions
	a (Lbhc;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V addActivityAndRemoveMemoriesWhenStopped
	g ()V removeAllBehaviors
	c (Lbhc;)Z isActive
	h ()Larc; copyWithoutBehaviors
	a (Laag;Laqj;)V tick
	c (Laag;Laqj;)V tickSensors
	k ()V forgetOutdatedMemories
	b (Laag;Laqj;)V stopAll
	d (Laag;Laqj;)V startEachNonRunningBehavior
	e (Laag;Laqj;)V tickEachRunningBehavior
	f (Lbhc;)Z activityRequirementsAreMet
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; createPriorityPairs
	g (Lbhc;)Ljava/util/Set; lambda$addActivityAndRemoveMemoriesWhenStopped$3
	a (Ljava/lang/Integer;)Ljava/util/Map; lambda$addActivityAndRemoveMemoriesWhenStopped$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Z lambda$isMemoryValue$1
	a (Ljava/util/Map$Entry;)Larc$a; lambda$memories$0
	i ()Lorg/apache/logging/log4j/Logger; access$000
	a (Larc;)Ljava/util/stream/Stream; access$200
	a (Larc;Laya;Ljava/util/Optional;)V access$500
	<clinit> ()V <clinit>
arc$1 net/minecraft/world/entity/ai/Brain$1
	a val$memoryTypes
	b val$sensorTypes
	c val$codecReference
	<init> (Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/commons/lang3/mutable/MutableObject;)V <init>
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
	decode (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; decode
	a (Laya;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; captureRead
	a (Larc;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Larc$a;)V lambda$encode$8
	a (Laya;Laxz;)Larc$a; lambda$captureRead$7
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; lambda$captureRead$6
	a (Laya;)Lcom/mojang/serialization/DataResult; lambda$captureRead$5
	a (Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V lambda$decode$4
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Laya;)Lcom/mojang/serialization/DataResult; lambda$null$3
	a (Lcom/mojang/serialization/DynamicOps;Lvk;)Ljava/lang/Object; lambda$keys$2
	b (Laya;)Ljava/util/stream/Stream; lambda$keys$1
	a (Laya;Lcom/mojang/serialization/Codec;)Lvk; lambda$null$0
arc$a net/minecraft/world/entity/ai/Brain$MemoryValue
	a type
	b value
	b (Laya;Ljava/util/Optional;)Larc$a; createUnchecked
	<init> (Laya;Ljava/util/Optional;)V <init>
	a (Larc;)V setMemoryInternal
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V serialize
	a (Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V lambda$serialize$1
	a (Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Laxz;)V lambda$null$0
	<init> (Laya;Ljava/util/Optional;Larc$1;)V <init>
	a (Larc$a;Larc;)V access$400
	a (Laya;Ljava/util/Optional;)Larc$a; access$600
arc$b net/minecraft/world/entity/ai/Brain$Provider
	a memoryTypes
	b sensorTypes
	c codec
	<init> (Ljava/util/Collection;Ljava/util/Collection;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	a ()Larc; lambda$makeBrain$1
	b ()Lcom/mojang/serialization/Codec; lambda$null$0
	<init> (Ljava/util/Collection;Ljava/util/Collection;Larc$1;)V <init>
ard net/minecraft/world/entity/ai/attributes/Attribute
	a defaultValue
	b syncable
	c descriptionId
	<init> (Ljava/lang/String;D)V <init>
	a ()D getDefaultValue
	b ()Z isClientSyncable
	a (Z)Lard; setSyncable
	a (D)D sanitizeValue
	c ()Ljava/lang/String; getDescriptionId
are net/minecraft/world/entity/ai/attributes/AttributeInstance
	a attribute
	b modifiersByOperation
	c modifierById
	d permanentModifiers
	e baseValue
	f dirty
	g cachedValue
	h onDirty
	<init> (Lard;Ljava/util/function/Consumer;)V <init>
	a ()Lard; getAttribute
	b ()D getBaseValue
	a (D)V setBaseValue
	a (Larg$a;)Ljava/util/Set; getModifiers
	c ()Ljava/util/Set; getModifiers
	a (Ljava/util/UUID;)Larg; getModifier
	a (Larg;)Z hasModifier
	e (Larg;)V addModifier
	b (Larg;)V addTransientModifier
	c (Larg;)V addPermanentModifier
	d ()V setDirty
	d (Larg;)V removeModifier
	b (Ljava/util/UUID;)V removeModifier
	c (Ljava/util/UUID;)Z removePermanentModifier
	e ()V removeModifiers
	f ()D getValue
	h ()D calculateValue
	b (Larg$a;)Ljava/util/Collection; getModifiersOrEmpty
	a (Lare;)V replaceFrom
	g ()Lmd; save
	a (Lmd;)V load
	a (Larg$a;Ljava/util/Set;)V lambda$replaceFrom$1
	c (Larg$a;)Ljava/util/Set; lambda$getModifiers$0
arf net/minecraft/world/entity/ai/attributes/AttributeMap
	a LOGGER
	b attributes
	c dirtyAttributes
	d supplier
	<init> (Larh;)V <init>
	a (Lare;)V onAttributeModified
	a ()Ljava/util/Set; getDirtyAttributes
	b ()Ljava/util/Collection; getSyncableAttributes
	a (Lard;)Lare; getInstance
	b (Lard;)Z hasAttribute
	a (Lard;Ljava/util/UUID;)Z hasModifier
	c (Lard;)D getValue
	d (Lard;)D getBaseValue
	b (Lard;Ljava/util/UUID;)D getModifierValue
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	b (Lcom/google/common/collect/Multimap;)V addTransientAttributeModifiers
	a (Larf;)V assignValues
	c ()Lmj; save
	a (Lmj;)V load
	a (Ljava/lang/String;)V lambda$load$6
	a (Lmd;Lard;)V lambda$load$5
	b (Lare;)V lambda$assignValues$4
	a (Lard;Larg;)V lambda$addTransientAttributeModifiers$3
	a (Lard;Ljava/util/Collection;)V lambda$removeAttributeModifiers$2
	e (Lard;)Lare; lambda$getInstance$1
	c (Lare;)Z lambda$getSyncableAttributes$0
	<clinit> ()V <clinit>
arg net/minecraft/world/entity/ai/attributes/AttributeModifier
	a LOGGER
	b amount
	c operation
	d nameGetter
	e id
	<init> (Ljava/lang/String;DLarg$a;)V <init>
	<init> (Ljava/util/UUID;Ljava/lang/String;DLarg$a;)V <init>
	<init> (Ljava/util/UUID;Ljava/util/function/Supplier;DLarg$a;)V <init>
	a ()Ljava/util/UUID; getId
	b ()Ljava/lang/String; getName
	c ()Larg$a; getOperation
	d ()D getAmount
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	e ()Lmd; save
	a (Lmd;)Larg; load
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$1
	b (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
arg$a net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	a ADDITION
	b MULTIPLY_BASE
	c MULTIPLY_TOTAL
	d OPERATIONS
	e value
	f $VALUES
	values ()[Larg$a; values
	valueOf (Ljava/lang/String;)Larg$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I toValue
	a (I)Larg$a; fromValue
	<clinit> ()V <clinit>
arh net/minecraft/world/entity/ai/attributes/AttributeSupplier
	a instances
	<init> (Ljava/util/Map;)V <init>
	d (Lard;)Lare; getAttributeInstance
	a (Lard;)D getValue
	b (Lard;)D getBaseValue
	a (Lard;Ljava/util/UUID;)D getModifierValue
	a (Ljava/util/function/Consumer;Lard;)Lare; createInstance
	a ()Larh$a; builder
	c (Lard;)Z hasAttribute
	b (Lard;Ljava/util/UUID;)Z hasModifier
arh$a net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	a builder
	b instanceFrozen
	<init> ()V <init>
	b (Lard;)Lare; create
	a (Lard;)Larh$a; add
	a (Lard;D)Larh$a; add
	a ()Larh; build
	a (Lard;Lare;)V lambda$create$0
ari net/minecraft/world/entity/ai/attributes/Attributes
	a MAX_HEALTH
	b FOLLOW_RANGE
	c KNOCKBACK_RESISTANCE
	d MOVEMENT_SPEED
	e FLYING_SPEED
	f ATTACK_DAMAGE
	g ATTACK_KNOCKBACK
	h ATTACK_SPEED
	i ARMOR
	j ARMOR_TOUGHNESS
	k LUCK
	l SPAWN_REINFORCEMENTS_CHANCE
	m JUMP_STRENGTH
	<init> ()V <init>
	a (Ljava/lang/String;Lard;)Lard; register
	<clinit> ()V <clinit>
arj net/minecraft/world/entity/ai/attributes/DefaultAttributes
	a LOGGER
	b SUPPLIERS
	<init> ()V <init>
	a (Laqb;)Larh; getSupplier
	b (Laqb;)Z hasSupplier
	a ()V validate
	a (Lvk;)V lambda$validate$2
	c (Laqb;)Z lambda$validate$1
	d (Laqb;)Z lambda$validate$0
	<clinit> ()V <clinit>
ark net/minecraft/world/entity/ai/attributes/RangedAttribute
	a minValue
	b maxValue
	<init> (Ljava/lang/String;DDD)V <init>
	d ()D getMinValue
	e ()D getMaxValue
	a (D)D sanitizeValue
arl net/minecraft/world/entity/ai/attributes/package-info
arm net/minecraft/world/entity/ai/behavior/AcquirePoi
	b poiType
	c memoryToAcquire
	d onlyIfAdult
	e onPoiAcquisitionEvent
	f nextScheduledStart
	g batchCache
	<init> (Lazo;Laya;Laya;ZLjava/util/Optional;)V <init>
	<init> (Lazo;Laya;ZLjava/util/Optional;)V <init>
	a (Laya;Laya;)Lcom/google/common/collect/ImmutableMap; constructEntryConditionMap
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laag;Laqr;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqr;JJ)Larm$a; lambda$start$5
	a (Lazl;Lfx;Laqr;Laag;Lazo;)V lambda$start$4
	a (Laag;Laqr;Ljava/lang/Byte;)V lambda$null$3
	a (Lfx;Lfx;)Z lambda$null$2
	a (JLfx;)Z lambda$start$1
	a (JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z lambda$start$0
arm$a net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	a random
	b previousAttemptTimestamp
	c nextScheduledAttemptTimestamp
	d currentDelay
	<init> (Ljava/util/Random;J)V <init>
	a (J)V markAttempt
	b (J)Z isStillValid
	c (J)Z shouldRetry
	toString ()Ljava/lang/String; toString
arn net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	b partnerType
	c speedModifier
	d spawnChildAtTime
	<init> (Laqb;F)V <init>
	a (Laag;Lazw;)Z checkExtraStartConditions
	a (Laag;Lazw;J)V start
	b (Laag;Lazw;J)Z canStillUse
	c (Laag;Lazw;J)V tick
	d (Laag;Lazw;J)V stop
	a (Lazw;)Lazw; getBreedTarget
	b (Lazw;)Z hasBreedTargetOfRightType
	c (Lazw;)Ljava/util/Optional; findValidBreedPartner
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
	a (Laqj;)Lazw; lambda$findValidBreedPartner$1
	b (Laqj;)Z lambda$findValidBreedPartner$0
aro net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	<init> ()V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Lbfg;Laag;Lbfj;)V lambda$start$3
	a (Lazo;)Ljava/util/Optional; lambda$start$2
	a (Lazo;Lbfj;)Z lambda$null$1
	a (Lgf;Laag;)Ljava/util/Optional; lambda$start$0
arp net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	b followRange
	c speedModifier
	<init> (Lafe;F)V <init>
	a (Laag;Lapv;)Z checkExtraStartConditions
	a (Laag;Lapv;J)V start
	a (Lapv;)Lapv; getNearestAdult
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
arq net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	b tooCloseDistance
	c strafeSpeed
	<init> (IF)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)V start
	a (Laqk;)Z isTargetVisible
	b (Laqk;)Z isTargetTooClose
	c (Laqk;)Laqj; getTarget
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
arr net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	b pacifyDuration
	<init> (Laya;I)V <init>
	a (Laag;Laqj;J)V start
ars net/minecraft/world/entity/ai/behavior/Behavior
	a entryCondition
	b status
	c endTimestamp
	d minDuration
	e maxDuration
	<init> (Ljava/util/Map;)V <init>
	<init> (Ljava/util/Map;I)V <init>
	<init> (Ljava/util/Map;II)V <init>
	a ()Lars$a; getStatus
	e (Laag;Laqj;J)Z tryStart
	a (Laag;Laqj;J)V start
	f (Laag;Laqj;J)V tickOrStop
	d (Laag;Laqj;J)V tick
	g (Laag;Laqj;J)V doStop
	c (Laag;Laqj;J)V stop
	b (Laag;Laqj;J)Z canStillUse
	a (J)Z timedOut
	a (Laag;Laqj;)Z checkExtraStartConditions
	toString ()Ljava/lang/String; toString
	a (Laqj;)Z hasRequiredMemories
ars$a net/minecraft/world/entity/ai/behavior/Behavior$Status
	a STOPPED
	b RUNNING
	c $VALUES
	values ()[Lars$a; values
	valueOf (Ljava/lang/String;)Lars$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
art net/minecraft/world/entity/ai/behavior/BehaviorUtils
	<init> ()V <init>
	a (Laqj;Laqj;F)V lockGazeAndWalkToEachOther
	a (Larc;Laqj;)Z entityIsVisible
	a (Larc;Laya;Laqb;)Z targetIsValid
	a (Larc;Laya;Ljava/util/function/Predicate;)Z targetIsValid
	d (Laqj;Laqj;)V lookAtEachOther
	a (Laqj;Laqj;)V lookAtEntity
	b (Laqj;Laqj;F)V setWalkAndLookTargetMemoriesToEachOther
	a (Laqj;Lapx;FI)V setWalkAndLookTargetMemories
	a (Laqj;Lfx;FI)V setWalkAndLookTargetMemories
	a (Laqj;Lbly;Ldck;)V throwItem
	a (Laag;Lgp;I)Lgp; findSectionClosestToVillage
	a (Laqk;Laqj;I)Z isWithinAttackRange
	b (Laqj;Laqj;)Z isWithinMeleeAttackRange
	a (Laqj;Laqj;D)Z isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	c (Laqj;Laqj;)Z canSee
	a (Laqj;Ljava/util/Optional;Laqj;)Laqj; getNearestTarget
	a (Laqj;Laqj;Laqj;)Laqj; getTargetNearestMe
	a (Laqj;Laya;)Ljava/util/Optional; getLivingEntityFromUUIDMemory
	a (Lbfg;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getNearbyVillagersWithCondition
	a (Lbfg;Ljava/util/function/Predicate;Ljava/util/List;)Ljava/util/stream/Stream; lambda$getNearbyVillagersWithCondition$7
	a (Laqj;)Lbfg; lambda$null$6
	a (Lbfg;Laqj;)Z lambda$null$5
	a (Laqj;Ljava/util/UUID;)Laqj; lambda$getLivingEntityFromUUIDMemory$4
	a (Laag;ILgp;)Z lambda$findSectionClosestToVillage$3
	b (Larc;Laqj;)Z lambda$targetIsValid$2
	a (Laqb;Laqj;)Z lambda$targetIsValid$1
	a (Laqj;Ljava/util/List;)Z lambda$entityIsVisible$0
aru net/minecraft/world/entity/ai/behavior/BlockPosTracker
	a blockPos
	b centerPosition
	<init> (Lfx;)V <init>
	a ()Ldck; currentPosition
	b ()Lfx; currentBlockPosition
	a (Laqj;)Z isVisibleBy
	toString ()Ljava/lang/String; toString
arv net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	b currentRaid
	<init> (II)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V stop
	c (Laag;Lbfg;J)V tick
	a (Lbku;I)Lbly; getFirework
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
arw net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	b predicate
	c sourceMemory
	d targetMemory
	e durationOfCopy
	<init> (Ljava/util/function/Predicate;Laya;Laya;Lafe;)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
arx net/minecraft/world/entity/ai/behavior/CrossbowAttack
	b attackDelay
	c crossbowState
	<init> ()V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)Z canStillUse
	b (Laag;Laqk;J)V tick
	c (Laag;Laqk;J)V stop
	a (Laqk;Laqj;)V crossbowAttack
	b (Laqk;Laqj;)V lookAtTarget
	a (Laqj;)Laqj; getAttackTarget
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
arx$a net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	values ()[Larx$a; values
	valueOf (Ljava/lang/String;)Larx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ary net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	b maxWalkDistToRideTarget
	c dontRideIf
	<init> (ILjava/util/function/BiPredicate;)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laqj;Lapx;)Z isVehicleValid
	a (Laag;Laqj;J)V start
arz net/minecraft/world/entity/ai/behavior/DoNothing
	<init> (II)V <init>
	b (Laag;Laqj;J)Z canStillUse
asa net/minecraft/world/entity/ai/behavior/EntityTracker
	a entity
	b trackEyeHeight
	<init> (Lapx;Z)V <init>
	a ()Ldck; currentPosition
	b ()Lfx; currentBlockPosition
	a (Laqj;)Z isVisibleBy
	c ()Lapx; getEntity
	toString ()Ljava/lang/String; toString
asb net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	b predicate
	c memoryType
	<init> (Ljava/util/function/Predicate;Laya;)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
asc net/minecraft/world/entity/ai/behavior/GateBehavior
	b exitErasedMemories
	c orderPolicy
	d runningPolicy
	e behaviors
	<init> (Ljava/util/Map;Ljava/util/Set;Lasc$a;Lasc$b;Ljava/util/List;)V <init>
	b (Laag;Laqj;J)Z canStillUse
	a (J)Z timedOut
	a (Laag;Laqj;J)V start
	d (Laag;Laqj;J)V tick
	c (Laag;Laqj;J)V stop
	toString ()Ljava/lang/String; toString
	a (Lars;)Z lambda$toString$7
	a (Laag;Laqj;JLars;)V lambda$stop$6
	b (Lars;)Z lambda$stop$5
	b (Laag;Laqj;JLars;)V lambda$tick$4
	c (Lars;)Z lambda$tick$3
	c (Laag;Laqj;JLars;)Z lambda$canStillUse$2
	d (Lars;)Z lambda$canStillUse$1
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$0
asc$1 net/minecraft/world/entity/ai/behavior/GateBehavior$1
asc$a net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	a ORDERED
	b SHUFFLED
	c consumer
	d $VALUES
	values ()[Lasc$a; values
	valueOf (Ljava/lang/String;)Lasc$a; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Consumer;)V <init>
	a (Laum;)V apply
	b (Laum;)V lambda$static$0
	<clinit> ()V <clinit>
asc$b net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	a RUN_ONE
	b TRY_ALL
	c $VALUES
	values ()[Lasc$b; values
	valueOf (Ljava/lang/String;)Lasc$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Laum;Laag;Laqj;J)V apply
	<init> (Ljava/lang/String;ILasc$1;)V <init>
	<clinit> ()V <clinit>
asc$b$1 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	<init> (Ljava/lang/String;I)V <init>
	a (Laum;Laag;Laqj;J)V apply
	a (Laag;Laqj;JLars;)Z lambda$apply$1
	a (Lars;)Z lambda$apply$0
asc$b$2 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	<init> (Ljava/lang/String;I)V <init>
	a (Laum;Laag;Laqj;J)V apply
	a (Laag;Laqj;JLars;)V lambda$apply$1
	a (Lars;)Z lambda$apply$0
asd net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	b gifts
	c timeUntilNextGift
	d giftGivenDuringThisRun
	e timeSinceStart
	<init> (I)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	b (Laag;Lbfg;J)Z canStillUse
	c (Laag;Lbfg;J)V tick
	d (Laag;Lbfg;J)V stop
	a (Lbfg;Laqj;)V throwGift
	a (Lbfg;)Ljava/util/List; getItemToThrow
	b (Lbfg;)Z isHeroVisible
	c (Lbfg;)Ljava/util/Optional; getNearestTargetableHero
	a (Lbft;)Z isHero
	a (Lbfg;Lbft;)Z isWithinThrowingDistance
	a (Laag;)I calculateTimeUntilNextGift
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ase net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate
	<init> (F)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
asf net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation
	b closeEnoughDist
	c speedModifier
	<init> (IF)V <init>
	a (Laag;Laqk;J)V start
	a (Laqk;Lfx;)Lfx; getNearbyPos
	a (Ljava/util/Random;)I getRandomOffset
	a (Laqk;)Lfx; getCelebrateLocation
	a (Laag;Laqj;J)V start
asg net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	b speedModifier
	c closeEnoughDistance
	<init> (FI)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laag;Lfx;)D lambda$start$0
ash net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	b speedModifier
	<init> (F)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V tick
	c (Laag;Lbfg;J)V stop
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Lgf;)V lambda$stop$2
	a (Lazo;)Z lambda$null$1
	a (Lbhc;)Ljava/lang/Boolean; lambda$checkExtraStartConditions$0
asi net/minecraft/world/entity/ai/behavior/GoToWantedItem
	b predicate
	c maxDistToWalk
	d speedModifier
	<init> (FZI)V <init>
	<init> (Ljava/util/function/Predicate;FZI)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqj;)Lbcs; getClosestLovedItem
	b (Laqj;)Z lambda$new$0
asj net/minecraft/world/entity/ai/behavior/HarvestFarmland
	b aboveFarmlandPos
	c nextOkStartTime
	d timeWorkedSoFar
	e validFarmlandAroundVillager
	<init> ()V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;)Lfx; getValidFarmland
	a (Lfx;Laag;)Z validPos
	a (Laag;Lbfg;J)V start
	b (Laag;Lbfg;J)V stop
	c (Laag;Lbfg;J)V tick
	d (Laag;Lbfg;J)Z canStillUse
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
ask net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	b speedModifier
	<init> (F)V <init>
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laag;Laqr;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqr;Lfx;)V lambda$start$3
	a (Laag;Laqr;Lfx;)Z lambda$start$2
	b (Laag;Laqr;Lfx;)Z lambda$start$1
	a (Laag;Lfx;)Z lambda$start$0
asl net/minecraft/world/entity/ai/behavior/InteractWith
	b maxDist
	c speedModifier
	d type
	e interactionRangeSqr
	f targetFilter
	g selfFilter
	h memory
	<init> (Laqb;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Laya;FI)V <init>
	a (Laqb;ILaya;FI)Lasl; of
	a (Laqb;ILjava/util/function/Predicate;Laya;FI)Lasl; of
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laqj;)Z seesAtLeastOneValidTarget
	b (Laqj;)Z isTargetValid
	a (Laag;Laqj;J)V start
	a (Laqj;Larc;Ljava/util/List;)V lambda$start$7
	a (Larc;Laqj;)V lambda$null$6
	a (Laqj;Laqj;)Z lambda$null$5
	c (Laqj;)Laqj; lambda$null$4
	d (Laqj;)Z lambda$null$3
	e (Laqj;)Z lambda$of$2
	f (Laqj;)Z lambda$of$1
	g (Laqj;)Z lambda$of$0
asm net/minecraft/world/entity/ai/behavior/InteractWithDoor
	b lastCheckedNode
	c remainingCooldown
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laag;Laqj;Lcwy;Lcwy;)V closeDoorsThatIHaveOpenedOrPassedThrough
	a (Laag;Laqj;Lfx;)Z areOtherMobsComingThroughDoor
	b (Laag;Laqj;Lfx;)Z isMobComingThroughDoor
	a (Laag;Laqj;Lgf;)Z isDoorTooFarAway
	c (Laag;Laqj;Lfx;)V rememberDoorToClose
	a (Laag;Lfx;Laqj;)Z lambda$areOtherMobsComingThroughDoor$2
	a (Lfx;Laqj;)Z lambda$areOtherMobsComingThroughDoor$1
	a (Laqj;Laqj;)Z lambda$areOtherMobsComingThroughDoor$0
asn net/minecraft/world/entity/ai/behavior/JumpOnBed
	b speedModifier
	c targetBed
	d remainingTimeToReachBed
	e remainingJumps
	f remainingCooldownUntilNextJump
	<init> (F)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)V start
	b (Laag;Laqk;J)V stop
	c (Laag;Laqk;J)Z canStillUse
	a (J)Z timedOut
	d (Laag;Laqk;J)V tick
	a (Laqk;Lfx;)V startWalkingTowardsBed
	b (Laag;Laqk;)Z nearBed
	c (Laag;Laqk;)Z onOrOverBed
	d (Laag;Laqk;)Z onBedSurface
	a (Laag;Lfx;)Z isBed
	a (Laqk;)Ljava/util/Optional; getNearestBed
	e (Laag;Laqk;)Z tiredOfWalking
	f (Laag;Laqk;)Z tiredOfJumping
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
	a (Laag;Laqk;Lfx;)V lambda$start$0
aso net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	b speedModifier
	c radius
	d closeEnoughDist
	e currentPos
	<init> (IFI)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Lfx;)Z lambda$start$3
	a (Lazo;)Z lambda$start$2
	b (Lfx;)Z lambda$checkExtraStartConditions$1
	b (Lazo;)Z lambda$checkExtraStartConditions$0
asp net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid
	<init> (IF)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
asq net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	b speedModifier
	<init> (F)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V start
	c (Laag;Lbfg;J)V stop
	d (Laag;Lbfg;J)V tick
	a (J)Z timedOut
	a (Lbfg;)V followPlayer
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
asr net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	<init> (II)V <init>
	a (Laag;Laqk;J)Z canStillUse
	b (Laag;Laqk;J)V stop
	c (Laag;Laqk;J)V tick
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laqk;Lasy;)V lambda$tick$1
	b (Laqk;Lasy;)Z lambda$canStillUse$0
ass net/minecraft/world/entity/ai/behavior/MeleeAttack
	b cooldownBetweenAttacks
	<init> (I)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laqk;)Z isHoldingUsableProjectileWeapon
	a (Laag;Laqk;J)V start
	b (Laqk;)Laqj; getAttackTarget
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqk;Lblu;)Z lambda$isHoldingUsableProjectileWeapon$0
ast net/minecraft/world/entity/ai/behavior/Mount
	b speedModifier
	<init> (F)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqj;)Z isCloseEnoughToStartRiding
	b (Laqj;)Lapx; getRidableEntity
asu net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	b speedModifier
	<init> (F)V <init>
	a (Laag;Laqj;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;)Ldck; getOutdoorPosition
	a (Laag;Laqj;Lfx;)Z hasNoBlocksAbove
	a (Ldck;)Layc; lambda$start$0
asv net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	b remainingCooldown
	c path
	d lastTargetPos
	e speedModifier
	<init> ()V <init>
	<init> (II)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)Z canStillUse
	b (Laag;Laqk;J)V stop
	c (Laag;Laqk;J)V start
	d (Laag;Laqk;J)V tick
	a (Laqk;Layc;J)Z tryComputePath
	a (Laqk;Layc;)Z reachedTarget
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
asw net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	<init> ()V <init>
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laag;Laqr;J)V start
	a (Laag;Laqr;Laqj;)V fleeFromChaser
	a (Laqr;Laqj;)V chaseKid
	a (Laqr;)Ljava/util/Optional; findSomeoneToChase
	b (Laqr;)Ljava/util/Optional; findSomeoneBeingChased
	c (Laqr;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	d (Laqr;)Ljava/util/List; getFriendsNearby
	a (Laqj;)Laqj; whoAreYouChasing
	b (Laqj;)Laqj; seeIfSomeoneIsChasingMe
	c (Laqj;)Z isChasingSomeone
	a (Laqj;Laqj;)Z isFriendChasingMe
	e (Laqr;)Z hasFriendsNearby
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	b (Laqj;Laqj;)Z lambda$isFriendChasingMe$5
	c (Laqj;Laqj;)Z lambda$seeIfSomeoneIsChasingMe$4
	a (Ljava/util/Map;Laqj;)V lambda$checkHowManyChasersEachFriendHas$3
	a (Laqj;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$2
	a (Ljava/util/Map$Entry;)Z lambda$findSomeoneBeingChased$1
	b (Laqr;Laqj;)V lambda$start$0
asx net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	b profession
	<init> (Lbfj;)V <init>
	a (Laag;Lbfg;J)V start
	a (Lbfg;Lbfg;)Lbfg; selectWinner
	a (Lgf;Lazo;Lbfg;)Z competesForSameJobsite
	a (Lazo;Lbfj;)Z hasMatchingProfession
	a (Lbfg;)Z hasJobSite
	a (Laag;Laqj;J)V start
	a (Lbfg;Lgf;Lazo;)V lambda$start$1
	b (Lgf;Lazo;Lbfg;)Z lambda$null$0
asy net/minecraft/world/entity/ai/behavior/PositionTracker
	a ()Ldck; currentPosition
	b ()Lfx; currentBlockPosition
	a (Laqj;)Z isVisibleBy
asz net/minecraft/world/entity/ai/behavior/RandomStroll
	b speedModifier
	c maxHorizontalDistance
	d maxVerticalDistance
	<init> (F)V <init>
	<init> (FII)V <init>
	a (Laag;Laqr;J)V start
	a (Laag;Laqj;J)V start
	a (Ldck;)Layc; lambda$start$0
ata net/minecraft/world/entity/ai/behavior/ReactToBell
	<init> ()V <init>
	a (Laag;Laqj;J)V start
atb net/minecraft/world/entity/ai/behavior/ResetProfession
	<init> ()V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
atc net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
atd net/minecraft/world/entity/ai/behavior/RingBell
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
ate net/minecraft/world/entity/ai/behavior/RunIf
	b predicate
	c wrappedBehavior
	d checkWhileRunningAlso
	<init> (Ljava/util/Map;Ljava/util/function/Predicate;Lars;Z)V <init>
	a (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; mergeMaps
	<init> (Ljava/util/function/Predicate;Lars;Z)V <init>
	<init> (Ljava/util/function/Predicate;Lars;)V <init>
	<init> (Ljava/util/Map;Lars;)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	a (J)Z timedOut
	a (Laag;Laqj;J)V start
	d (Laag;Laqj;J)V tick
	c (Laag;Laqj;J)V stop
	toString ()Ljava/lang/String; toString
	a (Laqj;)Z lambda$new$0
atf net/minecraft/world/entity/ai/behavior/RunOne
	<init> (Ljava/util/List;)V <init>
	<init> (Ljava/util/Map;Ljava/util/List;)V <init>
atg net/minecraft/world/entity/ai/behavior/RunSometimes
	b resetTicks
	c wasRunning
	d interval
	e wrappedBehavior
	f ticksUntilNextStart
	<init> (Lars;Lafe;)V <init>
	<init> (Lars;ZLafe;)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	b (Laag;Laqj;J)Z canStillUse
	d (Laag;Laqj;J)V tick
	c (Laag;Laqj;J)V stop
	a (Laag;)V resetTicksUntilNextStart
	a (J)Z timedOut
	toString ()Ljava/lang/String; toString
ath net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	b speedModifier
	c batchCache
	d triedCount
	e lastUpdate
	<init> (F)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$start$1
	a (Lfx;)Z lambda$start$0
ati net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	b predicate
	c maxDistSqr
	<init> (Laej;F)V <init>
	<init> (Laql;F)V <init>
	<init> (Laqb;F)V <init>
	<init> (F)V <init>
	<init> (Ljava/util/function/Predicate;F)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqj;Larc;Ljava/util/List;)V lambda$start$6
	a (Larc;Laqj;)V lambda$null$5
	a (Laqj;Laqj;)Z lambda$null$4
	a (Laqj;)Z lambda$new$3
	a (Laqb;Laqj;)Z lambda$new$2
	a (Laql;Laqj;)Z lambda$new$1
	a (Laej;Laqj;)Z lambda$new$0
atj net/minecraft/world/entity/ai/behavior/SetHiddenState
	b closeEnoughDist
	c stayHiddenTicks
	d ticksHidden
	<init> (II)V <init>
	a (Laag;Laqj;J)V start
atk net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	b type
	c interactionRangeSqr
	d targetFilter
	e selfFilter
	<init> (Laqb;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)V <init>
	<init> (Laqb;I)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqj;)Z isMatchingTarget
	b (Laqj;)Ljava/util/List; getVisibleEntities
	a (Laqj;Larc;Ljava/util/List;)V lambda$start$4
	a (Larc;Laqj;)V lambda$null$3
	a (Laqj;Laqj;)Z lambda$null$2
	c (Laqj;)Z lambda$new$1
	d (Laqj;)Z lambda$new$0
atl net/minecraft/world/entity/ai/behavior/SetRaidStatus
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
atm net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	b walkAwayFromMemory
	c speedModifier
	d desiredDistance
	e toPosition
	<init> (Laya;FIZLjava/util/function/Function;)V <init>
	a (Laya;FIZ)Latm; pos
	b (Laya;FIZ)Latm; entity
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laqr;)Ldck; getPosToAvoid
	b (Laqr;)Z alreadyWalkingAwayFromPosWithSameSpeed
	a (Laag;Laqr;J)V start
	a (Laqr;Ldck;F)V moveAwayFrom
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
atn net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	b speedModifier
	<init> (F)V <init>
	a (Laag;Laqk;J)V start
	a (Laqj;Laqj;)V setWalkAndLookTarget
	a (Laqj;)V clearWalkTarget
	a (Laag;Laqj;J)V start
ato net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	b memoryType
	c speedModifier
	d closeEnoughDist
	e tooFarDistance
	f tooLongUnreachableDuration
	<init> (Laya;FIII)V <init>
	a (Lbfg;J)V dropPOI
	a (Laag;Lbfg;J)V start
	a (Laag;Lbfg;)Z tiredOfTryingToFindTarget
	a (Lbfg;Lgf;)Z tooFar
	a (Laag;Lgf;)Z wrongDimension
	a (Laag;Lbfg;Lgf;)Z closeEnough
	a (Laag;Laqj;J)V start
	a (Laag;Lbfg;JLarc;Lgf;)V lambda$start$0
atp net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	b speedModifier
	c closeEnoughDistance
	<init> (FI)V <init>
	a (Laag;Laqj;J)V start
atq net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	b playerItemStack
	c displayItems
	d cycleCounter
	e displayIndex
	f lookTime
	<init> (II)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V start
	c (Laag;Lbfg;J)V tick
	d (Laag;Lbfg;J)V stop
	a (Laqj;Lbfg;)V findItemsToDisplay
	a (Lbfg;)V displayFirstItem
	b (Lbfg;)V updateDisplayItems
	a (Lbqs;)Z playerItemStackMatchesCostOfOffer
	c (Lbfg;)Laqj; lookAtTarget
	d (Lbfg;)V displayCyclingItems
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
atr net/minecraft/world/entity/ai/behavior/SleepInBed
	b nextOkStartTime
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	a (Laag;Laqj;J)V start
	a (J)Z timedOut
	c (Laag;Laqj;J)V stop
ats net/minecraft/world/entity/ai/behavior/SocializeAtBell
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqj;Larc;Ljava/util/List;)V lambda$start$4
	a (Larc;Laqj;)V lambda$null$3
	a (Laqj;Laqj;)Z lambda$null$2
	a (Laqj;)Z lambda$null$1
	b (Laqj;)Z lambda$checkExtraStartConditions$0
att net/minecraft/world/entity/ai/behavior/StartAttacking
	b canAttackPredicate
	c targetFinderFunction
	<init> (Ljava/util/function/Predicate;Ljava/util/function/Function;)V <init>
	<init> (Ljava/util/function/Function;)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)V start
	a (Laqk;Laqj;)V setAttackTarget
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	b (Laqk;Laqj;)V lambda$start$1
	a (Laqk;)Z lambda$new$0
atu net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	b celebrateDuration
	c dancePredicate
	<init> (ILjava/util/function/BiPredicate;)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laqj;)Laqj; getAttackTarget
atv net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	b stopAttackingWhen
	<init> (Ljava/util/function/Predicate;)V <init>
	<init> ()V <init>
	a (Laag;Laqk;J)V start
	a (Laqk;)Z isCurrentTargetInDifferentLevel
	b (Laqk;)Laqj; getAttackTarget
	a (Laqj;)Z isTiredOfTryingToReachTarget
	c (Laqk;)Z isCurrentTargetDeadOrRemoved
	d (Laqk;)V clearAttackTarget
	a (Laag;Laqj;J)V start
	b (Laqj;)Z lambda$new$0
atw net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	<init> ()V <init>
	a (Laag;Laqk;J)V start
	a (Laag;Laqj;J)V start
	a (Laag;Laqk;Laqj;)V lambda$start$0
atx net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	b memoryType
	c nextOkStartTime
	d maxDistanceFromPoi
	e speedModifier
	<init> (Laya;FI)V <init>
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laag;Laqr;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Ldck;)Layc; lambda$start$0
aty net/minecraft/world/entity/ai/behavior/StrollToPoi
	b memoryType
	c closeEnoughDist
	d maxDistanceFromPoi
	e speedModifier
	f nextOkStartTime
	<init> (Laya;FII)V <init>
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laag;Laqr;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Larc;Lgf;)V lambda$start$0
atz net/minecraft/world/entity/ai/behavior/StrollToPoiList
	b strollToMemoryType
	c mustBeCloseToMemoryType
	d speedModifier
	e closeEnoughDist
	f maxDistanceFromPoi
	g nextOkStartTime
	h targetPos
	<init> (Laya;FIILaya;)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
aua net/minecraft/world/entity/ai/behavior/Swim
	b chance
	<init> (F)V <init>
	a (Laag;Laqk;)Z checkExtraStartConditions
	a (Laag;Laqk;J)Z canStillUse
	b (Laag;Laqk;J)V tick
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	d (Laag;Laqj;J)V tick
aub net/minecraft/world/entity/ai/behavior/TradeWithVillager
	b trades
	<init> ()V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V start
	c (Laag;Lbfg;J)V tick
	d (Laag;Lbfg;J)V stop
	a (Lbfg;Lbfg;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	a (Lbfg;Ljava/util/Set;Laqj;)V throwHalfStack
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
	a (Lcom/google/common/collect/ImmutableSet;Lblu;)Z lambda$figureOutWhatIAmWillingToTrade$0
auc net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	<init> ()V <init>
	a (Laag;Laqj;J)V start
aud net/minecraft/world/entity/ai/behavior/UseBonemeal
	b nextWorkCycleTime
	c lastBonemealingSession
	d timeWorkedSoFar
	e cropPos
	<init> ()V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;)Ljava/util/Optional; pickNextTarget
	a (Lfx;Laag;)Z validPos
	b (Laag;Lbfg;J)V start
	a (Lbfg;)V setCurrentCropAsTarget
	c (Laag;Lbfg;J)V stop
	d (Laag;Lbfg;J)V tick
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
	a (Lbfg;Lfx;)V lambda$setCurrentCropAsTarget$0
aue net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	b memoryType
	c poiPredicate
	<init> (Lazo;Laya;)V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laag;Lfx;Laqj;)Z bedIsOccupied
	a (Laag;Lfx;)Z poiDoesntExist
auf net/minecraft/world/entity/ai/behavior/VictoryStroll
	<init> (F)V <init>
	a (Laag;Laqr;)Z checkExtraStartConditions
	a (Laag;Laqj;)Z checkExtraStartConditions
aug net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	b speedModifier
	c maxXyDist
	d maxYDist
	<init> (F)V <init>
	<init> (FII)V <init>
	a (Laag;Laqr;J)V start
	a (Laqr;Lgp;)V setTargetedPos
	a (Laqr;)V setRandomPos
	a (Laag;Laqj;J)V start
	a (Ldck;)Layc; lambda$setRandomPos$1
	b (Ldck;)Layc; lambda$setTargetedPos$0
auh net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	<init> ()V <init>
	a (Laag;Lbfg;J)V start
	a (Lbfg;)Z isCloseToEntityThatHurtMe
	a (Laag;Laqj;J)V start
	a (Lbfg;Laqj;)Z lambda$isCloseToEntityThatHurtMe$0
aui net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	<init> ()V <init>
	a (Lbfj;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b (Lbfj;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	c (Lbfj;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lbfj;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lbfj;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lbfj;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lbfj;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lbfj;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lbfj;F)Lcom/google/common/collect/ImmutableList; getHidePackage
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
auj net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	b birthTimestamp
	<init> ()V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V start
	c (Laag;Lbfg;J)V tick
	a (Laag;Lbfg;Lbfg;)V tryToGiveBirth
	d (Laag;Lbfg;J)V stop
	a (Lbfg;)Z isBreedingPossible
	b (Laag;Lbfg;)Ljava/util/Optional; takeVacantBed
	a (Lbfg;Lfx;)Z canReach
	b (Laag;Lbfg;Lbfg;)Ljava/util/Optional; breed
	a (Laag;Lbfg;Lfx;)V giveBedToChild
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	c (Laag;Laqj;J)V stop
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
	b (Lbfg;Lfx;)Z lambda$takeVacantBed$1
	a (Lapv;)Z lambda$isBreedingPossible$0
auk net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	<init> ()V <init>
	a (Laag;Lbfg;J)Z canStillUse
	b (Laag;Lbfg;J)V start
	c (Laag;Lbfg;J)V tick
	a (Laqj;)Z hasHostile
	b (Laqj;)Z isHurt
	b (Laag;Laqj;J)Z canStillUse
	d (Laag;Laqj;J)V tick
	a (Laag;Laqj;J)V start
aul net/minecraft/world/entity/ai/behavior/WakeUp
	<init> ()V <init>
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
aum net/minecraft/world/entity/ai/behavior/WeightedList
	a entries
	b random
	<init> ()V <init>
	<init> (Ljava/util/List;)V <init>
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;I)Laum; add
	a ()Laum; shuffle
	a (Ljava/util/Random;)Laum; shuffle
	b ()Z isEmpty
	c ()Ljava/util/stream/Stream; stream
	d ()Ljava/lang/Object; getOne
	b (Ljava/util/Random;)Ljava/lang/Object; getOne
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/Object;)D lambda$shuffle$2
	a (Ljava/util/Random;Laum$a;)V lambda$shuffle$1
	a (Laum;)Ljava/util/List; lambda$codec$0
aum$1 net/minecraft/world/entity/ai/behavior/WeightedList$1
aum$a net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry
	a data
	b weight
	c randWeight
	<init> (Ljava/lang/Object;I)V <init>
	c ()D getRandWeight
	a (F)V setRandom
	a ()Ljava/lang/Object; getData
	b ()I getWeight
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/lang/Object;ILaum$1;)V <init>
	a (Laum$a;)Ljava/lang/Object; access$100
	b (Laum$a;)I access$200
	c (Laum$a;)D access$300
	a (Laum$a;F)V access$400
aum$a$1 net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry$1
	a val$elementCodec
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Laum$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Laum$a;)Lcom/mojang/datafixers/util/Pair; lambda$decode$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Laum$a; lambda$decode$0
aun net/minecraft/world/entity/ai/behavior/WorkAtComposter
	b COMPOSTABLE_ITEMS
	<init> ()V <init>
	a (Laag;Lbfg;)V useWorkstation
	a (Laag;Lbfg;Lgf;Lcee;)V compostItems
	a (Laag;Lcee;Lfx;Lcee;)V spawnComposterFillEffects
	a (Lbfg;)V makeBread
	<clinit> ()V <clinit>
auo net/minecraft/world/entity/ai/behavior/WorkAtPoi
	b lastCheck
	<init> ()V <init>
	b (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	a (Laag;Lbfg;)V useWorkstation
	b (Laag;Lbfg;J)Z canStillUse
	a (Laag;Laqj;)Z checkExtraStartConditions
	b (Laag;Laqj;J)Z canStillUse
	a (Laag;Laqj;J)V start
	a (Larc;Lgf;)V lambda$start$0
aup net/minecraft/world/entity/ai/behavior/YieldJobSite
	b speedModifier
	<init> (F)V <init>
	a (Laag;Lbfg;)Z checkExtraStartConditions
	a (Laag;Lbfg;J)V start
	a (Lazo;Lbfg;Lfx;)Z nearbyWantsJobsite
	a (Laag;Lbfg;Lbfg;Lfx;Z)V yieldJobSite
	a (Lbfg;Lfx;Lazo;)Z canReachPos
	a (Lbfg;)V eraseMemories
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
	a (Laag;Lbfg;Lfx;Lbfg;)V lambda$start$1
	a (Ljava/util/Optional;Lfx;Lbfg;)Z lambda$start$0
auq net/minecraft/world/entity/ai/behavior/package-info
aur net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b headStableTime
	c lastStableYHeadRot
	<init> (Laqk;)V <init>
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
aus net/minecraft/world/entity/ai/control/Control
aut net/minecraft/world/entity/ai/control/DolphinLookControl
	h maxYRotFromCenter
	<init> (Laqk;I)V <init>
	a ()V tick
auu net/minecraft/world/entity/ai/control/FlyingMoveControl
	i maxTurn
	j hoversInPlace
	<init> (Laqk;IZ)V <init>
	a ()V tick
auv net/minecraft/world/entity/ai/control/JumpControl
	b mob
	a jump
	<init> (Laqk;)V <init>
	a ()V jump
	b ()V tick
auw net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d hasWanted
	e wantedX
	f wantedY
	g wantedZ
	<init> (Laqk;)V <init>
	a (Ldck;)V setLookAt
	a (Lapx;)V setLookAt
	a (Lapx;FF)V setLookAt
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a ()V tick
	b ()Z resetXRotOnTick
	c ()Z isHasWanted
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
	g ()F getXRotD
	h ()F getYRotD
	a (FFF)F rotateTowards
	b (Lapx;)D getWantedY
auy net/minecraft/world/entity/ai/control/MoveControl
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f strafeForwards
	g strafeRight
	h operation
	<init> (Laqk;)V <init>
	b ()Z hasWanted
	c ()D getSpeedModifier
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a (Lauy;)V copyFrom
	a ()V tick
	b (FF)Z isWalkable
	a (FFF)F rotlerp
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
auy$a net/minecraft/world/entity/ai/control/MoveControl$Operation
	a WAIT
	b MOVE_TO
	c STRAFE
	d JUMPING
	e $VALUES
	values ()[Lauy$a; values
	valueOf (Ljava/lang/String;)Lauy$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
auz net/minecraft/world/entity/ai/control/package-info
ava net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	i walkSpeedModifier
	j sprintSpeedModifier
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	k avoidEntityTargeting
	<init> (Laqr;Ljava/lang/Class;FDD)V <init>
	<init> (Laqr;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V <init>
	<init> (Laqr;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Laqj;)Z lambda$new$1
	b (Laqj;)Z lambda$new$0
avb net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	<init> (Lbaw;F)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbft;)Z playerHoldingInteresting
avc net/minecraft/world/entity/ai/goal/BoatGoals
	a GO_TO_BOAT
	b GO_IN_BOAT_DIRECTION
	c $VALUES
	values ()[Lavc; values
	valueOf (Ljava/lang/String;)Lavc; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
avd net/minecraft/world/entity/ai/goal/BreakDoorGoal
	g validDifficulties
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	<init> (Laqk;Ljava/util/function/Predicate;)V <init>
	<init> (Laqk;ILjava/util/function/Predicate;)V <init>
	f ()I getDoorBreakTime
	a ()Z canUse
	c ()V start
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	a (Laoo;)Z isValidDifficulty
ave net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	<init> (Laqr;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	C_ ()Z isInterruptable
	c ()V start
	g ()V findAirPosition
	e ()V tick
	a (Lbrw;Lfx;)Z givesAir
avf net/minecraft/world/entity/ai/goal/BreedGoal
	d PARTNER_TARGETING
	a animal
	e partnerClass
	b level
	c partner
	f loveTime
	g speedModifier
	<init> (Lazw;D)V <init>
	<init> (Lazw;DLjava/lang/Class;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	h ()Lazw; getFreePartner
	g ()V breed
	<clinit> ()V <clinit>
avg net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	<init> (Lazy;DI)V <init>
	a ()Z canUse
	c ()V start
	a (Laqr;)I nextStartTick
	d ()V stop
	e ()V tick
	a (Lbrw;Lfx;)Z isValidTarget
avh net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	<init> (Lazy;D)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbrw;Lfx;)Z isValidTarget
	a (Lced$a;)Z lambda$isValidTarget$1
	a (Lces;)Ljava/lang/Boolean; lambda$null$0
avi net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	<init> (Lbac;I)V <init>
	a ()Z canUse
	a (Lfx;III)Z waterIsClear
	b (Lfx;III)Z surfaceIsClear
	b ()Z canContinueToUse
	C_ ()Z isInterruptable
	c ()V start
	d ()V stop
	e ()V tick
	<clinit> ()V <clinit>
avj net/minecraft/world/entity/ai/goal/DoorInteractGoal
	d mob
	e doorPos
	f hasDoor
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	<init> (Laqk;)V <init>
	g ()Z isOpen
	a (Z)V setOpen
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
avk net/minecraft/world/entity/ai/goal/EatBlockGoal
	a IS_TALL_GRASS
	b mob
	c level
	d eatAnimationTick
	<init> (Laqk;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	g ()I getEatAnimationTick
	e ()V tick
	<clinit> ()V <clinit>
avl net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	<init> (Laqr;D)V <init>
	a ()Z canUse
	g ()Z setWantedPos
	b ()Z canContinueToUse
	c ()V start
	h ()Ldck; getHidePos
avm net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	<init> (Laqk;)V <init>
	a ()Z canUse
	e ()V tick
avn net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	<init> (Laqr;)V <init>
	a ()Z canUse
	C_ ()Z isInterruptable
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
avo net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a mob
	b timeToRecalcPath
	c nextStartTick
	<init> (Lazv;)V <init>
	a (Lazv;)I nextStartTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	b (Lazv;)Z lambda$canUse$1
	c (Lazv;)Z lambda$canUse$0
avp net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	<init> (Laqk;DFF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Laqk;Laqk;)Z lambda$new$0
avq net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a tamable
	b owner
	c level
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h startDistance
	i oldWaterCost
	j canFly
	<init> (Larb;DFFZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V teleportToOwner
	a (III)Z maybeTeleportTo
	a (Lfx;)Z canTeleportTo
	a (II)I randomIntInclusive
avr net/minecraft/world/entity/ai/goal/FollowParentGoal
	a animal
	b parent
	c speedModifier
	d timeToRecalcPath
	<init> (Lazw;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
avs net/minecraft/world/entity/ai/goal/Goal
	a flags
	<init> ()V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	C_ ()Z isInterruptable
	c ()V start
	d ()V stop
	e ()V tick
	a (Ljava/util/EnumSet;)V setFlags
	toString ()Ljava/lang/String; toString
	i ()Ljava/util/EnumSet; getFlags
avs$a net/minecraft/world/entity/ai/goal/Goal$Flag
	a MOVE
	b LOOK
	c JUMP
	d TARGET
	e $VALUES
	values ()[Lavs$a; values
	valueOf (Ljava/lang/String;)Lavs$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
avt net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g newGoalRate
	<init> (Ljava/util/function/Supplier;)V <init>
	a (ILavs;)V addGoal
	a ()V removeAllGoals
	a (Lavs;)V removeGoal
	b ()V tick
	c ()Ljava/util/Set; getAvailableGoals
	d ()Ljava/util/stream/Stream; getRunningGoals
	a (I)V setNewGoalRate
	a (Lavs$a;)V disableControlFlag
	b (Lavs$a;)V enableControlFlag
	a (Lavs$a;Z)V setControlFlag
	a (Laxi;)V lambda$tick$9
	a (Laxi;Lavs$a;)V lambda$null$8
	b (Laxi;)Z lambda$tick$7
	b (Laxi;Lavs$a;)Z lambda$null$6
	c (Laxi;)Z lambda$tick$5
	d (Laxi;)Z lambda$tick$4
	a (Lavs$a;Laxi;)V lambda$tick$3
	e (Laxi;)Z lambda$tick$2
	a (Lavs;Laxi;)Z lambda$removeGoal$1
	b (Lavs;Laxi;)Z lambda$removeGoal$0
	<clinit> ()V <clinit>
avt$1 net/minecraft/world/entity/ai/goal/GoalSelector$1
	<init> ()V <init>
	a ()Z canUse
avt$2 net/minecraft/world/entity/ai/goal/GoalSelector$2
	<init> (ILavs;)V <init>
	g ()Z isRunning
avu net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	<init> (Laqr;D)V <init>
	g ()Ldck; getPosition
	j ()Ldck; getPositionTowardsAnywhere
	k ()Ldck; getPositionTowardsVillagerWhoWantsGolem
	l ()Ldck; getPositionTowardsPoi
	m ()Lgp; getRandomVillageSection
	a (Lgp;)Lfx; getRandomPoiWithinSection
	a (Lbfg;)Z doesVillagerWantGolem
	a (Lazo;)Z lambda$getRandomPoiWithinSection$1
	a (Laag;Lgp;)Z lambda$getRandomVillageSection$0
avv net/minecraft/world/entity/ai/goal/InteractGoal
	<init> (Laqk;Ljava/lang/Class;F)V <init>
	<init> (Laqk;Ljava/lang/Class;FF)V <init>
avw net/minecraft/world/entity/ai/goal/JumpGoal
	<init> ()V <init>
avx net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	<init> (Lbaq;)V <init>
	a ()Z canUse
	C_ ()Z isInterruptable
	c ()V start
	e ()V tick
avy net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	<init> (Laqk;F)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
avz net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c distCheckCounter
	<init> (Lbbb;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	a (Lbbb;I)Z firstIsLeashed
	a (Lapx;)Z lambda$canUse$0
awa net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a mob
	b lookAt
	c lookDistance
	g lookTime
	d probability
	e lookAtType
	f lookAtContext
	<init> (Laqk;Ljava/lang/Class;F)V <init>
	<init> (Laqk;Ljava/lang/Class;FF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Laqk;Laqj;)Z lambda$new$0
awb net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	g villager
	<init> (Lbfb;)V <init>
	a ()Z canUse
awc net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b speedModifier
	c followingTargetEvenIfNotSeen
	d path
	e pathedTargetX
	f pathedTargetY
	g pathedTargetZ
	h ticksUntilNextPathRecalculation
	i ticksUntilNextAttack
	j attackInterval
	k lastCanUseCheck
	<init> (Laqr;DZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Laqj;D)V checkAndPerformAttack
	g ()V resetAttackCooldown
	h ()Z isTimeToAttack
	j ()I getTicksUntilNextAttack
	k ()I getAttackInterval
	a (Laqj;)D getAttackReachSqr
awd net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	<init> (Laqr;DZ)V <init>
	a ()Z canUse
	g ()Ldck; getPosition
awe net/minecraft/world/entity/ai/goal/MoveIndoorsGoal
	a mob
	b insideX
	c insideZ
	<init> (Laqr;)V <init>
	a ()Z canUse
	g ()Z isInside
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
awf net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	<init> (Laqr;DZILjava/util/function/BooleanSupplier;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	a (Lfx;)Z hasNotVisited
	g ()V updateVisited
	a (Laag;Lfx;Lfx;)D lambda$canUse$0
awg net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	g maxStayTicks
	e blockPos
	h reachedTarget
	i searchRange
	j verticalSearchRange
	f verticalSearchStart
	<init> (Laqr;DI)V <init>
	<init> (Laqr;DII)V <init>
	a ()Z canUse
	a (Laqr;)I nextStartTick
	b ()Z canContinueToUse
	c ()V start
	g ()V moveMobToBlock
	h ()D acceptedDistance
	j ()Lfx; getMoveToTarget
	e ()V tick
	k ()Z shouldRecalculatePath
	l ()Z isReachedTarget
	m ()Z findNearestBlock
	a (Lbrw;Lfx;)Z isValidTarget
awh net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	<init> (Laqr;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
awi net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	<init> (Laqr;DF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	c ()V start
awj net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a level
	b mob
	c target
	d attackTime
	<init> (Laqk;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
awk net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	a OFFER_TARGER_CONTEXT
	b golem
	c villager
	d tick
	<init> (Lbaf;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	<clinit> ()V <clinit>
awl net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	<init> (Laqk;Z)V <init>
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
awm net/minecraft/world/entity/ai/goal/PanicGoal
	a mob
	b speedModifier
	c posX
	d posY
	e posZ
	f isRunning
	<init> (Laqr;D)V <init>
	a ()Z canUse
	g ()Z findRandomPosition
	h ()Z isRunning
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	a (Lbqz;Lapx;II)Lfx; lookForWater
awn net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a mob
	<init> (Lbgz;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	a (Lbgy;)V recruitNearby
	a (Lbgy;Lbgz;)Z lambda$recruitNearby$0
awo net/minecraft/world/entity/ai/goal/PlayGoal
	a mob
	b followFriend
	c speedModifier
	d playTime
	<init> (Lbfg;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
awp net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	<init> (Laqk;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
awq net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f interval
	g forceTrigger
	h checkNoActionTime
	<init> (Laqr;D)V <init>
	<init> (Laqr;DI)V <init>
	<init> (Laqr;DIZ)V <init>
	a ()Z canUse
	g ()Ldck; getPosition
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	h ()V trigger
	a (I)V setInterval
awr net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	<init> (Laqr;DI)V <init>
	g ()Ldck; getPosition
aws net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	<init> (Lbdr;DIF)V <init>
	<init> (Lbdr;DIIF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
awt net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	<init> (Lbdn;DIF)V <init>
	a (I)V setMinAttackInterval
	a ()Z canUse
	g ()Z isHoldingBow
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
awu net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a PATHFINDING_DELAY_RANGE
	b mob
	c crossbowState
	d speedModifier
	e attackRadiusSqr
	f seeTime
	g attackDelay
	h updatePathDelay
	<init> (Lbdn;DF)V <init>
	a ()Z canUse
	g ()Z isHoldingCrossbow
	b ()Z canContinueToUse
	h ()Z isValidTarget
	d ()V stop
	e ()V tick
	j ()Z canRun
	<clinit> ()V <clinit>
awu$a net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	values ()[Lawu$a; values
	valueOf (Ljava/lang/String;)Lawu$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
awv net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	g blockToRemove
	h removerMob
	i ticksSinceReachedGoal
	<init> (Lbul;Laqr;DI)V <init>
	a ()Z canUse
	n ()Z tryFindBlock
	d ()V stop
	c ()V start
	a (Lbrv;Lfx;)V playDestroyProgressSound
	a (Lbru;Lfx;)V playBreakSound
	e ()V tick
	a (Lfx;Lbqz;)Lfx; getPosWithBlock
	a (Lbrw;Lfx;)Z isValidTarget
aww net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	<init> (Laqr;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
awx net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	a horse
	b speedModifier
	c posX
	d posY
	e posZ
	<init> (Lbay;D)V <init>
	a ()Z canUse
	c ()V start
	b ()Z canContinueToUse
	e ()V tick
awy net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	a mob
	<init> (Larb;)V <init>
	b ()Z canContinueToUse
	a ()Z canUse
	c ()V start
	d ()V stop
awz net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a mob
	b interval
	c wantedPos
	<init> (Laqr;I)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	g ()V moveRandomly
	a (Laag;Lfx;)D lambda$canUse$0
axa net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	<init> (Lbcz;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
axb net/minecraft/world/entity/ai/goal/TakeFlowerGoal
	a villager
	b golem
	c pickupTick
	d takeFlower
	<init> (Lbfg;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
axc net/minecraft/world/entity/ai/goal/TemptGoal
	c TEMP_TARGETING
	a mob
	d speedModifier
	e px
	f py
	g pz
	h pRotX
	i pRotY
	b player
	j calmDown
	k isRunning
	l items
	m canScare
	<init> (Laqr;DLbok;Z)V <init>
	<init> (Laqr;DZLbok;)V <init>
	a ()Z canUse
	a (Lbly;)Z shouldFollowItem
	b ()Z canContinueToUse
	g ()Z canScare
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z isRunning
	<clinit> ()V <clinit>
axd net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	<init> (Lbfb;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
axe net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	<init> (Laqr;)V <init>
	a ()Z canUse
	c ()V start
axf net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	<init> (Laqk;Lbly;Ladn;Ljava/util/function/Predicate;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
axg net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	<init> (Laqr;D)V <init>
	g ()Ldck; getPosition
	j ()Ldck; getTreePos
axh net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	h probability
	<init> (Laqr;D)V <init>
	<init> (Laqr;DF)V <init>
	g ()Ldck; getPosition
axi net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	<init> (ILavs;)V <init>
	a (Laxi;)Z canBeReplacedBy
	a ()Z canUse
	b ()Z canContinueToUse
	C_ ()Z isInterruptable
	c ()V start
	d ()V stop
	e ()V tick
	a (Ljava/util/EnumSet;)V setFlags
	i ()Ljava/util/EnumSet; getFlags
	g ()Z isRunning
	h ()I getPriority
	j ()Lavs; getGoal
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
axj net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	b zombie
	c raiseArmTicks
	<init> (Lbeg;DZ)V <init>
	c ()V start
	d ()V stop
	e ()V tick
axk net/minecraft/world/entity/ai/goal/package-info
axl net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	<init> (Lbaf;)V <init>
	a ()Z canUse
	c ()V start
axm net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b alertSameType
	c timestamp
	d toIgnoreDamage
	i toIgnoreAlert
	<init> (Laqr;[Ljava/lang/Class;)V <init>
	a ()Z canUse
	a ([Ljava/lang/Class;)Laxm; setAlertOthers
	c ()V start
	g ()V alertOthers
	a (Laqk;Laqj;)V alertOther
	<clinit> ()V <clinit>
axn net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	a targetType
	b randomInterval
	c target
	d targetConditions
	<init> (Laqk;Ljava/lang/Class;Z)V <init>
	<init> (Laqk;Ljava/lang/Class;ZZ)V <init>
	<init> (Laqk;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	a (D)Ldcf; getTargetSearchArea
	g ()V findTarget
	c ()V start
	a (Laqj;)V setTarget
axo net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	<init> (Lbgz;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V <init>
	a (Z)V setCanAttack
	a ()Z canUse
axp net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i cooldown
	<init> (Lbgz;Ljava/lang/Class;ZLjava/util/function/Predicate;)V <init>
	h ()I getCooldown
	j ()V decrementCooldown
	a ()Z canUse
	c ()V start
axq net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	<init> (Larb;Ljava/lang/Class;ZLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
axr net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	<init> (Larb;)V <init>
	a ()Z canUse
	c ()V start
axs net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	<init> (Larb;)V <init>
	a ()Z canUse
	c ()V start
axt net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	a mob
	b alertOthersOfSameType
	c lastHurtByPlayerTimestamp
	<init> (Laqk;Z)V <init>
	a ()Z canUse
	g ()Z wasHurtByPlayer
	c ()V start
	h ()Ljava/util/List; getNearbyMobsOfSameType
	a (Laqk;)Laqp; lambda$start$1
	b (Laqk;)Z lambda$start$0
axu net/minecraft/world/entity/ai/goal/target/TargetGoal
	e mob
	f mustSee
	a mustReach
	b reachCache
	c reachCacheTime
	d unseenTicks
	g targetMob
	h unseenMemoryTicks
	<init> (Laqk;Z)V <init>
	<init> (Laqk;ZZ)V <init>
	b ()Z canContinueToUse
	k ()D getFollowDistance
	c ()V start
	d ()V stop
	a (Laqj;Lazd;)Z canAttack
	a (Laqj;)Z canReach
	a (I)Laxu; setUnseenMemoryTicks
axv net/minecraft/world/entity/ai/goal/target/package-info
axw net/minecraft/world/entity/ai/gossip/GossipContainer
	a gossips
	<init> ()V <init>
	a ()Ljava/util/Map; getGossipEntries
	b ()V decay
	c ()Ljava/util/stream/Stream; unpack
	a (Ljava/util/Random;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Ljava/util/UUID;)Laxw$a; getOrCreate
	a (Laxw;Ljava/util/Random;I)V transferFrom
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Laxx;Ljava/util/function/DoublePredicate;)J getCountForType
	a (Ljava/util/UUID;Laxx;I)V add
	b (Ljava/util/UUID;Laxx;I)V remove
	a (Ljava/util/UUID;Laxx;)V remove
	a (Laxx;)V remove
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; store
	a (Lcom/mojang/serialization/Dynamic;)V update
	a (II)I mergeValuesForTransfer
	a (Laxx;II)I mergeValuesForAddition
	a (Laxw$b;)V lambda$update$8
	a (Lcom/mojang/serialization/DataResult;)Ljava/util/stream/Stream; lambda$update$7
	a (Lcom/mojang/serialization/DynamicOps;Laxw$b;)Lcom/mojang/serialization/Dynamic; lambda$store$6
	a (Laxx;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$add$5
	a (Ljava/util/function/DoublePredicate;Laxx;Laxw$a;)Z lambda$getCountForType$4
	b (Laxw$b;)V lambda$transferFrom$3
	b (Ljava/util/UUID;)Laxw$a; lambda$getOrCreate$2
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$unpack$1
	a (Ljava/util/Map;Ljava/util/UUID;)V lambda$getGossipEntries$0
axw$1 net/minecraft/world/entity/ai/gossip/GossipContainer$1
axw$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	<init> ()V <init>
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a ()V decay
	b ()Z isEmpty
	a (Laxx;)V makeSureValueIsntTooLowOrTooHigh
	b (Laxx;)V remove
	a (Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Laxw$b; lambda$unpack$2
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I lambda$weightedValue$1
	a (Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z lambda$weightedValue$0
	a (Laxw$a;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; access$000
	<init> (Laxw$1;)V <init>
axw$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	a target
	b type
	c value
	<init> (Ljava/util/UUID;Laxx;I)V <init>
	a ()I weightedValue
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; store
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; load
axx net/minecraft/world/entity/ai/gossip/GossipType
	a MAJOR_NEGATIVE
	b MINOR_NEGATIVE
	c MINOR_POSITIVE
	d MAJOR_POSITIVE
	e TRADING
	f id
	g weight
	h max
	i decayPerDay
	j decayPerTransfer
	k BY_ID
	l $VALUES
	values ()[Laxx; values
	valueOf (Ljava/lang/String;)Laxx; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;IIII)V <init>
	a (Ljava/lang/String;)Laxx; byId
	a (Laxx;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
axy net/minecraft/world/entity/ai/gossip/package-info
axz net/minecraft/world/entity/ai/memory/ExpirableValue
	a value
	b timeToLive
	<init> (Ljava/lang/Object;J)V <init>
	a ()V tick
	a (Ljava/lang/Object;)Laxz; of
	a (Ljava/lang/Object;J)Laxz; of
	b ()J getTimeToLive
	c ()Ljava/lang/Object; getValue
	d ()Z hasExpired
	toString ()Ljava/lang/String; toString
	e ()Z canExpire
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	a (Ljava/lang/Object;Ljava/util/Optional;)Laxz; lambda$null$2
	a (Laxz;)Ljava/util/Optional; lambda$null$1
	b (Laxz;)Ljava/lang/Object; lambda$null$0
aya net/minecraft/world/entity/ai/memory/MemoryModuleType
	a DUMMY
	b HOME
	c JOB_SITE
	d POTENTIAL_JOB_SITE
	e MEETING_POINT
	f SECONDARY_JOB_SITE
	g LIVING_ENTITIES
	h VISIBLE_LIVING_ENTITIES
	i VISIBLE_VILLAGER_BABIES
	j NEAREST_PLAYERS
	k NEAREST_VISIBLE_PLAYER
	l NEAREST_VISIBLE_TARGETABLE_PLAYER
	m WALK_TARGET
	n LOOK_TARGET
	o ATTACK_TARGET
	p ATTACK_COOLING_DOWN
	q INTERACTION_TARGET
	r BREED_TARGET
	s RIDE_TARGET
	t PATH
	u INTERACTABLE_DOORS
	v DOORS_TO_CLOSE
	w NEAREST_BED
	x HURT_BY
	y HURT_BY_ENTITY
	z AVOID_TARGET
	A NEAREST_HOSTILE
	B HIDING_PLACE
	C HEARD_BELL_TIME
	D CANT_REACH_WALK_TARGET_SINCE
	E GOLEM_DETECTED_RECENTLY
	F LAST_SLEPT
	G LAST_WOKEN
	H LAST_WORKED_AT_POI
	I NEAREST_VISIBLE_ADULT
	J NEAREST_VISIBLE_WANTED_ITEM
	K NEAREST_VISIBLE_NEMESIS
	L ANGRY_AT
	M UNIVERSAL_ANGER
	N ADMIRING_ITEM
	O TIME_TRYING_TO_REACH_ADMIRE_ITEM
	P DISABLE_WALK_TO_ADMIRE_ITEM
	Q ADMIRING_DISABLED
	R HUNTED_RECENTLY
	S CELEBRATE_LOCATION
	T DANCING
	U NEAREST_VISIBLE_HUNTABLE_HOGLIN
	V NEAREST_VISIBLE_BABY_HOGLIN
	W NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	X NEARBY_ADULT_PIGLINS
	Y NEAREST_VISIBLE_ADULT_PIGLINS
	Z NEAREST_VISIBLE_ADULT_HOGLINS
	aa NEAREST_VISIBLE_ADULT_PIGLIN
	ab NEAREST_VISIBLE_ZOMBIFIED
	ac VISIBLE_ADULT_PIGLIN_COUNT
	ad VISIBLE_ADULT_HOGLIN_COUNT
	ae NEAREST_PLAYER_HOLDING_WANTED_ITEM
	af ATE_RECENTLY
	ag NEAREST_REPELLENT
	ah PACIFIED
	ai codec
	<init> (Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/util/Optional; getCodec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Laya; register
	a (Ljava/lang/String;)Laya; register
	<clinit> ()V <clinit>
ayb net/minecraft/world/entity/ai/memory/MemoryStatus
	a VALUE_PRESENT
	b VALUE_ABSENT
	c REGISTERED
	d $VALUES
	values ()[Layb; values
	valueOf (Ljava/lang/String;)Layb; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ayc net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speedModifier
	c closeEnoughDist
	<init> (Lfx;FI)V <init>
	<init> (Ldck;FI)V <init>
	<init> (Lapx;FI)V <init>
	<init> (Lasy;FI)V <init>
	a ()Lasy; getTarget
	b ()F getSpeedModifier
	c ()I getCloseEnoughDist
ayd net/minecraft/world/entity/ai/memory/package-info
aye net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	<init> (Laqk;Lbru;)V <init>
	a (I)Lcxc; createPathFinder
	a ()Z canUpdatePath
	b ()Ldck; getTempMobPos
	a (Lapx;I)Lcxa; createPath
	c ()V tick
	a (Ldck;Ldck;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	d ()Z canPassDoors
	b (Z)V setCanPassDoors
	e ()Z canOpenDoors
	a (Lfx;)Z isStableDestination
ayf net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	<init> (Laqk;Lbru;)V <init>
	a (I)Lcxc; createPathFinder
	a ()Z canUpdatePath
	b ()Ldck; getTempMobPos
	a (Lfx;I)Lcxa; createPath
	a (Lapx;I)Lcxa; createPath
	t ()I getSurfaceY
	D_ ()V trimPath
	a (Ldck;Ldck;III)Z canMoveDirectly
	a (IIIIIILdck;DD)Z canWalkOn
	a (Lcww;)Z hasValidPathType
	b (IIIIIILdck;DD)Z canWalkAbove
	a (Z)V setCanOpenDoors
	e ()Z canPassDoors
	b (Z)V setCanPassDoors
	f ()Z canOpenDoors
	c (Z)V setAvoidSun
ayg net/minecraft/world/entity/ai/navigation/PathNavigation
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	p targetPos
	q reachRange
	r maxVisitedNodesMultiplier
	s pathFinder
	<init> (Laqk;Lbru;)V <init>
	g ()V resetMaxVisitedNodesMultiplier
	a (F)V setMaxVisitedNodesMultiplier
	h ()Lfx; getTargetPos
	a (I)Lcxc; createPathFinder
	a (D)V setSpeedModifier
	i ()Z hasDelayedRecomputation
	j ()V recomputePath
	a (DDDI)Lcxa; createPath
	a (Ljava/util/stream/Stream;I)Lcxa; createPath
	a (Ljava/util/Set;I)Lcxa; createPath
	a (Lfx;I)Lcxa; createPath
	a (Lapx;I)Lcxa; createPath
	a (Ljava/util/Set;IZI)Lcxa; createPath
	a (DDDD)Z moveTo
	a (Lapx;D)Z moveTo
	a (Lcxa;D)Z moveTo
	k ()Lcxa; getPath
	c ()V tick
	l ()V followThePath
	b (Ldck;)Z shouldTargetNextNodeInDirection
	a (Ldck;)V doStuckDetection
	e ()V resetStuckTimeout
	m ()Z isDone
	n ()Z isInProgress
	o ()V stop
	b ()Ldck; getTempMobPos
	a ()Z canUpdatePath
	p ()Z isInLiquid
	D_ ()V trimPath
	a (Ldck;Ldck;III)Z canMoveDirectly
	a (Lfx;)Z isStableDestination
	q ()Lcwz; getNodeEvaluator
	d (Z)V setCanFloat
	r ()Z canFloat
	b (Lfx;)V recomputePath
	s ()F getMaxDistanceToWaypoint
ayh net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	<init> (Laqk;Lbru;)V <init>
	a (Lfx;I)Lcxa; createPath
	a (Lapx;I)Lcxa; createPath
	a (Lapx;D)Z moveTo
	c ()V tick
ayi net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	<init> (Laqk;Lbru;)V <init>
	a (I)Lcxc; createPathFinder
	a ()Z canUpdatePath
	b ()Ldck; getTempMobPos
	c ()V tick
	l ()V followThePath
	a (Ldck;)V doStuckDetection
	a (Ldck;Ldck;III)Z canMoveDirectly
	a (Lfx;)Z isStableDestination
	d (Z)V setCanFloat
ayj net/minecraft/world/entity/ai/navigation/package-info
ayk net/minecraft/world/entity/ai/package-info
ayl net/minecraft/world/entity/ai/sensing/AdultSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Lapv;)V doTick
	a (Lapv;Ljava/util/List;)V setNearestVisibleAdult
	a (Laag;Laqj;)V doTick
	a (Lapv;)Z lambda$setNearestVisibleAdult$3
	a (Laqj;)Lapv; lambda$setNearestVisibleAdult$2
	a (Lapv;Laqj;)Z lambda$setNearestVisibleAdult$1
	b (Lapv;Ljava/util/List;)V lambda$doTick$0
aym net/minecraft/world/entity/ai/sensing/DummySensor
	<init> ()V <init>
	a (Laag;Laqj;)V doTick
	a ()Ljava/util/Set; requires
ayn net/minecraft/world/entity/ai/sensing/GolemSensor
	<init> ()V <init>
	<init> (I)V <init>
	a (Laag;Laqj;)V doTick
	a ()Ljava/util/Set; requires
	a (Laqj;)V checkForNearbyGolem
	b (Laqj;)V golemDetected
	c (Laqj;)Z lambda$checkForNearbyGolem$0
ayo net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Lbej;)V doTick
	b (Laag;Lbej;)Ljava/util/Optional; findNearestRepellent
	a (Laag;Laqj;)V doTick
	a (Laag;Lfx;)Z lambda$findNearestRepellent$0
ayp net/minecraft/world/entity/ai/sensing/HurtBySensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
	a (Laag;Larc;Laqj;)V lambda$doTick$0
ayq net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a batchCache
	b triedCount
	c lastUpdate
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqk;)V doTick
	a (Laag;Laqj;)V doTick
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$doTick$1
	a (Lfx;)Z lambda$doTick$0
ayr net/minecraft/world/entity/ai/sensing/NearestItemSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqk;)V doTick
	a (Laag;Laqj;)V doTick
	a (Laqk;Lbcs;)Z lambda$doTick$2
	b (Laqk;Lbcs;)Z lambda$doTick$1
	a (Lbcs;)Z lambda$doTick$0
ays net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	<init> ()V <init>
	a (Laag;Laqj;)V doTick
	a ()Ljava/util/Set; requires
	b (Laqj;Laqj;)Z lambda$doTick$1
	c (Laqj;Laqj;)Z lambda$doTick$0
ayt net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
ayu net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
	c (Laag;Laqj;)Ljava/util/Optional; findNearestRepellent
	a (Laag;Lfx;)Z isValidRepellent
	b (Laag;Lfx;)Z lambda$findNearestRepellent$0
ayv net/minecraft/world/entity/ai/sensing/PlayerSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
	a (Laqj;Lbft;)Z lambda$doTick$1
	a (Laqj;Laah;)Z lambda$doTick$0
ayw net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	<init> ()V <init>
	a (Laag;Lbfg;)V doTick
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
ayx net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	<init> (Laqk;)V <init>
	a ()V tick
	a (Lapx;)Z canSee
ayy net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	b TARGET_CONDITIONS
	c TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	d scanRate
	e timeToTick
	<init> (I)V <init>
	<init> ()V <init>
	b (Laag;Laqj;)V tick
	a (Laag;Laqj;)V doTick
	a ()Ljava/util/Set; requires
	a (Laqj;Laqj;)Z isEntityTargetable
	<clinit> ()V <clinit>
ayz net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_ITEMS
	c NEAREST_LIVING_ENTITIES
	d NEAREST_PLAYERS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_DETECTED
	k PIGLIN_SPECIFIC_SENSOR
	l PIGLIN_BRUTE_SPECIFIC_SENSOR
	m HOGLIN_SPECIFIC_SENSOR
	n NEAREST_ADULT
	o factory
	<init> (Ljava/util/function/Supplier;)V <init>
	a ()Layy; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Layz; register
	<clinit> ()V <clinit>
aza net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
	a (Laqj;)Ljava/util/List; getNearestVillagerBabies
	b (Laqj;)Z isVillagerBaby
	c (Laqj;)Ljava/util/List; getVisibleEntities
azb net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laag;Laqj;)V doTick
	a (Laqj;)Ljava/util/Optional; getNearestHostile
	b (Laqj;)Ljava/util/Optional; getVisibleEntities
	a (Laqj;Laqj;Laqj;)I compareMobDistance
	b (Laqj;Laqj;)Z isClose
	c (Laqj;)Z isHostile
	a (Laqj;Ljava/util/List;)Ljava/util/Optional; lambda$getNearestHostile$2
	b (Laqj;Laqj;Laqj;)I lambda$null$1
	c (Laqj;Laqj;)Z lambda$null$0
	<clinit> ()V <clinit>
azc net/minecraft/world/entity/ai/sensing/package-info
azd net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b range
	c allowInvulnerable
	d allowSameTeam
	e allowUnseeable
	f allowNonAttackable
	g testInvisible
	h selector
	<init> ()V <init>
	a (D)Lazd; range
	a ()Lazd; allowInvulnerable
	b ()Lazd; allowSameTeam
	c ()Lazd; allowUnseeable
	d ()Lazd; allowNonAttackable
	e ()Lazd; ignoreInvisibilityTesting
	a (Ljava/util/function/Predicate;)Lazd; selector
	a (Laqj;Laqj;)Z test
	<clinit> ()V <clinit>
aze net/minecraft/world/entity/ai/targeting/package-info
azf net/minecraft/world/entity/ai/util/GoalUtils
	<init> ()V <init>
	a (Laqk;)Z hasGroundPathNavigation
azg net/minecraft/world/entity/ai/util/RandomPos
	<init> ()V <init>
	a (Laqr;II)Ldck; getPos
	a (Laqr;IIILdck;D)Ldck; getAirPos
	b (Laqr;II)Ldck; getLandPos
	a (Laqr;IILjava/util/function/ToDoubleFunction;)Ldck; getLandPos
	a (Laqr;IILdck;FII)Ldck; getAboveLandPos
	a (Laqr;IILdck;)Ldck; getLandPosTowards
	b (Laqr;IILdck;)Ldck; getPosTowards
	a (Laqr;IILdck;D)Ldck; getPosTowards
	b (Laqr;IIILdck;D)Ldck; getAirPosTowards
	c (Laqr;IILdck;)Ldck; getPosAvoid
	d (Laqr;IILdck;)Ldck; getLandPosAvoid
	a (Laqr;IIILdck;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Ldck; generateRandomPos
	a (Ljava/util/Random;IIILdck;D)Lfx; getRandomDelta
	a (Lfx;IILjava/util/function/Predicate;)Lfx; moveUpToAboveSolid
	a (Laqr;Lfx;)Z lambda$generateRandomPos$0
azh net/minecraft/world/entity/ai/util/package-info
azi net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lazi; register
	<clinit> ()V <clinit>
azi$1 net/minecraft/world/entity/ai/village/ReputationEventType$1
	f val$name
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
azj net/minecraft/world/entity/ai/village/VillageSiege
	a LOGGER
	b hasSetupSiege
	c siegeState
	d zombiesToSpawn
	e nextSpawnTime
	f spawnX
	g spawnY
	h spawnZ
	<init> ()V <init>
	a (Laag;ZZ)I tick
	a (Laag;)Z tryToSetupSiege
	b (Laag;)V trySpawn
	a (Laag;Lfx;)Ldck; findRandomSpawnPos
	<clinit> ()V <clinit>
azj$a net/minecraft/world/entity/ai/village/VillageSiege$State
	a SIEGE_CAN_ACTIVATE
	b SIEGE_TONIGHT
	c SIEGE_DONE
	d $VALUES
	values ()[Lazj$a; values
	valueOf (Ljava/lang/String;)Lazj$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
azk net/minecraft/world/entity/ai/village/package-info
azl net/minecraft/world/entity/ai/village/poi/PoiManager
	a distanceTracker
	b loadedChunks
	<init> (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;Z)V <init>
	a (Lfx;Lazo;)V add
	a (Lfx;)V remove
	a (Ljava/util/function/Predicate;Lfx;ILazl$b;)J getCountInRange
	a (Lazo;Lfx;)Z existsAtPosition
	b (Ljava/util/function/Predicate;Lfx;ILazl$b;)Ljava/util/stream/Stream; getInSquare
	c (Ljava/util/function/Predicate;Lfx;ILazl$b;)Ljava/util/stream/Stream; getInRange
	a (Ljava/util/function/Predicate;Lbra;Lazl$b;)Ljava/util/stream/Stream; getInChunk
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfx;ILazl$b;)Ljava/util/stream/Stream; findAll
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfx;ILazl$b;)Ljava/util/stream/Stream; findAllClosestFirst
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfx;ILazl$b;)Ljava/util/Optional; find
	d (Ljava/util/function/Predicate;Lfx;ILazl$b;)Ljava/util/Optional; findClosest
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfx;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lazl$b;Lfx;ILjava/util/Random;)Ljava/util/Optional; getRandom
	b (Lfx;)Z release
	a (Lfx;Ljava/util/function/Predicate;)Z exists
	c (Lfx;)Ljava/util/Optional; getType
	d (Lfx;)I getFreeTickets
	a (Lgp;)I sectionsToVillage
	f (J)Z isVillageCenter
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (J)V setDirty
	b (J)V onSectionLoad
	a (Lbra;Lcgf;)V checkConsistencyWithBlocks
	a (Lcgf;)Z mayHavePoi
	a (Lcgf;Lgp;Ljava/util/function/BiConsumer;)V updateFromSection
	a (Lbrw;Lfx;I)V ensureLoadedAndValid
	a (Lbrw;Lbra;)V lambda$ensureLoadedAndValid$21
	b (Lbra;)Z lambda$ensureLoadedAndValid$20
	a (Lcom/mojang/datafixers/util/Pair;)Lbra; lambda$ensureLoadedAndValid$19
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$ensureLoadedAndValid$18
	c (Lgp;)Lcom/mojang/datafixers/util/Pair; lambda$ensureLoadedAndValid$17
	a (Lcgf;Ljava/util/function/BiConsumer;Lfx;)V lambda$updateFromSection$16
	a (Ljava/util/function/BiConsumer;Lfx;Lazo;)V lambda$null$15
	a (Lcgf;Lgp;)V lambda$checkConsistencyWithBlocks$14
	a (Lcgf;Lgp;Lazn;)V lambda$checkConsistencyWithBlocks$13
	b (Lcgf;Lgp;Ljava/util/function/BiConsumer;)V lambda$null$12
	a (Lazn;)Ljava/lang/Boolean; lambda$isVillageCenter$11
	a (Lfx;Ljava/util/function/Predicate;Lazn;)Ljava/lang/Boolean; lambda$exists$10
	a (Ljava/util/function/Predicate;Lazm;)Z lambda$getRandom$9
	a (Lazm;)Lfx; lambda$take$8
	b (Ljava/util/function/Predicate;Lazm;)Z lambda$take$7
	a (Lfx;Lfx;)D lambda$findClosest$6
	b (Lfx;Lfx;)D lambda$findAllClosestFirst$5
	a (Ljava/util/function/Predicate;Lazl$b;Ljava/util/Optional;)Ljava/util/stream/Stream; lambda$getInChunk$4
	a (Lbra;Ljava/lang/Integer;)Ljava/util/Optional; lambda$getInChunk$3
	a (Lfx;ILazm;)Z lambda$getInRange$2
	b (Lfx;ILazm;)Z lambda$getInSquare$1
	a (Ljava/util/function/Predicate;Lazl$b;Lbra;)Ljava/util/stream/Stream; lambda$getInSquare$0
	a (Lazl;J)Z access$000
azl$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	b levels
	a this$0
	<init> (Lazl;)V <init>
	b (J)I getLevelFromSource
	c (J)I getLevel
	a (JI)V setLevel
	a ()V runAllUpdates
azl$b net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	a HAS_SPACE
	b IS_OCCUPIED
	c ANY
	d test
	e $VALUES
	values ()[Lazl$b; values
	valueOf (Ljava/lang/String;)Lazl$b; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Predicate;)V <init>
	a ()Ljava/util/function/Predicate; getTest
	a (Lazm;)Z lambda$static$0
	<clinit> ()V <clinit>
azm net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	<init> (Lfx;Lazo;ILjava/lang/Runnable;)V <init>
	<init> (Lfx;Lazo;Ljava/lang/Runnable;)V <init>
	a ()I getFreeTickets
	b ()Z acquireTicket
	c ()Z releaseTicket
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lfx; getPos
	g ()Lazo; getPoiType
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	a (Lazm;)Ljava/lang/Integer; lambda$null$2
	b (Lazm;)Lazo; lambda$null$1
	c (Lazm;)Lfx; lambda$null$0
azn net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/lang/Runnable;)V <init>
	<init> (Ljava/lang/Runnable;ZLjava/util/List;)V <init>
	a (Ljava/util/function/Predicate;Lazl$b;)Ljava/util/stream/Stream; getRecords
	a (Lfx;Lazo;)V add
	a (Lazm;)Z add
	a (Lfx;)V remove
	b (Lfx;)I getFreeTickets
	c (Lfx;)Z release
	a (Lfx;Ljava/util/function/Predicate;)Z exists
	d (Lfx;)Ljava/util/Optional; getType
	a (Ljava/util/function/Consumer;)V refresh
	b ()V clear
	a ()Z isValid
	a (Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lfx;Lazo;)V lambda$refresh$10
	a (Lfx;Lazo;I)Lazm; lambda$null$9
	a (Lazo;)Ljava/util/Set; lambda$add$8
	e (Lfx;)Ljava/lang/Object; lambda$add$7
	b (Lazo;)Ljava/lang/Object; lambda$add$6
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$getRecords$5
	a (Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z lambda$getRecords$4
	b (Ljava/lang/Runnable;)Lazn; lambda$codec$3
	a (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$2
	a (Lazn;)Ljava/util/List; lambda$null$1
	b (Lazn;)Ljava/lang/Boolean; lambda$null$0
	<clinit> ()V <clinit>
azo net/minecraft/world/entity/ai/village/poi/PoiType
	y ALL_JOB_POI_TYPES
	a ALL_JOBS
	b ALL
	z BEDS
	A TYPE_BY_STATE
	c UNEMPLOYED
	d ARMORER
	e BUTCHER
	f CARTOGRAPHER
	g CLERIC
	h FARMER
	i FISHERMAN
	j FLETCHER
	k LEATHERWORKER
	l LIBRARIAN
	m MASON
	n NITWIT
	o SHEPHERD
	p TOOLSMITH
	q WEAPONSMITH
	r HOME
	s MEETING
	t BEEHIVE
	u BEE_NEST
	v NETHER_PORTAL
	w LODESTONE
	x ALL_STATES
	B name
	C matchingStates
	D maxTickets
	E predicate
	F validRange
	a (Lbul;)Ljava/util/Set; getBlockStates
	<init> (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)V <init>
	<init> (Ljava/lang/String;Ljava/util/Set;II)V <init>
	a ()Ljava/lang/String; getName
	b ()I getMaxTickets
	c ()Ljava/util/function/Predicate; getPredicate
	a (Lcee;)Z is
	d ()I getValidRange
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;Ljava/util/Set;II)Lazo; register
	a (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lazo; register
	a (Lazo;)Lazo; registerBlockStates
	b (Lcee;)Ljava/util/Optional; forState
	a (Lazo;Lcee;)V lambda$registerBlockStates$6
	b (Lazo;)Z lambda$new$5
	c (Lcee;)Z lambda$static$4
	b (Lbul;)Ljava/util/stream/Stream; lambda$static$3
	c (Lazo;)Z lambda$static$2
	d (Lazo;)Z lambda$static$1
	e ()Ljava/util/Set; lambda$static$0
	<clinit> ()V <clinit>
azp net/minecraft/world/entity/ai/village/poi/package-info
azq net/minecraft/world/entity/ambient/AmbientCreature
	<init> (Laqb;Lbru;)V <init>
	a (Lbft;)Z canBeLeashed
azr net/minecraft/world/entity/ambient/Bat
	b DATA_ID_FLAGS
	c BAT_RESTING_TARGETING
	d targetPosition
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	dF ()F getSoundVolume
	dG ()F getVoicePitch
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	aT ()Z isPushable
	C (Lapx;)V doPush
	dP ()V pushEntities
	m ()Larh$a; createAttributes
	eI ()Z isResting
	t (Z)V setResting
	j ()V tick
	N ()V customServerAiStep
	aB ()Z isMovementNoisy
	b (FF)Z causeFallDamage
	a (DZLcee;Lfx;)V checkFallDamage
	bP ()Z isIgnoringBlockTriggers
	a (Laph;F)Z hurt
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkBatSpawnRules
	eJ ()Z isHalloween
	b (Laqu;Lapy;)F getStandingEyeHeight
	<clinit> ()V <clinit>
azs net/minecraft/world/entity/ambient/package-info
azt net/minecraft/world/entity/animal/AbstractFish
	b FROM_BUCKET
	<init> (Laqb;Lbru;)V <init>
	b (Laqu;Lapy;)F getStandingEyeHeight
	m ()Larh$a; createAttributes
	K ()Z requiresCustomPersistence
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkFishSpawnRules
	h (D)Z removeWhenFarAway
	eq ()I getMaxSpawnClusterSize
	e ()V defineSynchedData
	eN ()Z fromBucket
	t (Z)V setFromBucket
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	o ()V registerGoals
	b (Lbru;)Layg; createNavigation
	g (Ldck;)V travel
	k ()V aiStep
	b (Lbft;Laoq;)Laor; mobInteract
	k (Lbly;)V saveToBucketTag
	eK ()Lbly; getBucketItemStack
	eL ()Z canRandomSwim
	eM ()Ladn; getFlopSound
	au ()Ladn; getSwimSound
	b (Lfx;Lcee;)V playStepSound
	<clinit> ()V <clinit>
azt$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	i fish
	<init> (Lazt;)V <init>
	a ()V tick
azt$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	h fish
	<init> (Lazt;)V <init>
	a ()Z canUse
azu net/minecraft/world/entity/animal/AbstractGolem
	<init> (Laqb;Lbru;)V <init>
	b (FF)Z causeFallDamage
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	D ()I getAmbientSoundInterval
	h (D)Z removeWhenFarAway
azv net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eq ()I getMaxSpawnClusterSize
	eN ()I getMaxSchoolSize
	eL ()Z canRandomSwim
	eO ()Z isFollower
	a (Lazv;)Lazv; startFollowing
	eP ()V stopFollowing
	eU ()V addFollower
	eV ()V removeFollower
	eQ ()Z canBeFollowed
	j ()V tick
	eR ()Z hasFollowers
	eS ()Z inRangeOfLeader
	eT ()V pathToLeader
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Lazv;)V lambda$addFollowers$1
	c (Lazv;)Z lambda$addFollowers$0
azv$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
	<init> (Lazv;)V <init>
azw net/minecraft/world/entity/animal/Animal
	bo inLove
	bp loveCause
	<init> (Laqb;Lbru;)V <init>
	N ()V customServerAiStep
	k ()V aiStep
	a (Laph;F)Z hurt
	a (Lfx;Lbrw;)F getWalkTargetValue
	b (Lmd;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	a (Lmd;)V readAdditionalSaveData
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkAnimalSpawnRules
	D ()I getAmbientSoundInterval
	h (D)Z removeWhenFarAway
	d (Lbft;)I getExperienceReward
	k (Lbly;)Z isFood
	b (Lbft;Laoq;)Laor; mobInteract
	a (Lbft;Lbly;)V usePlayerItem
	eP ()Z canFallInLove
	g (Lbft;)V setInLove
	s (I)V setInLoveTime
	eQ ()I getInLoveTime
	eR ()Laah; getLoveCause
	eS ()Z isInLove
	eT ()V resetLove
	a (Lazw;)Z canMate
	a (Laag;Lazw;)V spawnChildFromBreeding
	a (B)V handleEntityEvent
azx net/minecraft/world/entity/animal/Bee
	bo DATA_FLAGS_ID
	bp DATA_REMAINING_ANGER_TIME
	bq PERSISTENT_ANGER_TIME
	br persistentAngerTarget
	bs rollAmount
	bt rollAmountO
	bu timeSinceSting
	bv ticksWithoutNectarSinceExitingHive
	bw stayOutOfHiveCountdown
	bx numCropsGrownSincePollination
	by remainingCooldownBeforeLocatingNewHive
	bz remainingCooldownBeforeLocatingNewFlower
	bA savedFlowerPos
	bB hivePos
	bC beePollinateGoal
	bD goToHiveGoal
	bE goToKnownFlowerGoal
	bF underWaterTicks
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	a (Lfx;Lbrw;)F getWalkTargetValue
	o ()V registerGoals
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	B (Lapx;)Z doHurtTarget
	j ()V tick
	a (Lbru;DDDDDLhf;)V spawnFluidParticle
	h (Lfx;)V pathfindRandomlyTowards
	eK ()Lfx; getSavedFlowerPos
	eL ()Z hasSavedFlowerPos
	g (Lfx;)V setSavedFlowerPos
	eM ()I getTravellingTicks
	eN ()Ljava/util/List; getBlacklistedHives
	fc ()Z isTiredOfLookingForNectar
	fd ()Z wantsToEnterHive
	t (I)V setStayOutOfHiveCountdown
	y (F)F getRollAmount
	fe ()V updateRollAmount
	N ()V customServerAiStep
	eO ()V resetTicksWithoutNectarSinceExitingHive
	ff ()Z isHiveNearFire
	E_ ()I getRemainingPersistentAngerTime
	a_ (I)V setRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	i (Lfx;)Z doesHiveHaveSpace
	eU ()Z hasHive
	eV ()Lfx; getHivePos
	eW ()Lavt; getGoalSelector
	M ()V sendDebugPackets
	fg ()I getCropsGrownSincePollination
	fh ()V resetNumCropsGrownSincePollination
	fi ()V incrementNumCropsGrownSincePollination
	k ()V aiStep
	fj ()Z isHiveValid
	eX ()Z hasNectar
	t (Z)V setHasNectar
	eY ()Z hasStung
	u (Z)V setHasStung
	fk ()Z isRolling
	v (Z)V setRolling
	j (Lfx;)Z isTooFarAway
	d (IZ)V setFlag
	u (I)Z getFlag
	eZ ()Larh$a; createAttributes
	b (Lbru;)Layg; createNavigation
	k (Lbly;)Z isFood
	k (Lfx;)Z isFlowerValid
	b (Lfx;Lcee;)V playStepSound
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	dF ()F getSoundVolume
	b (Laag;Lapv;)Lazx; getBreedOffspring
	b (Laqu;Lapy;)F getStandingEyeHeight
	b (FF)Z causeFallDamage
	a (DZLcee;Lfx;)V checkFallDamage
	ay ()Z makeFlySound
	fa ()Z isFlying
	fb ()V dropOffNectar
	a (Laph;F)Z hurt
	dB ()Laqn; getMobType
	c (Laej;)V jumpInLiquid
	ce ()Ldck; getLeashOffset
	b (Lfx;I)Z closerThan
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (Lazx;)Lazx$k; access$700
	b (Lazx;)Layg; access$900
	c (Lazx;)Ljava/util/Random; access$1000
	d (Lazx;)Layg; access$1100
	e (Lazx;)Layg; access$1200
	f (Lazx;)Layg; access$1300
	g (Lazx;)Z access$1400
	h (Lazx;)Lfx; access$1500
	a (Lazx;Lfx;I)Z access$1600
	i (Lazx;)Z access$1800
	j (Lazx;)Layg; access$1900
	k (Lazx;)Layg; access$2000
	l (Lazx;)Layg; access$2100
	m (Lazx;)Layg; access$2200
	n (Lazx;)Layg; access$2300
	a (Lazx;Lfx;)Z access$2400
	b (Lazx;Lfx;)V access$2500
	o (Lazx;)Layg; access$2600
	p (Lazx;)Layg; access$2700
	q (Lazx;)Layg; access$2800
	r (Lazx;)Layg; access$2900
	c (Lazx;Lfx;)Lfx; access$1502
	a (Lazx;I)I access$3002
	s (Lazx;)Layg; access$3100
	t (Lazx;)Lfx; access$3200
	d (Lazx;Lfx;)Z access$3300
	u (Lazx;)Layg; access$3400
	v (Lazx;)Layg; access$3500
	e (Lazx;Lfx;)Lfx; access$3202
	w (Lazx;)Layg; access$3600
	x (Lazx;)I access$3700
	y (Lazx;)I access$3800
	z (Lazx;)Ljava/util/Random; access$3900
	A (Lazx;)Layg; access$4000
	B (Lazx;)Ljava/util/Random; access$4100
	a (Lazx;Z)V access$4200
	C (Lazx;)Layg; access$4300
	b (Lazx;I)I access$3802
	D (Lazx;)Ljava/util/Random; access$4400
	E (Lazx;)Layg; access$4500
	F (Lazx;)Ljava/util/Random; access$4600
	G (Lazx;)Ljava/util/Random; access$4700
	H (Lazx;)I access$3000
	I (Lazx;)Lazx$e; access$4800
	f (Lazx;Lfx;)Z access$5100
	J (Lazx;)I access$5200
	K (Lazx;)Ljava/util/Random; access$5300
	L (Lazx;)Ljava/util/Random; access$5400
	M (Lazx;)V access$5500
	<clinit> ()V <clinit>
azx$1 net/minecraft/world/entity/animal/Bee$1
	p this$0
	<init> (Lazx;Laqk;Lbru;)V <init>
	a (Lfx;)Z isStableDestination
	c ()V tick
azx$a net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	a this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	a ()Z canUse
	b ()Z canContinueToUse
	<init> (Lazx;Lazx$1;)V <init>
azx$b net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	b this$0
	<init> (Lazx;Laqr;DZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
azx$c net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	<init> (Lazx;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z beeCanTarget
azx$d net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	b this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	c ()V start
	<init> (Lazx;Lazx$1;)V <init>
azx$e net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	c travellingTicks
	d blacklistedTargets
	e lastPath
	f ticksStuck
	b this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lfx;)Z pathfindDirectlyTowards
	b (Lfx;)Z isTargetBlacklisted
	c (Lfx;)V blacklistTarget
	j ()V clearBlacklist
	k ()V dropAndBlacklistHive
	l ()V dropHive
	d (Lfx;)Z hasReachedTarget
	b ()Z canContinueToUse
	a ()Z canUse
	a (Lazx$e;)I access$300
	b (Lazx$e;)Ljava/util/List; access$500
	a (Lazx$e;Lfx;)Z access$4900
	c (Lazx$e;)V access$5000
azx$f net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	c travellingTicks
	b this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	j ()Z wantsToGoToKnownFlower
	b ()Z canContinueToUse
	a ()Z canUse
	a (Lazx$f;)I access$400
azx$g net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	b this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	e ()V tick
	<init> (Lazx;Lazx$1;)V <init>
azx$h net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	a this$0
	<init> (Lazx;Lazx;)V <init>
	b ()Z canContinueToUse
	a (Laqk;Laqj;)V alertOther
azx$i net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	b this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	c ()V start
	j ()Ljava/util/List; findNearbyHivesWithSpace
	a (Lfx;Lfx;)D lambda$findNearbyHivesWithSpace$2
	a (Lazx;Lfx;)Z lambda$findNearbyHivesWithSpace$1
	a (Lazo;)Z lambda$findNearbyHivesWithSpace$0
	<init> (Lazx;Lazx$1;)V <init>
azx$j net/minecraft/world/entity/animal/Bee$BeeLookControl
	h this$0
	<init> (Lazx;Laqk;)V <init>
	a ()V tick
	b ()Z resetXRotOnTick
azx$k net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	c VALID_POLLINATION_BLOCKS
	d successfulPollinatingTicks
	e lastSoundPlayedTick
	f pollinating
	g hoverPos
	h pollinatingTicks
	b this$0
	<init> (Lazx;)V <init>
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Z hasPollinatedLongEnough
	k ()Z isPollinating
	l ()V stopPollinating
	c ()V start
	d ()V stop
	e ()V tick
	m ()V setWantedPos
	n ()F getOffset
	o ()Ljava/util/Optional; findNearbyFlower
	a (Ljava/util/function/Predicate;D)Ljava/util/Optional; findNearestBlock
	a (Lcee;)Z lambda$new$0
	a (Lazx$k;)Z access$600
	b (Lazx$k;)V access$800
azx$l net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	a this$0
	<init> (Lazx;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Ldck; findPos
azy net/minecraft/world/entity/animal/Cat
	br TEMPT_INGREDIENT
	bs DATA_TYPE_ID
	bt IS_LYING
	bu RELAX_STATE_ONE
	bv DATA_COLLAR_COLOR
	bq TEXTURE_BY_TYPE
	bw avoidPlayersGoal
	bx temptGoal
	by lieDownAmount
	bz lieDownAmountO
	bA lieDownAmountTail
	bB lieDownAmountOTail
	bC relaxStateOneAmount
	bD relaxStateOneAmountO
	<init> (Laqb;Lbru;)V <init>
	eU ()Lvk; getResourceLocation
	o ()V registerGoals
	eV ()I getCatType
	t (I)V setCatType
	x (Z)V setLying
	eW ()Z isLying
	y (Z)V setRelaxStateOne
	eX ()Z isRelaxStateOne
	eY ()Lbku; getCollarColor
	a (Lbku;)V setCollarColor
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	N ()V customServerAiStep
	I ()Ladn; getAmbientSound
	D ()I getAmbientSoundInterval
	eZ ()V hiss
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	fa ()Larh$a; createAttributes
	b (FF)Z causeFallDamage
	a (Lbft;Lbly;)V usePlayerItem
	fb ()F getAttackDamage
	B (Lapx;)Z doHurtTarget
	j ()V tick
	fc ()V handleLieDown
	fd ()V updateLieDownAmount
	fe ()V updateRelaxStateOneAmount
	y (F)F getLieDownAmount
	z (F)F getLieDownAmountTail
	A (F)F getRelaxStateOneAmount
	b (Laag;Lapv;)Lazy; getBreedOffspring
	a (Lazw;)Z canMate
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Lbft;Laoq;)Laor; mobInteract
	k (Lbly;)Z isFood
	b (Laqu;Lapy;)F getStandingEyeHeight
	h (D)Z removeWhenFarAway
	eL ()V reassessTameGoals
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
azy$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	<init> (Lazy;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
azy$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	<init> (Lazy;)V <init>
	a ()Z canUse
	g ()Z spaceIsOccupied
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	h ()V giveMorningGift
	e ()V tick
	a (Lfx;)Lfx; lambda$canUse$1
	a (Lfx;Lgc;)Lfx; lambda$canUse$0
azy$c net/minecraft/world/entity/animal/Cat$CatTemptGoal
	c selectedPlayer
	d cat
	<init> (Lazy;DLbok;Z)V <init>
	e ()V tick
	g ()Z canScare
	a ()Z canUse
azz net/minecraft/world/entity/animal/Chicken
	bv FOOD_ITEMS
	bo flap
	bp flapSpeed
	bq oFlapSpeed
	br oFlap
	bs flapping
	bt eggTime
	bu isChickenJockey
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	b (Laqu;Lapy;)F getStandingEyeHeight
	eK ()Larh$a; createAttributes
	k ()V aiStep
	b (FF)Z causeFallDamage
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	b (Laag;Lapv;)Lazz; getBreedOffspring
	k (Lbly;)Z isFood
	d (Lbft;)I getExperienceReward
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	h (D)Z removeWhenFarAway
	k (Lapx;)V positionRider
	eL ()Z isChickenJockey
	t (Z)V setChickenJockey
	a (Laag;Lapv;)Lapv; getBreedOffspring
	<clinit> ()V <clinit>
baa net/minecraft/world/entity/animal/Cod
	<init> (Laqb;Lbru;)V <init>
	eK ()Lbly; getBucketItemStack
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	eM ()Ladn; getFlopSound
bab net/minecraft/world/entity/animal/Cow
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eK ()Larh$a; createAttributes
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	dF ()F getSoundVolume
	b (Lbft;Laoq;)Laor; mobInteract
	b (Laag;Lapv;)Lbab; getBreedOffspring
	b (Laqu;Lapy;)F getStandingEyeHeight
	a (Laag;Lapv;)Lapv; getBreedOffspring
bac net/minecraft/world/entity/animal/Dolphin
	c TREASURE_POS
	d GOT_FISH
	bo MOISTNESS_LEVEL
	bp SWIM_WITH_PLAYER_TARGETING
	b ALLOWED_ITEMS
	<init> (Laqb;Lbru;)V <init>
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	cL ()Z canBreatheUnderwater
	a (I)V handleAirSupply
	g (Lfx;)V setTreasurePos
	m ()Lfx; getTreasurePos
	eK ()Z gotFish
	t (Z)V setGotFish
	eL ()I getMoistnessLevel
	b (I)V setMoisntessLevel
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	o ()V registerGoals
	eM ()Larh$a; createAttributes
	b (Lbru;)Layg; createNavigation
	B (Lapx;)Z doHurtTarget
	bG ()I getMaxAirSupply
	m (I)I increaseAirSupply
	b (Laqu;Lapy;)F getStandingEyeHeight
	O ()I getMaxHeadXRot
	eo ()I getMaxHeadYRot
	n (Lapx;)Z canRide
	e (Lbly;)Z canTakeItem
	b (Lbcs;)V pickUpItem
	j ()V tick
	a (B)V handleEntityEvent
	a (Lhf;)V addParticlesAroundSelf
	b (Lbft;Laoq;)Laor; mobInteract
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkDolphinSpawnRules
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	I ()Ladn; getAmbientSound
	av ()Ladn; getSwimSplashSound
	au ()Ladn; getSwimSound
	eN ()Z closeToNextPos
	g (Ldck;)V travel
	a (Lbft;)Z canBeLeashed
	c (Lbcs;)Z lambda$static$0
	a (Lbac;)Ljava/util/Random; access$100
	b (Lbac;)Ljava/util/Random; access$200
	c (Lbac;)Ljava/util/Random; access$300
	eO ()Lazd; access$400
	<clinit> ()V <clinit>
bac$1 net/minecraft/world/entity/animal/Dolphin$1
bac$a net/minecraft/world/entity/animal/Dolphin$DolphinMoveControl
	i dolphin
	<init> (Lbac;)V <init>
	a ()V tick
bac$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	<init> (Lbac;)V <init>
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bac$c net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	<init> (Lbac;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bac$d net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	b cooldown
	a this$0
	<init> (Lbac;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbly;)V drop
	<init> (Lbac;Lbac$1;)V <init>
bad net/minecraft/world/entity/animal/FlyingAnimal
	fa ()Z isFlying
bae net/minecraft/world/entity/animal/Fox
	bo DATA_TYPE_ID
	bp DATA_FLAGS_ID
	bq DATA_TRUSTED_ID_0
	br DATA_TRUSTED_ID_1
	bs ALLOWED_ITEMS
	bt TRUSTED_TARGET_SELECTOR
	bu STALKABLE_PREY
	bv AVOID_PLAYERS
	bw landTargetGoal
	bx turtleEggTargetGoal
	by fishTargetGoal
	bz interestedAngle
	bA interestedAngleO
	bB crouchAmount
	bC crouchAmountO
	bD ticksSinceEaten
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	o ()V registerGoals
	d (Lbly;)Ladn; getEatingSound
	k ()V aiStep
	dH ()Z isImmobile
	l (Lbly;)Z canEat
	a (Laop;)V populateDefaultEquipmentSlots
	a (B)V handleEntityEvent
	eK ()Larh$a; createAttributes
	b (Laag;Lapv;)Lbae; getBreedOffspring
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	eZ ()V setTargetGoals
	a (Lbft;Lbly;)V usePlayerItem
	b (Laqu;Lapy;)F getStandingEyeHeight
	eL ()Lbae$v; getFoxType
	a (Lbae$v;)V setFoxType
	fa ()Ljava/util/List; getTrustedUUIDs
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	eM ()Z isSitting
	t (Z)V setSitting
	eN ()Z isFaceplanted
	x (Z)V setFaceplanted
	fb ()Z isDefending
	y (Z)V setDefending
	el ()Z isSleeping
	z (Z)V setSleeping
	d (IZ)V setFlag
	t (I)Z getFlag
	e (Lbly;)Z canTakeItem
	h (Lbly;)Z canHoldItem
	m (Lbly;)V spitOutItem
	n (Lbly;)V dropItemStack
	b (Lbcs;)V pickUpItem
	j ()V tick
	k (Lbly;)Z isFood
	a (Lbft;Laqk;)V onOffspringSpawnedFromEgg
	eO ()Z isPouncing
	u (Z)V setIsPouncing
	eU ()Z isJumping
	eV ()Z isFullyCrouched
	v (Z)V setIsCrouching
	by ()Z isCrouching
	w (Z)V setIsInterested
	eW ()Z isInterested
	y (F)F getHeadRollAngle
	z (F)F getCrouchAmount
	h (Laqj;)V setTarget
	e (FF)I calculateFallDamage
	fc ()V wakeUp
	fd ()V clearStates
	fe ()Z canMove
	F ()V playAmbientSound
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	c (Ljava/util/UUID;)Z trusts
	d (Laph;)V dropAllDeathLoot
	a (Lbae;Laqj;)Z isPathClear
	ce ()Ldck; getLeashOffset
	a (Laag;Lapv;)Lapv; getBreedOffspring
	i (Laqj;)Z lambda$registerGoals$9
	j (Laqj;)Z lambda$registerGoals$8
	k (Laqj;)Z lambda$registerGoals$7
	l (Laqj;)Z lambda$registerGoals$6
	m (Laqj;)Z lambda$registerGoals$5
	n (Laqj;)Z lambda$registerGoals$4
	a (Lapx;)Z lambda$static$3
	b (Lapx;)Z lambda$static$2
	c (Lapx;)Z lambda$static$1
	c (Lbcs;)Z lambda$static$0
	a (Lbae;)Z access$000
	eX ()Ljava/util/function/Predicate; access$100
	eY ()Ljava/util/function/Predicate; access$200
	b (Lbae;)Z access$300
	a (Lbae;Z)V access$400
	c (Lbae;)V access$500
	a (Lbae;Ljava/util/UUID;)V access$600
	d (Lbae;)Ljava/util/List; access$700
	b (Lbae;Z)V access$800
	e (Lbae;)V access$900
	b (Lbae;Ljava/util/UUID;)Z access$1000
	f (Lbae;)Ljava/util/Random; access$1200
	g (Lbae;)Ljava/util/Random; access$1300
	c (Lbae;Z)V access$1400
	h (Lbae;)Ljava/util/Random; access$1500
	i (Lbae;)Z access$1600
	j (Lbae;)Z access$1700
	a (Lbae;F)F access$1802
	b (Lbae;F)F access$1902
	k (Lbae;)Z access$2000
	<clinit> ()V <clinit>
bae$1 net/minecraft/world/entity/animal/Fox$1
bae$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	i this$0
	<init> (Lbae;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	c ()V start
bae$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	b this$0
	<init> (Lbae;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bae$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a this$0
	<init> (Lbae;)V <init>
	a (Laqj;)Z test
	test (Ljava/lang/Object;)Z test
bae$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	b alertableTargeting
	a this$0
	<init> (Lbae;)V <init>
	g ()Z hasShelter
	h ()Z alertable
	<init> (Lbae;Lbae$1;)V <init>
bae$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	d this$0
	<init> (Lbae;D)V <init>
	c ()V start
	g ()V breed
bae$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	g ticksWaited
	h this$0
	<init> (Lbae;DII)V <init>
	h ()D acceptedDistance
	k ()Z shouldRecalculatePath
	a (Lbrw;Lfx;)Z isValidTarget
	e ()V tick
	n ()V onReachedTarget
	a ()Z canUse
	c ()V start
bae$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a this$0
	<init> (Lbae;)V <init>
	c ()V start
	a ()Z canUse
bae$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	b fox
	a this$0
	<init> (Lbae;Lbae;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bae$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
	<init> (Lbae$v;)V <init>
bae$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	g this$0
	<init> (Lbae;Laqk;Ljava/lang/Class;F)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bae$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	h this$0
	<init> (Lbae;)V <init>
	a ()V tick
	b ()Z resetXRotOnTick
bae$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	b this$0
	<init> (Lbae;DZ)V <init>
	a (Laqj;D)V checkAndPerformAttack
	c ()V start
	a ()Z canUse
bae$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	i this$0
	<init> (Lbae;)V <init>
	a ()V tick
bae$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	g this$0
	<init> (Lbae;D)V <init>
	a ()Z canUse
bae$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	a this$0
	<init> (Lbae;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	C_ ()Z isInterruptable
	c ()V start
	d ()V stop
	e ()V tick
bae$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a this$0
	<init> (Lbae;)V <init>
	a ()Z canUse
	e ()V tick
	c ()V start
bae$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a this$0
	<init> (Lbae;II)V <init>
	c ()V start
	a ()Z canUse
	b ()Z canContinueToUse
	g ()Z canFoxMove
bae$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	c relX
	d relZ
	e lookTime
	f looksRemaining
	b this$0
	<init> (Lbae;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	j ()V resetLook
bae$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	c interval
	b this$0
	<init> (Lbae;D)V <init>
	a ()Z canUse
	c ()V start
bae$t net/minecraft/world/entity/animal/Fox$SleepGoal
	c countdown
	b this$0
	<init> (Lbae;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	j ()Z canSleep
	d ()V stop
	c ()V start
bae$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a this$0
	<init> (Lbae;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bae$v net/minecraft/world/entity/animal/Fox$Type
	a RED
	b SNOW
	c BY_ID
	d BY_NAME
	e id
	f name
	g biomes
	h $VALUES
	values ()[Lbae$v; values
	valueOf (Ljava/lang/String;)Lbae$v; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;[Lvj;)V <init>
	a ()Ljava/lang/String; getName
	b ()I getId
	a (Ljava/lang/String;)Lbae$v; byName
	a (I)Lbae$v; byId
	a (Ljava/util/Optional;)Lbae$v; byBiome
	a (Lbae$v;)Lbae$v; lambda$static$1
	b (I)[Lbae$v; lambda$static$0
	<clinit> ()V <clinit>
baf net/minecraft/world/entity/animal/IronGolem
	b DATA_FLAGS_ID
	c attackAnimationTick
	d offerFlowerTick
	bo PERSISTENT_ANGER_TIME
	bp remainingPersistentAngerTime
	bq persistentAngerTarget
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	e ()V defineSynchedData
	m ()Larh$a; createAttributes
	l (I)I decreaseAirSupply
	C (Lapx;)V doPush
	k ()V aiStep
	a (Laqb;)Z canAttackType
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	G_ ()V startPersistentAngerTimer
	a_ (I)V setRemainingPersistentAngerTime
	E_ ()I getRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	eO ()F getAttackDamage
	B (Lapx;)Z doHurtTarget
	a (Laph;F)Z hurt
	eK ()Lbaf$a; getCrackiness
	a (B)V handleEntityEvent
	eL ()I getAttackAnimationTick
	t (Z)V offerFlower
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lbft;Laoq;)Laor; mobInteract
	b (Lfx;Lcee;)V playStepSound
	eM ()I getOfferFlowerTick
	eN ()Z isPlayerCreated
	u (Z)V setPlayerCreated
	a (Laph;)V die
	a (Lbrw;)Z checkSpawnObstruction
	ce ()Ldck; getLeashOffset
	i (Laqj;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
baf$a net/minecraft/world/entity/animal/IronGolem$Crackiness
	a NONE
	b LOW
	c MEDIUM
	d HIGH
	e BY_DAMAGE
	f fraction
	g $VALUES
	values ()[Lbaf$a; values
	valueOf (Ljava/lang/String;)Lbaf$a; valueOf
	<init> (Ljava/lang/String;IF)V <init>
	a (F)Lbaf$a; byFraction
	a (Lbaf$a;)D lambda$static$0
	<clinit> ()V <clinit>
bag net/minecraft/world/entity/animal/MushroomCow
	bo DATA_TYPE
	bp effect
	bq effectDuration
	br lastLightningBoltUUID
	<init> (Laqb;Lbru;)V <init>
	a (Lfx;Lbrw;)F getWalkTargetValue
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkMushroomSpawnRules
	a (Laag;Laqi;)V thunderHit
	e ()V defineSynchedData
	b (Lbft;Laoq;)Laor; mobInteract
	a (Ladp;)V shear
	K_ ()Z readyForShearing
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	l (Lbly;)Ljava/util/Optional; getEffectFromItemStack
	a (Lbag$a;)V setMushroomType
	eL ()Lbag$a; getMushroomType
	c (Laag;Lapv;)Lbag; getBreedOffspring
	a (Lbag;)Lbag$a; getOffspringType
	b (Laag;Lapv;)Lbab; getBreedOffspring
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (Laoq;Lbft;)V lambda$mobInteract$0
	<clinit> ()V <clinit>
bag$a net/minecraft/world/entity/animal/MushroomCow$MushroomType
	a RED
	b BROWN
	c type
	d blockState
	e $VALUES
	values ()[Lbag$a; values
	valueOf (Ljava/lang/String;)Lbag$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lcee;)V <init>
	a ()Lcee; getBlockState
	b (Ljava/lang/String;)Lbag$a; byType
	a (Lbag$a;)Ljava/lang/String; access$000
	b (Lbag$a;)Lcee; access$100
	a (Ljava/lang/String;)Lbag$a; access$200
	<clinit> ()V <clinit>
bah net/minecraft/world/entity/animal/Ocelot
	bo TEMPT_INGREDIENT
	bp DATA_TRUSTING
	bq ocelotAvoidPlayersGoal
	br temptGoal
	<init> (Laqb;Lbru;)V <init>
	eM ()Z isTrusting
	t (Z)V setTrusting
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	e ()V defineSynchedData
	o ()V registerGoals
	N ()V customServerAiStep
	h (D)Z removeWhenFarAway
	eK ()Larh$a; createAttributes
	b (FF)Z causeFallDamage
	I ()Ladn; getAmbientSound
	D ()I getAmbientSoundInterval
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eN ()F getAttackDamage
	B (Lapx;)Z doHurtTarget
	a (Laph;F)Z hurt
	b (Lbft;Laoq;)Laor; mobInteract
	a (B)V handleEntityEvent
	u (Z)V spawnTrustingParticles
	eL ()V reassessTrustingGoals
	b (Laag;Lapv;)Lbah; getBreedOffspring
	k (Lbly;)Z isFood
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkOcelotSpawnRules
	a (Lbrw;)Z checkSpawnObstruction
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	ce ()Ldck; getLeashOffset
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (Lbah;)Z access$000
	<clinit> ()V <clinit>
bah$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	<init> (Lbah;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bah$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	<init> (Lbah;DLbok;Z)V <init>
	g ()Z canScare
bai net/minecraft/world/entity/animal/Panda
	bp UNHAPPY_COUNTER
	bq SNEEZE_COUNTER
	br EAT_COUNTER
	bs MAIN_GENE_ID
	bt HIDDEN_GENE_ID
	bu DATA_ID_FLAGS
	bv BREED_TARGETING
	bw gotBamboo
	bx didBite
	bo rollCounter
	by rollDelta
	bz sitAmount
	bA sitAmountO
	bB onBackAmount
	bC onBackAmountO
	bD rollAmount
	bE rollAmountO
	bF lookAtPlayerGoal
	bG PANDA_ITEMS
	<init> (Laqb;Lbru;)V <init>
	e (Lbly;)Z canTakeItem
	eK ()I getUnhappyCounter
	t (I)V setUnhappyCounter
	eL ()Z isSneezing
	eM ()Z isSitting
	t (Z)V sit
	eN ()Z isOnBack
	u (Z)V setOnBack
	eO ()Z isEating
	v (Z)V eat
	fk ()I getEatCounter
	v (I)V setEatCounter
	w (Z)V sneeze
	eU ()I getSneezeCounter
	u (I)V setSneezeCounter
	eV ()Lbai$a; getMainGene
	a (Lbai$a;)V setMainGene
	eW ()Lbai$a; getHiddenGene
	b (Lbai$a;)V setHiddenGene
	eX ()Z isRolling
	x (Z)V roll
	e ()V defineSynchedData
	w (I)Z getFlag
	d (IZ)V setFlag
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Laag;Lapv;)Lapv; getBreedOffspring
	o ()V registerGoals
	eY ()Larh$a; createAttributes
	eZ ()Lbai$a; getVariant
	fa ()Z isLazy
	fb ()Z isWorried
	fc ()Z isPlayful
	fd ()Z isBrown
	fe ()Z isWeak
	eF ()Z isAggressive
	a (Lbft;)Z canBeLeashed
	B (Lapx;)Z doHurtTarget
	j ()V tick
	ff ()Z isScared
	fl ()V handleEating
	fm ()V addEatingParticles
	fn ()V updateSitAmount
	fo ()V updateOnBackAnimation
	fp ()V updateRollAmount
	y (F)F getSitAmount
	z (F)F getLieOnBackAmount
	A (F)F getRollAmount
	fq ()V handleRoll
	fr ()V afterSneeze
	b (Lbcs;)V pickUpItem
	a (Laph;F)Z hurt
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Lbai;Lbai;)V setGeneFromParents
	fs ()Lbai$a; getOneOfGenesRandomly
	fg ()V setAttributes
	ft ()V tryToSit
	b (Lbft;Laoq;)Laor; mobInteract
	I ()Ladn; getAmbientSound
	b (Lfx;Lcee;)V playStepSound
	k (Lbly;)Z isFood
	l (Lbly;)Z isFoodOrCake
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	fh ()Z canPerformAction
	c (Lbcs;)Z lambda$static$0
	a (Lbai;)Z access$100
	b (Lbai;)Ljava/util/Random; access$200
	c (Lbai;)Ljava/util/Random; access$300
	d (Lbai;)Ljava/util/Random; access$400
	e (Lbai;)Ljava/util/Random; access$500
	fi ()Lazd; access$600
	f (Lbai;)Lbai$g; access$700
	fj ()Ljava/util/function/Predicate; access$800
	g (Lbai;)Ljava/util/Random; access$900
	h (Lbai;)Ljava/util/Random; access$1000
	i (Lbai;)V access$1100
	j (Lbai;)Ljava/util/Random; access$1200
	k (Lbai;)Ljava/util/Random; access$1300
	l (Lbai;)Ljava/util/Random; access$1400
	m (Lbai;)Ljava/util/Random; access$1500
	n (Lbai;)Ljava/util/Random; access$1600
	o (Lbai;)Z access$1700
	p (Lbai;)Z access$1800
	<clinit> ()V <clinit>
bai$a net/minecraft/world/entity/animal/Panda$Gene
	a NORMAL
	b LAZY
	c WORRIED
	d PLAYFUL
	e BROWN
	f WEAK
	g AGGRESSIVE
	h BY_ID
	i id
	j name
	k isRecessive
	l $VALUES
	values ()[Lbai$a; values
	valueOf (Ljava/lang/String;)Lbai$a; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;Z)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	c ()Z isRecessive
	b (Lbai$a;Lbai$a;)Lbai$a; getVariantFromGenes
	a (I)Lbai$a; byId
	a (Ljava/lang/String;)Lbai$a; byName
	a (Ljava/util/Random;)Lbai$a; getRandom
	b (I)[Lbai$a; lambda$static$0
	a (Lbai$a;Lbai$a;)Lbai$a; access$000
	<clinit> ()V <clinit>
bai$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	b panda
	<init> (Lbai;DZ)V <init>
	a ()Z canUse
bai$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	<init> (Lbai;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
bai$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	e panda
	f unhappyCooldown
	d this$0
	<init> (Lbai;Lbai;D)V <init>
	a ()Z canUse
	h ()Z canFindBamboo
bai$e net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	<init> (Lbai;[Ljava/lang/Class;)V <init>
	b ()Z canContinueToUse
	a (Laqk;Laqj;)V alertOther
bai$f net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	<init> (Lbai;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bai$g net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	g panda
	<init> (Lbai;Ljava/lang/Class;F)V <init>
	a (Laqj;)V setTarget
	b ()Z canContinueToUse
	a ()Z canUse
	e ()V tick
bai$h net/minecraft/world/entity/animal/Panda$PandaMoveControl
	i panda
	<init> (Lbai;)V <init>
	a ()V tick
bai$i net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	g panda
	<init> (Lbai;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bai$j net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	<init> (Lbai;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	C_ ()Z isInterruptable
bai$k net/minecraft/world/entity/animal/Panda$PandaSitGoal
	b cooldown
	a this$0
	<init> (Lbai;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	c ()V start
	d ()V stop
bai$l net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	<init> (Lbai;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
baj net/minecraft/world/entity/animal/Parrot
	bu DATA_VARIANT_ID
	bv NOT_PARROT_PREDICATE
	bw POISONOUS_FOOD
	bx TAME_FOOD
	by MOB_SOUND_MAP
	bq flap
	br flapSpeed
	bs oFlapSpeed
	bt oFlap
	bz flapping
	bA partyParrot
	bB jukebox
	<init> (Laqb;Lbru;)V <init>
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	w_ ()Z isBaby
	o ()V registerGoals
	eU ()Larh$a; createAttributes
	b (Lbru;)Layg; createNavigation
	b (Laqu;Lapy;)F getStandingEyeHeight
	k ()V aiStep
	a (Lfx;Z)V setRecordPlayingNearby
	eV ()Z isPartyParrot
	eZ ()V calculateFlapping
	a (Lbru;Lapx;)Z imitateNearbyMobs
	b (Lbft;Laoq;)Laor; mobInteract
	k (Lbly;)Z isFood
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkParrotSpawnRules
	b (FF)Z causeFallDamage
	a (DZLcee;Lfx;)V checkFallDamage
	a (Lazw;)Z canMate
	a (Laag;Lapv;)Lapv; getBreedOffspring
	B (Lapx;)Z doHurtTarget
	I ()Ladn; getAmbientSound
	a (Lbru;Ljava/util/Random;)Ladn; getAmbient
	b (Laqb;)Ladn; getImitatedSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	e (F)F playFlySound
	ay ()Z makeFlySound
	dG ()F getVoicePitch
	a (Ljava/util/Random;)F getPitch
	ct ()Ladp; getSoundSource
	aT ()Z isPushable
	C (Lapx;)V doPush
	a (Laph;F)Z hurt
	eW ()I getVariant
	t (I)V setVariant
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	fa ()Z isFlying
	ce ()Ldck; getLeashOffset
	a (Ljava/util/HashMap;)V lambda$static$0
	eX ()Ljava/util/Map; access$000
	<clinit> ()V <clinit>
baj$1 net/minecraft/world/entity/animal/Parrot$1
	<init> ()V <init>
	a (Laqk;)Z test
	test (Ljava/lang/Object;)Z test
bak net/minecraft/world/entity/animal/Pig
	bo DATA_SADDLE_ID
	bp DATA_BOOST_TIME
	bq FOOD_ITEMS
	br steering
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eK ()Larh$a; createAttributes
	cl ()Lapx; getControllingPassenger
	er ()Z canBeControlledByRider
	a (Lus;)V onSyncedDataUpdated
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	b (Lbft;Laoq;)Laor; mobInteract
	L_ ()Z isSaddleable
	dm ()V dropEquipment
	M_ ()Z isSaddled
	a (Ladp;)V equipSaddle
	b (Laqj;)Ldck; getDismountLocationForPassenger
	a (Laag;Laqi;)V thunderHit
	g (Ldck;)V travel
	N_ ()F getSteeringSpeed
	a_ (Ldck;)V travelWithInput
	O_ ()Z boost
	b (Laag;Lapv;)Lbak; getBreedOffspring
	k (Lbly;)Z isFood
	ce ()Ldck; getLeashOffset
	a (Laag;Lapv;)Lapv; getBreedOffspring
	<clinit> ()V <clinit>
bal net/minecraft/world/entity/animal/PolarBear
	bo DATA_STANDING_ID
	bp clientSideStandAnimationO
	bq clientSideStandAnimation
	br warningSoundTicks
	bs PERSISTENT_ANGER_TIME
	bt remainingPersistentAngerTime
	bu persistentAngerTarget
	<init> (Laqb;Lbru;)V <init>
	a (Laag;Lapv;)Lapv; getBreedOffspring
	k (Lbly;)Z isFood
	o ()V registerGoals
	eK ()Larh$a; createAttributes
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkPolarBearSpawnRules
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	G_ ()V startPersistentAngerTimer
	a_ (I)V setRemainingPersistentAngerTime
	E_ ()I getRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	eL ()V playWarningSound
	e ()V defineSynchedData
	j ()V tick
	a (Laqu;)Lapy; getDimensions
	B (Lapx;)Z doHurtTarget
	eM ()Z isStanding
	t (Z)V setStanding
	y (F)F getStandingAnimationScale
	dL ()F getWaterSlowDown
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	<clinit> ()V <clinit>
bal$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	i this$0
	<init> (Lbal;)V <init>
	a ()Z canUse
	k ()D getFollowDistance
bal$b net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a this$0
	<init> (Lbal;)V <init>
	c ()V start
	a (Laqk;Laqj;)V alertOther
bal$c net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	b this$0
	<init> (Lbal;)V <init>
	a (Laqj;D)V checkAndPerformAttack
	d ()V stop
	a (Laqj;)D getAttackReachSqr
bal$d net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	g this$0
	<init> (Lbal;)V <init>
	a ()Z canUse
bam net/minecraft/world/entity/animal/Pufferfish
	b PUFF_STATE
	c inflateCounter
	d deflateTimer
	bo NO_SPECTATORS_AND_NO_WATER_MOB
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	eN ()I getPuffState
	b (I)V setPuffState
	a (Lus;)V onSyncedDataUpdated
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	eK ()Lbly; getBucketItemStack
	o ()V registerGoals
	j ()V tick
	k ()V aiStep
	a (Laqk;)V touch
	a_ (Lbft;)V playerTouch
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	eM ()Ladn; getFlopSound
	a (Laqu;)Lapy; getDimensions
	s (I)F getScale
	i (Laqj;)Z lambda$static$0
	eO ()Ljava/util/function/Predicate; access$000
	a (Lbam;I)I access$102
	b (Lbam;I)I access$202
	<clinit> ()V <clinit>
bam$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	<init> (Lbam;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
ban net/minecraft/world/entity/animal/Rabbit
	bo DATA_TYPE_ID
	bp KILLER_BUNNY
	bq jumpTicks
	br jumpDuration
	bs wasOnGround
	bt jumpDelayTicks
	bu moreCarrotTicks
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	dI ()F getJumpPower
	dJ ()V jumpFromGround
	y (F)F getJumpCompletion
	i (D)V setSpeedModifier
	o (Z)V setJumping
	eK ()V startJumping
	e ()V defineSynchedData
	N ()V customServerAiStep
	aN ()Z canSpawnSprintParticle
	b (DD)V facePoint
	eO ()V enableJumpControl
	eU ()V disableJumpControl
	eV ()V setLandingDelay
	eW ()V checkLandingDelay
	k ()V aiStep
	eL ()Larh$a; createAttributes
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	eM ()Ladn; getJumpSound
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	B (Lapx;)Z doHurtTarget
	ct ()Ladp; getSoundSource
	a (Laph;F)Z hurt
	b (Lblu;)Z isTemptingItem
	b (Laag;Lapv;)Lban; getBreedOffspring
	k (Lbly;)Z isFood
	eN ()I getRabbitType
	t (I)V setRabbitType
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Lbrv;)I getRandomRabbitType
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkRabbitSpawnRules
	eX ()Z wantsMoreFood
	a (B)V handleEntityEvent
	ce ()Ldck; getLeashOffset
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (Lban;)Z access$000
	b (Lban;)Z access$100
	c (Lban;)Lauv; access$200
	d (Lban;)Z access$300
	a (Lban;I)I access$402
	<clinit> ()V <clinit>
ban$a net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	<init> (Lban;)V <init>
	a (Laqj;)D getAttackReachSqr
ban$b net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	<init> (Lban;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
ban$c net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a rabbitType
	<init> (I)V <init>
ban$d net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	c rabbit
	d canJump
	b this$0
	<init> (Lban;Lban;)V <init>
	c ()Z wantJump
	d ()Z canJump
	a (Z)V setCanJump
	b ()V tick
ban$e net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	i rabbit
	j nextJumpSpeed
	<init> (Lban;)V <init>
	a ()V tick
	a (DDDD)V setWantedPosition
ban$f net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	g rabbit
	<init> (Lban;D)V <init>
	e ()V tick
ban$g net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	g rabbit
	h wantsToRaid
	i canRaid
	<init> (Lban;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	a (Lbrw;Lfx;)Z isValidTarget
bao net/minecraft/world/entity/animal/Salmon
	<init> (Laqb;Lbru;)V <init>
	eN ()I getMaxSchoolSize
	eK ()Lbly; getBucketItemStack
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	eM ()Ladn; getFlopSound
bap net/minecraft/world/entity/animal/Sheep
	bo DATA_WOOL_ID
	bp ITEM_BY_DYE
	bq COLORARRAY_BY_COLOR
	br eatAnimationTick
	bs eatBlockGoal
	c (Lbku;)[F createSheepColor
	a (Lbku;)[F getColorArray
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	N ()V customServerAiStep
	k ()V aiStep
	eK ()Larh$a; createAttributes
	e ()V defineSynchedData
	J ()Lvk; getDefaultLootTable
	a (B)V handleEntityEvent
	y (F)F getHeadEatPositionScale
	z (F)F getHeadEatAngleScale
	b (Lbft;Laoq;)Laor; mobInteract
	a (Ladp;)V shear
	K_ ()Z readyForShearing
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	eL ()Lbku; getColor
	b (Lbku;)V setColor
	eM ()Z isSheared
	t (Z)V setSheared
	a (Ljava/util/Random;)Lbku; getRandomSheepColor
	b (Laag;Lapv;)Lbap; getBreedOffspring
	B ()V ate
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Lazw;Lazw;)Lbku; getOffspringColor
	a (Lbku;Lbku;)Lbil; makeContainer
	b (Laqu;Lapy;)F getStandingEyeHeight
	a (Laag;Lapv;)Lapv; getBreedOffspring
	b (Lbku;Lbku;)Lbku; lambda$getOffspringColor$4
	a (Lbil;Lbof;)Lbly; lambda$getOffspringColor$3
	a (Laoq;Lbft;)V lambda$mobInteract$2
	d (Lbku;)Lbku; lambda$static$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
bap$1 net/minecraft/world/entity/animal/Sheep$1
	<init> (Lbjb;I)V <init>
	a (Lbft;)Z stillValid
bap$2 net/minecraft/world/entity/animal/Sheep$2
	a $SwitchMap$net$minecraft$world$item$DyeColor
	<clinit> ()V <clinit>
baq net/minecraft/world/entity/animal/ShoulderRidingEntity
	bq rideCooldownCounter
	<init> (Laqb;Lbru;)V <init>
	d (Laah;)Z setEntityOnShoulder
	j ()V tick
	eY ()Z canSitOnShoulder
bar net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Larh$a; createAttributes
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	dN ()Z isSensitiveToWater
	k ()V aiStep
	a (Laqj;F)V performRangedAttack
	b (Laqu;Lapy;)F getStandingEyeHeight
	b (Lbft;Laoq;)Laor; mobInteract
	a (Ladp;)V shear
	K_ ()Z readyForShearing
	eK ()Z hasPumpkin
	t (Z)V setPumpkin
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	ce ()Ldck; getLeashOffset
	a (Laoq;Lbft;)V lambda$mobInteract$1
	i (Laqj;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bas net/minecraft/world/entity/animal/Squid
	b xBodyRot
	c xBodyRotO
	d zBodyRot
	bo zBodyRotO
	bp tentacleMovement
	bq oldTentacleMovement
	br tentacleAngle
	bs oldTentacleAngle
	bt speed
	bu tentacleSpeed
	bv rotateSpeed
	bw tx
	bx ty
	by tz
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Larh$a; createAttributes
	b (Laqu;Lapy;)F getStandingEyeHeight
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	dF ()F getSoundVolume
	aB ()Z isMovementNoisy
	k ()V aiStep
	a (Laph;F)Z hurt
	i (Ldck;)Ldck; rotateVector
	eL ()V spawnInk
	g (Ldck;)V travel
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkSquidSpawnRules
	a (B)V handleEntityEvent
	a (FFF)V setMovementVector
	eK ()Z hasMovementVector
	a (Lbas;)Z access$100
bas$1 net/minecraft/world/entity/animal/Squid$1
bas$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	b fleeTicks
	a this$0
	<init> (Lbas;)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
	<init> (Lbas;Lbas$1;)V <init>
bas$b net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	b squid
	a this$0
	<init> (Lbas;Lbas;)V <init>
	a ()Z canUse
	e ()V tick
bat net/minecraft/world/entity/animal/TropicalFish
	c DATA_ID_TYPE_VARIANT
	d BASE_TEXTURE_LOCATIONS
	bo PATTERN_A_TEXTURE_LOCATIONS
	bp PATTERN_B_TEXTURE_LOCATIONS
	b COMMON_VARIANTS
	bq isSchool
	a (Lbat$a;Lbku;Lbku;)I calculateVariant
	<init> (Laqb;Lbru;)V <init>
	b (I)Ljava/lang/String; getPredefinedName
	s (I)Lbku; getBaseColor
	t (I)Lbku; getPatternColor
	u (I)Ljava/lang/String; getFishTypeName
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	v (I)V setVariant
	c (I)Z isMaxGroupSizeReached
	eU ()I getVariant
	k (Lbly;)V saveToBucketTag
	eK ()Lbly; getBucketItemStack
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	eM ()Ladn; getFlopSound
	x (I)I getBaseColorIdx
	eV ()[F getBaseColor
	y (I)I getPatternColorIdx
	eW ()[F getPatternColor
	w (I)I getBaseVariant
	eX ()I getBaseVariant
	z (I)I getPatternVariant
	eY ()Lvk; getPatternTextureLocation
	eZ ()Lvk; getBaseTextureLocation
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	<clinit> ()V <clinit>
bat$1 net/minecraft/world/entity/animal/TropicalFish$1
bat$a net/minecraft/world/entity/animal/TropicalFish$Pattern
	a KOB
	b SUNSTREAK
	c SNOOPER
	d DASHER
	e BRINELY
	f SPOTTY
	g FLOPPER
	h STRIPEY
	i GLITTER
	j BLOCKFISH
	k BETTY
	l CLAYFISH
	m base
	n index
	o VALUES
	p $VALUES
	values ()[Lbat$a; values
	valueOf (Ljava/lang/String;)Lbat$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a ()I getBase
	b ()I getIndex
	a (II)Ljava/lang/String; getPatternName
	c ()Ljava/lang/String; getName
	<clinit> ()V <clinit>
bat$b net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b base
	c pattern
	d baseColor
	e patternColor
	<init> (Lbat;IIII)V <init>
	a (Lbat$b;)I access$000
	b (Lbat$b;)I access$100
	c (Lbat$b;)I access$200
	d (Lbat$b;)I access$300
	<init> (Lbat;IIIILbat$1;)V <init>
bau net/minecraft/world/entity/animal/Turtle
	bp HOME_POS
	bq HAS_EGG
	br LAYING_EGG
	bs TRAVEL_POS
	bt GOING_HOME
	bu TRAVELLING
	bv layEggCounter
	bo BABY_ON_LAND_SELECTOR
	<init> (Laqb;Lbru;)V <init>
	g (Lfx;)V setHomePos
	eN ()Lfx; getHomePos
	h (Lfx;)V setTravelPos
	eO ()Lfx; getTravelPos
	eK ()Z hasEgg
	t (Z)V setHasEgg
	eL ()Z isLayingEgg
	u (Z)V setLayingEgg
	eU ()Z isGoingHome
	v (Z)V setGoingHome
	eV ()Z isTravelling
	w (Z)V setTravelling
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkTurtleSpawnRules
	o ()V registerGoals
	eM ()Larh$a; createAttributes
	bU ()Z isPushedByFluid
	cL ()Z canBreatheUnderwater
	dB ()Laqn; getMobType
	D ()I getAmbientSoundInterval
	I ()Ladn; getAmbientSound
	d (F)V playSwimSound
	au ()Ladn; getSwimSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	eP ()Z canFallInLove
	as ()F nextStep
	cR ()F getScale
	b (Lbru;)Layg; createNavigation
	a (Laag;Lapv;)Lapv; getBreedOffspring
	k (Lbly;)Z isFood
	a (Lfx;Lbrw;)F getWalkTargetValue
	k ()V aiStep
	m ()V ageBoundaryReached
	g (Ldck;)V travel
	a (Lbft;)Z canBeLeashed
	a (Laag;Laqi;)V thunderHit
	i (Laqj;)Z lambda$static$0
	a (Lbau;)Z access$200
	b (Lbau;)Ljava/util/Random; access$300
	a (Lbau;Lfx;)V access$400
	a (Lbau;Z)V access$500
	c (Lbau;)Lfx; access$600
	d (Lbau;)Lfx; access$700
	b (Lbau;Z)V access$800
	c (Lbau;Z)V access$900
	e (Lbau;)I access$1000
	d (Lbau;Z)V access$1100
	f (Lbau;)Ljava/util/Random; access$1200
	g (Lbau;)I access$1008
	h (Lbau;)Z access$1300
	i (Lbau;)Z access$1400
	<clinit> ()V <clinit>
bau$1 net/minecraft/world/entity/animal/Turtle$1
bau$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	<init> (Lbau;D)V <init>
	a ()Z canUse
	g ()V breed
bau$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	<init> (Lbau;D)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	e ()V tick
bau$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g turtle
	<init> (Lbau;D)V <init>
	b ()Z canContinueToUse
	a ()Z canUse
	k ()Z shouldRecalculatePath
	a (Lbrw;Lfx;)Z isValidTarget
	<init> (Lbau;DLbau$1;)V <init>
bau$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	<init> (Lbau;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	a (Lbrw;Lfx;)Z isValidTarget
bau$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	i turtle
	<init> (Lbau;)V <init>
	g ()V updateSpeed
	a ()V tick
bau$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	<init> (Lbau;D)V <init>
	a ()Z canUse
bau$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	<init> (Lbau;Lbru;)V <init>
	a ()Z canUpdatePath
	a (I)Lcxc; createPathFinder
	a (Lfx;)Z isStableDestination
bau$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	h turtle
	<init> (Lbau;DI)V <init>
	a ()Z canUse
	<init> (Lbau;DILbau$1;)V <init>
bau$i net/minecraft/world/entity/animal/Turtle$TurtleTemptGoal
	a TEMPT_TARGETING
	b turtle
	c speedModifier
	d player
	e calmDown
	f items
	<init> (Lbau;DLblu;)V <init>
	a ()Z canUse
	a (Lbly;)Z shouldFollowItem
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	<clinit> ()V <clinit>
bau$j net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	<init> (Lbau;D)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
	b ()Z canContinueToUse
	d ()V stop
bav net/minecraft/world/entity/animal/WaterAnimal
	<init> (Laqb;Lbru;)V <init>
	cL ()Z canBreatheUnderwater
	dB ()Laqn; getMobType
	a (Lbrw;)Z checkSpawnObstruction
	D ()I getAmbientSoundInterval
	d (Lbft;)I getExperienceReward
	a (I)V handleAirSupply
	af ()V baseTick
	bU ()Z isPushedByFluid
	a (Lbft;)Z canBeLeashed
baw net/minecraft/world/entity/animal/Wolf
	br DATA_INTERESTED_ID
	bs DATA_COLLAR_COLOR
	bt DATA_REMAINING_ANGER_TIME
	bq PREY_SELECTOR
	bu interestedAngle
	bv interestedAngleO
	bw isWet
	bx isShaking
	by shakeAnim
	bz shakeAnimO
	bA PERSISTENT_ANGER_TIME
	bB persistentAngerTarget
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eU ()Larh$a; createAttributes
	e ()V defineSynchedData
	b (Lfx;Lcee;)V playStepSound
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	dF ()F getSoundVolume
	k ()V aiStep
	j ()V tick
	eZ ()V cancelShake
	a (Laph;)V die
	eV ()Z isWet
	y (F)F getWetShade
	g (FF)F getBodyRollAngle
	z (F)F getHeadRollAngle
	b (Laqu;Lapy;)F getStandingEyeHeight
	O ()I getMaxHeadXRot
	a (Laph;F)Z hurt
	B (Lapx;)Z doHurtTarget
	u (Z)V setTame
	b (Lbft;Laoq;)Laor; mobInteract
	a (B)V handleEntityEvent
	eW ()F getTailAngle
	k (Lbly;)Z isFood
	eq ()I getMaxSpawnClusterSize
	E_ ()I getRemainingPersistentAngerTime
	a_ (I)V setRemainingPersistentAngerTime
	G_ ()V startPersistentAngerTimer
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	eX ()Lbku; getCollarColor
	a (Lbku;)V setCollarColor
	b (Laag;Lapv;)Lbaw; getBreedOffspring
	x (Z)V setIsInterested
	a (Lazw;)Z canMate
	eY ()Z isInterested
	a (Laqj;Laqj;)Z wantsToAttack
	a (Lbft;)Z canBeLeashed
	ce ()Ldck; getLeashOffset
	a (Laag;Lapv;)Lapv; getBreedOffspring
	j (Laqj;)Z lambda$static$0
	a (Lbaw;)Ljava/util/Random; access$000
	<clinit> ()V <clinit>
baw$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	j wolf
	i this$0
	<init> (Lbaw;Lbaw;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
	a (Lbbb;)Z avoidLlama
	c ()V start
	e ()V tick
bax net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bw DATA_ID_CHEST
	<init> (Laqb;Lbru;)V <init>
	eK ()V randomizeAttributes
	e ()V defineSynchedData
	eL ()Larh$a; createBaseChestedHorseAttributes
	eM ()Z hasChest
	t (Z)V setChest
	eN ()I getInventorySize
	bb ()D getPassengersRidingOffset
	dm ()V dropEquipment
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a_ (ILbly;)Z setSlot
	b (Lbft;Laoq;)Laor; mobInteract
	eO ()V playChestEquipsSound
	eU ()I getInventoryColumns
	<clinit> ()V <clinit>
bay net/minecraft/world/entity/animal/horse/AbstractHorse
	bw PARENT_HORSE_SELECTOR
	bx MOMMY_TARGETING
	by FOOD_ITEMS
	bz DATA_ID_FLAGS
	bA DATA_ID_OWNER_UUID
	bB eatingCounter
	bC mouthCounter
	bD standCounter
	bo tailCounter
	bp sprintCounter
	bq isJumping
	br inventory
	bs temper
	bt playerJumpPendingScale
	bE allowStandSliding
	bF eatAnim
	bG eatAnimO
	bH standAnim
	bI standAnimO
	bJ mouthAnim
	bK mouthAnimO
	bu canGallop
	bv gallopSoundCounter
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eV ()V addBehaviourGoals
	e ()V defineSynchedData
	t (I)Z getFlag
	d (IZ)V setFlag
	eW ()Z isTamed
	eX ()Ljava/util/UUID; getOwnerUUID
	b (Ljava/util/UUID;)V setOwnerUUID
	eY ()Z isJumping
	u (Z)V setTamed
	v (Z)V setIsJumping
	x (F)V onLeashDistance
	eZ ()Z isEating
	fa ()Z isStanding
	fb ()Z isBred
	w (Z)V setBred
	L_ ()Z isSaddleable
	a (Ladp;)V equipSaddle
	M_ ()Z isSaddled
	fc ()I getTemper
	u (I)V setTemper
	v (I)I modifyTemper
	aT ()Z isPushable
	eL ()V eating
	b (FF)Z causeFallDamage
	e (FF)I calculateFallDamage
	eN ()I getInventorySize
	fd ()V createInventory
	fe ()V updateContainerEquipment
	a (Laok;)V containerChanged
	ff ()D getCustomJump
	fg ()Ladn; getEatingSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	I ()Ladn; getAmbientSound
	fh ()Ladn; getAngrySound
	b (Lfx;Lcee;)V playStepSound
	a (Lcab;)V playGallopSound
	fi ()Larh$a; createBaseHorseAttributes
	eq ()I getMaxSpawnClusterSize
	fj ()I getMaxTemper
	dF ()F getSoundVolume
	D ()I getAmbientSoundInterval
	f (Lbft;)V openInventory
	b (Lbft;Lbly;)Laor; fedFood
	c (Lbft;Lbly;)Z handleEating
	h (Lbft;)V doPlayerRide
	dH ()Z isImmobile
	k (Lbly;)Z isFood
	eM ()V moveTail
	dm ()V dropEquipment
	k ()V aiStep
	fk ()V followMommy
	fl ()Z canEatGrass
	j ()V tick
	eO ()V openMouth
	x (Z)V setEating
	y (Z)V setStanding
	eU ()V stand
	fm ()V makeMad
	i (Lbft;)Z tameWithName
	g (Ldck;)V travel
	fn ()V playJumpSound
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lazw;)Z canMate
	fo ()Z canParent
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (Lapv;Lbay;)V setOffspringAttributes
	er ()Z canBeControlledByRider
	y (F)F getEatAnim
	z (F)F getStandAnim
	A (F)F getMouthAnim
	b_ (I)V onPlayerJump
	P_ ()Z canJump
	Q_ ()F getJumpRidingScale
	a_ (F)V setJumpRidingScale
	b (I)V handleStartJump
	c ()V handleStopJump
	z (Z)V spawnTamingParticles
	a (B)V handleEntityEvent
	k (Lapx;)V positionRider
	fp ()F generateRandomMaxHealth
	fq ()D generateRandomJumpStrength
	fr ()D generateRandomSpeed
	c_ ()Z onClimbable
	b (Laqu;Lapy;)F getStandingEyeHeight
	fs ()Z canWearArmor
	ft ()Z isWearingArmor
	l (Lbly;)Z isArmor
	a_ (ILbly;)Z setSlot
	cl ()Lapx; getControllingPassenger
	a (Ldck;Laqj;)Ldck; getDismountLocationInDirection
	b (Laqj;)Ldck; getDismountLocationForPassenger
	eK ()V randomizeAttributes
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	i (Laqj;)Z lambda$static$0
	<clinit> ()V <clinit>
baz net/minecraft/world/entity/animal/horse/Donkey
	<init> (Laqb;Lbru;)V <init>
	I ()Ladn; getAmbientSound
	fh ()Ladn; getAngrySound
	dp ()Ladn; getDeathSound
	fg ()Ladn; getEatingSound
	e (Laph;)Ladn; getHurtSound
	a (Lazw;)Z canMate
	a (Laag;Lapv;)Lapv; getBreedOffspring
bba net/minecraft/world/entity/animal/horse/Horse
	bw ARMOR_MODIFIER_UUID
	bx DATA_ID_TYPE_VARIANT
	<init> (Laqb;Lbru;)V <init>
	eK ()V randomizeAttributes
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	eL ()Lbly; getArmor
	m (Lbly;)V setArmor
	a (Lmd;)V readAdditionalSaveData
	w (I)V setTypeVariant
	eU ()I getTypeVariant
	a (Lbbh;Lbbc;)V setVariantAndMarkings
	eM ()Lbbh; getVariant
	eO ()Lbbc; getMarkings
	fe ()V updateContainerEquipment
	n (Lbly;)V setArmorEquipment
	a (Laok;)V containerChanged
	a (Lcab;)V playGallopSound
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	fg ()Ladn; getEatingSound
	e (Laph;)Ladn; getHurtSound
	fh ()Ladn; getAngrySound
	b (Lbft;Laoq;)Laor; mobInteract
	a (Lazw;)Z canMate
	a (Laag;Lapv;)Lapv; getBreedOffspring
	fs ()Z canWearArmor
	l (Lbly;)Z isArmor
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	<clinit> ()V <clinit>
bba$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
	<init> (Lbbh;)V <init>
bbb net/minecraft/world/entity/animal/horse/Llama
	bw FOOD_ITEMS
	bx DATA_STRENGTH_ID
	by DATA_SWAG_ID
	bz DATA_VARIANT_ID
	bA didSpit
	bB caravanHead
	bC caravanTail
	<init> (Laqb;Lbru;)V <init>
	fu ()Z isTraderLlama
	x (I)V setStrength
	fE ()V setRandomStrength
	fv ()I getStrength
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	o ()V registerGoals
	fw ()Larh$a; createAttributes
	e ()V defineSynchedData
	fx ()I getVariant
	w (I)V setVariant
	eN ()I getInventorySize
	k (Lapx;)V positionRider
	bb ()D getPassengersRidingOffset
	er ()Z canBeControlledByRider
	k (Lbly;)Z isFood
	c (Lbft;Lbly;)Z handleEating
	dH ()Z isImmobile
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	fh ()Ladn; getAngrySound
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	fg ()Ladn; getEatingSound
	b (Lfx;Lcee;)V playStepSound
	eO ()V playChestEquipsSound
	fm ()V makeMad
	eU ()I getInventoryColumns
	fs ()Z canWearArmor
	ft ()Z isWearingArmor
	l (Lbly;)Z isArmor
	L_ ()Z isSaddleable
	a (Laok;)V containerChanged
	fe ()V updateContainerEquipment
	a (Lbku;)V setSwag
	m (Lbly;)Lbku; getDyeColor
	fy ()Lbku; getSwag
	fj ()I getMaxTemper
	a (Lazw;)Z canMate
	b (Laag;Lapv;)Lbbb; getBreedOffspring
	fz ()Lbbb; makeBabyLlama
	i (Laqj;)V spit
	A (Z)V setDidSpit
	b (FF)Z causeFallDamage
	fA ()V leaveCaravan
	a (Lbbb;)V joinCaravan
	fB ()Z hasCaravanTail
	fC ()Z inCaravan
	fD ()Lbbb; getCaravanHead
	eJ ()D followLeashSpeed
	fk ()V followMommy
	fl ()Z canEatGrass
	a (Laqj;F)V performRangedAttack
	ce ()Ldck; getLeashOffset
	a (Laag;Lapv;)Lapv; getBreedOffspring
	b (Lbbb;)Z access$100
	a (Lbbb;Z)V access$200
	<clinit> ()V <clinit>
bbb$1 net/minecraft/world/entity/animal/horse/Llama$1
bbb$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	<init> (Lbbb;)V <init>
	k ()D getFollowDistance
	b (Laqj;)Z lambda$new$0
bbb$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
	<init> (I)V <init>
	<init> (ILbbb$1;)V <init>
bbb$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	<init> (Lbbb;)V <init>
	b ()Z canContinueToUse
bbc net/minecraft/world/entity/animal/horse/Markings
	a NONE
	b WHITE
	c WHITE_FIELD
	d WHITE_DOTS
	e BLACK_DOTS
	f BY_ID
	g id
	h $VALUES
	values ()[Lbbc; values
	valueOf (Ljava/lang/String;)Lbbc; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getId
	a (I)Lbbc; byId
	b (I)[Lbbc; lambda$static$0
	<clinit> ()V <clinit>
bbd net/minecraft/world/entity/animal/horse/Mule
	<init> (Laqb;Lbru;)V <init>
	I ()Ladn; getAmbientSound
	fh ()Ladn; getAngrySound
	dp ()Ladn; getDeathSound
	fg ()Ladn; getEatingSound
	e (Laph;)Ladn; getHurtSound
	eO ()V playChestEquipsSound
	a (Laag;Lapv;)Lapv; getBreedOffspring
bbe net/minecraft/world/entity/animal/horse/SkeletonHorse
	bw skeletonTrapGoal
	bx isTrap
	by trapTime
	<init> (Laqb;Lbru;)V <init>
	eL ()Larh$a; createAttributes
	eK ()V randomizeAttributes
	eV ()V addBehaviourGoals
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	au ()Ladn; getSwimSound
	d (F)V playSwimSound
	fn ()V playJumpSound
	dB ()Laqn; getMobType
	bb ()D getPassengersRidingOffset
	k ()V aiStep
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	bs ()Z rideableUnderWater
	dL ()F getWaterSlowDown
	eM ()Z isTrap
	t (Z)V setTrap
	a (Laag;Lapv;)Lapv; getBreedOffspring
	b (Lbft;Laoq;)Laor; mobInteract
bbf net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	<init> (Lbbe;)V <init>
	a ()Z canUse
	e ()V tick
	a (Laop;)Lbay; createHorse
	a (Laop;Lbay;)Lbdv; createSkeleton
	a (Lbly;)Lbly; disenchant
bbg net/minecraft/world/entity/animal/horse/TraderLlama
	bw despawnDelay
	<init> (Laqb;Lbru;)V <init>
	fu ()Z isTraderLlama
	fz ()Lbbb; makeBabyLlama
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	o ()V registerGoals
	x (I)V setDespawnDelay
	h (Lbft;)V doPlayerRide
	k ()V aiStep
	fE ()V maybeDespawn
	fF ()Z canDespawn
	fG ()Z isLeashedToWanderingTrader
	fH ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
bbg$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	b llama
	c ownerLastHurtBy
	d timestamp
	a this$0
	<init> (Lbbg;Lbbb;)V <init>
	a ()Z canUse
	c ()V start
bbh net/minecraft/world/entity/animal/horse/Variant
	a WHITE
	b CREAMY
	c CHESTNUT
	d BROWN
	e BLACK
	f GRAY
	g DARKBROWN
	h BY_ID
	i id
	j $VALUES
	values ()[Lbbh; values
	valueOf (Ljava/lang/String;)Lbbh; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getId
	a (I)Lbbh; byId
	b (I)[Lbbh; lambda$static$0
	<clinit> ()V <clinit>
bbi net/minecraft/world/entity/animal/horse/ZombieHorse
	<init> (Laqb;Lbru;)V <init>
	eL ()Larh$a; createAttributes
	eK ()V randomizeAttributes
	dB ()Laqn; getMobType
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	a (Laag;Lapv;)Lapv; getBreedOffspring
	b (Lbft;Laoq;)Laor; mobInteract
	eV ()V addBehaviourGoals
bbj net/minecraft/world/entity/animal/horse/package-info
bbk net/minecraft/world/entity/animal/package-info
bbl net/minecraft/world/entity/boss/BossMob
	dw ()F getMaxHealth
	dj ()F getHealth
	d ()Lnr; getDisplayName
bbm net/minecraft/world/entity/boss/EnderDragonPart
	b parentMob
	c name
	d size
	<init> (Lbbo;Ljava/lang/String;FF)V <init>
	e ()V defineSynchedData
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	aS ()Z isPickable
	a (Laph;F)Z hurt
	s (Lapx;)Z is
	P ()Loj; getAddEntityPacket
	a (Laqu;)Lapy; getDimensions
bbn net/minecraft/world/entity/boss/enderdragon/EndCrystal
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	b time
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	aB ()Z isMovementNoisy
	e ()V defineSynchedData
	j ()V tick
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	aS ()Z isPickable
	a (Laph;F)Z hurt
	Z ()V kill
	a (Laph;)V onDestroyedBy
	a (Lfx;)V setBeamTarget
	g ()Lfx; getBeamTarget
	a (Z)V setShowBottom
	h ()Z showsBottom
	a (D)Z shouldRenderAtSqrDistance
	P ()Loj; getAddEntityPacket
	<clinit> ()V <clinit>
bbo net/minecraft/world/entity/boss/enderdragon/EnderDragon
	bv LOGGER
	b DATA_PHASE
	bw CRYSTAL_DESTROY_TARGETING
	c positions
	d posPointer
	bx subEntities
	bo head
	by neck
	bz body
	bA tail1
	bB tail2
	bC tail3
	bD wing1
	bE wing2
	bp oFlapTime
	bq flapTime
	br inWall
	bs dragonDeathTime
	bt yRotA
	bu nearestCrystal
	bF dragonFight
	bG phaseManager
	bH growlTime
	bI sittingDamageReceived
	bJ nodes
	bK nodeAdjacency
	bL openSet
	<init> (Laqb;Lbru;)V <init>
	m ()Larh$a; createAttributes
	e ()V defineSynchedData
	a (IF)[D getLatencyPos
	k ()V aiStep
	a (Lbbm;DDD)V tickPart
	eM ()F getHeadYOffset
	eN ()V checkCrystals
	a (Ljava/util/List;)V knockBack
	b (Ljava/util/List;)V hurt
	i (D)F rotWrap
	b (Ldcf;)Z checkWalls
	a (Lbbm;Laph;F)Z hurt
	a (Laph;F)Z hurt
	f (Laph;F)Z reallyHurt
	Z ()V kill
	cT ()V tickDeath
	a (I)V dropExperience
	eI ()I findClosestNode
	p (DDD)I findClosestNode
	a (IILcwy;)Lcxa; findPath
	a (Lcwy;Lcwy;)Lcxa; reconstructPath
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	cH ()V checkDespawn
	eJ ()[Lbbm; getSubEntities
	aS ()Z isPickable
	ct ()Ladp; getSoundSource
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dF ()F getSoundVolume
	a (I[D[D)F getHeadPartYOffset
	x (F)Ldck; getHeadLookVector
	a (Lbbn;Lfx;Laph;)V onCrystalDestroyed
	a (Lus;)V onSyncedDataUpdated
	eK ()Lbcf; getPhaseManager
	eL ()Lchd; getDragonFight
	c (Lapr;)Z addEffect
	n (Lapx;)Z canRide
	bN ()Z canChangeDimensions
	<clinit> ()V <clinit>
bbp net/minecraft/world/entity/boss/enderdragon/package-info
bbq net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	<init> (Lbbo;)V <init>
	a ()Z isSitting
	b ()V doClientTick
	c ()V doServerTick
	a (Lbbn;Lfx;Laph;Lbft;)V onCrystalDestroyed
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Ldck; getFlyTargetLocation
	a (Laph;F)F onHurt
	h ()F getTurnSpeed
bbr net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	<init> (Lbbo;)V <init>
	a ()Z isSitting
	a (Laph;F)F onHurt
bbs net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c targetLocation
	d timeSinceCharge
	<init> (Lbbo;)V <init>
	c ()V doServerTick
	d ()V begin
	a (Ldck;)V setTarget
	f ()F getFlySpeed
	g ()Ldck; getFlyTargetLocation
	i ()Lbce; getPhase
	<clinit> ()V <clinit>
bbt net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	<init> (Lbbo;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Ldck; getFlyTargetLocation
	i ()Lbce; getPhase
bbu net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	<init> (Lbbo;)V <init>
	i ()Lbce; getPhase
	c ()V doServerTick
	d ()V begin
	g ()Ldck; getFlyTargetLocation
	j ()V findNewTarget
	a (Lbft;)V strafePlayer
	k ()V navigateToNextPathNode
	a (Lbbn;Lfx;Laph;Lbft;)V onCrystalDestroyed
	<clinit> ()V <clinit>
bbv net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	<init> (Lbbo;)V <init>
	c ()V doServerTick
	a ()Z isSitting
	d ()V begin
	f ()F getFlySpeed
	g ()Ldck; getFlyTargetLocation
	i ()Lbce; getPhase
bbw net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	<init> (Lbbo;)V <init>
	i ()Lbce; getPhase
	d ()V begin
	c ()V doServerTick
	g ()Ldck; getFlyTargetLocation
	j ()V findNewTarget
	k ()V navigateToNextPathNode
	<clinit> ()V <clinit>
bbx net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	<init> (Lbbo;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	f ()F getFlySpeed
	h ()F getTurnSpeed
	d ()V begin
	g ()Ldck; getFlyTargetLocation
	i ()Lbce; getPhase
bby net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	b ()V doClientTick
	c ()V doServerTick
	a (Lbbn;Lfx;Laph;Lbft;)V onCrystalDestroyed
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	h ()F getTurnSpeed
	i ()Lbce; getPhase
	g ()Ldck; getFlyTargetLocation
	a (Laph;F)F onHurt
bbz net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b attackingTicks
	<init> (Lbbo;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lbce; getPhase
bca net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b flameTicks
	c flameCount
	d flame
	<init> (Lbbo;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lbce; getPhase
	j ()V resetFlameCount
bcb net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b CHARGE_TARGETING
	c scanTargeting
	d scanningTime
	<init> (Lbbo;)V <init>
	c ()V doServerTick
	d ()V begin
	i ()Lbce; getPhase
	a (Lbbo;Laqj;)Z lambda$new$0
	<clinit> ()V <clinit>
bcc net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c fireballCharge
	d currentPath
	e targetLocation
	f attackTarget
	g holdingPatternClockwise
	<init> (Lbbo;)V <init>
	c ()V doServerTick
	j ()V findNewTarget
	k ()V navigateToNextPathNode
	d ()V begin
	a (Laqj;)V setTarget
	g ()Ldck; getFlyTargetLocation
	i ()Lbce; getPhase
	<clinit> ()V <clinit>
bcd net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	<init> (Lbbo;)V <init>
	c ()V doServerTick
	d ()V begin
	j ()V findNewTarget
	k ()V navigateToNextPathNode
	g ()Ldck; getFlyTargetLocation
	i ()Lbce; getPhase
bce net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	l phases
	a HOLDING_PATTERN
	b STRAFE_PLAYER
	c LANDING_APPROACH
	d LANDING
	e TAKEOFF
	f SITTING_FLAMING
	g SITTING_SCANNING
	h SITTING_ATTACKING
	i CHARGING_PLAYER
	j DYING
	k HOVERING
	m instanceClass
	n id
	o name
	<init> (ILjava/lang/Class;Ljava/lang/String;)V <init>
	a (Lbbo;)Lbby; createInstance
	a ()Ljava/lang/reflect/Constructor; getConstructor
	b ()I getId
	toString ()Ljava/lang/String; toString
	a (I)Lbce; getById
	c ()I getCount
	a (Ljava/lang/Class;Ljava/lang/String;)Lbce; create
	<clinit> ()V <clinit>
bcf net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	b dragon
	c phases
	d currentPhase
	<init> (Lbbo;)V <init>
	a (Lbce;)V setPhase
	a ()Lbby; getCurrentPhase
	b (Lbce;)Lbby; getPhase
	<clinit> ()V <clinit>
bcg net/minecraft/world/entity/boss/enderdragon/phases/package-info
bch net/minecraft/world/entity/boss/package-info
bci net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	c DATA_TARGET_B
	d DATA_TARGET_C
	bo DATA_TARGETS
	bp DATA_ID_INV
	bq xRotHeads
	br yRotHeads
	bs xRotOHeads
	bt yRotOHeads
	bu nextHeadUpdate
	bv idleHeadUpdates
	bw destroyBlocksTick
	bx bossEvent
	by LIVING_ENTITY_SELECTOR
	bz TARGETING_CONDITIONS
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lnr;)V setCustomName
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	k ()V aiStep
	N ()V customServerAiStep
	c (Lcee;)Z canDestroy
	m ()V makeInvulnerable
	a (Lcee;Ldck;)V makeStuckInBlock
	b (Laah;)V startSeenByPlayer
	c (Laah;)V stopSeenByPlayer
	u (I)D getHeadX
	v (I)D getHeadY
	w (I)D getHeadZ
	a (FFF)F rotlerp
	a (ILaqj;)V performRangedAttack
	a (IDDDZ)V performRangedAttack
	a (Laqj;F)V performRangedAttack
	a (Laph;F)Z hurt
	a (Laph;IZ)V dropCustomDeathLoot
	cH ()V checkDespawn
	b (FF)Z causeFallDamage
	c (Lapr;)Z addEffect
	eK ()Larh$a; createAttributes
	a (I)F getHeadYRot
	b (I)F getHeadXRot
	eL ()I getInvulnerableTicks
	s (I)V setInvulnerableTicks
	t (I)I getAlternativeTarget
	a (II)V setAlternativeTarget
	S_ ()Z isPowered
	dB ()Laqn; getMobType
	n (Lapx;)Z canRide
	bN ()Z canChangeDimensions
	d (Lapr;)Z canBeAffected
	i (Laqj;)Z lambda$static$0
	<clinit> ()V <clinit>
bci$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a this$0
	<init> (Lbci;)V <init>
	a ()Z canUse
bcj net/minecraft/world/entity/boss/wither/package-info
bck net/minecraft/world/entity/decoration/ArmorStand
	bj DEFAULT_HEAD_POSE
	bk DEFAULT_BODY_POSE
	bl DEFAULT_LEFT_ARM_POSE
	bm DEFAULT_RIGHT_ARM_POSE
	bn DEFAULT_LEFT_LEG_POSE
	bo DEFAULT_RIGHT_LEG_POSE
	bp MARKER_DIMENSIONS
	bq BABY_DIMENSIONS
	b DATA_CLIENT_FLAGS
	c DATA_HEAD_POSE
	d DATA_BODY_POSE
	e DATA_LEFT_ARM_POSE
	f DATA_RIGHT_ARM_POSE
	g DATA_LEFT_LEG_POSE
	bh DATA_RIGHT_LEG_POSE
	br RIDABLE_MINECARTS
	bs handItems
	bt armorItems
	bu invisible
	bi lastHit
	bv disabledSlots
	bw headPose
	bx bodyPose
	by leftArmPose
	bz rightArmPose
	bA leftLegPose
	bB rightLegPose
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	x_ ()V refreshDimensions
	A ()Z hasPhysics
	dR ()Z isEffectiveAi
	e ()V defineSynchedData
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	b (Laqc;)Lbly; getItemBySlot
	a (Laqc;Lbly;)V setItemSlot
	a_ (ILbly;)Z setSlot
	e (Lbly;)Z canTakeItem
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	g (Lmd;)V readPose
	B ()Lmd; writePose
	aT ()Z isPushable
	C (Lapx;)V doPush
	dP ()V pushEntities
	a (Lbft;Ldck;Laoq;)Laor; interactAt
	i (Ldck;)Laqc; getClickedSlot
	d (Laqc;)Z isDisabled
	a (Lbft;Laqc;Lbly;Laoq;)Z swapItem
	a (Laph;F)Z hurt
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	D ()V showBreakingParticles
	f (Laph;F)V causeDamage
	f (Laph;)V brokenByPlayer
	g (Laph;)V brokenByAnything
	F ()V playBrokenSound
	f (FF)F tickHeadTurn
	b (Laqu;Lapy;)F getStandingEyeHeight
	ba ()D getMyRidingOffset
	g (Ldck;)V travel
	n (F)V setYBodyRot
	m (F)V setYHeadRot
	j ()V tick
	C ()V updateInvisibilityStatus
	j (Z)V setInvisible
	w_ ()Z isBaby
	Z ()V kill
	ch ()Z ignoreExplosion
	y_ ()Lcuz; getPistonPushReaction
	a (Z)V setSmall
	m ()Z isSmall
	p (Z)V setShowArms
	o ()Z isShowArms
	q (Z)V setNoBasePlate
	p ()Z isNoBasePlate
	r (Z)V setMarker
	q ()Z isMarker
	a (BIZ)B setBit
	a (Lgo;)V setHeadPose
	b (Lgo;)V setBodyPose
	c (Lgo;)V setLeftArmPose
	d (Lgo;)V setRightArmPose
	e (Lgo;)V setLeftLegPose
	f (Lgo;)V setRightLegPose
	r ()Lgo; getHeadPose
	t ()Lgo; getBodyPose
	u ()Lgo; getLeftArmPose
	v ()Lgo; getRightArmPose
	x ()Lgo; getLeftLegPose
	z ()Lgo; getRightLegPose
	aS ()Z isPickable
	t (Lapx;)Z skipAttackInteraction
	dU ()Laqf; getMainArm
	o (I)Ladn; getFallDamageSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	a (Laag;Laqi;)V thunderHit
	eg ()Z isAffectedByPotions
	a (Lus;)V onSyncedDataUpdated
	eh ()Z attackable
	a (Laqu;)Lapy; getDimensions
	s (Z)Lapy; getDimensionsMarker
	k (F)Ldck; getLightProbePosition
	a (Lapx;)Z lambda$static$0
	<clinit> ()V <clinit>
bck$1 net/minecraft/world/entity/decoration/ArmorStand$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	<clinit> ()V <clinit>
bcl net/minecraft/world/entity/decoration/HangingEntity
	b HANGING_ENTITY
	e checkInterval
	c pos
	d direction
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;Lbru;Lfx;)V <init>
	e ()V defineSynchedData
	a (Lgc;)V setDirection
	g ()V recalculateBoundingBox
	a (I)D offs
	j ()V tick
	h ()Z survives
	aS ()Z isPickable
	t (Lapx;)Z skipAttackInteraction
	bY ()Lgc; getDirection
	a (Laph;F)Z hurt
	a (Laqo;Ldck;)V move
	i (DDD)V push
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	i ()I getWidth
	k ()I getHeight
	a (Lapx;)V dropItem
	m ()V playPlacementSound
	a (Lbly;F)Lbcs; spawnAtLocation
	aU ()Z repositionEntityAfterLoad
	d (DDD)V setPos
	n ()Lfx; getPos
	a (Lbzj;)F rotate
	a (Lbyd;)F mirror
	a (Laag;Laqi;)V thunderHit
	x_ ()V refreshDimensions
	b (Lapx;)Z lambda$static$0
	<clinit> ()V <clinit>
bcl$1 net/minecraft/world/entity/decoration/HangingEntity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
bcm net/minecraft/world/entity/decoration/ItemFrame
	e LOGGER
	f DATA_ITEM
	g DATA_ROTATION
	ag dropChance
	ah fixed
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Lfx;Lgc;)V <init>
	a (Laqu;Lapy;)F getEyeHeight
	e ()V defineSynchedData
	a (Lgc;)V setDirection
	g ()V recalculateBoundingBox
	h ()Z survives
	a (Laqo;Ldck;)V move
	i (DDD)V push
	bf ()F getPickRadius
	Z ()V kill
	a (Laph;F)Z hurt
	i ()I getWidth
	k ()I getHeight
	a (D)Z shouldRenderAtSqrDistance
	a (Lapx;)V dropItem
	m ()V playPlacementSound
	b (Lapx;Z)V dropItem
	c (Lbly;)V removeFramedMap
	o ()Lbly; getItem
	b (Lbly;)V setItem
	a (Lbly;Z)V setItem
	a_ (ILbly;)Z setSlot
	a (Lus;)V onSyncedDataUpdated
	p ()I getRotation
	a (I)V setRotation
	a (IZ)V setRotation
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lbft;Laoq;)Laor; interact
	q ()I getAnalogOutput
	P ()Loj; getAddEntityPacket
	<clinit> ()V <clinit>
bcm$1 net/minecraft/world/entity/decoration/ItemFrame$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
bcn net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Lfx;)V <init>
	d (DDD)V setPos
	g ()V recalculateBoundingBox
	a (Lgc;)V setDirection
	i ()I getWidth
	k ()I getHeight
	a (Laqu;Lapy;)F getEyeHeight
	a (D)Z shouldRenderAtSqrDistance
	a (Lapx;)V dropItem
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lbft;Laoq;)Laor; interact
	h ()Z survives
	a (Lbru;Lfx;)Lbcn; getOrCreateKnot
	m ()V playPlacementSound
	P ()Loj; getAddEntityPacket
	o (F)Ldck; getRopeHoldPosition
bco net/minecraft/world/entity/decoration/Motive
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	A width
	B height
	a (Ljava/lang/String;II)Lbco; register
	<init> (II)V <init>
	a ()I getWidth
	b ()I getHeight
	<clinit> ()V <clinit>
bcp net/minecraft/world/entity/decoration/Painting
	e motive
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Lfx;Lgc;)V <init>
	<init> (Lbru;Lfx;Lgc;Lbco;)V <init>
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	i ()I getWidth
	k ()I getHeight
	a (Lapx;)V dropItem
	m ()V playPlacementSound
	b (DDDFF)V moveTo
	a (DDDFFIZ)V lerpTo
	P ()Loj; getAddEntityPacket
bcq net/minecraft/world/entity/decoration/package-info
bcr net/minecraft/world/entity/item/FallingBlockEntity
	f blockState
	b time
	c dropItem
	g cancelDrop
	ag hurtEntities
	ah fallDamageMax
	ai fallDamageAmount
	d blockData
	e DATA_START_POS
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDLcee;)V <init>
	bK ()Z isAttackable
	a (Lfx;)V setStartPos
	g ()Lfx; getStartPos
	aB ()Z isMovementNoisy
	e ()V defineSynchedData
	aS ()Z isPickable
	j ()V tick
	b (FF)Z causeFallDamage
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	h ()Lbru; getLevel
	a (Z)V setHurtsEntities
	bQ ()Z displayFireAnimation
	a (Lm;)V fillCrashReportCategory
	i ()Lcee; getBlockState
	ci ()Z onlyOpCanSetNbt
	P ()Loj; getAddEntityPacket
	<clinit> ()V <clinit>
bcs net/minecraft/world/entity/item/ItemEntity
	c DATA_ITEM
	d age
	e pickupDelay
	f health
	g thrower
	ag owner
	b bobOffs
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	<init> (Lbru;DDDLbly;)V <init>
	<init> (Lbcs;)V <init>
	aB ()Z isMovementNoisy
	e ()V defineSynchedData
	j ()V tick
	u ()V setUnderwaterMovement
	v ()V setUnderLavaMovement
	x ()V mergeWithNeighbours
	z ()Z isMergable
	a (Lbcs;)V tryToMerge
	a (Lbly;Lbly;)Z areMergable
	a (Lbly;Lbly;I)Lbly; merge
	a (Lbcs;Lbly;Lbly;)V merge
	a (Lbcs;Lbly;Lbcs;Lbly;)V merge
	aC ()Z fireImmune
	h (I)V burn
	a (Laph;F)Z hurt
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a_ (Lbft;)V playerTouch
	Q ()Lnr; getName
	bK ()Z isAttackable
	b (Laag;)Lapx; changeDimension
	g ()Lbly; getItem
	b (Lbly;)V setItem
	a (Lus;)V onSyncedDataUpdated
	h ()Ljava/util/UUID; getOwner
	b (Ljava/util/UUID;)V setOwner
	i ()Ljava/util/UUID; getThrower
	c (Ljava/util/UUID;)V setThrower
	k ()I getAge
	m ()V setDefaultPickUpDelay
	n ()V setNoPickUpDelay
	o ()V setNeverPickUp
	a (I)V setPickUpDelay
	p ()Z hasPickUpDelay
	q ()V setUnlimitedLifetime
	r ()V setExtendedLifetime
	s ()V makeFakeItem
	a (F)F getSpin
	P ()Loj; getAddEntityPacket
	t ()Lbcs; copy
	b (Lbcs;)Z lambda$mergeWithNeighbours$0
	<clinit> ()V <clinit>
bct net/minecraft/world/entity/item/PrimedTnt
	b DATA_FUSE_ID
	c owner
	d life
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDLaqj;)V <init>
	e ()V defineSynchedData
	aB ()Z isMovementNoisy
	aS ()Z isPickable
	j ()V tick
	k ()V explode
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	g ()Laqj; getOwner
	a (Laqu;Lapy;)F getEyeHeight
	a (I)V setFuse
	a (Lus;)V onSyncedDataUpdated
	h ()I getFuse
	i ()I getLife
	P ()Loj; getAddEntityPacket
	<clinit> ()V <clinit>
bcu net/minecraft/world/entity/item/package-info
bcv net/minecraft/world/entity/monster/AbstractIllager
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	dB ()Laqn; getMobType
	m ()Lbcv$a; getArmPose
bcv$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h NEUTRAL
	i $VALUES
	values ()[Lbcv$a; values
	valueOf (Ljava/lang/String;)Lbcv$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bcv$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a this$0
	<init> (Lbcv;Lbgz;)V <init>
	a ()Z canUse
bcw net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Larh$a; createAttributes
	b (Lfx;Lcee;)V playStepSound
	eK ()Ladn; getStepSound
	dB ()Laqn; getMobType
	k ()V aiStep
	aZ ()V rideTick
	a (Laop;)V populateDefaultEquipmentSlots
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	eL ()V reassessWeaponGoal
	a (Laqj;F)V performRangedAttack
	b (Lbly;F)Lbfx; getArrow
	a (Lbml;)Z canFireProjectileWeapon
	a (Lmd;)V readAdditionalSaveData
	a (Laqc;Lbly;)V setItemSlot
	b (Laqu;Lapy;)F getStandingEyeHeight
	ba ()D getMyRidingOffset
bcw$1 net/minecraft/world/entity/monster/AbstractSkeleton$1
	b this$0
	<init> (Lbcw;Laqr;DZ)V <init>
	d ()V stop
	c ()V start
bcx net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Larh$a; createAttributes
	e ()V defineSynchedData
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	aQ ()F getBrightness
	k ()V aiStep
	dN ()Z isSensitiveToWater
	N ()V customServerAiStep
	b (FF)Z causeFallDamage
	bp ()Z isOnFire
	eK ()Z isCharged
	t (Z)V setCharged
	a (Lbcx;Z)V access$000
	<clinit> ()V <clinit>
bcx$a net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	<init> (Lbcx;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()D getFollowDistance
bcy net/minecraft/world/entity/monster/CaveSpider
	<init> (Laqb;Lbru;)V <init>
	m ()Larh$a; createCaveSpider
	B (Lapx;)Z doHurtTarget
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Laqu;Lapy;)F getStandingEyeHeight
bcz net/minecraft/world/entity/monster/Creeper
	b DATA_SWELL_DIR
	c DATA_IS_POWERED
	d DATA_IS_IGNITED
	bo oldSwell
	bp swell
	bq maxSwell
	br explosionRadius
	bs droppedSkulls
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Larh$a; createAttributes
	bO ()I getMaxFallDistance
	b (FF)Z causeFallDamage
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	j ()V tick
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	a (Laph;IZ)V dropCustomDeathLoot
	B (Lapx;)Z doHurtTarget
	S_ ()Z isPowered
	y (F)F getSwelling
	eK ()I getSwellDir
	a (I)V setSwellDir
	a (Laag;Laqi;)V thunderHit
	b (Lbft;Laoq;)Laor; mobInteract
	eP ()V explodeCreeper
	eS ()V spawnLingeringCloud
	eL ()Z isIgnited
	eM ()V ignite
	eN ()Z canDropMobsSkull
	eO ()V increaseDroppedSkulls
	a (Laoq;Lbft;)V lambda$mobInteract$0
	<clinit> ()V <clinit>
bda net/minecraft/world/entity/monster/CrossbowAttackMob
	b (Z)V setChargingCrossbow
	a (Laqj;Lbly;Lbgj;F)V shootCrossbowProjectile
	A ()Laqj; getTarget
	U_ ()V onCrossbowAttackPerformed
	b (Laqj;F)V performCrossbowAttack
	a (Laqj;Laqj;Lbgj;FF)V shootCrossbowProjectile
	a (Laqj;Ldck;F)Lg; getProjectileShotVector
bdb net/minecraft/world/entity/monster/Drowned
	d searchingForLand
	b waterNavigation
	c groundNavigation
	<init> (Laqb;Lbru;)V <init>
	m ()V addBehaviourGoals
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Laqb;Lbsh;Laqm;Lfx;Ljava/util/Random;)Z checkDrownedSpawnRules
	a (Lbrv;Lfx;)Z isDeepEnoughToSpawn
	eK ()Z supportsBreakDoorGoal
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eL ()Ladn; getStepSound
	au ()Ladn; getSwimSound
	eM ()Lbly; getSkull
	a (Laop;)V populateDefaultEquipmentSlots
	a (Lbly;Lbly;)Z canReplaceCurrentItem
	eN ()Z convertsInWater
	a (Lbrw;)Z checkSpawnObstruction
	i (Laqj;)Z okTarget
	bU ()Z isPushedByFluid
	eW ()Z wantsToSwim
	g (Ldck;)V travel
	aI ()V updateSwimming
	eO ()Z closeToNextPos
	a (Laqj;F)V performRangedAttack
	t (Z)V setSearchingForLand
	a (Lbdb;Layg;)Layg; access$002
	a (Lbdb;)Z access$100
	b (Lbdb;)Z access$200
	c (Lbdb;)Z access$300
bdb$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	b drowned
	<init> (Lbdb;DZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bdb$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	<init> (Lbdb;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	a (Lbrw;Lfx;)Z isValidTarget
	c ()V start
	d ()V stop
bdb$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	<init> (Laqr;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Ldck; getWaterPos
bdb$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	i drowned
	<init> (Lbdb;)V <init>
	a ()V tick
bdb$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	<init> (Lbdb;DI)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	c ()V start
	d ()V stop
bdb$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	<init> (Lbdr;DIF)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
bdc net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	<init> (Laqb;Lbru;)V <init>
	m ()Larh$a; createAttributes
	eK ()I getAttackDuration
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eL ()Ladn; getFlopSound
	N ()V customServerAiStep
	d (Laah;)Z lambda$customServerAiStep$0
	<clinit> ()V <clinit>
bdd net/minecraft/world/entity/monster/EnderMan
	b SPEED_MODIFIER_ATTACKING_UUID
	c SPEED_MODIFIER_ATTACKING
	d DATA_CARRY_STATE
	bo DATA_CREEPY
	bp DATA_STARED_AT
	bq ENDERMITE_SELECTOR
	br lastStareSound
	bs targetChangeTime
	bt PERSISTENT_ANGER_TIME
	bu remainingPersistentAngerTime
	bv persistentAngerTarget
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Larh$a; createAttributes
	h (Laqj;)V setTarget
	e ()V defineSynchedData
	G_ ()V startPersistentAngerTimer
	a_ (I)V setRemainingPersistentAngerTime
	E_ ()I getRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	eK ()V playStareSound
	a (Lus;)V onSyncedDataUpdated
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	g (Lbft;)Z isLookingAtMe
	b (Laqu;Lapy;)F getStandingEyeHeight
	k ()V aiStep
	dN ()Z isSensitiveToWater
	N ()V customServerAiStep
	eL ()Z teleport
	a (Lapx;)Z teleportTowards
	p (DDD)Z teleport
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	a (Laph;IZ)V dropCustomDeathLoot
	c (Lcee;)V setCarriedBlock
	eM ()Lcee; getCarriedBlock
	a (Laph;F)Z hurt
	eN ()Z isCreepy
	eO ()Z hasBeenStaredAt
	eP ()V setBeingStaredAt
	K ()Z requiresCustomPersistence
	i (Laqj;)Z lambda$static$0
	a (Lbdd;Lbft;)Z access$000
	a (Lbdd;Lapx;)Z access$100
	<clinit> ()V <clinit>
bdd$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	b target
	<init> (Lbdd;)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
bdd$b net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	<init> (Lbdd;)V <init>
	a ()Z canUse
	e ()V tick
	a (Lbru;Lfx;Lcee;Lcee;Lcee;Lfx;)Z canPlaceBlock
bdd$c net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	<init> (Lbdd;Ljava/util/function/Predicate;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	e ()V tick
	a (Lbdd;Laqj;)Z lambda$new$0
bdd$d net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a enderman
	<init> (Lbdd;)V <init>
	a ()Z canUse
	e ()V tick
bde net/minecraft/world/entity/monster/Endermite
	b life
	c playerSpawned
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	b (Laqu;Lapy;)F getStandingEyeHeight
	m ()Larh$a; createAttributes
	aB ()Z isMovementNoisy
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	j ()V tick
	n (F)V setYBodyRot
	ba ()D getMyRidingOffset
	eK ()Z isPlayerSpawned
	t (Z)V setPlayerSpawned
	k ()V aiStep
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkEndermiteSpawnRules
	dB ()Laqn; getMobType
bdf net/minecraft/world/entity/monster/Enemy
bdg net/minecraft/world/entity/monster/Evoker
	bo wololoTarget
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eK ()Larh$a; createAttributes
	e ()V defineSynchedData
	a (Lmd;)V readAdditionalSaveData
	eL ()Ladn; getCelebrateSound
	b (Lmd;)V addAdditionalSaveData
	N ()V customServerAiStep
	r (Lapx;)Z isAlliedTo
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	a (Lbap;)V setWololoTarget
	fg ()Lbap; getWololoTarget
	eM ()Ladn; getCastingSoundEvent
	a (IZ)V applyRaidBuffs
	a (Lbdg;)Lbap; access$300
	b (Lbdg;)Ljava/util/Random; access$400
	c (Lbdg;)Ljava/util/Random; access$500
	d (Lbdg;)Ljava/util/Random; access$600
	e (Lbdg;)Ljava/util/Random; access$700
	f (Lbdg;)Ljava/util/Random; access$800
	a (Lbdg;Lbap;)V access$900
bdg$1 net/minecraft/world/entity/monster/Evoker$1
bdg$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a this$0
	<init> (Lbdg;)V <init>
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	a (DDDDFI)V createSpellEntity
	k ()Ladn; getSpellPrepareSound
	l ()Lbdx$a; getSpell
	<init> (Lbdg;Lbdg$1;)V <init>
bdg$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	a this$0
	<init> (Lbdg;)V <init>
	e ()V tick
	<init> (Lbdg;Lbdg$1;)V <init>
bdg$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	e vexCountTargeting
	a this$0
	<init> (Lbdg;)V <init>
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Ladn; getSpellPrepareSound
	l ()Lbdx$a; getSpell
	<init> (Lbdg;Lbdg$1;)V <init>
bdg$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	e wololoTargeting
	a this$0
	<init> (Lbdg;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	j ()V performSpellCasting
	m ()I getCastWarmupTime
	g ()I getCastingTime
	h ()I getCastingInterval
	k ()Ladn; getSpellPrepareSound
	l ()Lbdx$a; getSpell
	e ()V tick
	c ()V start
	a (Laqj;)Z lambda$new$0
bdh net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	m ()Z isCharging
	t (Z)V setCharging
	eI ()I getExplosionPower
	L ()Z shouldDespawnInPeaceful
	a (Laph;F)Z hurt
	e ()V defineSynchedData
	eJ ()Larh$a; createAttributes
	ct ()Ladp; getSoundSource
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	dF ()F getSoundVolume
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkGhastSpawnRules
	eq ()I getMaxSpawnClusterSize
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	b (Laqu;Lapy;)F getStandingEyeHeight
	i (Laqj;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bdh$a net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	<init> (Lbdh;)V <init>
	a ()Z canUse
	e ()V tick
bdh$b net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	i ghast
	j floatDuration
	<init> (Lbdh;)V <init>
	a ()V tick
	a (Ldck;I)Z canReach
bdh$c net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	b ghast
	a chargeTime
	<init> (Lbdh;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bdh$d net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	<init> (Lbdh;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bdi net/minecraft/world/entity/monster/Giant
	<init> (Laqb;Lbru;)V <init>
	b (Laqu;Lapy;)F getStandingEyeHeight
	m ()Larh$a; createAttributes
	a (Lfx;Lbrw;)F getWalkTargetValue
bdj net/minecraft/world/entity/monster/Guardian
	b DATA_ID_MOVING
	d DATA_ID_ATTACK_TARGET
	bo clientSideTailAnimation
	bp clientSideTailAnimationO
	bq clientSideTailAnimationSpeed
	br clientSideSpikesAnimation
	bs clientSideSpikesAnimationO
	bt clientSideCachedAttackTarget
	bu clientSideAttackTime
	bv clientSideTouchedGround
	c randomStrollGoal
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eM ()Larh$a; createAttributes
	b (Lbru;)Layg; createNavigation
	e ()V defineSynchedData
	cL ()Z canBreatheUnderwater
	dB ()Laqn; getMobType
	eN ()Z isMoving
	t (Z)V setMoving
	eK ()I getAttackDuration
	a (I)V setActiveAttackTarget
	eO ()Z hasActiveAttackTarget
	eP ()Laqj; getActiveAttackTarget
	a (Lus;)V onSyncedDataUpdated
	D ()I getAmbientSoundInterval
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	aB ()Z isMovementNoisy
	b (Laqu;Lapy;)F getStandingEyeHeight
	a (Lfx;Lbrw;)F getWalkTargetValue
	k ()V aiStep
	eL ()Ladn; getFlopSound
	y (F)F getTailAnimation
	z (F)F getSpikesAnimation
	A (F)F getAttackAnimationScale
	a (Lbrw;)Z checkSpawnObstruction
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkGuardianSpawnRules
	a (Laph;F)Z hurt
	O ()I getMaxHeadXRot
	g (Ldck;)V travel
	a (Lbdj;I)V access$000
	a (Lbdj;Z)V access$100
	<clinit> ()V <clinit>
bdj$a net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	<init> (Lbdj;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bdj$b net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	<init> (Lbdj;)V <init>
	a (Laqj;)Z test
	test (Ljava/lang/Object;)Z test
bdj$c net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	i guardian
	<init> (Lbdj;)V <init>
	a ()V tick
bdk net/minecraft/world/entity/monster/Husk
	<init> (Laqb;Lbru;)V <init>
	a (Laqb;Lbsh;Laqm;Lfx;Ljava/util/Random;)Z checkHuskSpawnRules
	T_ ()Z isSunSensitive
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eL ()Ladn; getStepSound
	B (Lapx;)Z doHurtTarget
	eN ()Z convertsInWater
	eP ()V doUnderWaterConversion
	eM ()Lbly; getSkull
bdl net/minecraft/world/entity/monster/Illusioner
	bo clientSideIllusionTicks
	bp clientSideIllusionOffsets
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eK ()Larh$a; createAttributes
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	e ()V defineSynchedData
	cc ()Ldcf; getBoundingBoxForCulling
	k ()V aiStep
	eL ()Ladn; getCelebrateSound
	y (F)[Ldck; getIllusionOffsets
	r (Lapx;)Z isAlliedTo
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	eM ()Ladn; getCastingSoundEvent
	a (IZ)V applyRaidBuffs
	a (Laqj;F)V performRangedAttack
	m ()Lbcv$a; getArmPose
bdl$1 net/minecraft/world/entity/monster/Illusioner$1
bdl$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	e lastTargetId
	a this$0
	<init> (Lbdl;)V <init>
	a ()Z canUse
	c ()V start
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Ladn; getSpellPrepareSound
	l ()Lbdx$a; getSpell
	<init> (Lbdl;Lbdl$1;)V <init>
bdl$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a this$0
	<init> (Lbdl;)V <init>
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Ladn; getSpellPrepareSound
	l ()Lbdx$a; getSpell
	<init> (Lbdl;Lbdl$1;)V <init>
bdm net/minecraft/world/entity/monster/MagmaCube
	<init> (Laqb;Lbru;)V <init>
	m ()Larh$a; createAttributes
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkMagmaCubeSpawnRules
	a (Lbrw;)Z checkSpawnObstruction
	a (IZ)V setSize
	aQ ()F getBrightness
	eI ()Lhf; getParticleType
	J ()Lvk; getDefaultLootTable
	bp ()Z isOnFire
	eJ ()I getJumpDelay
	eK ()V decreaseSquish
	dJ ()V jumpFromGround
	c (Laej;)V jumpInLiquid
	b (FF)Z causeFallDamage
	eL ()Z isDealsDamage
	eM ()F getAttackDamage
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eN ()Ladn; getSquishSound
	eO ()Ladn; getJumpSound
bdn net/minecraft/world/entity/monster/Monster
	<init> (Laqb;Lbru;)V <init>
	ct ()Ladp; getSoundSource
	k ()V aiStep
	eQ ()V updateNoActionTime
	L ()Z shouldDespawnInPeaceful
	au ()Ladn; getSwimSound
	av ()Ladn; getSwimSplashSound
	a (Laph;F)Z hurt
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	o (I)Ladn; getFallDamageSound
	a (Lfx;Lbrw;)F getWalkTargetValue
	a (Lbsh;Lfx;Ljava/util/Random;)Z isDarkEnoughToSpawn
	b (Laqb;Lbsh;Laqm;Lfx;Ljava/util/Random;)Z checkMonsterSpawnRules
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkAnyLightMonsterSpawnRules
	eR ()Larh$a; createMonsterAttributes
	cU ()Z shouldDropExperience
	cV ()Z shouldDropLoot
	f (Lbft;)Z isPreventingPlayerRest
	f (Lbly;)Lbly; getProjectile
bdo net/minecraft/world/entity/monster/PatrollingMonster
	b patrolTarget
	c patrolLeader
	d patrolling
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	ba ()D getMyRidingOffset
	eN ()Z canBeLeader
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkPatrollingMonsterSpawnRules
	h (D)Z removeWhenFarAway
	g (Lfx;)V setPatrolTarget
	eO ()Lfx; getPatrolTarget
	eP ()Z hasPatrolTarget
	t (Z)V setPatrolLeader
	eS ()Z isPatrolLeader
	eT ()Z canJoinPatrol
	eU ()V findPatrolTarget
	eV ()Z isPatrolling
	u (Z)V setPatrolling
bdo$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a mob
	b speedModifier
	c leaderSpeedModifier
	d cooldownUntil
	<init> (Lbdo;DD)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Ljava/util/List; findPatrolCompanions
	h ()Z moveRandomly
	a (Lbdo;)Z lambda$findPatrolCompanions$0
bdp net/minecraft/world/entity/monster/Phantom
	b ID_SIZE
	c moveTargetPoint
	d anchorPoint
	bo attackPhase
	<init> (Laqb;Lbru;)V <init>
	r ()Laur; createBodyControl
	o ()V registerGoals
	e ()V defineSynchedData
	a (I)V setPhantomSize
	eJ ()V updatePhantomSizeInfo
	m ()I getPhantomSize
	b (Laqu;Lapy;)F getStandingEyeHeight
	a (Lus;)V onSyncedDataUpdated
	L ()Z shouldDespawnInPeaceful
	j ()V tick
	k ()V aiStep
	N ()V customServerAiStep
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	a (D)Z shouldRenderAtSqrDistance
	ct ()Ladp; getSoundSource
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	dB ()Laqn; getMobType
	dF ()F getSoundVolume
	a (Laqb;)Z canAttackType
	eI ()Ldck; getMovementTarget
	a (Laqu;)Lapy; getDimensions
	a (Lbdp;)Ldck; access$400
	b (Lbdp;)Lbdp$a; access$500
	c (Lbdp;)Ljava/util/Random; access$600
	d (Lbdp;)Ljava/util/Random; access$700
	e (Lbdp;)Ljava/util/Random; access$800
	f (Lbdp;)Ljava/util/Random; access$900
	g (Lbdp;)Ljava/util/Random; access$1000
	h (Lbdp;)Ljava/util/Random; access$1100
	i (Lbdp;)Ljava/util/Random; access$1200
	j (Lbdp;)Ljava/util/Random; access$1300
	k (Lbdp;)Lfx; access$1400
	a (Lbdp;Lfx;)Lfx; access$1402
	a (Lbdp;Ldck;)Ldck; access$402
	a (Lbdp;Lbdp$a;)Lbdp$a; access$502
	l (Lbdp;)Ljava/util/Random; access$1500
	m (Lbdp;)Ljava/util/Random; access$1600
	n (Lbdp;)Ljava/util/Random; access$1700
	o (Lbdp;)Ljava/util/Random; access$1800
	<clinit> ()V <clinit>
bdp$1 net/minecraft/world/entity/monster/Phantom$1
bdp$a net/minecraft/world/entity/monster/Phantom$AttackPhase
	a CIRCLE
	b SWOOP
	c $VALUES
	values ()[Lbdp$a; values
	valueOf (Ljava/lang/String;)Lbdp$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bdp$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	b attackTargeting
	c nextScanTick
	a this$0
	<init> (Lbdp;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	<init> (Lbdp;Lbdp$1;)V <init>
bdp$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	b nextSweepTick
	a this$0
	<init> (Lbdp;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V setAnchorAboveTarget
	<init> (Lbdp;Lbdp$1;)V <init>
bdp$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a this$0
	<init> (Lbdp;Laqk;)V <init>
	a ()V clientTick
bdp$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	c angle
	d distance
	e height
	f clockwise
	a this$0
	<init> (Lbdp;)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
	h ()V selectNext
	<init> (Lbdp;Lbdp$1;)V <init>
bdp$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	h this$0
	<init> (Lbdp;Laqk;)V <init>
	a ()V tick
bdp$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	j speed
	i this$0
	<init> (Lbdp;Laqk;)V <init>
	a ()V tick
bdp$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	b this$0
	<init> (Lbdp;)V <init>
	g ()Z touchingTarget
bdp$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	a this$0
	<init> (Lbdp;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	<init> (Lbdp;Lbdp$1;)V <init>
bdq net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	bo inventory
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	eK ()Larh$a; createAttributes
	e ()V defineSynchedData
	a (Lbml;)Z canFireProjectileWeapon
	eM ()Z isChargingCrossbow
	b (Z)V setChargingCrossbow
	U_ ()V onCrossbowAttackPerformed
	b (Lmd;)V addAdditionalSaveData
	m ()Lbcv$a; getArmPose
	a (Lmd;)V readAdditionalSaveData
	a (Lfx;Lbrw;)F getWalkTargetValue
	eq ()I getMaxSpawnClusterSize
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Laop;)V populateDefaultEquipmentSlots
	w (F)V enchantSpawnedWeapon
	r (Lapx;)Z isAlliedTo
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	a (Laqj;F)V performRangedAttack
	a (Laqj;Lbly;Lbgj;F)V shootCrossbowProjectile
	eW ()Laox; getInventory
	b (Lbcs;)V pickUpItem
	b (Lblu;)Z wantsItem
	a_ (ILbly;)Z setSlot
	a (IZ)V applyRaidBuffs
	eL ()Ladn; getCelebrateSound
	<clinit> ()V <clinit>
bdr net/minecraft/world/entity/monster/RangedAttackMob
	a (Laqj;F)V performRangedAttack
bds net/minecraft/world/entity/monster/Ravager
	b NO_RAVAGER_AND_ALIVE
	bo attackTick
	bp stunnedTick
	bq roarTick
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	H ()V updateControlFlags
	m ()Larh$a; createAttributes
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	eL ()Ladn; getCelebrateSound
	b (Lbru;)Layg; createNavigation
	eo ()I getMaxHeadYRot
	bb ()D getPassengersRidingOffset
	er ()Z canBeControlledByRider
	cl ()Lapx; getControllingPassenger
	k ()V aiStep
	eX ()V stunEffect
	dH ()Z isImmobile
	D (Lapx;)Z canSee
	e (Laqj;)V blockedByShield
	eY ()V roar
	a (Lapx;)V strongKnockback
	a (B)V handleEntityEvent
	eK ()I getAttackTick
	eM ()I getStunnedTick
	eW ()I getRoarTick
	B (Lapx;)Z doHurtTarget
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	a (Lbrw;)Z checkSpawnObstruction
	a (IZ)V applyRaidBuffs
	eN ()Z canBeLeader
	b (Lapx;)Z lambda$static$0
	<clinit> ()V <clinit>
bds$1 net/minecraft/world/entity/monster/Ravager$1
bds$a net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	b this$0
	<init> (Lbds;)V <init>
	a (Laqj;)D getAttackReachSqr
bds$b net/minecraft/world/entity/monster/Ravager$RavagerNavigation
	<init> (Laqk;Lbru;)V <init>
	a (I)Lcxc; createPathFinder
bds$c net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator
	<init> ()V <init>
	a (Lbqz;ZZLfx;Lcww;)Lcww; evaluateBlockPathType
	<init> (Lbds$1;)V <init>
bdt net/minecraft/world/entity/monster/Shulker
	bp COVERED_ARMOR_MODIFIER_UUID
	bq COVERED_ARMOR_MODIFIER
	b DATA_ATTACH_FACE_ID
	c DATA_ATTACH_POS_ID
	d DATA_PEEK_ID
	bo DATA_COLOR_ID
	br currentPeekAmountO
	bs currentPeekAmount
	bt oldAttachPosition
	bu clientSideTeleportInterpolation
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	aB ()Z isMovementNoisy
	ct ()Ladp; getSoundSource
	I ()Ladn; getAmbientSound
	F ()V playAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	e ()V defineSynchedData
	m ()Larh$a; createAttributes
	r ()Laur; createBodyControl
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	j ()V tick
	a (Laqo;Ldck;)V move
	d (DDD)V setPos
	g (Lfx;)Lgc; findAttachableFace
	a (Lfx;Lgc;)Z canAttachOnBlockFace
	eK ()Z teleportSomewhere
	k ()V aiStep
	a (Lus;)V onSyncedDataUpdated
	a (DDDFFIZ)V lerpTo
	a (Laph;F)Z hurt
	eT ()Z isClosed
	aY ()Z canBeCollidedWith
	eL ()Lgc; getAttachFace
	eM ()Lfx; getAttachPosition
	h (Lfx;)V setAttachPosition
	eN ()I getRawPeekAmount
	a (I)V setRawPeekAmount
	y (F)F getClientPeekAmount
	eO ()I getClientSideTeleportInterpolation
	eP ()Lfx; getOldAttachPosition
	b (Laqu;Lapy;)F getStandingEyeHeight
	O ()I getMaxHeadXRot
	eo ()I getMaxHeadYRot
	i (Lapx;)V push
	bf ()F getPickRadius
	eQ ()Z hasValidInterpolationPositions
	eR ()V setDefaultColor
	a (Lbku;)V setColor
	eS ()Lbku; getColor
	a (Lbdt;)Ljava/util/Random; access$100
	b (Lbdt;)Ljava/util/Random; access$200
	c (Lbdt;)Ljava/util/Random; access$300
	d (Lbdt;)Ljava/util/Random; access$400
	e (Lbdt;)Ljava/util/Random; access$500
	<clinit> ()V <clinit>
bdt$1 net/minecraft/world/entity/monster/Shulker$1
bdt$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	b attackTime
	a this$0
	<init> (Lbdt;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bdt$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	a this$0
	<init> (Lbdt;Laqk;)V <init>
	a ()V clientTick
bdt$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	<init> (Lbdt;)V <init>
	a ()Z canUse
	a (D)Ldcf; getTargetSearchArea
	b (Laqj;)Z lambda$new$0
bdt$d net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	i this$0
	<init> (Lbdt;Lbdt;)V <init>
	a ()Z canUse
	a (D)Ldcf; getTargetSearchArea
bdt$e net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	b peekTime
	a this$0
	<init> (Lbdt;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	<init> (Lbdt;Lbdt$1;)V <init>
bdu net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	ba ()D getMyRidingOffset
	b (Laqu;Lapy;)F getStandingEyeHeight
	m ()Larh$a; createAttributes
	aB ()Z isMovementNoisy
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	a (Laph;F)Z hurt
	j ()V tick
	n (F)V setYBodyRot
	a (Lfx;Lbrw;)F getWalkTargetValue
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkSliverfishSpawnRules
	dB ()Laqn; getMobType
bdu$a net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	h selectedDirection
	i doMerge
	<init> (Lbdu;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bdu$b net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	a silverfish
	b lookForFriends
	<init> (Lbdu;)V <init>
	g ()V notifyHurt
	a ()Z canUse
	e ()V tick
bdv net/minecraft/world/entity/monster/Skeleton
	<init> (Laqb;Lbru;)V <init>
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eK ()Ladn; getStepSound
	a (Laph;IZ)V dropCustomDeathLoot
bdw net/minecraft/world/entity/monster/Slime
	bo ID_SIZE
	b targetSquish
	c squish
	d oSquish
	bp wasOnGround
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	e ()V defineSynchedData
	a (IZ)V setSize
	eP ()I getSize
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	eQ ()Z isTiny
	eI ()Lhf; getParticleType
	L ()Z shouldDespawnInPeaceful
	j ()V tick
	eK ()V decreaseSquish
	eJ ()I getJumpDelay
	x_ ()V refreshDimensions
	a (Lus;)V onSyncedDataUpdated
	W ()Laqb; getType
	ac ()V remove
	i (Lapx;)V push
	a_ (Lbft;)V playerTouch
	i (Laqj;)V dealDamage
	b (Laqu;Lapy;)F getStandingEyeHeight
	eL ()Z isDealsDamage
	eM ()F getAttackDamage
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eN ()Ladn; getSquishSound
	J ()Lvk; getDefaultLootTable
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkSlimeSpawnRules
	dF ()F getSoundVolume
	O ()I getMaxHeadXRot
	eR ()Z doPlayJumpSound
	dJ ()V jumpFromGround
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	m ()F getSoundPitch
	eO ()Ladn; getJumpSound
	a (Laqu;)Lapy; getDimensions
	j (Laqj;)Z lambda$registerGoals$0
	a (Lbdw;)F access$000
	b (Lbdw;)Z access$100
	<clinit> ()V <clinit>
bdw$a net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	<init> (Lbdw;)V <init>
	a ()Z canUse
	c ()V start
	b ()Z canContinueToUse
	e ()V tick
bdw$b net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	<init> (Lbdw;)V <init>
	a ()Z canUse
	e ()V tick
bdw$c net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	<init> (Lbdw;)V <init>
	a ()Z canUse
	e ()V tick
bdw$d net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	i yRot
	j jumpDelay
	k slime
	l isAggressive
	<init> (Lbdw;)V <init>
	a (FZ)V setDirection
	a (D)V setWantedMovement
	a ()V tick
bdw$e net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	<init> (Lbdw;)V <init>
	a ()Z canUse
	e ()V tick
bdx net/minecraft/world/entity/monster/SpellcasterIllager
	bo DATA_SPELL_CASTING_ID
	b spellCastingTickCount
	bp currentSpell
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	m ()Lbcv$a; getArmPose
	eW ()Z isCastingSpell
	a (Lbdx$a;)V setIsCastingSpell
	eX ()Lbdx$a; getCurrentSpell
	N ()V customServerAiStep
	j ()V tick
	eY ()I getSpellCastingTime
	eM ()Ladn; getCastingSoundEvent
	a (Lbdx;)Layg; access$200
	<clinit> ()V <clinit>
bdx$a net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	a NONE
	b SUMMON_VEX
	c FANGS
	d WOLOLO
	e DISAPPEAR
	f BLINDNESS
	g id
	h spellColor
	i $VALUES
	values ()[Lbdx$a; values
	valueOf (Ljava/lang/String;)Lbdx$a; valueOf
	<init> (Ljava/lang/String;IIDDD)V <init>
	a (I)Lbdx$a; byId
	a (Lbdx$a;)I access$000
	b (Lbdx$a;)[D access$100
	<clinit> ()V <clinit>
bdx$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	b this$0
	<init> (Lbdx;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bdx$c net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	d this$0
	<init> (Lbdx;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	j ()V performSpellCasting
	m ()I getCastWarmupTime
	g ()I getCastingTime
	h ()I getCastingInterval
	k ()Ladn; getSpellPrepareSound
	l ()Lbdx$a; getSpell
bdy net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	bb ()D getPassengersRidingOffset
	b (Lbru;)Layg; createNavigation
	e ()V defineSynchedData
	j ()V tick
	eK ()Larh$a; createAttributes
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	c_ ()Z onClimbable
	a (Lcee;Ldck;)V makeStuckInBlock
	dB ()Laqn; getMobType
	d (Lapr;)Z canBeAffected
	eL ()Z isClimbing
	t (Z)V setClimbing
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Laqu;Lapy;)F getStandingEyeHeight
	<clinit> ()V <clinit>
bdy$a net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	<init> (Lbdy;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	a (Laqj;)D getAttackReachSqr
bdy$b net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	<init> ()V <init>
	a (Ljava/util/Random;)V setRandomEffect
bdy$c net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	<init> (Lbdy;Ljava/lang/Class;)V <init>
	a ()Z canUse
bdz net/minecraft/world/entity/monster/Stray
	<init> (Laqb;Lbru;)V <init>
	a (Laqb;Lbsh;Laqm;Lfx;Ljava/util/Random;)Z checkStraySpawnRules
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eK ()Ladn; getStepSound
	b (Lbly;F)Lbfx; getArrow
bea net/minecraft/world/entity/monster/Strider
	bo FOOD_ITEMS
	bp TEMPT_ITEMS
	bq DATA_BOOST_TIME
	br DATA_SUFFOCATING
	bs DATA_SADDLE_ID
	bt steering
	bu temptGoal
	bv panicGoal
	<init> (Laqb;Lbru;)V <init>
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkStriderSpawnRules
	a (Lus;)V onSyncedDataUpdated
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	M_ ()Z isSaddled
	L_ ()Z isSaddleable
	a (Ladp;)V equipSaddle
	o ()V registerGoals
	t (Z)V setSuffocating
	eK ()Z isSuffocating
	a (Lcut;)Z canStandOnFluid
	bb ()D getPassengersRidingOffset
	er ()Z canBeControlledByRider
	a (Lbrw;)Z checkSpawnObstruction
	cl ()Lapx; getControllingPassenger
	b (Laqj;)Ldck; getDismountLocationForPassenger
	g (Ldck;)V travel
	eL ()F getMoveSpeed
	N_ ()F getSteeringSpeed
	a_ (Ldck;)V travelWithInput
	as ()F nextStep
	b (Lfx;Lcee;)V playStepSound
	O_ ()Z boost
	a (DZLcee;Lfx;)V checkFallDamage
	j ()V tick
	eN ()Z isPanicking
	eO ()Z isBeingTempted
	q ()Z shouldPassengersInheritMalus
	eU ()V floatStrider
	eM ()Larh$a; createAttributes
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	q (Lapx;)Z canAddPassenger
	dN ()Z isSensitiveToWater
	bp ()Z isOnFire
	b (Lbru;)Layg; createNavigation
	a (Lfx;Lbrw;)F getWalkTargetValue
	b (Laag;Lapv;)Lbea; getBreedOffspring
	k (Lbly;)Z isFood
	dm ()V dropEquipment
	b (Lbft;Laoq;)Laor; mobInteract
	ce ()Ldck; getLeashOffset
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Lbsh;Laop;Laqk;Laqz;)Laqz; spawnJockey
	a (Laag;Lapv;)Lapv; getBreedOffspring
	<clinit> ()V <clinit>
bea$1 net/minecraft/world/entity/monster/Strider$1
bea$a net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	g strider
	<init> (Lbea;D)V <init>
	j ()Lfx; getMoveToTarget
	b ()Z canContinueToUse
	a ()Z canUse
	k ()Z shouldRecalculatePath
	a (Lbrw;Lfx;)Z isValidTarget
	<init> (Lbea;DLbea$1;)V <init>
bea$b net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	<init> (Lbea;Lbru;)V <init>
	a (I)Lcxc; createPathFinder
	a (Lcww;)Z hasValidPathType
	a (Lfx;)Z isStableDestination
beb net/minecraft/world/entity/monster/Vex
	b DATA_FLAGS_ID
	c owner
	d boundOrigin
	bo hasLimitedLife
	bp limitedLifeTicks
	<init> (Laqb;Lbru;)V <init>
	a (Laqo;Ldck;)V move
	j ()V tick
	o ()V registerGoals
	m ()Larh$a; createAttributes
	e ()V defineSynchedData
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	eK ()Laqk; getOwner
	eL ()Lfx; getBoundOrigin
	g (Lfx;)V setBoundOrigin
	b (I)Z getVexFlag
	a (IZ)V setVexFlag
	eM ()Z isCharging
	t (Z)V setIsCharging
	a (Laqk;)V setOwner
	a (I)V setLimitedLife
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	aQ ()F getBrightness
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Laop;)V populateDefaultEquipmentSlots
	a (Lbeb;)Ljava/util/Random; access$000
	b (Lbeb;)Lauy; access$100
	c (Lbeb;)Lauy; access$200
	d (Lbeb;)Ljava/util/Random; access$300
	e (Lbeb;)Ljava/util/Random; access$400
	f (Lbeb;)Ljava/util/Random; access$500
	g (Lbeb;)Ljava/util/Random; access$600
	h (Lbeb;)Lauy; access$700
	i (Lbeb;)Laqk; access$800
	<clinit> ()V <clinit>
beb$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	a this$0
	<init> (Lbeb;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
beb$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	b copyOwnerTargeting
	a this$0
	<init> (Lbeb;Laqr;)V <init>
	a ()Z canUse
	c ()V start
beb$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	i this$0
	<init> (Lbeb;Lbeb;)V <init>
	a ()V tick
beb$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a this$0
	<init> (Lbeb;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
bec net/minecraft/world/entity/monster/Vindicator
	b DOOR_BREAKING_PREDICATE
	bo isJohnny
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	N ()V customServerAiStep
	eK ()Larh$a; createAttributes
	b (Lmd;)V addAdditionalSaveData
	m ()Lbcv$a; getArmPose
	a (Lmd;)V readAdditionalSaveData
	eL ()Ladn; getCelebrateSound
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Laop;)V populateDefaultEquipmentSlots
	r (Lapx;)Z isAlliedTo
	a (Lnr;)V setCustomName
	I ()Ladn; getAmbientSound
	dp ()Ladn; getDeathSound
	e (Laph;)Ladn; getHurtSound
	a (IZ)V applyRaidBuffs
	a (Laoo;)Z lambda$static$0
	eM ()Ljava/util/function/Predicate; access$000
	a (Lbec;)Ljava/util/Random; access$100
	b (Lbec;)Z access$200
	<clinit> ()V <clinit>
bec$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	<init> (Laqk;)V <init>
	b ()Z canContinueToUse
	a ()Z canUse
	c ()V start
bec$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	<init> (Lbec;)V <init>
	a ()Z canUse
	c ()V start
bec$c net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	b this$0
	<init> (Lbec;Lbec;)V <init>
	a (Laqj;)D getAttackReachSqr
bed net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	bo SPEED_MODIFIER_DRINKING
	bp DATA_USING_ITEM
	bq usingTime
	br healRaidersGoal
	bs attackPlayersGoal
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	e ()V defineSynchedData
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	v (Z)V setUsingItem
	m ()Z isDrinkingPotion
	eK ()Larh$a; createAttributes
	k ()V aiStep
	eL ()Ladn; getCelebrateSound
	a (B)V handleEntityEvent
	d (Laph;F)F getDamageAfterMagicAbsorb
	a (Laqj;F)V performRangedAttack
	b (Laqu;Lapy;)F getStandingEyeHeight
	a (IZ)V applyRaidBuffs
	eN ()Z canBeLeader
	i (Laqj;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bee net/minecraft/world/entity/monster/WitherSkeleton
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eK ()Ladn; getStepSound
	a (Laph;IZ)V dropCustomDeathLoot
	a (Laop;)V populateDefaultEquipmentSlots
	b (Laop;)V populateDefaultEquipmentEnchantments
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Laqu;Lapy;)F getStandingEyeHeight
	B (Lapx;)Z doHurtTarget
	b (Lbly;F)Lbfx; getArrow
	d (Lapr;)Z canBeAffected
bef net/minecraft/world/entity/monster/Zoglin
	d DATA_BABY_ID
	bo attackAnimationRemainingTicks
	b SENSOR_TYPES
	c MEMORY_TYPES
	<init> (Laqb;Lbru;)V <init>
	cJ ()Larc$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	a (Larc;)V initCoreActivity
	b (Larc;)V initIdleActivity
	c (Larc;)V initFightActivity
	eO ()Ljava/util/Optional; findNearestValidAttackTarget
	i (Laqj;)Z isTargetable
	e ()V defineSynchedData
	a (Lus;)V onSyncedDataUpdated
	m ()Larh$a; createAttributes
	eK ()Z isAdult
	B (Lapx;)Z doHurtTarget
	a (Lbft;)Z canBeLeashed
	e (Laqj;)V blockedByShield
	bb ()D getPassengersRidingOffset
	a (Laph;F)Z hurt
	j (Laqj;)V setAttackTarget
	cI ()Larc; getBrain
	eL ()V updateActivity
	N ()V customServerAiStep
	a (Z)V setBaby
	w_ ()Z isBaby
	k ()V aiStep
	a (B)V handleEntityEvent
	eM ()I getAttackAnimationRemainingTicks
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	eN ()V playAngrySound
	M ()V sendDebugPackets
	dB ()Laqn; getMobType
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	<clinit> ()V <clinit>
beg net/minecraft/world/entity/monster/Zombie
	b SPEED_MODIFIER_BABY_UUID
	c SPEED_MODIFIER_BABY
	d DATA_BABY_ID
	bo DATA_SPECIAL_TYPE_ID
	bp DATA_DROWNED_CONVERSION_ID
	bq DOOR_BREAKING_PREDICATE
	br breakDoorGoal
	bs canBreakDoors
	bt inWaterTime
	bu conversionTime
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;)V <init>
	o ()V registerGoals
	m ()V addBehaviourGoals
	eS ()Larh$a; createAttributes
	e ()V defineSynchedData
	eT ()Z isUnderWaterConverting
	eU ()Z canBreakDoors
	u (Z)V setCanBreakDoors
	eK ()Z supportsBreakDoorGoal
	w_ ()Z isBaby
	d (Lbft;)I getExperienceReward
	a (Z)V setBaby
	a (Lus;)V onSyncedDataUpdated
	eN ()Z convertsInWater
	j ()V tick
	k ()V aiStep
	a (I)V startUnderWaterConversion
	eP ()V doUnderWaterConversion
	b (Laqb;)V convertToZombieType
	T_ ()Z isSunSensitive
	a (Laph;F)Z hurt
	B (Lapx;)Z doHurtTarget
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eL ()Ladn; getStepSound
	b (Lfx;Lcee;)V playStepSound
	dB ()Laqn; getMobType
	a (Laop;)V populateDefaultEquipmentSlots
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Laag;Laqj;)V killed
	b (Laqu;Lapy;)F getStandingEyeHeight
	h (Lbly;)Z canHoldItem
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Ljava/util/Random;)Z getSpawnAsBabyOdds
	y (F)V handleAttributes
	eV ()V randomizeReinforcementsChance
	ba ()D getMyRidingOffset
	a (Laph;IZ)V dropCustomDeathLoot
	eM ()Lbly; getSkull
	a (Laoo;)Z lambda$static$0
	a (Lbeg;)Ljava/util/Random; access$000
	<clinit> ()V <clinit>
beg$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	g this$0
	<init> (Lbeg;Laqr;DI)V <init>
	a (Lbrv;Lfx;)V playDestroyProgressSound
	a (Lbru;Lfx;)V playBreakSound
	h ()D acceptedDistance
beg$b net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
	b canSpawnJockey
	<init> (ZZ)V <init>
beh net/minecraft/world/entity/monster/ZombieVillager
	b DATA_CONVERTING_ID
	c DATA_VILLAGER_DATA
	d villagerConversionTime
	bo conversionStarter
	bp gossips
	bq tradeOffers
	br villagerXp
	<init> (Laqb;Lbru;)V <init>
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	j ()V tick
	b (Lbft;Laoq;)Laor; mobInteract
	eN ()Z convertsInWater
	h (D)Z removeWhenFarAway
	eW ()Z isConverting
	a (Ljava/util/UUID;I)V startConverting
	a (B)V handleEntityEvent
	c (Laag;)V finishConversion
	eZ ()I getConversionProgress
	dG ()F getVoicePitch
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	eL ()Ladn; getStepSound
	eM ()Lbly; getSkull
	g (Lmd;)V setTradeOffers
	a (Lmt;)V setGossips
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Lbfh;)V setVillagerData
	eX ()Lbfh; getVillagerData
	eY ()I getVillagerXp
	a (I)V setVillagerXp
	a (Lmd;Lmt;)V lambda$addAdditionalSaveData$0
	<clinit> ()V <clinit>
bei net/minecraft/world/entity/monster/ZombifiedPiglin
	b SPEED_MODIFIER_ATTACKING_UUID
	c SPEED_MODIFIER_ATTACKING
	d FIRST_ANGER_SOUND_DELAY
	bo playFirstAngerSoundIn
	bp PERSISTENT_ANGER_TIME
	bq remainingPersistentAngerTime
	br persistentAngerTarget
	bs ALERT_INTERVAL
	bt ticksUntilNextAlert
	<init> (Laqb;Lbru;)V <init>
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	ba ()D getMyRidingOffset
	m ()V addBehaviourGoals
	eW ()Larh$a; createAttributes
	eN ()Z convertsInWater
	N ()V customServerAiStep
	eX ()V maybePlayFirstAngerSound
	eY ()V maybeAlertOthers
	eZ ()V alertOthers
	fa ()V playAngerSound
	h (Laqj;)V setTarget
	G_ ()V startPersistentAngerTimer
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkZombifiedPiglinSpawnRules
	a (Lbrw;)Z checkSpawnObstruction
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a_ (I)V setRemainingPersistentAngerTime
	E_ ()I getRemainingPersistentAngerTime
	a (Laph;F)Z hurt
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	a (Laop;)V populateDefaultEquipmentSlots
	eM ()Lbly; getSkull
	eV ()V randomizeReinforcementsChance
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	f (Lbft;)Z isPreventingPlayerRest
	a (Lbei;)V lambda$alertOthers$3
	b (Lbei;)Z lambda$alertOthers$2
	c (Lbei;)Z lambda$alertOthers$1
	d (Lbei;)Z lambda$alertOthers$0
	<clinit> ()V <clinit>
bej net/minecraft/world/entity/monster/hoglin/Hoglin
	bq DATA_IMMUNE_TO_ZOMBIFICATION
	br attackAnimationRemainingTicks
	bs timeInOverworld
	bt cannotBeHunted
	bo SENSOR_TYPES
	bp MEMORY_TYPES
	<init> (Laqb;Lbru;)V <init>
	a (Lbft;)Z canBeLeashed
	eK ()Larh$a; createAttributes
	B (Lapx;)Z doHurtTarget
	e (Laqj;)V blockedByShield
	a (Laph;F)Z hurt
	cJ ()Larc$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	cI ()Larc; getBrain
	N ()V customServerAiStep
	k ()V aiStep
	m ()V ageBoundaryReached
	c (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkHoglinSpawnRules
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	h (D)Z removeWhenFarAway
	a (Lfx;Lbrw;)F getWalkTargetValue
	bb ()D getPassengersRidingOffset
	b (Lbft;Laoq;)Laor; mobInteract
	a (B)V handleEntityEvent
	eM ()I getAttackAnimationRemainingTicks
	cU ()Z shouldDropExperience
	d (Lbft;)I getExperienceReward
	c (Laag;)V finishConversion
	k (Lbly;)Z isFood
	eL ()Z isAdult
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	t (Z)V setImmuneToZombification
	eV ()Z isImmuneToZombification
	eN ()Z isConverting
	u (Z)V setCannotBeHunted
	eO ()Z canBeHunted
	a (Laag;Lapv;)Lapv; getBreedOffspring
	eU ()F getMovementSpeed
	eP ()Z canFallInLove
	ct ()Ladp; getSoundSource
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	au ()Ladn; getSwimSound
	av ()Ladn; getSwimSplashSound
	b (Lfx;Lcee;)V playStepSound
	a (Ladn;)V playSound
	M ()V sendDebugPackets
	<clinit> ()V <clinit>
bek net/minecraft/world/entity/monster/hoglin/HoglinAi
	a RETREAT_DURATION
	b ADULT_FOLLOW_RANGE
	<init> ()V <init>
	a (Larc;)Larc; makeBrain
	b (Larc;)V initCoreActivity
	c (Larc;)V initIdleActivity
	d (Larc;)V initFightActivity
	e (Larc;)V initRetreatActivity
	a ()Latf; createIdleMovementBehaviors
	a (Lbej;)V updateActivity
	a (Lbej;Laqj;)V onHitTarget
	c (Lbej;Laqj;)V broadcastRetreat
	d (Lbej;Laqj;)V retreatFromNearestTarget
	e (Lbej;Laqj;)V setAvoidTarget
	d (Lbej;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lbej;Lfx;)Z isPosNearNearestRepellent
	e (Lbej;)Z wantsToStopFleeing
	f (Lbej;)Z piglinsOutnumberHoglins
	b (Lbej;Laqj;)V wasHurtBy
	f (Lbej;Laqj;)V maybeRetaliate
	g (Lbej;Laqj;)V setAttackTarget
	h (Lbej;Laqj;)V broadcastAttackTarget
	i (Lbej;Laqj;)V setAttackTargetIfCloserThanCurrent
	b (Lbej;)Ljava/util/Optional; getSoundForCurrentActivity
	a (Lbej;Lbhc;)Ladn; getSoundForActivity
	g (Lbej;)Ljava/util/List; getVisibleAdultHoglins
	h (Lbej;)Z isNearRepellent
	i (Lbej;)Z isBreeding
	c (Lbej;)Z isPacified
	b (Lbej;Lbhc;)Ladn; lambda$getSoundForCurrentActivity$2
	a (Laqj;Lbej;)V lambda$broadcastAttackTarget$1
	b (Laqj;Lbej;)V lambda$broadcastRetreat$0
	<clinit> ()V <clinit>
bel net/minecraft/world/entity/monster/hoglin/HoglinBase
	eM ()I getAttackAnimationRemainingTicks
	a (Laqj;Laqj;)Z hurtAndThrowTarget
	b (Laqj;Laqj;)V throwTarget
bem net/minecraft/world/entity/monster/hoglin/package-info
ben net/minecraft/world/entity/monster/package-info
beo net/minecraft/world/entity/monster/piglin/AbstractPiglin
	b DATA_IMMUNE_TO_ZOMBIFICATION
	c timeInOverworld
	<init> (Laqb;Lbru;)V <init>
	eS ()V applyOpenDoorsAbility
	m ()Z canHunt
	t (Z)V setImmuneToZombification
	eK ()Z isImmuneToZombification
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	a (Lmd;)V readAdditionalSaveData
	N ()V customServerAiStep
	eL ()Z isConverting
	c (Laag;)V finishConversion
	eM ()Z isAdult
	eN ()Lber; getArmPose
	A ()Laqj; getTarget
	eO ()Z isHoldingMeleeWeapon
	F ()V playAmbientSound
	M ()V sendDebugPackets
	eP ()V playConvertedSound
	<clinit> ()V <clinit>
bep net/minecraft/world/entity/monster/piglin/Piglin
	bp DATA_BABY_ID
	bq DATA_IS_CHARGING_CROSSBOW
	br DATA_IS_DANCING
	bs SPEED_MODIFIER_BABY_UUID
	bt SPEED_MODIFIER_BABY
	bu inventory
	bv cannotHunt
	d SENSOR_TYPES
	bo MEMORY_TYPES
	<init> (Laqb;Lbru;)V <init>
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	eS ()Laok; getInventory
	a (Laph;IZ)V dropCustomDeathLoot
	k (Lbly;)Lbly; addToInventory
	l (Lbly;)Z canAddToInventory
	e ()V defineSynchedData
	a (Lus;)V onSyncedDataUpdated
	eT ()Larh$a; createAttributes
	b (Laqb;Lbrv;Laqm;Lfx;Ljava/util/Random;)Z checkPiglinSpawnRules
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	L ()Z shouldDespawnInPeaceful
	h (D)Z removeWhenFarAway
	a (Laop;)V populateDefaultEquipmentSlots
	d (Laqc;Lbly;)V maybeWearArmor
	cJ ()Larc$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	cI ()Larc; getBrain
	b (Lbft;Laoq;)Laor; mobInteract
	b (Laqu;Lapy;)F getStandingEyeHeight
	bb ()D getPassengersRidingOffset
	a (Z)V setBaby
	w_ ()Z isBaby
	v (Z)V setCannotHunt
	m ()Z canHunt
	N ()V customServerAiStep
	d (Lbft;)I getExperienceReward
	c (Laag;)V finishConversion
	eV ()Lbly; createSpawnWeapon
	eW ()Z isChargingCrossbow
	b (Z)V setChargingCrossbow
	U_ ()V onCrossbowAttackPerformed
	eN ()Lber; getArmPose
	eU ()Z isDancing
	u (Z)V setDancing
	a (Laph;F)Z hurt
	a (Laqj;F)V performRangedAttack
	a (Laqj;Lbly;Lbgj;F)V shootCrossbowProjectile
	a (Lbml;)Z canFireProjectileWeapon
	m (Lbly;)V holdInMainHand
	n (Lbly;)V holdInOffHand
	i (Lbly;)Z wantsToPickUp
	o (Lbly;)Z canReplaceCurrentItem
	a (Lbly;Lbly;)Z canReplaceCurrentItem
	b (Lbcs;)V pickUpItem
	a (Lapx;Z)Z startRiding
	b (Lapx;I)Lapx; getTopPassenger
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	a (Ladn;)V playSound
	eP ()V playConvertedSound
	<clinit> ()V <clinit>
beq net/minecraft/world/entity/monster/piglin/PiglinAi
	a BARTERING_ITEM
	b TIME_BETWEEN_HUNTS
	c RIDE_START_INTERVAL
	d RIDE_DURATION
	e RETREAT_DURATION
	f AVOID_ZOMBIFIED_DURATION
	g BABY_AVOID_NEMESIS_DURATION
	h FOOD_ITEMS
	<init> ()V <init>
	a (Lbep;Larc;)Larc; makeBrain
	a (Lbep;)V initMemories
	a (Larc;)V initCoreActivity
	b (Larc;)V initIdleActivity
	b (Lbep;Larc;)V initFightActivity
	c (Larc;)V initCelebrateActivity
	d (Larc;)V initAdmireItemActivity
	e (Larc;)V initRetreatActivity
	f (Larc;)V initRideHoglinActivity
	a ()Latf; createIdleLookBehaviors
	b ()Latf; createIdleMovementBehaviors
	c ()Latm; avoidRepellent
	d ()Larw; babyAvoidNemesis
	e ()Larw; avoidZombified
	b (Lbep;)V updateActivity
	h (Lbep;)Z isBabyRidingBaby
	a (Lbep;Lbcs;)V pickUpItem
	c (Lbep;Lbly;)V holdInOffhand
	a (Lbcs;)Lbly; removeOneItemFromItemEntity
	a (Lbep;Z)V stopHoldingOffHandItem
	c (Lbep;)V cancelAdmiring
	d (Lbep;Lbly;)V putInInventory
	a (Lbep;Ljava/util/List;)V throwItems
	b (Lbep;Ljava/util/List;)V throwItemsTowardRandomPos
	a (Lbep;Lbft;Ljava/util/List;)V throwItemsTowardPlayer
	a (Lbep;Ljava/util/List;Ldck;)V throwItemsTowardPos
	i (Lbep;)Ljava/util/List; getBarterResponseItems
	a (Laqj;Laqj;)Z wantsToDance
	a (Lbep;Lbly;)Z wantsToPickup
	a (Lblu;)Z isLovedItem
	a (Lbep;Lapx;)Z wantsToStopRiding
	b (Lbep;Laqj;)Z isNearestValidAttackTarget
	j (Lbep;)Z isNearZombified
	k (Lbep;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lbft;Z)V angerNearbyPiglins
	a (Lbep;Lbft;Laoq;)Laor; mobInteract
	b (Lbep;Lbly;)Z canAdmire
	a (Lbep;Laqj;)V wasHurtBy
	a (Lbeo;Laqj;)V maybeRetaliate
	d (Lbep;)Ljava/util/Optional; getSoundForCurrentActivity
	a (Lbep;Lbhc;)Ladn; getSoundForActivity
	l (Lbep;)Z isNearAvoidTarget
	e (Lbep;)Z hasAnyoneNearbyHuntedRecently
	m (Lbep;)Ljava/util/List; getVisibleAdultPiglins
	e (Lbeo;)Ljava/util/List; getAdultPiglins
	a (Laqj;)Z isWearingGold
	n (Lbep;)V stopWalking
	f ()Latg; babySometimesRideBabyHoglin
	b (Lbeo;Laqj;)V broadcastAngerTarget
	a (Lbeo;)V broadcastUniversalAnger
	f (Lbep;)V broadcastDontKillAnyMoreHoglinsForAWhile
	c (Lbeo;Laqj;)V setAngerTarget
	d (Lbeo;Laqj;)V setAngerTargetToNearestTargetablePlayerIfFound
	e (Lbeo;Laqj;)V setAngerTargetIfCloserThanCurrent
	f (Lbeo;)Ljava/util/Optional; getAngerTarget
	g (Lbep;)Ljava/util/Optional; getAvoidTarget
	b (Lbeo;)Ljava/util/Optional; getNearestVisibleTargetablePlayer
	c (Lbep;Laqj;)V broadcastRetreat
	d (Lbep;Laqj;)V retreatFromNearestTarget
	o (Lbep;)Z wantsToStopFleeing
	p (Lbep;)Z piglinsEqualOrOutnumberHoglins
	q (Lbep;)Z hoglinsOutnumberPiglins
	e (Lbep;Laqj;)V setAvoidTargetAndDontHuntForAWhile
	c (Lbeo;)V dontKillAnyMoreHoglinsForAWhile
	r (Lbep;)Z seesPlayerHoldingWantedItem
	s (Lbep;)V eat
	t (Lbep;)Ldck; getRandomNearbyPos
	u (Lbep;)Z hasEatenRecently
	d (Lbeo;)Z isIdle
	c (Laqj;)Z hasCrossbow
	d (Laqj;)V admireGoldItem
	v (Lbep;)Z isAdmiringItem
	b (Lblu;)Z isBarterCurrency
	c (Lblu;)Z isFood
	e (Laqj;)Z isAttackAllowed
	w (Lbep;)Z isNearRepellent
	f (Laqj;)Z seesPlayerHoldingLovedItem
	g (Laqj;)Z doesntSeeAnyPlayerHoldingLovedItem
	b (Laqj;)Z isPlayerHoldingLovedItem
	x (Lbep;)Z isAdmiringDisabled
	h (Laqj;)Z wasHurtRecently
	y (Lbep;)Z isHoldingItemInOffHand
	z (Lbep;)Z isNotHoldingLovedItemInOffHand
	a (Laqb;)Z isZombified
	a (Laqj;Lbeo;)V lambda$broadcastRetreat$12
	g (Lbeo;)Z lambda$broadcastRetreat$11
	h (Lbeo;)V lambda$broadcastUniversalAnger$10
	a (Lbeo;Lbft;)V lambda$null$9
	b (Laqj;Lbeo;)V lambda$broadcastAngerTarget$8
	i (Lbeo;)Z lambda$hasAnyoneNearbyHuntedRecently$7
	b (Lbep;Lbhc;)Ladn; lambda$getSoundForCurrentActivity$6
	a (Laqj;Larc;Laqj;)V lambda$wasHurtBy$5
	a (Lbft;Lbep;)V lambda$angerNearbyPiglins$4
	a (ZLbft;Lbep;)Z lambda$angerNearbyPiglins$3
	b (Laqj;Laqj;)Z lambda$isNearestValidAttackTarget$2
	A (Lbep;)Z lambda$initCelebrateActivity$1
	f (Lbep;Laqj;)Z lambda$initFightActivity$0
	<clinit> ()V <clinit>
ber net/minecraft/world/entity/monster/piglin/PiglinArmPose
	a ATTACKING_WITH_MELEE_WEAPON
	b CROSSBOW_HOLD
	c CROSSBOW_CHARGE
	d ADMIRING_ITEM
	e DANCING
	f DEFAULT
	g $VALUES
	values ()[Lber; values
	valueOf (Ljava/lang/String;)Lber; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bes net/minecraft/world/entity/monster/piglin/PiglinBrute
	d SENSOR_TYPES
	bo MEMORY_TYPES
	<init> (Laqb;Lbru;)V <init>
	eS ()Larh$a; createAttributes
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	a (Laop;)V populateDefaultEquipmentSlots
	cJ ()Larc$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	cI ()Larc; getBrain
	m ()Z canHunt
	i (Lbly;)Z wantsToPickUp
	N ()V customServerAiStep
	eN ()Lber; getArmPose
	a (Laph;F)Z hurt
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	b (Lfx;Lcee;)V playStepSound
	eT ()V playAngrySound
	eP ()V playConvertedSound
	<clinit> ()V <clinit>
bet net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	<init> ()V <init>
	a (Lbes;Larc;)Larc; makeBrain
	a (Lbes;)V initMemories
	b (Lbes;Larc;)V initCoreActivity
	c (Lbes;Larc;)V initIdleActivity
	d (Lbes;Larc;)V initFightActivity
	a ()Latf; createIdleLookBehaviors
	b ()Latf; createIdleMovementBehaviors
	b (Lbes;)V updateActivity
	a (Lbeo;Laqj;)Z isNearestValidAttackTarget
	a (Lbeo;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Laqj;)Z isAttackAllowed
	a (Lbeo;Laya;)Ljava/util/Optional; getTargetIfWithinRange
	a (Lbes;Laqj;)V wasHurtBy
	b (Lbes;Laqj;)V setAngerTarget
	c (Lbes;)V maybePlayActivitySound
	d (Lbes;)V playActivitySound
	a (Lbes;Lbhc;)V lambda$playActivitySound$3
	b (Lbeo;Laqj;)Z lambda$getTargetIfWithinRange$2
	a (Laqj;Laqj;)Z lambda$isNearestValidAttackTarget$1
	c (Lbes;Laqj;)Z lambda$initFightActivity$0
beu net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	<init> ()V <init>
	a (Laag;Lbep;J)V start
	a (Lbep;)Z isAttackTargetDeadHoglin
	a (Laag;Laqj;J)V start
bev net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	b admireDuration
	<init> (I)V <init>
	a (Laag;Lbep;)Z checkExtraStartConditions
	a (Laag;Lbep;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
bew net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	<init> ()V <init>
	a (Laag;Lbep;)Z checkExtraStartConditions
	a (Laag;Lbep;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
bex net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	b maxDistanceToItem
	<init> (I)V <init>
	a (Laag;Lbep;)Z checkExtraStartConditions
	a (Laag;Lbep;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
bey net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	b maxTimeToReachItem
	c disableTime
	<init> (II)V <init>
	a (Laag;Lbep;)Z checkExtraStartConditions
	a (Laag;Lbep;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
bez net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	<init> ()V <init>
	a (Laag;Lbep;)Z checkExtraStartConditions
	a (Laag;Lbep;J)V start
	a (Laag;Laqj;)Z checkExtraStartConditions
	a (Laag;Laqj;J)V start
bfa net/minecraft/world/entity/monster/piglin/package-info
bfb net/minecraft/world/entity/npc/AbstractVillager
	bp DATA_UNHAPPY_COUNTER
	bq tradingPlayer
	bo offers
	br inventory
	<init> (Laqb;Lbru;)V <init>
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	eK ()I getUnhappyCounter
	s (I)V setUnhappyCounter
	eL ()I getVillagerXp
	b (Laqu;Lapy;)F getStandingEyeHeight
	e ()V defineSynchedData
	f (Lbft;)V setTradingPlayer
	eM ()Lbft; getTradingPlayer
	eN ()Z isTrading
	eO ()Lbqt; getOffers
	a (Lbqt;)V overrideOffers
	t (I)V overrideXp
	a (Lbqs;)V notifyTrade
	b (Lbqs;)V rewardTradeXp
	eP ()Z showProgressBar
	k (Lbly;)V notifyTradeUpdated
	eQ ()Ladn; getNotifyTradeSound
	t (Z)Ladn; getTradeUpdatedSound
	eR ()V playCelebrateSound
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	b (Laag;)Lapx; changeDimension
	eT ()V stopTrading
	a (Laph;)V die
	a (Lhf;)V addParticlesAroundSelf
	a (Lbft;)Z canBeLeashed
	eU ()Laox; getInventory
	a_ (ILbly;)Z setSlot
	eV ()Lbru; getLevel
	eW ()V updateTrades
	a (Lbqt;[Lbfk$f;I)V addOffersFromItemListings
	o (F)Ldck; getRopeHoldPosition
	eS ()Laok; getInventory
	<clinit> ()V <clinit>
bfc net/minecraft/world/entity/npc/CatSpawner
	a nextTick
	<init> ()V <init>
	a (Laag;ZZ)I tick
	a (Laag;Lfx;)I spawnInVillage
	b (Laag;Lfx;)I spawnInHut
	a (Lfx;Laag;)I spawnCat
bfd net/minecraft/world/entity/npc/ClientSideMerchant
	a container
	b source
	c offers
	d xp
	<init> (Lbft;)V <init>
	a ()Laok; getContainer
	eM ()Lbft; getTradingPlayer
	f (Lbft;)V setTradingPlayer
	eO ()Lbqt; getOffers
	a (Lbqt;)V overrideOffers
	a (Lbqs;)V notifyTrade
	k (Lbly;)V notifyTradeUpdated
	eV ()Lbru; getLevel
	eL ()I getVillagerXp
	t (I)V overrideXp
	eP ()Z showProgressBar
	eQ ()Ladn; getNotifyTradeSound
bfe net/minecraft/world/entity/npc/InventoryCarrier
	eS ()Laok; getInventory
bff net/minecraft/world/entity/npc/Npc
bfg net/minecraft/world/entity/npc/Villager
	br DATA_VILLAGER_DATA
	bp FOOD_POINTS
	bs WANTED_ITEMS
	bt updateMerchantTimer
	bu increaseProfessionLevelOnUpdate
	bv lastTradedPlayer
	bw chasing
	bx foodLevel
	by gossips
	bz lastGossipTime
	bA lastGossipDecayTime
	bB villagerXp
	bC lastRestockGameTime
	bD numberOfRestocksToday
	bE lastRestockCheckDayTime
	bF assignProfessionWhenSpawned
	bG MEMORY_TYPES
	bH SENSOR_TYPES
	bq POI_MEMORIES
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;Lbru;Lbfl;)V <init>
	cI ()Larc; getBrain
	cJ ()Larc$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Larc; makeBrain
	c (Laag;)V refreshBrain
	a (Larc;)V registerBrainGoals
	m ()V ageBoundaryReached
	eY ()Larh$a; createAttributes
	eZ ()Z assignProfessionWhenSpawned
	N ()V customServerAiStep
	j ()V tick
	b (Lbft;Laoq;)Laor; mobInteract
	fk ()V setUnhappy
	h (Lbft;)V startTrading
	f (Lbft;)V setTradingPlayer
	eT ()V stopTrading
	fl ()V resetSpecialPrices
	fa ()Z canRestock
	fb ()V restock
	fm ()Z needsToRestock
	fn ()Z allowedToRestock
	fc ()Z shouldRestock
	fo ()V catchUpDemand
	fp ()V updateDemand
	i (Lbft;)V updateSpecialPrices
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	h (D)Z removeWhenFarAway
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	fd ()V playWorkSound
	a (Lbfh;)V setVillagerData
	eX ()Lbfh; getVillagerData
	b (Lbqs;)V rewardTradeXp
	u (Z)V setChasing
	fe ()Z isChasing
	a (Laqj;)V setLastHurtByMob
	a (Laph;)V die
	fq ()V releaseAllPois
	a (Lapx;)V tellWitnessesThatIWasMurdered
	a (Laya;)V releasePoi
	f ()Z canBreed
	fr ()Z hungry
	fs ()V eatUntilFull
	g (Lbft;)I getPlayerReputation
	v (I)V digestFood
	ff ()V eatAndDigestFood
	b (Lbqt;)V setOffers
	ft ()Z shouldIncreaseLevel
	fu ()V increaseMerchantCareer
	bI ()Lnr; getTypeName
	a (B)V handleEntityEvent
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	b (Laag;Lapv;)Lbfg; getBreedOffspring
	a (Laag;Laqi;)V thunderHit
	b (Lbcs;)V pickUpItem
	i (Lbly;)Z wantsToPickUp
	fg ()Z hasExcessFood
	fh ()Z wantsMoreFood
	fv ()I countFoodPointsInInventory
	fi ()Z hasFarmSeeds
	eW ()V updateTrades
	a (Laag;Lbfg;J)V gossip
	fw ()V maybeDecayGossip
	a (Laag;JI)V spawnGolemIfNeeded
	a (J)Z wantsToSpawnGolem
	d (Laag;)Lbaf; trySpawnGolem
	a (Lfx;DD)Lfx; findSpawnPositionForGolemInColumn
	a (Lazi;Lapx;)V onReputationEventFrom
	eL ()I getVillagerXp
	u (I)V setVillagerXp
	fx ()V resetNumberOfRestocks
	fj ()Laxw; getGossips
	a (Lmt;)V setGossips
	M ()V sendDebugPackets
	b (Lfx;)V startSleeping
	em ()V stopSleeping
	b (J)Z golemSpawnConditionsMet
	a (Laag;Lapv;)Lapv; getBreedOffspring
	a (JLbfg;)Z lambda$spawnGolemIfNeeded$10
	a (Laox;Ljava/util/Map$Entry;)I lambda$countFoodPointsInInventory$9
	a (Laxx;)Z lambda$getPlayerReputation$8
	a (Lnet/minecraft/server/MinecraftServer;Laya;Lgf;)V lambda$releasePoi$7
	a (Laag;Lapx;Laqj;)V lambda$tellWitnessesThatIWasMurdered$6
	i (Laqj;)Z lambda$tellWitnessesThatIWasMurdered$5
	a (Lmd;Lmt;)V lambda$addAdditionalSaveData$4
	a (Lbfg;Lazo;)Z lambda$static$3
	b (Lbfg;Lazo;)Z lambda$static$2
	c (Lbfg;Lazo;)Z lambda$static$1
	d (Lbfg;Lazo;)Z lambda$static$0
	<clinit> ()V <clinit>
bfh net/minecraft/world/entity/npc/VillagerData
	b NEXT_LEVEL_XP_THRESHOLDS
	a CODEC
	c type
	d profession
	e level
	<init> (Lbfl;Lbfj;I)V <init>
	a ()Lbfl; getType
	b ()Lbfj; getProfession
	c ()I getLevel
	a (Lbfl;)Lbfh; setType
	a (Lbfj;)Lbfh; setProfession
	a (I)Lbfh; setLevel
	b (I)I getMinXpPerLevel
	c (I)I getMaxXpPerLevel
	d (I)Z canLevelUp
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lbfh;)Ljava/lang/Integer; lambda$null$4
	b (Lbfh;)Lbfj; lambda$null$3
	d ()Lbfj; lambda$null$2
	c (Lbfh;)Lbfl; lambda$null$1
	e ()Lbfl; lambda$null$0
	<clinit> ()V <clinit>
bfi net/minecraft/world/entity/npc/VillagerDataHolder
	eX ()Lbfh; getVillagerData
	a (Lbfh;)V setVillagerData
bfj net/minecraft/world/entity/npc/VillagerProfession
	a NONE
	b ARMORER
	c BUTCHER
	d CARTOGRAPHER
	e CLERIC
	f FARMER
	g FISHERMAN
	h FLETCHER
	i LEATHERWORKER
	j LIBRARIAN
	k MASON
	l NITWIT
	m SHEPHERD
	n TOOLSMITH
	o WEAPONSMITH
	p name
	q jobPoiType
	r requestedItems
	s secondaryPoi
	t workSound
	<init> (Ljava/lang/String;Lazo;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Ladn;)V <init>
	a ()Ljava/lang/String; getName
	b ()Lazo; getJobPoiType
	c ()Lcom/google/common/collect/ImmutableSet; getRequestedItems
	d ()Lcom/google/common/collect/ImmutableSet; getSecondaryPoi
	e ()Ladn; getWorkSound
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;Lazo;Ladn;)Lbfj; register
	a (Ljava/lang/String;Lazo;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Ladn;)Lbfj; register
	<clinit> ()V <clinit>
bfk net/minecraft/world/entity/npc/VillagerTrades
	a TRADES
	b WANDERING_TRADER_TRADES
	<init> ()V <init>
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
bfk$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	<init> (Lblu;I)V <init>
	<init> (Lblu;III)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
	a (Ljava/util/Random;)Lbkv; getRandomDye
bfk$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a item
	b cost
	c maxUses
	d villagerXp
	e priceMultiplier
	<init> (Lbrt;III)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	<init> (IIILjava/util/Map;)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
	a (Lbfl;)V lambda$new$1
	a (Ljava/util/Map;Lbfl;)Z lambda$new$0
bfk$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	<init> (I)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	<init> (Lblu;III)V <init>
	<init> (Lblu;IIIF)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$f net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$g net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b fromCount
	c emeraldCost
	d toItem
	e toCount
	f maxUses
	g villagerXp
	h priceMultiplier
	<init> (Lbrt;ILblu;III)V <init>
	<init> (Lbrt;IILblu;III)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$h net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c numberOfItems
	d maxUses
	e villagerXp
	f priceMultiplier
	<init> (Lbul;IIII)V <init>
	<init> (Lblu;III)V <init>
	<init> (Lblu;IIII)V <init>
	<init> (Lbly;IIII)V <init>
	<init> (Lbly;IIIIF)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$i net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald
	a effect
	b duration
	c xp
	d priceMultiplier
	<init> (Lapp;II)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfk$j net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	<init> (Lblu;ILblu;IIII)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
	a (Lbnq;)Z lambda$getOffer$0
bfk$k net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c destinationType
	d maxUses
	e villagerXp
	<init> (ILckx;Lcxr$a;II)V <init>
	a (Lapx;Ljava/util/Random;)Lbqs; getOffer
bfl net/minecraft/world/entity/npc/VillagerType
	a DESERT
	b JUNGLE
	c PLAINS
	d SAVANNA
	e SNOW
	f SWAMP
	g TAIGA
	h name
	i BY_BIOME
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Lbfl; register
	a (Ljava/util/Optional;)Lbfl; byBiome
	a (Lvj;)Ljava/util/Optional; lambda$byBiome$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
bfm net/minecraft/world/entity/npc/WanderingTrader
	bp wanderTarget
	bq despawnDelay
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	a (Laag;Lapv;)Lapv; getBreedOffspring
	eP ()Z showProgressBar
	b (Lbft;Laoq;)Laor; mobInteract
	eW ()V updateTrades
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	h (D)Z removeWhenFarAway
	b (Lbqs;)V rewardTradeXp
	I ()Ladn; getAmbientSound
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	c (Lbly;)Ladn; getDrinkingSound
	t (Z)Ladn; getTradeUpdatedSound
	eQ ()Ladn; getNotifyTradeSound
	u (I)V setDespawnDelay
	eX ()I getDespawnDelay
	k ()V aiStep
	eY ()V maybeDespawn
	g (Lfx;)V setWanderTarget
	eZ ()Lfx; getWanderTarget
	f (Lbfm;)Z lambda$registerGoals$1
	g (Lbfm;)Z lambda$registerGoals$0
	a (Lbfm;)Layg; access$000
	b (Lbfm;)Lfx; access$100
	c (Lbfm;)Layg; access$200
	d (Lbfm;)Layg; access$300
	e (Lbfm;)Layg; access$400
bfm$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	d this$0
	<init> (Lbfm;Lbfm;DD)V <init>
	d ()V stop
	a ()Z canUse
	e ()V tick
	a (Lfx;D)Z isTooFarAway
bfn net/minecraft/world/entity/npc/WanderingTraderSpawner
	a random
	b serverLevelData
	c tickDelay
	d spawnDelay
	e spawnChance
	<init> (Lcyj;)V <init>
	a (Laag;ZZ)I tick
	a (Laag;)Z spawn
	a (Laag;Lbfm;I)V tryToSpawnLlamaFor
	a (Lbrw;Lfx;I)Lfx; findSpawnPositionNear
	a (Lbqz;Lfx;)Z hasEnoughSpace
	a (Lfx;)Z lambda$spawn$0
bfo net/minecraft/world/entity/npc/package-info
bfp net/minecraft/world/entity/package-info
bfq net/minecraft/world/entity/player/Abilities
	a invulnerable
	b flying
	c mayfly
	d instabuild
	e mayBuild
	f flyingSpeed
	g walkingSpeed
	<init> ()V <init>
	a (Lmd;)V addSaveData
	b (Lmd;)V loadSaveData
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
bfr net/minecraft/world/entity/player/ChatVisiblity
	a FULL
	b SYSTEM
	c HIDDEN
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Lbfr; values
	valueOf (Ljava/lang/String;)Lbfr; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Lbfr; byId
	b (I)[Lbfr; lambda$static$0
	<clinit> ()V <clinit>
bfs net/minecraft/world/entity/player/Inventory
	a items
	b armor
	c offhand
	f compartments
	d selected
	e player
	g carried
	h timesChanged
	<init> (Lbft;)V <init>
	f ()Lbly; getSelected
	g ()I getSelectionSize
	a (Lbly;Lbly;)Z hasRemainingSpaceForItem
	b (Lbly;Lbly;)Z isSameItem
	h ()I getFreeSlot
	a (Lbly;)V setPickedItem
	c (I)V pickSlot
	d (I)Z isHotbarSlot
	b (Lbly;)I findSlotMatchingItem
	c (Lbly;)I findSlotMatchingUnusedItem
	i ()I getSuitableHotbarSlot
	a (D)V swapPaint
	a (Ljava/util/function/Predicate;ILaok;)I clearOrCountMatchingItems
	i (Lbly;)I addResource
	d (ILbly;)I addResource
	d (Lbly;)I getSlotWithRemainingSpace
	j ()V tick
	e (Lbly;)Z add
	c (ILbly;)Z add
	a (Lbru;Lbly;)V placeItemBackInInventory
	a (II)Lbly; removeItem
	f (Lbly;)V removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	a (Lcee;)F getDestroySpeed
	a (Lmj;)Lmj; save
	b (Lmj;)V load
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	Q ()Lnr; getName
	e (I)Lbly; getArmor
	a (Laph;F)V hurtArmor
	k ()V dropAll
	X_ ()V setChanged
	l ()I getTimesChanged
	g (Lbly;)V setCarried
	m ()Lbly; getCarried
	a (Lbft;)Z stillValid
	h (Lbly;)Z contains
	a (Laej;)Z contains
	a (Lbfs;)V replaceWith
	Y_ ()V clearContent
	a (Lbfv;)V fillStackedContents
	a (ILbft;)V lambda$hurtArmor$1
	j (Lbly;)Ljava/lang/String; lambda$add$0
bft net/minecraft/world/entity/player/Player
	bh STANDING_DIMENSIONS
	b POSES
	c DATA_PLAYER_ABSORPTION_ID
	d DATA_SCORE_ID
	bi DATA_PLAYER_MODE_CUSTOMISATION
	bj DATA_PLAYER_MAIN_HAND
	bk DATA_SHOULDER_LEFT
	bl DATA_SHOULDER_RIGHT
	e timeEntitySatOnShoulder
	bm inventory
	bn enderChestInventory
	bo inventoryMenu
	bp containerMenu
	bq foodData
	br jumpTriggerTime
	bs oBob
	bt bob
	bu takeXpDelay
	bv xCloakO
	bw yCloakO
	bx zCloakO
	by xCloak
	bz yCloak
	bA zCloak
	f sleepCounter
	bB wasUnderwater
	bC abilities
	bD experienceLevel
	bE totalExperience
	bF experienceProgress
	bG enchantmentSeed
	bH defaultFlySpeed
	g lastLevelUpTime
	bJ gameProfile
	bK reducedDebugInfo
	bL lastItemInMainHand
	bM cooldowns
	bI fishing
	<init> (Lbru;Lfx;FLcom/mojang/authlib/GameProfile;)V <init>
	a (Lbru;Lfx;Lbrr;)Z blockActionRestricted
	eo ()Larh$a; createAttributes
	e ()V defineSynchedData
	j ()V tick
	ep ()Z isSecondaryUseActive
	eq ()Z wantsToStopRiding
	er ()Z isStayingOnGroundSurface
	es ()Z updateIsUnderwater
	o ()V turtleHelmetTick
	i ()Lblv; createItemCooldowns
	p ()V moveCloak
	et ()V updatePlayerPose
	ai ()I getPortalWaitTime
	au ()Ladn; getSwimSound
	av ()Ladn; getSwimSplashSound
	aw ()Ladn; getSwimHighSpeedSplashSound
	bk ()I getDimensionChangingDelay
	a (Ladn;FF)V playSound
	a (Ladn;Ladp;FF)V playNotifySound
	ct ()Ladp; getSoundSource
	cu ()I getFireImmuneTicks
	a (B)V handleEntityEvent
	a (Lhf;)V addParticlesAroundSelf
	m ()V closeContainer
	aZ ()V rideTick
	ab ()V resetPos
	dO ()V serverAiStep
	k ()V aiStep
	j (Lmd;)V playShoulderEntityAmbientSound
	c (Lapx;)V touch
	eu ()I getScore
	s (I)V setScore
	t (I)V increaseScore
	a (Laph;)V die
	dm ()V dropEquipment
	ev ()V destroyVanishingCursedItems
	e (Laph;)Ladn; getHurtSound
	dp ()Ladn; getDeathSound
	a (Z)Z drop
	a (Lbly;Z)Lbcs; drop
	a (Lbly;ZZ)Lbcs; drop
	c (Lcee;)F getDestroySpeed
	d (Lcee;)Z hasCorrectToolForDrops
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	b (Laph;)Z isInvulnerableTo
	a (Laph;F)Z hurt
	d (Laqj;)V blockUsingShield
	a (Lbft;)Z canHarmPlayer
	b (Laph;F)V hurtArmor
	p (F)V hurtCurrentlyUsedShield
	e (Laph;F)V actuallyHurt
	cO ()Z onSoulSpeedBlock
	a (Lcdc;)V openTextEdit
	a (Lbqv;)V openMinecartCommandBlock
	a (Lccl;)V openCommandBlock
	a (Lcdg;)V openStructureBlock
	a (Lccw;)V openJigsawBlock
	a (Lbay;Laok;)V openHorseInventory
	a (Laou;)Ljava/util/OptionalInt; openMenu
	a (ILbqt;IIZZ)V sendMerchantOffers
	a (Lbly;Laoq;)V openItemGui
	a (Lapx;Laoq;)Laor; interactOn
	ba ()D getMyRidingOffset
	be ()V removeVehicle
	dH ()Z isImmobile
	cS ()Z isAffectedByFluids
	a (Ldck;Laqo;)Ldck; maybeBackOffFromEdge
	q ()Z isAboveGround
	f (Lapx;)V attack
	g (Laqj;)V doAutoAttackOnTouch
	p (Z)V disableShield
	a (Lapx;)V crit
	b (Lapx;)V magicCrit
	ew ()V sweepAttack
	ex ()V respawn
	ac ()V remove
	ey ()Z isLocalPlayer
	ez ()Lcom/mojang/authlib/GameProfile; getGameProfile
	a (Lfx;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (ZZ)V stopSleepInBed
	em ()V stopSleeping
	a (Laag;Lfx;FZZ)Ljava/util/Optional; findRespawnPositionAndUseSpawnBlock
	eA ()Z isSleepingLongEnough
	eB ()I getSleepTimer
	a (Lnr;Z)V displayClientMessage
	a (Lvk;)V awardStat
	a (Lvk;I)V awardStat
	b (Ladv;)V awardStat
	a (Ladv;I)V awardStat
	a (Ladv;)V resetStat
	a (Ljava/util/Collection;)I awardRecipes
	a ([Lvk;)V awardRecipesByKey
	b (Ljava/util/Collection;)I resetRecipes
	dJ ()V jumpFromGround
	g (Ldck;)V travel
	aI ()V updateSwimming
	f (Lfx;)Z freeAt
	dM ()F getSpeed
	p (DDD)V checkMovementStatistics
	q (DDD)V checkRidingStatistics
	b (FF)Z causeFallDamage
	eC ()Z tryToStartFallFlying
	eD ()V startFallFlying
	eE ()V stopFallFlying
	aL ()V doWaterSplashEffect
	o (I)Ladn; getFallDamageSound
	a (Laag;Laqj;)V killed
	a (Lcee;Ldck;)V makeStuckInBlock
	d (I)V giveExperiencePoints
	eF ()I getEnchantmentSeed
	a (Lbly;I)V onEnchantmentPerformed
	c (I)V giveExperienceLevels
	eG ()I getXpNeededForNextLevel
	t (F)V causeFoodExhaustion
	eH ()Lbhv; getFoodData
	q (Z)Z canEat
	eI ()Z isHurt
	eJ ()Z mayBuild
	a (Lfx;Lgc;Lbly;)Z mayUseItemAt
	d (Lbft;)I getExperienceReward
	cW ()Z isAlwaysExperienceDropper
	bX ()Z shouldShowName
	aB ()Z isMovementNoisy
	t ()V onUpdateAbilities
	a (Lbrr;)V setGameMode
	Q ()Lnr; getName
	eK ()Lbjf; getEnderChestInventory
	b (Laqc;)Lbly; getItemBySlot
	a (Laqc;Lbly;)V setItemSlot
	g (Lbly;)Z addItem
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	g (Lmd;)Z setEntityOnShoulder
	eL ()V removeEntitiesOnShoulder
	k (Lmd;)V respawnEntityOnShoulder
	a_ ()Z isSpectator
	bA ()Z isSwimming
	b_ ()Z isCreative
	bU ()Z isPushedByFluid
	eM ()Lddk; getScoreboard
	d ()Lnr; getDisplayName
	a (Lnx;)Lnx; decorateDisplayNameComponent
	bT ()Ljava/lang/String; getScoreboardName
	b (Laqu;Lapy;)F getStandingEyeHeight
	s (F)V setAbsorptionAmount
	dS ()F getAbsorptionAmount
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; createPlayerUUID
	c (Ljava/lang/String;)Ljava/util/UUID; createPlayerUUID
	a (Lbfu;)Z isModelPartShown
	a_ (ILbly;)Z setSlot
	eN ()Z isReducedDebugInfo
	r (Z)V setReducedDebugInfo
	g (I)V setRemainingFireTicks
	dU ()Laqf; getMainArm
	a (Laqf;)V setMainArm
	eO ()Lmd; getShoulderEntityLeft
	h (Lmd;)V setShoulderEntityLeft
	eP ()Lmd; getShoulderEntityRight
	i (Lmd;)V setShoulderEntityRight
	eQ ()F getCurrentItemAttackStrengthDelay
	u (F)F getAttackStrengthScale
	eR ()V resetAttackStrengthTicker
	eS ()Lblv; getCooldowns
	aq ()F getBlockSpeedFactor
	eT ()F getLuck
	eU ()Z canUseGameMasterBlocks
	e (Lbly;)Z canTakeItem
	a (Laqu;)Lapy; getDimensions
	ei ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	f (Lbly;)Lbly; getProjectile
	a (Lbru;Lbly;)Lbly; eat
	b (Lcee;)Z shouldRemoveSoulSpeed
	o (F)Ldck; getRopeHoldPosition
	a (Ljava/lang/String;Lob;)Lob; lambda$decorateDisplayNameComponent$4
	d (Lapx;)V lambda$respawnEntityOnShoulder$3
	a (Laoq;Lbft;)V lambda$hurtCurrentlyUsedShield$2
	b (Laqb;)V lambda$playShoulderEntityAmbientSound$1
	c (Laqb;)Z lambda$playShoulderEntityAmbientSound$0
	<clinit> ()V <clinit>
bft$1 net/minecraft/world/entity/player/Player$1
	a $SwitchMap$net$minecraft$world$entity$Pose
	<clinit> ()V <clinit>
bft$a net/minecraft/world/entity/player/Player$BedSleepingProblem
	a NOT_POSSIBLE_HERE
	b NOT_POSSIBLE_NOW
	c TOO_FAR_AWAY
	d OBSTRUCTED
	e OTHER_PROBLEM
	f NOT_SAFE
	g message
	h $VALUES
	values ()[Lbft$a; values
	valueOf (Ljava/lang/String;)Lbft$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<init> (Ljava/lang/String;ILnr;)V <init>
	a ()Lnr; getMessage
	<clinit> ()V <clinit>
bfu net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	values ()[Lbfu; values
	valueOf (Ljava/lang/String;)Lbfu; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lnr; getName
	<clinit> ()V <clinit>
bfv net/minecraft/world/entity/player/StackedContents
	a contents
	<init> ()V <init>
	a (Lbly;)V accountSimpleStack
	b (Lbly;)V accountStack
	a (Lbly;I)V accountStack
	c (Lbly;)I getStackingIndex
	b (I)Z has
	a (II)I take
	b (II)V put
	a (Lbon;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lbon;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	b (Lbon;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lbon;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (I)Lbly; fromStackingIndex
	a ()V clear
	a (Lbfv;II)I access$000
	b (Lbfv;II)V access$100
	a (Lbfv;I)Z access$200
bfv$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a this$0
	<init> (Lbfv;Lbon;)V <init>
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	b (I)Z isSatisfied
	c (I)V setSatisfied
	d (I)I getSatisfiedIndex
	a (ZII)Z hasConnection
	b (ZII)Z hasResidual
	c (ZII)V toggleResidual
	d (ZII)I getIndex
	a (ZI)V visit
	b (ZI)Z hasVisited
	c (ZI)I getVisitedIndex
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b ()I getMinIngredientCount
bfw net/minecraft/world/entity/player/package-info
bfx net/minecraft/world/entity/projectile/AbstractArrow
	f ID_FLAGS
	g PIERCE_LEVEL
	ag lastState
	b inGround
	c inGroundTime
	d pickup
	e shakeTime
	ah life
	ai baseDamage
	aj knockback
	ak soundEvent
	al piercingIgnoreEntityIds
	am piercedAndKilledEntities
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;DDDLbru;)V <init>
	<init> (Laqb;Laqj;Lbru;)V <init>
	g ()Z isInGround
	a (Ladn;)V setSoundEvent
	a (D)Z shouldRenderAtSqrDistance
	e ()V defineSynchedData
	c (DDDFF)V shoot
	a (DDDFFIZ)V lerpTo
	k (DDD)V lerpMotion
	j ()V tick
	u ()Z shouldFall
	z ()V startFalling
	a (Laqo;Ldck;)V move
	h ()V tickDespawn
	A ()V resetPiercedEntities
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	i ()Ladn; getDefaultHitGroundSoundEvent
	k ()Ladn; getHitGroundSoundEvent
	a (Laqj;)V doPostHurtEffects
	a (Ldck;Ldck;)Ldch; findHitEntity
	a (Lapx;)Z canHitEntity
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	b (Lapx;)V setOwner
	a_ (Lbft;)V playerTouch
	m ()Lbly; getPickupItem
	aB ()Z isMovementNoisy
	h (D)V setBaseDamage
	n ()D getBaseDamage
	a (I)V setKnockback
	o ()I getKnockback
	bK ()Z isAttackable
	a (Laqu;Lapy;)F getEyeHeight
	a (Z)V setCritArrow
	b (B)V setPierceLevel
	a (IZ)V setFlag
	p ()Z isCritArrow
	q ()Z shotFromCrossbow
	r ()B getPierceLevel
	a (Laqj;F)V setEnchantmentEffectsFromEntity
	s ()F getWaterInertia
	o (Z)V setNoPhysics
	t ()Z isNoPhysics
	p (Z)V setShotFromCrossbow
	P ()Loj; getAddEntityPacket
	<clinit> ()V <clinit>
bfx$a net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	a DISALLOWED
	b ALLOWED
	c CREATIVE_ONLY
	d $VALUES
	values ()[Lbfx$a; values
	valueOf (Ljava/lang/String;)Lbfx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (I)Lbfx$a; byOrdinal
	<clinit> ()V <clinit>
bfy net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	b xPower
	c yPower
	d zPower
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;DDDDDDLbru;)V <init>
	<init> (Laqb;Laqj;DDDLbru;)V <init>
	e ()V defineSynchedData
	a (D)Z shouldRenderAtSqrDistance
	j ()V tick
	a (Lapx;)Z canHitEntity
	W_ ()Z shouldBurn
	h ()Lhf; getTrailParticle
	i ()F getInertia
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	aS ()Z isPickable
	bf ()F getPickRadius
	a (Laph;F)Z hurt
	aQ ()F getBrightness
	P ()Loj; getAddEntityPacket
bfz net/minecraft/world/entity/projectile/Arrow
	f ID_EFFECT_COLOR
	g potion
	ag effects
	ah fixedColor
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	<init> (Lbru;Laqj;)V <init>
	b (Lbly;)V setEffectsFromItem
	c (Lbly;)I getCustomColor
	z ()V updateColor
	a (Lapr;)V addEffect
	e ()V defineSynchedData
	j ()V tick
	b (I)V makeParticle
	u ()I getColor
	c (I)V setFixedColor
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Laqj;)V doPostHurtEffects
	m ()Lbly; getPickupItem
	a (B)V handleEntityEvent
	<clinit> ()V <clinit>
bga net/minecraft/world/entity/projectile/DragonFireball
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDDDD)V <init>
	<init> (Lbru;Laqj;DDD)V <init>
	a (Ldci;)V onHit
	aS ()Z isPickable
	a (Laph;F)Z hurt
	h ()Lhf; getTrailParticle
	W_ ()Z shouldBurn
bgb net/minecraft/world/entity/projectile/EvokerFangs
	b warmupDelayTicks
	c sentSpikeEvent
	d lifeTicks
	e clientSideAttackStarted
	f owner
	g ownerUUID
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDFILaqj;)V <init>
	e ()V defineSynchedData
	a (Laqj;)V setOwner
	g ()Laqj; getOwner
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	j ()V tick
	c (Laqj;)V dealDamageTo
	a (B)V handleEntityEvent
	a (F)F getAnimationProgress
	P ()Loj; getAddEntityPacket
bgc net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	c tx
	d ty
	e tz
	f life
	g surviveAfterDeath
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	b (Lbly;)V setItem
	h ()Lbly; getItemRaw
	g ()Lbly; getItem
	e ()V defineSynchedData
	a (D)Z shouldRenderAtSqrDistance
	a (Lfx;)V signalTo
	k (DDD)V lerpMotion
	j ()V tick
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	aQ ()F getBrightness
	bK ()Z isAttackable
	P ()Loj; getAddEntityPacket
	c (Lbly;)V lambda$setItem$0
	<clinit> ()V <clinit>
bgd net/minecraft/world/entity/projectile/Fireball
	e DATA_ITEM_STACK
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;DDDDDDLbru;)V <init>
	<init> (Laqb;Laqj;DDDLbru;)V <init>
	b (Lbly;)V setItem
	k ()Lbly; getItemRaw
	g ()Lbly; getItem
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	c (Lbly;)V lambda$setItem$0
	<clinit> ()V <clinit>
bge net/minecraft/world/entity/projectile/FireworkRocketEntity
	b DATA_ID_FIREWORKS_ITEM
	c DATA_ATTACHED_TO_TARGET
	d DATA_SHOT_AT_ANGLE
	e life
	f lifetime
	g attachedToEntity
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDLbly;)V <init>
	<init> (Lbru;Lapx;DDDLbly;)V <init>
	<init> (Lbru;Lbly;Laqj;)V <init>
	<init> (Lbru;Lbly;DDDZ)V <init>
	<init> (Lbru;Lbly;Lapx;DDDZ)V <init>
	e ()V defineSynchedData
	a (D)Z shouldRenderAtSqrDistance
	j (DDD)Z shouldRender
	j ()V tick
	i ()V explode
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	k ()Z hasExplosion
	m ()V dealExplosionDamage
	n ()Z isAttachedToEntity
	h ()Z isShotAtAngle
	a (B)V handleEntityEvent
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	g ()Lbly; getItem
	bK ()Z isAttackable
	P ()Loj; getAddEntityPacket
	a (I)V lambda$tick$0
	<clinit> ()V <clinit>
bgf net/minecraft/world/entity/projectile/FishingHook
	b syncronizedRandom
	c biting
	d outOfWaterTime
	e DATA_HOOKED_ENTITY
	f DATA_BITING
	g life
	ag nibble
	ah timeUntilLured
	ai timeUntilHooked
	aj fishAngle
	ak openWater
	al hookedIn
	am currentState
	an luck
	ao lureSpeed
	<init> (Lbru;Lbft;II)V <init>
	<init> (Lbru;Lbft;DDD)V <init>
	<init> (Lbft;Lbru;II)V <init>
	e ()V defineSynchedData
	a (Lus;)V onSyncedDataUpdated
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	j ()V tick
	a (Lbft;)Z shouldStopFishing
	m ()V checkCollision
	a (Lapx;)Z canHitEntity
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	n ()V setHookedEntity
	a (Lfx;)V catchingFish
	b (Lfx;)Z calculateOpenWater
	a (Lfx;Lfx;)Lbgf$b; getOpenWaterTypeForArea
	c (Lfx;)Lbgf$b; getOpenWaterTypeForBlock
	g ()Z isOpenWaterFishing
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	b (Lbly;)I retrieve
	a (B)V handleEntityEvent
	h ()V bringInHookedEntity
	aB ()Z isMovementNoisy
	ac ()V remove
	i ()Lbft; getPlayerOwner
	k ()Lapx; getHookedIn
	bN ()Z canChangeDimensions
	P ()Loj; getAddEntityPacket
	a (Lbgf$b;Lbgf$b;)Lbgf$b; lambda$getOpenWaterTypeForArea$0
	<clinit> ()V <clinit>
bgf$1 net/minecraft/world/entity/projectile/FishingHook$1
	a $SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
	<clinit> ()V <clinit>
bgf$a net/minecraft/world/entity/projectile/FishingHook$FishHookState
	a FLYING
	b HOOKED_IN_ENTITY
	c BOBBING
	d $VALUES
	values ()[Lbgf$a; values
	valueOf (Ljava/lang/String;)Lbgf$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bgf$b net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	a ABOVE_WATER
	b INSIDE_WATER
	c INVALID
	d $VALUES
	values ()[Lbgf$b; values
	valueOf (Ljava/lang/String;)Lbgf$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bgg net/minecraft/world/entity/projectile/ItemSupplier
	g ()Lbly; getItem
bgh net/minecraft/world/entity/projectile/LargeFireball
	e explosionPower
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDDDD)V <init>
	<init> (Lbru;Laqj;DDD)V <init>
	a (Ldci;)V onHit
	a (Ldch;)V onHitEntity
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
bgi net/minecraft/world/entity/projectile/LlamaSpit
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Lbbb;)V <init>
	<init> (Lbru;DDDDDD)V <init>
	j ()V tick
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	e ()V defineSynchedData
	P ()Loj; getAddEntityPacket
bgj net/minecraft/world/entity/projectile/Projectile
	b ownerUUID
	c ownerNetworkId
	d leftOwner
	<init> (Laqb;Lbru;)V <init>
	b (Lapx;)V setOwner
	v ()Lapx; getOwner
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	j ()V tick
	h ()Z checkLeftOwner
	c (DDDFF)V shoot
	a (Lapx;FFFFF)V shootFromRotation
	a (Ldci;)V onHit
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	k (DDD)V lerpMotion
	a (Lapx;)Z canHitEntity
	x ()V updateRotation
	e (FF)F lerpRotation
	c (Lapx;)Z lambda$checkLeftOwner$0
bgk net/minecraft/world/entity/projectile/ProjectileUtil
	<init> ()V <init>
	a (Lapx;Ljava/util/function/Predicate;)Ldci; getHitResult
	a (Lapx;Ldck;Ldck;Ldcf;Ljava/util/function/Predicate;D)Ldch; getEntityHitResult
	a (Lbru;Lapx;Ldck;Ldck;Ldcf;Ljava/util/function/Predicate;)Ldch; getEntityHitResult
	a (Lapx;F)V rotateTowardsMovement
	a (Laqj;Lblu;)Laoq; getWeaponHoldingHand
	a (Laqj;Lbly;F)Lbfx; getMobArrow
bgl net/minecraft/world/entity/projectile/ShulkerBullet
	b finalTarget
	c currentMoveDirection
	d flightSteps
	e targetDeltaX
	f targetDeltaY
	g targetDeltaZ
	ag targetId
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDDDDD)V <init>
	<init> (Lbru;Laqj;Lapx;Lgc$a;)V <init>
	ct ()Ladp; getSoundSource
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	e ()V defineSynchedData
	g ()Lgc; getMoveDirection
	a (Lgc;)V setMoveDirection
	a (Lgc$a;)V selectNextMoveDirection
	cH ()V checkDespawn
	j ()V tick
	a (Lapx;)Z canHitEntity
	bp ()Z isOnFire
	a (D)Z shouldRenderAtSqrDistance
	aQ ()F getBrightness
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	a (Ldci;)V onHit
	aS ()Z isPickable
	a (Laph;F)Z hurt
	P ()Loj; getAddEntityPacket
bgm net/minecraft/world/entity/projectile/SmallFireball
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;DDD)V <init>
	<init> (Lbru;DDDDDD)V <init>
	a (Ldch;)V onHitEntity
	a (Ldcg;)V onHitBlock
	a (Ldci;)V onHit
	aS ()Z isPickable
	a (Laph;F)Z hurt
bgn net/minecraft/world/entity/projectile/Snowball
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;)V <init>
	<init> (Lbru;DDD)V <init>
	h ()Lblu; getDefaultItem
	m ()Lhf; getParticle
	a (B)V handleEntityEvent
	a (Ldch;)V onHitEntity
	a (Ldci;)V onHit
bgo net/minecraft/world/entity/projectile/SpectralArrow
	f duration
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;)V <init>
	<init> (Lbru;DDD)V <init>
	j ()V tick
	m ()Lbly; getPickupItem
	a (Laqj;)V doPostHurtEffects
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
bgp net/minecraft/world/entity/projectile/ThrowableItemProjectile
	b DATA_ITEM_STACK
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;DDDLbru;)V <init>
	<init> (Laqb;Laqj;Lbru;)V <init>
	b (Lbly;)V setItem
	h ()Lblu; getDefaultItem
	i ()Lbly; getItemRaw
	g ()Lbly; getItem
	e ()V defineSynchedData
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	c (Lbly;)V lambda$setItem$0
	<clinit> ()V <clinit>
bgq net/minecraft/world/entity/projectile/ThrowableProjectile
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;DDDLbru;)V <init>
	<init> (Laqb;Laqj;Lbru;)V <init>
	a (D)Z shouldRenderAtSqrDistance
	j ()V tick
	k ()F getGravity
	P ()Loj; getAddEntityPacket
bgr net/minecraft/world/entity/projectile/ThrownEgg
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;)V <init>
	<init> (Lbru;DDD)V <init>
	a (B)V handleEntityEvent
	a (Ldch;)V onHitEntity
	a (Ldci;)V onHit
	h ()Lblu; getDefaultItem
bgs net/minecraft/world/entity/projectile/ThrownEnderpearl
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;)V <init>
	<init> (Lbru;DDD)V <init>
	h ()Lblu; getDefaultItem
	a (Ldch;)V onHitEntity
	a (Ldci;)V onHit
	j ()V tick
	b (Laag;)Lapx; changeDimension
bgt net/minecraft/world/entity/projectile/ThrownExperienceBottle
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;)V <init>
	<init> (Lbru;DDD)V <init>
	h ()Lblu; getDefaultItem
	k ()F getGravity
	a (Ldci;)V onHit
bgu net/minecraft/world/entity/projectile/ThrownPotion
	b WATER_SENSITIVE
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;)V <init>
	<init> (Lbru;DDD)V <init>
	h ()Lblu; getDefaultItem
	k ()F getGravity
	a (Ldcg;)V onHitBlock
	a (Ldci;)V onHit
	m ()V applyWater
	a (Ljava/util/List;Lapx;)V applySplash
	a (Lbly;Lbnq;)V makeAreaOfEffectCloud
	n ()Z isLingering
	a (Lfx;Lgc;)V dowseFire
	<clinit> ()V <clinit>
bgv net/minecraft/world/entity/projectile/ThrownTrident
	g ID_LOYALTY
	ag ID_FOIL
	ah tridentItem
	ai dealtDamage
	f clientSideReturnTridentTickCount
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;Lbly;)V <init>
	<init> (Lbru;DDD)V <init>
	e ()V defineSynchedData
	j ()V tick
	z ()Z isAcceptibleReturnOwner
	m ()Lbly; getPickupItem
	u ()Z isFoil
	a (Ldck;Ldck;)Ldch; findHitEntity
	a (Ldch;)V onHitEntity
	i ()Ladn; getDefaultHitGroundSoundEvent
	a_ (Lbft;)V playerTouch
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	h ()V tickDespawn
	s ()F getWaterInertia
	j (DDD)Z shouldRender
	<clinit> ()V <clinit>
bgw net/minecraft/world/entity/projectile/WitherSkull
	e DATA_DANGEROUS
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;Laqj;DDD)V <init>
	<init> (Lbru;DDDDDD)V <init>
	i ()F getInertia
	bp ()Z isOnFire
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;F)F getBlockExplosionResistance
	a (Ldch;)V onHitEntity
	a (Ldci;)V onHit
	aS ()Z isPickable
	a (Laph;F)Z hurt
	e ()V defineSynchedData
	k ()Z isDangerous
	a (Z)V setDangerous
	W_ ()Z shouldBurn
	<clinit> ()V <clinit>
bgx net/minecraft/world/entity/projectile/package-info
bgy net/minecraft/world/entity/raid/Raid
	a RAID_NAME_COMPONENT
	b VICTORY
	c DEFEAT
	d RAID_BAR_VICTORY_COMPONENT
	e RAID_BAR_DEFEAT_COMPONENT
	f groupToLeaderMap
	g groupRaiderMap
	h heroesOfTheVillage
	i ticksActive
	j center
	k level
	l started
	m id
	n totalHealth
	o badOmenLevel
	p active
	q groupsSpawned
	r raidEvent
	s postRaidTicks
	t raidCooldownTicks
	u random
	v numGroups
	w status
	x celebrationTicks
	y waveSpawnPos
	<init> (ILaag;Lfx;)V <init>
	<init> (Laag;Lmd;)V <init>
	a ()Z isOver
	b ()Z isBetweenWaves
	c ()Z hasFirstWaveSpawned
	d ()Z isStopped
	e ()Z isVictory
	f ()Z isLoss
	g ()F getTotalHealth
	h ()Ljava/util/Set; getAllRaiders
	i ()Lbru; getLevel
	j ()Z isStarted
	k ()I getGroupsSpawned
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	l ()I getMaxBadOmenLevel
	m ()I getBadOmenLevel
	a (I)V setBadOmenLevel
	a (Lbft;)V absorbBadOmen
	n ()V stop
	o ()V tick
	z ()V moveRaidCenterToNearbyVillageSection
	d (I)Ljava/util/Optional; getValidSpawnPos
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	a (Lfx;)V playSound
	b (Lfx;)V spawnGroup
	a (ILbgz;Lfx;Z)V joinRaid
	p ()V updateBossbar
	q ()F getHealthOfLivingRaiders
	G ()Z shouldSpawnGroup
	r ()I getTotalRaidersAlive
	a (Lbgz;Z)V removeFromRaid
	H ()V setDirty
	s ()Lbly; getLeaderBannerInstance
	b (I)Lbgz; getLeader
	a (II)Lfx; findRandomSpawnPos
	b (ILbgz;)Z addWaveMob
	a (ILbgz;Z)Z addWaveMob
	a (ILbgz;)V setLeader
	c (I)V removeLeader
	t ()Lfx; getCenter
	c (Lfx;)V setCenter
	u ()I getId
	a (Lbgy$b;IZ)I getDefaultNumSpawns
	a (Lbgy$b;Ljava/util/Random;ILaop;Z)I getPotentialBonusSpawns
	v ()Z isActive
	a (Lmd;)Lmd; save
	a (Laoo;)I getNumGroups
	w ()F getEnchantOdds
	a (Lapx;)V addHeroOfTheVillage
	a (Ljava/lang/Integer;)Ljava/util/Set; lambda$addWaveMob$2
	d (Lfx;)D lambda$moveRaidCenterToNearbyVillageSection$1
	a (Laah;)Z lambda$validPlayer$0
	<clinit> ()V <clinit>
bgy$1 net/minecraft/world/entity/raid/Raid$1
	a $SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	b $SwitchMap$net$minecraft$world$Difficulty
	<clinit> ()V <clinit>
bgy$a net/minecraft/world/entity/raid/Raid$RaidStatus
	a ONGOING
	b VICTORY
	c LOSS
	d STOPPED
	e VALUES
	f $VALUES
	values ()[Lbgy$a; values
	valueOf (Ljava/lang/String;)Lbgy$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	b (Ljava/lang/String;)Lbgy$a; getByName
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbgy$a; access$000
	<clinit> ()V <clinit>
bgy$b net/minecraft/world/entity/raid/Raid$RaiderType
	a VINDICATOR
	b EVOKER
	c PILLAGER
	d WITCH
	e RAVAGER
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
	values ()[Lbgy$b; values
	valueOf (Ljava/lang/String;)Lbgy$b; valueOf
	<init> (Ljava/lang/String;ILaqb;[I)V <init>
	a ()[Lbgy$b; access$100
	a (Lbgy$b;)Laqb; access$200
	b (Lbgy$b;)[I access$300
	<clinit> ()V <clinit>
bgz net/minecraft/world/entity/raid/Raider
	c IS_CELEBRATING
	b ALLOWED_ITEMS
	d raid
	bo wave
	bp canJoinRaid
	bq ticksOutsideRaid
	<init> (Laqb;Lbru;)V <init>
	o ()V registerGoals
	e ()V defineSynchedData
	a (IZ)V applyRaidBuffs
	eZ ()Z canJoinRaid
	w (Z)V setCanJoinRaid
	k ()V aiStep
	eQ ()V updateNoActionTime
	a (Laph;)V die
	eT ()Z canJoinPatrol
	a (Lbgy;)V setCurrentRaid
	fa ()Lbgy; getCurrentRaid
	fb ()Z hasActiveRaid
	a (I)V setWave
	fc ()I getWave
	fd ()Z isCelebrating
	x (Z)V setCelebrating
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	b (Lbcs;)V pickUpItem
	h (D)Z removeWhenFarAway
	K ()Z requiresCustomPersistence
	fe ()I getTicksOutsideRaid
	b (I)V setTicksOutsideRaid
	a (Laph;F)Z hurt
	a (Lbsh;Laop;Laqm;Laqz;Lmd;)Laqz; finalizeSpawn
	eL ()Ladn; getCelebrateSound
	c (Lbcs;)Z lambda$static$0
	ff ()Ljava/util/function/Predicate; access$000
	a (Lbgz;)Ljava/util/Random; access$100
	b (Lbgz;)F access$200
	c (Lbgz;)F access$300
	d (Lbgz;)Ljava/util/Random; access$400
	e (Lbgz;)Z access$500
	f (Lbgz;)Ljava/util/Random; access$600
	g (Lbgz;)Ljava/util/Random; access$700
	<clinit> ()V <clinit>
bgz$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	c mob
	d hostileRadiusSqr
	a shoutTargeting
	b this$0
	<init> (Lbgz;Lbcv;F)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bgz$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	b mob
	a this$0
	<init> (Lbgz;Lbgz;)V <init>
	a ()Z canUse
	e ()V tick
bgz$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	b mob
	a this$0
	<init> (Lbgz;Lbgz;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bgz$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	<init> (Lbgz;DI)V <init>
	a ()Z canUse
	g ()Z isValidRaid
	h ()Z hasSuitablePoi
	b ()Z canContinueToUse
	d ()V stop
	c ()V start
	e ()V tick
	a (Lfx;)Z hasNotVisited
	j ()V updateVisited
	a (Lazo;)Z lambda$hasSuitablePoi$0
bha net/minecraft/world/entity/raid/Raids
	a raidMap
	b level
	c nextAvailableID
	d tick
	<init> (Laag;)V <init>
	a (I)Lbgy; get
	a ()V tick
	a (Lbgz;Lbgy;)Z canJoinRaid
	a (Laah;)Lbgy; createOrExtendRaid
	a (Laag;Lfx;)Lbgy; getOrCreateRaid
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	a (Lcha;)Ljava/lang/String; getFileId
	e ()I getUniqueId
	a (Lfx;I)Lbgy; getNearbyRaid
bhb net/minecraft/world/entity/raid/package-info
bhc net/minecraft/world/entity/schedule/Activity
	a CORE
	b IDLE
	c WORK
	d PLAY
	e REST
	f MEET
	g PANIC
	h RAID
	i PRE_RAID
	j HIDE
	k FIGHT
	l CELEBRATE
	m ADMIRE_ITEM
	n AVOID
	o RIDE
	p name
	q hashCode
	<init> (Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbhc; register
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
bhd net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	<init> (IF)V <init>
	a ()I getTimeStamp
	b ()F getValue
bhe net/minecraft/world/entity/schedule/Schedule
	a EMPTY
	b SIMPLE
	c VILLAGER_BABY
	d VILLAGER_DEFAULT
	e timelines
	<init> ()V <init>
	a (Ljava/lang/String;)Lbhf; register
	a (Lbhc;)V ensureTimelineExistsFor
	b (Lbhc;)Lbhg; getTimelineFor
	c (Lbhc;)Ljava/util/List; getAllTimelinesExceptFor
	a (I)Lbhc; getActivityAt
	a (ILjava/util/Map$Entry;)D lambda$getActivityAt$1
	a (Lbhc;Ljava/util/Map$Entry;)Z lambda$getAllTimelinesExceptFor$0
	<clinit> ()V <clinit>
bhf net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	<init> (Lbhe;)V <init>
	a (ILbhc;)Lbhf; changeActivityAt
	a ()Lbhe; build
	a (Lbhf$a;)V lambda$build$1
	a (Lbhf$a;Lbhg;)V lambda$null$0
bhf$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	<init> (ILbhc;)V <init>
	a ()I getTime
	b ()Lbhc; getActivity
bhg net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	<init> ()V <init>
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (IF)Lbhg; addKeyframe
	a (Ljava/util/Collection;)Lbhg; addKeyframes
	b ()V sortAndDeduplicateKeyframes
	a (I)F getValueAt
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lbhd;)V lambda$sortAndDeduplicateKeyframes$0
bhh net/minecraft/world/entity/schedule/package-info
bhi net/minecraft/world/entity/vehicle/AbstractMinecart
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_DISPLAY_BLOCK
	f DATA_ID_DISPLAY_OFFSET
	g DATA_ID_CUSTOM_DISPLAY
	ag POSE_DISMOUNT_HEIGHTS
	ah flipped
	ai EXITS
	aj lSteps
	ak lx
	al ly
	am lz
	an lyr
	ao lxr
	ap lxd
	aq lyd
	ar lzd
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;Lbru;DDD)V <init>
	a (Lbru;DDDLbhi$a;)Lbhi; createMinecart
	aB ()Z isMovementNoisy
	e ()V defineSynchedData
	j (Lapx;)Z canCollideWith
	aT ()Z isPushable
	a (Lgc$a;Li$a;)Ldck; getRelativePortalPosition
	bb ()D getPassengersRidingOffset
	b (Laqj;)Ldck; getDismountLocationForPassenger
	a (Laph;F)Z hurt
	aq ()F getBlockSpeedFactor
	a (Laph;)V destroy
	bl ()V animateHurt
	aS ()Z isPickable
	a (Lcfh;)Lcom/mojang/datafixers/util/Pair; exits
	bZ ()Lgc; getMotionDirection
	j ()V tick
	g ()D getMaxSpeed
	a (IIIZ)V activateMinecart
	h ()V comeOffTrack
	c (Lfx;Lcee;)V moveAlongTrack
	a (Lfx;)Z isRedstoneConductor
	i ()V applyNaturalSlowdown
	a (DDDD)Ldck; getPosOffs
	p (DDD)Ldck; getPos
	cc ()Ldcf; getBoundingBoxForCulling
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	i (Lapx;)V push
	a (DDDFFIZ)V lerpTo
	k (DDD)V lerpMotion
	a (F)V setDamage
	k ()F getDamage
	c (I)V setHurtTime
	m ()I getHurtTime
	d (I)V setHurtDir
	n ()I getHurtDir
	o ()Lbhi$a; getMinecartType
	p ()Lcee; getDisplayBlockState
	q ()Lcee; getDefaultDisplayBlockState
	r ()I getDisplayOffset
	s ()I getDefaultDisplayOffset
	b (Lcee;)V setDisplayBlockState
	l (I)V setDisplayOffset
	t ()Z hasCustomDisplay
	a (Z)V setCustomDisplay
	P ()Loj; getAddEntityPacket
	a (Ljava/util/EnumMap;)V lambda$static$2
	b (Lfx;)Ldde; lambda$getDismountLocationForPassenger$1
	a (Lfx$a;)Ldde; lambda$getDismountLocationForPassenger$0
	<clinit> ()V <clinit>
bhi$1 net/minecraft/world/entity/vehicle/AbstractMinecart$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	<clinit> ()V <clinit>
bhi$a net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	a RIDEABLE
	b CHEST
	c FURNACE
	d TNT
	e SPAWNER
	f HOPPER
	g COMMAND_BLOCK
	h $VALUES
	values ()[Lbhi$a; values
	valueOf (Ljava/lang/String;)Lbhi$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bhj net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	b itemStacks
	c dropEquipment
	d lootTable
	e lootTableSeed
	<init> (Laqb;Lbru;)V <init>
	<init> (Laqb;DDDLbru;)V <init>
	a (Laph;)V destroy
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	a_ (ILbly;)Z setSlot
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	b (Laag;)Lapx; changeDimension
	ac ()V remove
	a_ (Z)V setDropContainerContent
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lbft;Laoq;)Laor; interact
	i ()V applyNaturalSlowdown
	d (Lbft;)V unpackLootTable
	Y_ ()V clearContent
	a (Lvk;J)V setLootTable
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
	a (ILbfs;)Lbhz; createMenu
bhk net/minecraft/world/entity/vehicle/Boat
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_TYPE
	f DATA_ID_PADDLE_LEFT
	g DATA_ID_PADDLE_RIGHT
	ag DATA_ID_BUBBLE_TIME
	ah paddlePositions
	ai invFriction
	aj outOfControlTicks
	ak deltaRotation
	al lerpSteps
	am lerpX
	an lerpY
	ao lerpZ
	ap lerpYRot
	aq lerpXRot
	ar inputLeft
	as inputRight
	at inputUp
	au inputDown
	av waterLevel
	aw landFriction
	ax status
	ay oldStatus
	az lastYd
	aA isAboveBubbleColumn
	aB bubbleColumnDirectionIsDown
	aC bubbleMultiplier
	aD bubbleAngle
	aE bubbleAngleO
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	a (Laqu;Lapy;)F getEyeHeight
	aB ()Z isMovementNoisy
	e ()V defineSynchedData
	j (Lapx;)Z canCollideWith
	a (Lapx;Lapx;)Z canVehicleCollide
	aY ()Z canBeCollidedWith
	aT ()Z isPushable
	a (Lgc$a;Li$a;)Ldck; getRelativePortalPosition
	bb ()D getPassengersRidingOffset
	a (Laph;F)Z hurt
	k (Z)V onAboveBubbleCol
	i (Lapx;)V push
	g ()Lblu; getDropItem
	bl ()V animateHurt
	aS ()Z isPickable
	a (DDDFFIZ)V lerpTo
	bZ ()Lgc; getMotionDirection
	j ()V tick
	q ()V tickBubbleColumn
	h ()Ladn; getPaddleSound
	r ()V tickLerp
	a (ZZ)V setPaddleState
	a (IF)F getRowingTime
	s ()Lbhk$a; getStatus
	i ()F getWaterLevelAbove
	k ()F getGroundFriction
	t ()Z checkInWater
	u ()Lbhk$a; isUnderwater
	v ()V floatBoat
	x ()V controlBoat
	k (Lapx;)V positionRider
	b (Laqj;)Ldck; getDismountLocationForPassenger
	a (Lapx;)V clampRotation
	l (Lapx;)V onPassengerTurned
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	a (Lbft;Laoq;)Laor; interact
	a (DZLcee;Lfx;)V checkFallDamage
	a (I)Z getPaddleState
	a (F)V setDamage
	m ()F getDamage
	b (I)V setHurtTime
	n ()I getHurtTime
	d (I)V setBubbleTime
	z ()I getBubbleTime
	b (F)F getBubbleAngle
	c (I)V setHurtDir
	o ()I getHurtDir
	a (Lbhk$b;)V setType
	p ()Lbhk$b; getBoatType
	q (Lapx;)Z canAddPassenger
	cl ()Lapx; getControllingPassenger
	a (ZZZZ)V setInput
	P ()Loj; getAddEntityPacket
	aH ()Z isUnderWater
	<clinit> ()V <clinit>
bhk$1 net/minecraft/world/entity/vehicle/Boat$1
	a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
	<clinit> ()V <clinit>
bhk$a net/minecraft/world/entity/vehicle/Boat$Status
	a IN_WATER
	b UNDER_WATER
	c UNDER_FLOWING_WATER
	d ON_LAND
	e IN_AIR
	f $VALUES
	values ()[Lbhk$a; values
	valueOf (Ljava/lang/String;)Lbhk$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bhk$b net/minecraft/world/entity/vehicle/Boat$Type
	a OAK
	b SPRUCE
	c BIRCH
	d JUNGLE
	e ACACIA
	f DARK_OAK
	g name
	h planks
	i $VALUES
	values ()[Lbhk$b; values
	valueOf (Ljava/lang/String;)Lbhk$b; valueOf
	<init> (Ljava/lang/String;ILbul;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	b ()Lbul; getPlanks
	toString ()Ljava/lang/String; toString
	a (I)Lbhk$b; byId
	a (Ljava/lang/String;)Lbhk$b; byName
	<clinit> ()V <clinit>
bhl net/minecraft/world/entity/vehicle/DismountHelper
	<init> ()V <init>
	a (Lgc;)[[I offsetsForDirection
	a (D)Z isBlockFloorValid
	a (Lbrd;Laqj;Ldcf;)Z canDismountTo
	a (Lbrd;DDDLaqj;Laqu;)Ldck; findDismountLocation
	a (Lbqz;Lfx;)Ldde; nonClimbableShape
	a (Lfx;ILjava/util/function/Function;)D findCeilingFrom
	a (Laqb;Lbrd;Lfx;Z)Ldck; findSafeDismountLocation
	a (Lbrd;Lfx;)Ldde; lambda$findSafeDismountLocation$0
bhm net/minecraft/world/entity/vehicle/Minecart
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	a (Lbft;Laoq;)Laor; interact
	a (IIIZ)V activateMinecart
	o ()Lbhi$a; getMinecartType
bhn net/minecraft/world/entity/vehicle/MinecartChest
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	a (Laph;)V destroy
	Z_ ()I getContainerSize
	o ()Lbhi$a; getMinecartType
	q ()Lcee; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	a (ILbfs;)Lbhz; createMenu
bho net/minecraft/world/entity/vehicle/MinecartCommandBlock
	b DATA_ID_COMMAND_NAME
	c DATA_ID_LAST_OUTPUT
	d commandBlock
	e lastActivated
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	e ()V defineSynchedData
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	o ()Lbhi$a; getMinecartType
	q ()Lcee; getDefaultDisplayBlockState
	u ()Lbqv; getCommandBlock
	a (IIIZ)V activateMinecart
	a (Lbft;Laoq;)Laor; interact
	a (Lus;)V onSyncedDataUpdated
	ci ()Z onlyOpCanSetNbt
	v ()Lus; access$000
	x ()Lus; access$100
	<clinit> ()V <clinit>
bho$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	b this$0
	<init> (Lbho;)V <init>
	d ()Laag; getLevel
	e ()V onUpdated
	f ()Ldck; getPosition
	g ()Lbho; getMinecart
	h ()Ldb; createCommandSourceStack
bhp net/minecraft/world/entity/vehicle/MinecartFurnace
	d DATA_ID_FUEL
	e fuel
	b xPush
	c zPush
	f INGREDIENT
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	o ()Lbhi$a; getMinecartType
	e ()V defineSynchedData
	j ()V tick
	g ()D getMaxSpeed
	a (Laph;)V destroy
	c (Lfx;Lcee;)V moveAlongTrack
	i ()V applyNaturalSlowdown
	a (Lbft;Laoq;)Laor; interact
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	u ()Z hasFuel
	o (Z)V setHasFuel
	q ()Lcee; getDefaultDisplayBlockState
	<clinit> ()V <clinit>
bhq net/minecraft/world/entity/vehicle/MinecartHopper
	d enabled
	e cooldownTime
	f lastPosition
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	o ()Lbhi$a; getMinecartType
	q ()Lcee; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	Z_ ()I getContainerSize
	a (IIIZ)V activateMinecart
	u ()Z isEnabled
	o (Z)V setEnabled
	v ()Lbru; getLevel
	x ()D getLevelX
	z ()D getLevelY
	A ()D getLevelZ
	j ()V tick
	B ()Z suckInItems
	a (Laph;)V destroy
	b (Lmd;)V addAdditionalSaveData
	a (Lmd;)V readAdditionalSaveData
	m (I)V setCooldown
	C ()Z isOnCooldown
	a (ILbfs;)Lbhz; createMenu
bhr net/minecraft/world/entity/vehicle/MinecartSpawner
	b spawner
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	o ()Lbhi$a; getMinecartType
	q ()Lcee; getDefaultDisplayBlockState
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	a (B)V handleEntityEvent
	j ()V tick
	u ()Lbqw; getSpawner
	ci ()Z onlyOpCanSetNbt
bhr$1 net/minecraft/world/entity/vehicle/MinecartSpawner$1
	a this$0
	<init> (Lbhr;)V <init>
	a (I)V broadcastEvent
	a ()Lbru; getLevel
	b ()Lfx; getPos
bhs net/minecraft/world/entity/vehicle/MinecartTNT
	b fuse
	<init> (Laqb;Lbru;)V <init>
	<init> (Lbru;DDD)V <init>
	o ()Lbhi$a; getMinecartType
	q ()Lcee; getDefaultDisplayBlockState
	j ()V tick
	a (Laph;F)Z hurt
	a (Laph;)V destroy
	h (D)V explode
	b (FF)Z causeFallDamage
	a (IIIZ)V activateMinecart
	a (B)V handleEntityEvent
	u ()V primeFuse
	v ()I getFuse
	x ()Z isPrimed
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;F)F getBlockExplosionResistance
	a (Lbrm;Lbqz;Lfx;Lcee;F)Z shouldBlockExplode
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
bht net/minecraft/world/entity/vehicle/package-info
bhu net/minecraft/world/food/FoodConstants
	<init> ()V <init>
bhv net/minecraft/world/food/FoodData
	a foodLevel
	b saturationLevel
	c exhaustionLevel
	d tickTimer
	e lastFoodLevel
	<init> ()V <init>
	a (IF)V eat
	a (Lblu;Lbly;)V eat
	a (Lbft;)V tick
	a (Lmd;)V readAdditionalSaveData
	b (Lmd;)V addAdditionalSaveData
	a ()I getFoodLevel
	b ()I getLastFoodLevel
	c ()Z needsFood
	a (F)V addExhaustion
	d ()F getExhaustionLevel
	e ()F getSaturationLevel
	a (I)V setFoodLevel
	b (F)V setSaturation
	c (F)V setExhaustion
bhw net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	<init> (IFZZZLjava/util/List;)V <init>
	a ()I getNutrition
	b ()F getSaturationModifier
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
	<init> (IFZZZLjava/util/List;Lbhw$1;)V <init>
bhw$1 net/minecraft/world/food/FoodProperties$1
bhw$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	<init> ()V <init>
	a (I)Lbhw$a; nutrition
	a (F)Lbhw$a; saturationMod
	a ()Lbhw$a; meat
	b ()Lbhw$a; alwaysEat
	c ()Lbhw$a; fast
	a (Lapr;F)Lbhw$a; effect
	d ()Lbhw; build
bhx net/minecraft/world/food/Foods
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w HONEY_BOTTLE
	x MELON_SLICE
	y MUSHROOM_STEW
	z MUTTON
	A POISONOUS_POTATO
	B PORKCHOP
	C POTATO
	D PUFFERFISH
	E PUMPKIN_PIE
	F RABBIT
	G RABBIT_STEW
	H ROTTEN_FLESH
	I SALMON
	J SPIDER_EYE
	K SUSPICIOUS_STEW
	L SWEET_BERRIES
	M TROPICAL_FISH
	<init> ()V <init>
	a (I)Lbhw; stew
	<clinit> ()V <clinit>
bhy net/minecraft/world/food/package-info
bhz net/minecraft/world/inventory/AbstractContainerMenu
	c lastSlots
	a slots
	d dataSlots
	e menuType
	b containerId
	f changeUid
	g quickcraftType
	h quickcraftStatus
	i quickcraftSlots
	j containerListeners
	k unSynchedPlayers
	<init> (Lbjb;I)V <init>
	a (Lbij;Lbft;Lbul;)Z stillValid
	a ()Lbjb; getType
	a (Laok;I)V checkContainerSize
	a (Lbii;I)V checkContainerDataCount
	a (Lbjo;)Lbjo; addSlot
	a (Lbin;)Lbin; addDataSlot
	a (Lbii;)V addDataSlots
	a (Lbik;)V addSlotListener
	b (Lbik;)V removeSlotListener
	b ()Lgj; getItems
	c ()V broadcastChanges
	a (Lbft;I)Z clickMenuButton
	b (Laok;I)Lbjo; getSlotFor
	a (I)Lbjo; getSlot
	b (Lbft;I)Lbly; quickMoveStack
	a (IILbih;Lbft;)Lbly; clicked
	b (IILbih;Lbft;)Lbly; doClick
	a (Lbly;Lbly;)Z consideredTheSameItem
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	b (Lbft;)V removed
	a (Lbft;Lbru;Laok;)V clearContainer
	a (Laok;)V slotsChanged
	a (ILbly;)V setItem
	a (Ljava/util/List;)V setAll
	b (ILbly;)V addItem
	a (II)V setData
	a (Lbfs;)S backup
	c (Lbft;)Z isSynched
	a (Lbft;Z)V setSynched
	a (Lbft;)Z stillValid
	a (Lbly;IIZ)Z moveItemStackTo
	b (I)I getQuickcraftType
	c (I)I getQuickcraftHeader
	b (II)I getQuickcraftMask
	a (ILbft;)Z isValidQuickcraftType
	d ()V resetQuickCraft
	a (Lbjo;Lbly;Z)Z canItemQuickReplace
	a (Ljava/util/Set;ILbly;I)V getQuickCraftSlotCount
	b (Lbjo;)Z canDragTo
	a (Lccg;)I getRedstoneSignalFromBlockEntity
	b (Laok;)I getRedstoneSignalFromContainer
	e ()Ljava/lang/String; lambda$clicked$2
	f ()Ljava/lang/String; lambda$clicked$1
	a (Lbul;Lbft;Lbru;Lfx;)Ljava/lang/Boolean; lambda$stillValid$0
bia net/minecraft/world/inventory/AbstractFurnaceMenu
	d container
	e data
	c level
	f recipeType
	g recipeBookType
	<init> (Lbjb;Lboq;Lbjh;ILbfs;)V <init>
	<init> (Lbjb;Lboq;Lbjh;ILbfs;Laok;Lbii;)V <init>
	a (Lbfv;)V fillCraftSlotsStackedContents
	e ()V clearCraftingContent
	a (ZLbon;Laah;)V handlePlacement
	a (Lbon;)Z recipeMatches
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbly;)Z canSmelt
	b (Lbly;)Z isFuel
	j ()I getBurnProgress
	k ()I getLitProgress
	l ()Z isLit
	m ()Lbjh; getRecipeBookType
bib net/minecraft/world/inventory/AnvilMenu
	g LOGGER
	h repairItemCountCost
	i itemName
	j cost
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	a (Lcee;)Z isValidBlock
	b (Lbft;Z)Z mayPickup
	a (Lbft;Lbly;)Lbly; onTake
	e ()V createResult
	d (I)I calculateIncreasedRepairCost
	a (Ljava/lang/String;)V setItemName
	f ()I getCost
	a (Lbft;Lbru;Lfx;)V lambda$onTake$0
	<clinit> ()V <clinit>
bib$1 net/minecraft/world/inventory/AnvilMenu$1
	a $SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
	<clinit> ()V <clinit>
bic net/minecraft/world/inventory/BeaconMenu
	c beacon
	d paymentSlot
	e access
	f beaconData
	<init> (ILaok;)V <init>
	<init> (ILaok;Lbii;Lbij;)V <init>
	b (Lbft;)V removed
	a (Lbft;)Z stillValid
	a (II)V setData
	b (Lbft;I)Lbly; quickMoveStack
	e ()I getLevels
	f ()Lapp; getPrimaryEffect
	g ()Lapp; getSecondaryEffect
	c (II)V updateEffects
	h ()Z hasPayment
bic$1 net/minecraft/world/inventory/BeaconMenu$1
	a this$0
	<init> (Lbic;I)V <init>
	b (ILbly;)Z canPlaceItem
	V_ ()I getMaxStackSize
bic$a net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a this$0
	<init> (Lbic;Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a ()I getMaxStackSize
bid net/minecraft/world/inventory/BlastFurnaceMenu
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;Lbii;)V <init>
bie net/minecraft/world/inventory/BrewingStandMenu
	c brewingStand
	d brewingStandData
	e ingredientSlot
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;Lbii;)V <init>
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	e ()I getFuel
	f ()I getBrewingTicks
bie$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	<init> (Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a_ (Lbly;)Z mayPlaceItem
	a ()I getMaxStackSize
bie$b net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	<init> (Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a ()I getMaxStackSize
bie$c net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	<init> (Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a ()I getMaxStackSize
	a (Lbft;Lbly;)Lbly; onTake
	b_ (Lbly;)Z mayPlaceItem
bif net/minecraft/world/inventory/CartographyTableMenu
	d access
	e lastSoundTime
	c container
	f resultContainer
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	a (Lbft;)Z stillValid
	a (Laok;)V slotsChanged
	a (Lbly;Lbly;Lbly;)V setupResultSlot
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
	a (Lbft;Lbru;Lfx;)V lambda$removed$1
	a (Lbly;Lbly;Lbly;Lbru;Lfx;)V lambda$setupResultSlot$0
	a (Lbif;)J access$000
	a (Lbif;J)J access$002
bif$1 net/minecraft/world/inventory/CartographyTableMenu$1
	a this$0
	<init> (Lbif;I)V <init>
	X_ ()V setChanged
bif$2 net/minecraft/world/inventory/CartographyTableMenu$2
	a this$0
	<init> (Lbif;)V <init>
	X_ ()V setChanged
bif$3 net/minecraft/world/inventory/CartographyTableMenu$3
	a this$0
	<init> (Lbif;Laok;III)V <init>
	a (Lbly;)Z mayPlace
bif$4 net/minecraft/world/inventory/CartographyTableMenu$4
	a this$0
	<init> (Lbif;Laok;III)V <init>
	a (Lbly;)Z mayPlace
bif$5 net/minecraft/world/inventory/CartographyTableMenu$5
	a val$access
	b this$0
	<init> (Lbif;Laok;IIILbij;)V <init>
	a (Lbly;)Z mayPlace
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbru;Lfx;)V lambda$onTake$0
big net/minecraft/world/inventory/ChestMenu
	c container
	d containerRows
	<init> (Lbjb;ILbfs;I)V <init>
	a (ILbfs;)Lbig; oneRow
	b (ILbfs;)Lbig; twoRows
	c (ILbfs;)Lbig; threeRows
	d (ILbfs;)Lbig; fourRows
	e (ILbfs;)Lbig; fiveRows
	f (ILbfs;)Lbig; sixRows
	a (ILbfs;Laok;)Lbig; threeRows
	b (ILbfs;Laok;)Lbig; sixRows
	<init> (Lbjb;ILbfs;Laok;I)V <init>
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
	e ()Laok; getContainer
	f ()I getRowCount
bih net/minecraft/world/inventory/ClickType
	a PICKUP
	b QUICK_MOVE
	c SWAP
	d CLONE
	e THROW
	f QUICK_CRAFT
	g PICKUP_ALL
	h $VALUES
	values ()[Lbih; values
	valueOf (Ljava/lang/String;)Lbih; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bii net/minecraft/world/inventory/ContainerData
	a (I)I get
	a (II)V set
	a ()I getCount
bij net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Lbru;Lfx;)Lbij; create
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiConsumer;Lbru;Lfx;)Ljava/util/Optional; lambda$execute$0
	<clinit> ()V <clinit>
bij$1 net/minecraft/world/inventory/ContainerLevelAccess$1
	<init> ()V <init>
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
bij$2 net/minecraft/world/inventory/ContainerLevelAccess$2
	b val$level
	c val$pos
	<init> (Lbru;Lfx;)V <init>
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
bik net/minecraft/world/inventory/ContainerListener
	a (Lbhz;Lgj;)V refreshContainer
	a (Lbhz;ILbly;)V slotChanged
	a (Lbhz;II)V setContainerData
bil net/minecraft/world/inventory/CraftingContainer
	a items
	b width
	c height
	d menu
	<init> (Lbhz;II)V <init>
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	b (II)Lbly; getItem
	b (I)Lbly; removeItemNoUpdate
	a (II)Lbly; removeItem
	a (ILbly;)V setItem
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	Y_ ()V clearContent
	f ()I getHeight
	g ()I getWidth
	a (Lbfv;)V fillStackedContents
bim net/minecraft/world/inventory/CraftingMenu
	c craftSlots
	d resultSlots
	e access
	f player
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	a (ILbru;Lbft;Lbil;Lbjj;)V slotChangedCraftingGrid
	a (Laok;)V slotsChanged
	a (Lbfv;)V fillCraftSlotsStackedContents
	e ()V clearCraftingContent
	a (Lbon;)Z recipeMatches
	b (Lbft;)V removed
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	m ()Lbjh; getRecipeBookType
	a (Lbly;Lbft;Lbru;Lfx;)V lambda$quickMoveStack$2
	a (Lbft;Lbru;Lfx;)V lambda$removed$1
	a (Lbru;Lfx;)V lambda$slotsChanged$0
bin net/minecraft/world/inventory/DataSlot
	a prevValue
	<init> ()V <init>
	a (Lbii;I)Lbin; forContainer
	a ([II)Lbin; shared
	a ()Lbin; standalone
	b ()I get
	a (I)V set
	c ()Z checkAndClearUpdateFlag
bin$1 net/minecraft/world/inventory/DataSlot$1
	a val$container
	b val$dataId
	<init> (Lbii;I)V <init>
	b ()I get
	a (I)V set
bin$2 net/minecraft/world/inventory/DataSlot$2
	a val$storage
	b val$index
	<init> ([II)V <init>
	b ()I get
	a (I)V set
bin$3 net/minecraft/world/inventory/DataSlot$3
	a value
	<init> ()V <init>
	b ()I get
	a (I)V set
bio net/minecraft/world/inventory/DispenserMenu
	c dispenser
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;)V <init>
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
bip net/minecraft/world/inventory/EnchantmentMenu
	f enchantSlots
	g access
	h random
	i enchantmentSeed
	c costs
	d enchantClue
	e levelClue
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	a (Laok;)V slotsChanged
	a (Lbft;I)Z clickMenuButton
	a (Lbly;II)Ljava/util/List; getEnchantmentList
	e ()I getGoldCount
	f ()I getEnchantmentSeed
	b (Lbft;)V removed
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbft;Lbru;Lfx;)V lambda$removed$2
	a (Lbly;ILbft;ILbly;Lbru;Lfx;)V lambda$clickMenuButton$1
	a (Lbly;Lbru;Lfx;)V lambda$slotsChanged$0
bip$1 net/minecraft/world/inventory/EnchantmentMenu$1
	a this$0
	<init> (Lbip;I)V <init>
	X_ ()V setChanged
bip$2 net/minecraft/world/inventory/EnchantmentMenu$2
	a this$0
	<init> (Lbip;Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a ()I getMaxStackSize
bip$3 net/minecraft/world/inventory/EnchantmentMenu$3
	a this$0
	<init> (Lbip;Laok;III)V <init>
	a (Lbly;)Z mayPlace
biq net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	<init> (Lbia;Laok;III)V <init>
	a (Lbly;)Z mayPlace
	b (Lbly;)I getMaxStackSize
	c_ (Lbly;)Z isBucket
bir net/minecraft/world/inventory/FurnaceMenu
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;Lbii;)V <init>
bis net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	<init> (Lbft;Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a (I)Lbly; remove
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbly;I)V onQuickCraft
	c (Lbly;)V checkTakeAchievements
bit net/minecraft/world/inventory/GrindstoneMenu
	c resultSlots
	d repairSlots
	e access
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	a (Laok;)V slotsChanged
	e ()V createResult
	b (Lbly;Lbly;)Lbly; mergeEnchants
	a (Lbly;II)Lbly; removeNonCurses
	b (Lbft;)V removed
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbft;Lbru;Lfx;)V lambda$removed$1
	a (Ljava/util/Map$Entry;)Z lambda$removeNonCurses$0
	a (Lbit;)Laok; access$000
bit$1 net/minecraft/world/inventory/GrindstoneMenu$1
	a this$0
	<init> (Lbit;I)V <init>
	X_ ()V setChanged
bit$2 net/minecraft/world/inventory/GrindstoneMenu$2
	a this$0
	<init> (Lbit;Laok;III)V <init>
	a (Lbly;)Z mayPlace
bit$3 net/minecraft/world/inventory/GrindstoneMenu$3
	a this$0
	<init> (Lbit;Laok;III)V <init>
	a (Lbly;)Z mayPlace
bit$4 net/minecraft/world/inventory/GrindstoneMenu$4
	a val$access
	b this$0
	<init> (Lbit;Laok;IIILbij;)V <init>
	a (Lbly;)Z mayPlace
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbru;)I getExperienceAmount
	e (Lbly;)I getExperienceFromItem
	a (Lbru;Lfx;)V lambda$onTake$0
biu net/minecraft/world/inventory/HopperMenu
	c hopper
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;)V <init>
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
	e ()Laok; getContainer
biv net/minecraft/world/inventory/HorseInventoryMenu
	c horseContainer
	d horse
	<init> (ILbfs;Laok;Lbay;)V <init>
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
	e ()Laok; getContainer
biv$1 net/minecraft/world/inventory/HorseInventoryMenu$1
	a val$horse
	b this$0
	<init> (Lbiv;Laok;IIILbay;)V <init>
	a (Lbly;)Z mayPlace
	b ()Z isActive
biv$2 net/minecraft/world/inventory/HorseInventoryMenu$2
	a val$horse
	b this$0
	<init> (Lbiv;Laok;IIILbay;)V <init>
	a (Lbly;)Z mayPlace
	b ()Z isActive
	a ()I getMaxStackSize
biw net/minecraft/world/inventory/InventoryMenu
	c BLOCK_ATLAS
	d EMPTY_ARMOR_SLOT_HELMET
	e EMPTY_ARMOR_SLOT_CHESTPLATE
	f EMPTY_ARMOR_SLOT_LEGGINGS
	g EMPTY_ARMOR_SLOT_BOOTS
	h EMPTY_ARMOR_SLOT_SHIELD
	j TEXTURE_EMPTY_SLOTS
	k SLOT_IDS
	l craftSlots
	m resultSlots
	i active
	n owner
	<init> (Lbfs;ZLbft;)V <init>
	a (Lbfv;)V fillCraftSlotsStackedContents
	e ()V clearCraftingContent
	a (Lbon;)Z recipeMatches
	a (Laok;)V slotsChanged
	b (Lbft;)V removed
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	j ()Lbil; getCraftSlots
	m ()Lbjh; getRecipeBookType
	k ()[Lvk; access$000
	<clinit> ()V <clinit>
biw$1 net/minecraft/world/inventory/InventoryMenu$1
	a val$slot
	b this$0
	<init> (Lbiw;Laok;IIILaqc;)V <init>
	a ()I getMaxStackSize
	a (Lbly;)Z mayPlace
	a (Lbft;)Z mayPickup
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
biw$2 net/minecraft/world/inventory/InventoryMenu$2
	a this$0
	<init> (Lbiw;Laok;III)V <init>
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
bix net/minecraft/world/inventory/ItemCombinerMenu
	c resultSlots
	d inputSlots
	e access
	f player
	b (Lbft;Z)Z mayPickup
	a (Lbft;Lbly;)Lbly; onTake
	a (Lcee;)Z isValidBlock
	<init> (Lbjb;ILbfs;Lbij;)V <init>
	e ()V createResult
	a (Laok;)V slotsChanged
	b (Lbft;)V removed
	a (Lbft;)Z stillValid
	a (Lbly;)Z shouldQuickMoveToAdditionalSlot
	b (Lbft;I)Lbly; quickMoveStack
	a (Lbft;Lbru;Lfx;)Ljava/lang/Boolean; lambda$stillValid$1
	b (Lbft;Lbru;Lfx;)V lambda$removed$0
bix$1 net/minecraft/world/inventory/ItemCombinerMenu$1
	a this$0
	<init> (Lbix;I)V <init>
	X_ ()V setChanged
bix$2 net/minecraft/world/inventory/ItemCombinerMenu$2
	a this$0
	<init> (Lbix;Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a (Lbft;)Z mayPickup
	a (Lbft;Lbly;)Lbly; onTake
biy net/minecraft/world/inventory/LecternMenu
	c lectern
	d lecternData
	<init> (I)V <init>
	<init> (ILaok;Lbii;)V <init>
	a (Lbft;I)Z clickMenuButton
	a (II)V setData
	a (Lbft;)Z stillValid
	e ()Lbly; getBook
	f ()I getPage
biy$1 net/minecraft/world/inventory/LecternMenu$1
	a this$0
	<init> (Lbiy;Laok;III)V <init>
	d ()V setChanged
biz net/minecraft/world/inventory/LoomMenu
	c access
	d selectedBannerPatternIndex
	e slotUpdateListener
	f bannerSlot
	g dyeSlot
	h patternSlot
	i resultSlot
	j lastSoundTime
	k inputContainer
	l outputContainer
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	e ()I getSelectedBannerPatternIndex
	a (Lbft;)Z stillValid
	a (Lbft;I)Z clickMenuButton
	a (Laok;)V slotsChanged
	a (Ljava/lang/Runnable;)V registerUpdateListener
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
	j ()V setupResultSlot
	f ()Lbjo; getBannerSlot
	g ()Lbjo; getDyeSlot
	h ()Lbjo; getPatternSlot
	i ()Lbjo; getResultSlot
	a (Lbft;Lbru;Lfx;)V lambda$removed$1
	k ()V lambda$new$0
	a (Lbiz;)Ljava/lang/Runnable; access$000
	b (Lbiz;)Lbjo; access$100
	c (Lbiz;)Lbjo; access$200
	d (Lbiz;)Lbin; access$300
	e (Lbiz;)J access$400
	a (Lbiz;J)J access$402
biz$1 net/minecraft/world/inventory/LoomMenu$1
	a this$0
	<init> (Lbiz;I)V <init>
	X_ ()V setChanged
biz$2 net/minecraft/world/inventory/LoomMenu$2
	a this$0
	<init> (Lbiz;I)V <init>
	X_ ()V setChanged
biz$3 net/minecraft/world/inventory/LoomMenu$3
	a this$0
	<init> (Lbiz;Laok;III)V <init>
	a (Lbly;)Z mayPlace
biz$4 net/minecraft/world/inventory/LoomMenu$4
	a this$0
	<init> (Lbiz;Laok;III)V <init>
	a (Lbly;)Z mayPlace
biz$5 net/minecraft/world/inventory/LoomMenu$5
	a this$0
	<init> (Lbiz;Laok;III)V <init>
	a (Lbly;)Z mayPlace
biz$6 net/minecraft/world/inventory/LoomMenu$6
	a val$access
	b this$0
	<init> (Lbiz;Laok;IIILbij;)V <init>
	a (Lbly;)Z mayPlace
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbru;Lfx;)V lambda$onTake$0
bja net/minecraft/world/inventory/MenuConstructor
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
bjb net/minecraft/world/inventory/MenuType
	a GENERIC_9x1
	b GENERIC_9x2
	c GENERIC_9x3
	d GENERIC_9x4
	e GENERIC_9x5
	f GENERIC_9x6
	g GENERIC_3x3
	h ANVIL
	i BEACON
	j BLAST_FURNACE
	k BREWING_STAND
	l CRAFTING
	m ENCHANTMENT
	n FURNACE
	o GRINDSTONE
	p HOPPER
	q LECTERN
	r LOOM
	s MERCHANT
	t SHULKER_BOX
	u SMITHING
	v SMOKER
	w CARTOGRAPHY_TABLE
	x STONECUTTER
	y constructor
	a (Ljava/lang/String;Lbjb$a;)Lbjb; register
	<init> (Lbjb$a;)V <init>
	a (ILbfs;)Lbhz; create
	b (ILbfs;)Lbiy; lambda$static$0
	<clinit> ()V <clinit>
bjb$a net/minecraft/world/inventory/MenuType$MenuSupplier
	create (ILbfs;)Lbhz; create
bjc net/minecraft/world/inventory/MerchantContainer
	a merchant
	b itemStacks
	c activeOffer
	d selectionHint
	e futureXp
	<init> (Lbqr;)V <init>
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	d (I)Z isPaymentSlot
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	a (Lbft;)Z stillValid
	X_ ()V setChanged
	f ()V updateSellItem
	g ()Lbqs; getActiveOffer
	c (I)V setSelectionHint
	Y_ ()V clearContent
	h ()I getFutureXp
bjd net/minecraft/world/inventory/MerchantMenu
	c trader
	d tradeContainer
	e merchantLevel
	f showProgressBar
	g canRestock
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbqr;)V <init>
	a (Z)V setShowProgressBar
	a (Laok;)V slotsChanged
	d (I)V setSelectionHint
	a (Lbft;)Z stillValid
	e ()I getTraderXp
	f ()I getFutureTraderXp
	e (I)V setXp
	g ()I getTraderLevel
	f (I)V setMerchantLevel
	b (Z)V setCanRestock
	h ()Z canRestock
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	b (Lbft;I)Lbly; quickMoveStack
	k ()V playTradeSound
	b (Lbft;)V removed
	g (I)V tryMoveItems
	c (ILbly;)V moveFromInventoryToPaymentSlot
	b (Lbly;Lbly;)Z isSameItem
	a (Lbqt;)V setOffers
	i ()Lbqt; getOffers
	j ()Z showProgressBar
bje net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	g removeCount
	h merchant
	<init> (Lbft;Lbqr;Lbjc;III)V <init>
	a (Lbly;)Z mayPlace
	a (I)Lbly; remove
	a (Lbly;I)V onQuickCraft
	c (Lbly;)V checkTakeAchievements
	a (Lbft;Lbly;)Lbly; onTake
bjf net/minecraft/world/inventory/PlayerEnderChestContainer
	a activeChest
	<init> ()V <init>
	a (Lccs;)V setActiveChest
	a (Lmj;)V fromTag
	g ()Lmj; createTag
	a (Lbft;)Z stillValid
	c_ (Lbft;)V startOpen
	b_ (Lbft;)V stopOpen
bjg net/minecraft/world/inventory/RecipeBookMenu
	<init> (Lbjb;I)V <init>
	a (ZLbon;Laah;)V handlePlacement
	a (Lbfv;)V fillCraftSlotsStackedContents
	e ()V clearCraftingContent
	a (Lbon;)Z recipeMatches
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	m ()Lbjh; getRecipeBookType
bjh net/minecraft/world/inventory/RecipeBookType
	a CRAFTING
	b FURNACE
	c BLAST_FURNACE
	d SMOKER
	e $VALUES
	values ()[Lbjh; values
	valueOf (Ljava/lang/String;)Lbjh; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bji net/minecraft/world/inventory/RecipeHolder
	a (Lbon;)V setRecipeUsed
	ak_ ()Lbon; getRecipeUsed
	b (Lbft;)V awardUsedRecipes
	a (Lbru;Laah;Lbon;)Z setRecipeUsed
bjj net/minecraft/world/inventory/ResultContainer
	a itemStacks
	b recipeUsed
	<init> ()V <init>
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	Y_ ()V clearContent
	a (Lbon;)V setRecipeUsed
	ak_ ()Lbon; getRecipeUsed
bjk net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	g removeCount
	<init> (Lbft;Lbil;Laok;III)V <init>
	a (Lbly;)Z mayPlace
	a (I)Lbly; remove
	a (Lbly;I)V onQuickCraft
	b (I)V onSwapCraft
	c (Lbly;)V checkTakeAchievements
	a (Lbft;Lbly;)Lbly; onTake
bjl net/minecraft/world/inventory/ShulkerBoxMenu
	c container
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;)V <init>
	a (Lbft;)Z stillValid
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
bjm net/minecraft/world/inventory/ShulkerBoxSlot
	<init> (Laok;III)V <init>
	a (Lbly;)Z mayPlace
bjn net/minecraft/world/inventory/SimpleContainerData
	a ints
	<init> (I)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
bjo net/minecraft/world/inventory/Slot
	a slot
	c container
	d index
	e x
	f y
	<init> (Laok;III)V <init>
	a (Lbly;Lbly;)V onQuickCraft
	a (Lbly;I)V onQuickCraft
	b (I)V onSwapCraft
	c (Lbly;)V checkTakeAchievements
	a (Lbjo;)V swap
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbly;)Z mayPlace
	e ()Lbly; getItem
	f ()Z hasItem
	d (Lbly;)V set
	d ()V setChanged
	a ()I getMaxStackSize
	b (Lbly;)I getMaxStackSize
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	a (I)Lbly; remove
	a (Laok;I)Z isAt
	a (Lbft;)Z mayPickup
	b ()Z isActive
bjp net/minecraft/world/inventory/SmithingMenu
	g level
	h selectedRecipe
	i recipes
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	a (Lcee;)Z isValidBlock
	b (Lbft;Z)Z mayPickup
	a (Lbft;Lbly;)Lbly; onTake
	d (I)V shrinkStackInSlot
	e ()V createResult
	a (Lbly;)Z shouldQuickMoveToAdditionalSlot
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	a (Lbly;Lbpe;)Z lambda$shouldQuickMoveToAdditionalSlot$1
	a (Lbru;Lfx;)V lambda$onTake$0
bjq net/minecraft/world/inventory/SmokerMenu
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Laok;Lbii;)V <init>
bjr net/minecraft/world/inventory/StackedContentsCompatible
	a (Lbfv;)V fillStackedContents
bjs net/minecraft/world/inventory/StonecutterMenu
	f access
	g selectedRecipeIndex
	h level
	i recipes
	j input
	k lastSoundTime
	c inputSlot
	d resultSlot
	l slotUpdateListener
	e container
	m resultContainer
	<init> (ILbfs;)V <init>
	<init> (ILbfs;Lbij;)V <init>
	e ()I getSelectedRecipeIndex
	f ()Ljava/util/List; getRecipes
	g ()I getNumRecipes
	h ()Z hasInputItem
	a (Lbft;)Z stillValid
	a (Lbft;I)Z clickMenuButton
	d (I)Z isValidRecipeIndex
	a (Laok;)V slotsChanged
	a (Laok;Lbly;)V setupRecipeList
	i ()V setupResultSlot
	a ()Lbjb; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lbly;Lbjo;)Z canTakeItemForPickAll
	b (Lbft;I)Lbly; quickMoveStack
	b (Lbft;)V removed
	a (Lbft;Lbru;Lfx;)V lambda$removed$1
	j ()V lambda$new$0
	a (Lbjs;)Ljava/lang/Runnable; access$000
	b (Lbjs;)Lbjj; access$100
	c (Lbjs;)V access$200
	d (Lbjs;)J access$300
	a (Lbjs;J)J access$302
bjs$1 net/minecraft/world/inventory/StonecutterMenu$1
	a this$0
	<init> (Lbjs;I)V <init>
	X_ ()V setChanged
bjs$2 net/minecraft/world/inventory/StonecutterMenu$2
	a val$access
	b this$0
	<init> (Lbjs;Laok;IIILbij;)V <init>
	a (Lbly;)Z mayPlace
	a (Lbft;Lbly;)Lbly; onTake
	a (Lbru;Lfx;)V lambda$onTake$0
bjt net/minecraft/world/inventory/package-info
bju net/minecraft/world/item/AirItem
	a block
	<init> (Lbul;Lblu$a;)V <init>
	a ()Ljava/lang/String; getDescriptionId
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
bjv net/minecraft/world/item/ArmorItem
	j ARMOR_MODIFIER_UUID_PER_SLOT
	a DISPENSE_ITEM_BEHAVIOR
	b slot
	k defense
	l toughness
	c knockbackResistance
	d material
	m defaultModifiers
	a (Lfy;Lbly;)Z dispenseArmor
	<init> (Lbjw;Laqc;Lblu$a;)V <init>
	b ()Laqc; getSlot
	c ()I getEnchantmentValue
	ab_ ()Lbjw; getMaterial
	a (Lbly;Lbly;)Z isValidRepairItem
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Laqc;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	e ()I getDefense
	f ()F getToughness
	<clinit> ()V <clinit>
bjv$1 net/minecraft/world/item/ArmorItem$1
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
bjw net/minecraft/world/item/ArmorMaterial
	a (Laqc;)I getDurabilityForSlot
	b (Laqc;)I getDefenseForSlot
	a ()I getEnchantmentValue
	b ()Ladn; getEquipSound
	c ()Lbok; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
	f ()F getKnockbackResistance
bjx net/minecraft/world/item/ArmorMaterials
	a LEATHER
	b CHAIN
	c IRON
	d GOLD
	e DIAMOND
	f TURTLE
	g NETHERITE
	h HEALTH_PER_SLOT
	i name
	j durabilityMultiplier
	k slotProtections
	l enchantmentValue
	m sound
	n toughness
	o knockbackResistance
	p repairIngredient
	q $VALUES
	values ()[Lbjx; values
	valueOf (Ljava/lang/String;)Lbjx; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;I[IILadn;FFLjava/util/function/Supplier;)V <init>
	a (Laqc;)I getDurabilityForSlot
	b (Laqc;)I getDefenseForSlot
	a ()I getEnchantmentValue
	b ()Ladn; getEquipSound
	c ()Lbok; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
	f ()F getKnockbackResistance
	g ()Lbok; lambda$static$6
	h ()Lbok; lambda$static$5
	i ()Lbok; lambda$static$4
	j ()Lbok; lambda$static$3
	k ()Lbok; lambda$static$2
	l ()Lbok; lambda$static$1
	m ()Lbok; lambda$static$0
	<clinit> ()V <clinit>
bjy net/minecraft/world/item/ArmorStandItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbck;Ljava/util/Random;)V randomizePose
	a (Lapx;)Z lambda$useOn$0
bjz net/minecraft/world/item/ArrowItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbly;Laqj;)Lbfx; createArrow
bka net/minecraft/world/item/AxeItem
	c DIGGABLE_MATERIALS
	d OTHER_DIGGABLE_BLOCKS
	a STRIPABLES
	<init> (Lbne;FFLblu$a;)V <init>
	a (Lbly;Lcee;)F getDestroySpeed
	a (Lbnx;)Laor; useOn
	a (Lbnx;Lbft;)V lambda$useOn$0
	<clinit> ()V <clinit>
bkb net/minecraft/world/item/BannerItem
	<init> (Lbul;Lbul;Lblu$a;)V <init>
	a (Lbly;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	b ()Lbku; getColor
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
bkc net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	<init> (Lcby;Lblu$a;)V <init>
	b ()Lcby; getBannerPattern
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	d ()Lnx; getDisplayName
bkd net/minecraft/world/item/BedItem
	<init> (Lbul;Lblu$a;)V <init>
	a (Lbnv;Lcee;)Z placeBlock
bke net/minecraft/world/item/BlockItem
	a block
	<init> (Lbul;Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbnv;)Laor; place
	a (Lcee;)Ladn; getPlaceSound
	b (Lbnv;)Lbnv; updatePlacementContext
	a (Lfx;Lbru;Lbft;Lbly;Lcee;)Z updateCustomBlockEntityTag
	c (Lbnv;)Lcee; getPlacementState
	a (Lfx;Lbru;Lbly;Lcee;)Lcee; updateBlockStateFromTag
	a (Lcee;Lcfg;Ljava/lang/String;)Lcee; updateState
	b (Lbnv;Lcee;)Z canPlace
	d ()Z mustSurvive
	a (Lbnv;Lcee;)Z placeBlock
	a (Lbru;Lbft;Lfx;Lbly;)Z updateCustomBlockEntityTag
	a ()Ljava/lang/String; getDescriptionId
	a (Lbkp;Lgj;)V fillItemCategory
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	e ()Lbul; getBlock
	a (Ljava/util/Map;Lblu;)V registerBlocks
	a (Lcee;Lcfg;Ljava/lang/Comparable;)Lcee; lambda$updateState$0
bkf net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	<init> (Lbhk$b;Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
	<clinit> ()V <clinit>
bkg net/minecraft/world/item/BoneMealItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbly;Lbru;Lfx;)Z growCrop
	a (Lbly;Lbru;Lfx;Lgc;)Z growWaterPlant
	a (Lbrv;Lfx;I)V addGrowthParticles
bkh net/minecraft/world/item/BookItem
	<init> (Lblu$a;)V <init>
	f_ (Lbly;)Z isEnchantable
	c ()I getEnchantmentValue
bki net/minecraft/world/item/BottleItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Lbft;Lbly;)Lbly; turnBottleIntoItem
	a (Lapw;)Z lambda$use$0
bkj net/minecraft/world/item/BowItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Laqj;I)V releaseUsing
	a (I)F getPowerForTime
	e_ (Lbly;)I getUseDuration
	d_ (Lbly;)Lbnk; getUseAnimation
	a (Lbru;Lbft;Laoq;)Laos; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	d ()I getDefaultProjectileRange
	a (Lbft;Lbft;)V lambda$releaseUsing$0
bkk net/minecraft/world/item/BowlFoodItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
bkl net/minecraft/world/item/BucketItem
	a content
	<init> (Lcut;Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Lbft;)Lbly; getEmptySuccessItem
	a (Lbru;Lbly;Lfx;)V checkExtraContent
	a (Lbft;Lbru;Lfx;Ldcg;)Z emptyBucket
	a (Lbft;Lbrv;Lfx;)V playEmptySound
bkm net/minecraft/world/item/ChorusFruitItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
bkn net/minecraft/world/item/CompassItem
	a LOGGER
	<init> (Lblu$a;)V <init>
	d (Lbly;)Z isLodestoneCompass
	e (Lbly;)Z isFoil
	a (Lmd;)Ljava/util/Optional; getLodestoneDimension
	a (Lbly;Lbru;Lapx;IZ)V inventoryTick
	a (Lbnx;)Laor; useOn
	a (Lvj;Lfx;Lmd;)V addLodestoneTags
	f (Lbly;)Ljava/lang/String; getDescriptionId
	a (Lmd;Lmt;)V lambda$addLodestoneTags$0
	<clinit> ()V <clinit>
bko net/minecraft/world/item/ComplexItem
	<init> (Lblu$a;)V <init>
	ac_ ()Z isComplex
	a (Lbly;Lbru;Lbft;)Loj; getUpdatePacket
bkp net/minecraft/world/item/CreativeModeTab
	a TABS
	b TAB_BUILDING_BLOCKS
	c TAB_DECORATIONS
	d TAB_REDSTONE
	e TAB_TRANSPORTATION
	f TAB_MISC
	g TAB_SEARCH
	h TAB_FOOD
	i TAB_TOOLS
	j TAB_COMBAT
	k TAB_BREWING
	l TAB_MATERIALS
	m TAB_HOTBAR
	n TAB_INVENTORY
	o id
	p langId
	q displayName
	r recipeFolderName
	s backgroundSuffix
	t canScroll
	u showTitle
	v enchantmentCategories
	w iconItemStack
	<init> (ILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getRecipeFolderName
	c ()Lnr; getDisplayName
	d ()Lbly; getIconItem
	e ()Lbly; makeIcon
	f ()Ljava/lang/String; getBackgroundSuffix
	a (Ljava/lang/String;)Lbkp; setBackgroundSuffix
	b (Ljava/lang/String;)Lbkp; setRecipeFolderName
	g ()Z showTitle
	h ()Lbkp; hideTitle
	i ()Z canScroll
	j ()Lbkp; hideScroll
	k ()I getColumn
	l ()Z isTopRow
	m ()Z isAlignedRight
	n ()[Lbpq; getEnchantmentCategories
	a ([Lbpq;)Lbkp; setEnchantmentCategories
	a (Lbpq;)Z hasEnchantmentCategory
	a (Lgj;)V fillItemList
	<clinit> ()V <clinit>
bkp$1 net/minecraft/world/item/CreativeModeTab$1
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$2 net/minecraft/world/item/CreativeModeTab$10
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$3 net/minecraft/world/item/CreativeModeTab$11
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
	a (Lgj;)V fillItemList
	m ()Z isAlignedRight
bkp$4 net/minecraft/world/item/CreativeModeTab$12
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$5 net/minecraft/world/item/CreativeModeTab$2
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$6 net/minecraft/world/item/CreativeModeTab$3
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$7 net/minecraft/world/item/CreativeModeTab$4
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$8 net/minecraft/world/item/CreativeModeTab$5
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$9 net/minecraft/world/item/CreativeModeTab$6
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$10 net/minecraft/world/item/CreativeModeTab$7
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$11 net/minecraft/world/item/CreativeModeTab$8
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkp$12 net/minecraft/world/item/CreativeModeTab$9
	<init> (ILjava/lang/String;)V <init>
	e ()Lbly; makeIcon
bkq net/minecraft/world/item/CrossbowItem
	c startSoundPlayed
	d midLoadSoundPlayed
	<init> (Lblu$a;)V <init>
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Lbru;Laqj;I)V releaseUsing
	a (Laqj;Lbly;)Z tryLoadProjectiles
	a (Laqj;Lbly;Lbly;ZZ)Z loadProjectile
	d (Lbly;)Z isCharged
	a (Lbly;Z)V setCharged
	b (Lbly;Lbly;)V addChargedProjectile
	k (Lbly;)Ljava/util/List; getChargedProjectiles
	l (Lbly;)V clearChargedProjectiles
	a (Lbly;Lblu;)Z containsChargedProjectile
	a (Lbru;Laqj;Laoq;Lbly;Lbly;FZFFF)V shootProjectile
	a (Lbru;Laqj;Lbly;Lbly;)Lbfx; getArrow
	a (Lbru;Laqj;Laoq;Lbly;FF)V performShooting
	a (Ljava/util/Random;)[F getShotPitches
	a (Z)F getRandomShotPitch
	a (Lbru;Laqj;Lbly;)V onCrossbowShot
	a (Lbru;Laqj;Lbly;I)V onUseTick
	e_ (Lbly;)I getUseDuration
	g (Lbly;)I getChargeDuration
	d_ (Lbly;)Lbnk; getUseAnimation
	a (I)Ladn; getStartSound
	a (ILbly;)F getPowerForTime
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	m (Lbly;)F getShootingPower
	d ()I getDefaultProjectileRange
	a (Laoq;Laqj;)V lambda$shootProjectile$1
	a (Lblu;Lbly;)Z lambda$containsChargedProjectile$0
bkr net/minecraft/world/item/DebugStickItem
	<init> (Lblu$a;)V <init>
	e (Lbly;)Z isFoil
	a (Lcee;Lbru;Lfx;Lbft;)Z canAttackBlock
	a (Lbnx;)Laor; useOn
	a (Lbft;Lcee;Lbrv;Lfx;ZLbly;)V handleInteraction
	a (Lcee;Lcfg;Z)Lcee; cycleState
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lbft;Lnr;)V message
	a (Lcee;Lcfg;)Ljava/lang/String; getNameHelper
bks net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamageBaseline
	d defaultModifiers
	<init> (FFLbne;Ljava/util/Set;Lblu$a;)V <init>
	a (Lbly;Lcee;)F getDestroySpeed
	a (Lbly;Laqj;Laqj;)Z hurtEnemy
	a (Lbly;Lbru;Lcee;Lfx;Laqj;)Z mineBlock
	a (Laqc;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	d ()F getAttackDamage
	a (Laqj;)V lambda$mineBlock$1
	b (Laqj;)V lambda$hurtEnemy$0
bkt net/minecraft/world/item/DoubleHighBlockItem
	<init> (Lbul;Lblu$a;)V <init>
	a (Lbnv;Lcee;)Z placeBlock
bku net/minecraft/world/item/DyeColor
	a WHITE
	b ORANGE
	c MAGENTA
	d LIGHT_BLUE
	e YELLOW
	f LIME
	g PINK
	h GRAY
	i LIGHT_GRAY
	j CYAN
	k PURPLE
	l BLUE
	m BROWN
	n GREEN
	o RED
	p BLACK
	q BY_ID
	r BY_FIREWORK_COLOR
	s id
	t name
	u color
	v textureDiffuseColor
	w textureDiffuseColorBGR
	x textureDiffuseColors
	y fireworkColor
	z textColor
	A $VALUES
	values ()[Lbku; values
	valueOf (Ljava/lang/String;)Lbku; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;ILcuy;II)V <init>
	b ()I getId
	c ()Ljava/lang/String; getName
	d ()I getTextureDiffuseColorBGR
	e ()[F getTextureDiffuseColors
	f ()Lcuy; getMaterialColor
	g ()I getFireworkColor
	h ()I getTextColor
	a (I)Lbku; byId
	a (Ljava/lang/String;Lbku;)Lbku; byName
	b (I)Lbku; byFireworkColor
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	a (Lbku;)Lbku; lambda$static$2
	b (Lbku;)Ljava/lang/Integer; lambda$static$1
	c (I)[Lbku; lambda$static$0
	<clinit> ()V <clinit>
bkv net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	<init> (Lbku;Lblu$a;)V <init>
	a (Lbly;Lbft;Laqj;Laoq;)Laor; interactLivingEntity
	d ()Lbku; getDyeColor
	a (Lbku;)Lbkv; byColor
	<clinit> ()V <clinit>
bkw net/minecraft/world/item/DyeableArmorItem
	<init> (Lbjw;Laqc;Lblu$a;)V <init>
bkx net/minecraft/world/item/DyeableHorseArmorItem
	<init> (ILjava/lang/String;Lblu$a;)V <init>
bky net/minecraft/world/item/DyeableLeatherItem
	a (Lbly;)Z hasCustomColor
	b (Lbly;)I getColor
	c (Lbly;)V clearColor
	a (Lbly;I)V setColor
	a (Lbly;Ljava/util/List;)Lbly; dyeArmor
bkz net/minecraft/world/item/EggItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
bla net/minecraft/world/item/ElytraItem
	<init> (Lblu$a;)V <init>
	d (Lbly;)Z isFlyEnabled
	a (Lbly;Lbly;)Z isValidRepairItem
	a (Lbru;Lbft;Laoq;)Laos; use
blb net/minecraft/world/item/EmptyMapItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
blc net/minecraft/world/item/EnchantedBookItem
	<init> (Lblu$a;)V <init>
	e (Lbly;)Z isFoil
	f_ (Lbly;)Z isEnchantable
	d (Lbly;)Lmj; getEnchantments
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	a (Lbly;Lbps;)V addEnchantment
	a (Lbps;)Lbly; createForEnchantment
	a (Lbkp;Lgj;)V fillItemCategory
bld net/minecraft/world/item/EnchantedGoldenAppleItem
	<init> (Lblu$a;)V <init>
	e (Lbly;)Z isFoil
ble net/minecraft/world/item/EndCrystalItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	e (Lbly;)Z isFoil
blf net/minecraft/world/item/EnderEyeItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbru;Lbft;Laoq;)Laos; use
blg net/minecraft/world/item/EnderpearlItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
blh net/minecraft/world/item/ExperienceBottleItem
	<init> (Lblu$a;)V <init>
	e (Lbly;)Z isFoil
	a (Lbru;Lbft;Laoq;)Laos; use
bli net/minecraft/world/item/FireChargeItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbru;Lfx;)V playSound
blj net/minecraft/world/item/FireworkRocketItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
blj$a net/minecraft/world/item/FireworkRocketItem$Shape
	a SMALL_BALL
	b LARGE_BALL
	c STAR
	d CREEPER
	e BURST
	f BY_ID
	g id
	h name
	i $VALUES
	values ()[Lblj$a; values
	valueOf (Ljava/lang/String;)Lblj$a; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	a (I)Lblj$a; byId
	b (I)[Lblj$a; lambda$static$1
	a (Lblj$a;)I lambda$static$0
	<clinit> ()V <clinit>
blk net/minecraft/world/item/FireworkStarItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	a (Lmd;Ljava/util/List;)V appendHoverText
	a (Lnx;[I)Lnr; appendColors
	a (I)Lnr; getColorName
bll net/minecraft/world/item/FishBucketItem
	a type
	<init> (Laqb;Lcut;Lblu$a;)V <init>
	a (Lbru;Lbly;Lfx;)V checkExtraContent
	a (Lbft;Lbrv;Lfx;)V playEmptySound
	a (Laag;Lbly;Lfx;)V spawn
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
blm net/minecraft/world/item/FishingRodItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
	c ()I getEnchantmentValue
	a (Laoq;Lbft;)V lambda$use$0
bln net/minecraft/world/item/FlintAndSteelItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbnx;Lbft;)V lambda$useOn$1
	b (Lbnx;Lbft;)V lambda$useOn$0
blo net/minecraft/world/item/FoodOnAStickItem
	a canInteractWith
	b consumeItemDamage
	<init> (Lblu$a;Laqb;I)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Laoq;Lbft;)V lambda$use$0
blp net/minecraft/world/item/GameMasterBlockItem
	<init> (Lbul;Lblu$a;)V <init>
	c (Lbnv;)Lcee; getPlacementState
blq net/minecraft/world/item/HangingEntityItem
	a type
	<init> (Laqb;Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbft;Lgc;Lbly;Lfx;)Z mayPlace
blr net/minecraft/world/item/HoeItem
	c DIGGABLES
	a TILLABLES
	<init> (Lbne;IFLblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbnx;Lbft;)V lambda$useOn$0
	<clinit> ()V <clinit>
bls net/minecraft/world/item/HoneyBottleItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
	e_ (Lbly;)I getUseDuration
	d_ (Lbly;)Lbnk; getUseAnimation
	ae_ ()Ladn; getDrinkingSound
	ad_ ()Ladn; getEatingSound
	a (Lbru;Lbft;Laoq;)Laos; use
blt net/minecraft/world/item/HorseArmorItem
	a protection
	b texture
	<init> (ILjava/lang/String;Lblu$a;)V <init>
	f ()Lvk; getTexture
	g ()I getProtection
blu net/minecraft/world/item/Item
	e BY_BLOCK
	f BASE_ATTACK_DAMAGE_UUID
	g BASE_ATTACK_SPEED_UUID
	h random
	i category
	a rarity
	b maxStackSize
	c maxDamage
	d isFireResistant
	j craftingRemainingItem
	k descriptionId
	l foodProperties
	a (Lblu;)I getId
	b (I)Lblu; byId
	a (Lbul;)Lblu; byBlock
	<init> (Lblu$a;)V <init>
	a (Lbru;Laqj;Lbly;I)V onUseTick
	b (Lmd;)Z verifyTagAfterLoad
	a (Lcee;Lbru;Lfx;Lbft;)Z canAttackBlock
	h ()Lblu; asItem
	a (Lbnx;)Laor; useOn
	a (Lbly;Lcee;)F getDestroySpeed
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
	i ()I getMaxStackSize
	j ()I getMaxDamage
	k ()Z canBeDepleted
	a (Lbly;Laqj;Laqj;)Z hurtEnemy
	a (Lbly;Lbru;Lcee;Lfx;Laqj;)Z mineBlock
	b (Lcee;)Z isCorrectToolForDrops
	a (Lbly;Lbft;Laqj;Laoq;)Laor; interactLivingEntity
	l ()Lnr; getDescription
	toString ()Ljava/lang/String; toString
	m ()Ljava/lang/String; getOrCreateDescriptionId
	a ()Ljava/lang/String; getDescriptionId
	f (Lbly;)Ljava/lang/String; getDescriptionId
	n ()Z shouldOverrideMultiplayerNbt
	o ()Lblu; getCraftingRemainingItem
	p ()Z hasCraftingRemainingItem
	a (Lbly;Lbru;Lapx;IZ)V inventoryTick
	b (Lbly;Lbru;Lbft;)V onCraftedBy
	ac_ ()Z isComplex
	d_ (Lbly;)Lbnk; getUseAnimation
	e_ (Lbly;)I getUseDuration
	a (Lbly;Lbru;Laqj;I)V releaseUsing
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	h (Lbly;)Lnr; getName
	e (Lbly;)Z isFoil
	i (Lbly;)Lbmm; getRarity
	f_ (Lbly;)Z isEnchantable
	a (Lbru;Lbft;Lbrc$b;)Ldcg; getPlayerPOVHitResult
	c ()I getEnchantmentValue
	a (Lbkp;Lgj;)V fillItemCategory
	a (Lbkp;)Z allowdedIn
	q ()Lbkp; getItemCategory
	a (Lbly;Lbly;)Z isValidRepairItem
	a (Laqc;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	j (Lbly;)Z useOnRelease
	r ()Lbly; getDefaultInstance
	a (Laej;)Z is
	s ()Z isEdible
	t ()Lbhw; getFoodProperties
	ae_ ()Ladn; getDrinkingSound
	ad_ ()Ladn; getEatingSound
	u ()Z isFireResistant
	a (Laph;)Z canBeHurtBy
	<clinit> ()V <clinit>
blu$1 net/minecraft/world/item/Item$1
	a $SwitchMap$net$minecraft$world$item$Rarity
	<clinit> ()V <clinit>
blu$a net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d category
	e rarity
	f foodProperties
	g isFireResistant
	<init> ()V <init>
	a (Lbhw;)Lblu$a; food
	a (I)Lblu$a; stacksTo
	b (I)Lblu$a; defaultDurability
	c (I)Lblu$a; durability
	a (Lblu;)Lblu$a; craftRemainder
	a (Lbkp;)Lblu$a; tab
	a (Lbmm;)Lblu$a; rarity
	a ()Lblu$a; fireResistant
	a (Lblu$a;)Lbkp; access$000
	b (Lblu$a;)Lbmm; access$100
	c (Lblu$a;)Lblu; access$200
	d (Lblu$a;)I access$300
	e (Lblu$a;)I access$400
	f (Lblu$a;)Lbhw; access$500
	g (Lblu$a;)Z access$600
blv net/minecraft/world/item/ItemCooldowns
	a cooldowns
	b tickCount
	<init> ()V <init>
	a (Lblu;)Z isOnCooldown
	a (Lblu;F)F getCooldownPercent
	a ()V tick
	a (Lblu;I)V addCooldown
	b (Lblu;)V removeCooldown
	b (Lblu;I)V onCooldownStarted
	c (Lblu;)V onCooldownEnded
blv$1 net/minecraft/world/item/ItemCooldowns$1
blv$a net/minecraft/world/item/ItemCooldowns$CooldownInstance
	b startTime
	c endTime
	a this$0
	<init> (Lblv;II)V <init>
	a (Lblv$a;)I access$000
	b (Lblv$a;)I access$100
	<init> (Lblv;IILblv$1;)V <init>
blw net/minecraft/world/item/ItemFrameItem
	<init> (Lblu$a;)V <init>
	a (Lbft;Lgc;Lbly;Lfx;)Z mayPlace
blx net/minecraft/world/item/ItemNameBlockItem
	<init> (Lbul;Lblu$a;)V <init>
	a ()Ljava/lang/String; getDescriptionId
bly net/minecraft/world/item/ItemStack
	a CODEC
	d LOGGER
	b EMPTY
	c ATTRIBUTE_MODIFIER_FORMAT
	e LORE_STYLE
	f count
	g popTime
	h item
	i tag
	j emptyCacheFlag
	k entityRepresentation
	l cachedBreakBlock
	m cachedBreakBlockResult
	n cachedPlaceBlock
	o cachedPlaceBlockResult
	<init> (Lbrt;)V <init>
	<init> (Lbrt;ILjava/util/Optional;)V <init>
	<init> (Lbrt;I)V <init>
	I ()V updateEmptyCacheFlag
	<init> (Lmd;)V <init>
	a (Lmd;)Lbly; of
	a ()Z isEmpty
	a (I)Lbly; split
	b ()Lblu; getItem
	a (Lbnx;)Laor; useOn
	a (Lcee;)F getDestroySpeed
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbru;Laqj;)Lbly; finishUsingItem
	b (Lmd;)Lmd; save
	c ()I getMaxStackSize
	d ()Z isStackable
	e ()Z isDamageableItem
	f ()Z isDamaged
	g ()I getDamageValue
	b (I)V setDamageValue
	h ()I getMaxDamage
	a (ILjava/util/Random;Laah;)Z hurt
	a (ILaqj;Ljava/util/function/Consumer;)V hurtAndBreak
	a (Laqj;Lbft;)V hurtEnemy
	a (Lbru;Lcee;Lfx;Lbft;)V mineBlock
	b (Lcee;)Z isCorrectToolForDrops
	a (Lbft;Laqj;Laoq;)Laor; interactLivingEntity
	i ()Lbly; copy
	a (Lbly;Lbly;)Z tagMatches
	b (Lbly;Lbly;)Z matches
	c (Lbly;)Z matches
	c (Lbly;Lbly;)Z isSame
	d (Lbly;Lbly;)Z isSameIgnoreDurability
	a (Lbly;)Z sameItem
	b (Lbly;)Z sameItemStackIgnoreDurability
	j ()Ljava/lang/String; getDescriptionId
	toString ()Ljava/lang/String; toString
	a (Lbru;Lapx;IZ)V inventoryTick
	a (Lbru;Lbft;I)V onCraftedBy
	k ()I getUseDuration
	l ()Lbnk; getUseAnimation
	a (Lbru;Laqj;I)V releaseUsing
	m ()Z useOnRelease
	n ()Z hasTag
	o ()Lmd; getTag
	p ()Lmd; getOrCreateTag
	a (Ljava/lang/String;)Lmd; getOrCreateTagElement
	b (Ljava/lang/String;)Lmd; getTagElement
	c (Ljava/lang/String;)V removeTagKey
	q ()Lmj; getEnchantmentTags
	c (Lmd;)V setTag
	r ()Lnr; getHoverName
	a (Lnr;)Lbly; setHoverName
	s ()V resetHoverName
	t ()Z hasCustomHoverName
	a (Lbft;Lbni;)Ljava/util/List; getTooltipLines
	a (ILbly$a;)Z shouldShowInTooltip
	J ()I getHideFlags
	a (Lbly$a;)V hideTooltipPart
	a (Ljava/util/List;Lmj;)V appendEnchantmentNames
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	u ()Z hasFoil
	v ()Lbmm; getRarity
	w ()Z isEnchantable
	a (Lbpp;I)V enchant
	x ()Z isEnchanted
	a (Ljava/lang/String;Lmt;)V addTagElement
	y ()Z isFramed
	a (Lapx;)V setEntityRepresentation
	z ()Lbcm; getFrame
	A ()Lapx; getEntityRepresentation
	B ()I getBaseRepairCost
	c (I)V setRepairCost
	a (Laqc;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lard;Larg;Laqc;)V addAttributeModifier
	C ()Lnr; getDisplayName
	a (Lcei;Lcei;)Z areSameBlocks
	a (Lael;Lcei;)Z hasAdventureModeBreakTagForBlock
	b (Lael;Lcei;)Z hasAdventureModePlaceTagForBlock
	D ()I getPopTime
	d (I)V setPopTime
	E ()I getCount
	e (I)V setCount
	f (I)V grow
	g (I)V shrink
	b (Lbru;Laqj;I)V onUseTick
	F ()Z isEdible
	G ()Ladn; getDrinkingSound
	H ()Ladn; getEatingSound
	a (Lob;)Lob; lambda$getDisplayName$7
	a (Lnx;)Lnx; lambda$expandBlockState$6
	a (Ljava/util/List;Lmd;Lbpp;)V lambda$appendEnchantmentNames$5
	a (Ljava/text/DecimalFormat;)V lambda$static$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	d (Lbly;)Ljava/util/Optional; lambda$null$2
	e (Lbly;)Ljava/lang/Integer; lambda$null$1
	f (Lbly;)Lblu; lambda$null$0
	<clinit> ()V <clinit>
bly$a net/minecraft/world/item/ItemStack$TooltipPart
	a ENCHANTMENTS
	b MODIFIERS
	c UNBREAKABLE
	d CAN_DESTROY
	e CAN_PLACE
	f ADDITIONAL
	g DYE
	h mask
	i $VALUES
	values ()[Lbly$a; values
	valueOf (Ljava/lang/String;)Lbly$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()I getMask
	<clinit> ()V <clinit>
blz net/minecraft/world/item/ItemUtils
	<init> ()V <init>
	a (Lbru;Lbft;Laoq;)Laos; useDrink
	a (Lbly;Lbft;Lbly;Z)Lbly; createFilledResult
	a (Lbly;Lbft;Lbly;)Lbly; createFilledResult
bma net/minecraft/world/item/Items
	a AIR
	b STONE
	c GRANITE
	d POLISHED_GRANITE
	e DIORITE
	f POLISHED_DIORITE
	g ANDESITE
	h POLISHED_ANDESITE
	i GRASS_BLOCK
	j DIRT
	k COARSE_DIRT
	l PODZOL
	m CRIMSON_NYLIUM
	n WARPED_NYLIUM
	o COBBLESTONE
	p OAK_PLANKS
	q SPRUCE_PLANKS
	r BIRCH_PLANKS
	s JUNGLE_PLANKS
	t ACACIA_PLANKS
	u DARK_OAK_PLANKS
	v CRIMSON_PLANKS
	w WARPED_PLANKS
	x OAK_SAPLING
	y SPRUCE_SAPLING
	z BIRCH_SAPLING
	A JUNGLE_SAPLING
	B ACACIA_SAPLING
	C DARK_OAK_SAPLING
	D BEDROCK
	E SAND
	F RED_SAND
	G GRAVEL
	H GOLD_ORE
	I IRON_ORE
	J COAL_ORE
	K NETHER_GOLD_ORE
	L OAK_LOG
	M SPRUCE_LOG
	N BIRCH_LOG
	O JUNGLE_LOG
	P ACACIA_LOG
	Q DARK_OAK_LOG
	R CRIMSON_STEM
	S WARPED_STEM
	T STRIPPED_OAK_LOG
	U STRIPPED_SPRUCE_LOG
	V STRIPPED_BIRCH_LOG
	W STRIPPED_JUNGLE_LOG
	X STRIPPED_ACACIA_LOG
	Y STRIPPED_DARK_OAK_LOG
	Z STRIPPED_CRIMSON_STEM
	aa STRIPPED_WARPED_STEM
	ab STRIPPED_OAK_WOOD
	ac STRIPPED_SPRUCE_WOOD
	ad STRIPPED_BIRCH_WOOD
	ae STRIPPED_JUNGLE_WOOD
	af STRIPPED_ACACIA_WOOD
	ag STRIPPED_DARK_OAK_WOOD
	ah STRIPPED_CRIMSON_HYPHAE
	ai STRIPPED_WARPED_HYPHAE
	aj OAK_WOOD
	ak SPRUCE_WOOD
	al BIRCH_WOOD
	am JUNGLE_WOOD
	an ACACIA_WOOD
	ao DARK_OAK_WOOD
	ap CRIMSON_HYPHAE
	aq WARPED_HYPHAE
	ar OAK_LEAVES
	as SPRUCE_LEAVES
	at BIRCH_LEAVES
	au JUNGLE_LEAVES
	av ACACIA_LEAVES
	aw DARK_OAK_LEAVES
	ax SPONGE
	ay WET_SPONGE
	az GLASS
	aA LAPIS_ORE
	aB LAPIS_BLOCK
	aC DISPENSER
	aD SANDSTONE
	aE CHISELED_SANDSTONE
	aF CUT_SANDSTONE
	aG NOTE_BLOCK
	aH POWERED_RAIL
	aI DETECTOR_RAIL
	aJ STICKY_PISTON
	aK COBWEB
	aL GRASS
	aM FERN
	aN DEAD_BUSH
	aO SEAGRASS
	aP SEA_PICKLE
	aQ PISTON
	aR WHITE_WOOL
	aS ORANGE_WOOL
	aT MAGENTA_WOOL
	aU LIGHT_BLUE_WOOL
	aV YELLOW_WOOL
	aW LIME_WOOL
	aX PINK_WOOL
	aY GRAY_WOOL
	aZ LIGHT_GRAY_WOOL
	ba CYAN_WOOL
	bb PURPLE_WOOL
	bc BLUE_WOOL
	bd BROWN_WOOL
	be GREEN_WOOL
	bf RED_WOOL
	bg BLACK_WOOL
	bh DANDELION
	bi POPPY
	bj BLUE_ORCHID
	bk ALLIUM
	bl AZURE_BLUET
	bm RED_TULIP
	bn ORANGE_TULIP
	bo WHITE_TULIP
	bp PINK_TULIP
	bq OXEYE_DAISY
	br CORNFLOWER
	bs LILY_OF_THE_VALLEY
	bt WITHER_ROSE
	bu BROWN_MUSHROOM
	bv RED_MUSHROOM
	bw CRIMSON_FUNGUS
	bx WARPED_FUNGUS
	by CRIMSON_ROOTS
	bz WARPED_ROOTS
	bA NETHER_SPROUTS
	bB WEEPING_VINES
	bC TWISTING_VINES
	bD SUGAR_CANE
	bE KELP
	bF BAMBOO
	bG GOLD_BLOCK
	bH IRON_BLOCK
	bI OAK_SLAB
	bJ SPRUCE_SLAB
	bK BIRCH_SLAB
	bL JUNGLE_SLAB
	bM ACACIA_SLAB
	bN DARK_OAK_SLAB
	bO CRIMSON_SLAB
	bP WARPED_SLAB
	bQ STONE_SLAB
	bR SMOOTH_STONE_SLAB
	bS SANDSTONE_SLAB
	bT CUT_STANDSTONE_SLAB
	bU PETRIFIED_OAK_SLAB
	bV COBBLESTONE_SLAB
	bW BRICK_SLAB
	bX STONE_BRICK_SLAB
	bY NETHER_BRICK_SLAB
	bZ QUARTZ_SLAB
	ca RED_SANDSTONE_SLAB
	cb CUT_RED_SANDSTONE_SLAB
	cc PURPUR_SLAB
	cd PRISMARINE_SLAB
	ce PRISMARINE_BRICK_SLAB
	cf DARK_PRISMARINE_SLAB
	cg SMOOTH_QUARTZ
	ch SMOOTH_RED_SANDSTONE
	ci SMOOTH_SANDSTONE
	cj SMOOTH_STONE
	ck BRICKS
	cl TNT
	cm BOOKSHELF
	cn MOSSY_COBBLESTONE
	co OBSIDIAN
	cp TORCH
	cq END_ROD
	cr CHORUS_PLANT
	cs CHORUS_FLOWER
	ct PURPUR_BLOCK
	cu PURPUR_PILLAR
	cv PURPUR_STAIRS
	cw SPAWNER
	cx OAK_STAIRS
	cy CHEST
	cz DIAMOND_ORE
	cA DIAMOND_BLOCK
	cB CRAFTING_TABLE
	cC FARMLAND
	cD FURNACE
	cE LADDER
	cF RAIL
	cG COBBLESTONE_STAIRS
	cH LEVER
	cI STONE_PRESSURE_PLATE
	cJ OAK_PRESSURE_PLATE
	cK SPRUCE_PRESSURE_PLATE
	cL BIRCH_PRESSURE_PLATE
	cM JUNGLE_PRESSURE_PLATE
	cN ACACIA_PRESSURE_PLATE
	cO DARK_OAK_PRESSURE_PLATE
	cP CRIMSON_PRESSURE_PLATE
	cQ WARPED_PRESSURE_PLATE
	cR POLISHED_BLACKSTONE_PRESSURE_PLATE
	cS REDSTONE_ORE
	cT REDSTONE_TORCH
	cU SNOW
	cV ICE
	cW SNOW_BLOCK
	cX CACTUS
	cY CLAY
	cZ JUKEBOX
	da OAK_FENCE
	db SPRUCE_FENCE
	dc BIRCH_FENCE
	dd JUNGLE_FENCE
	de ACACIA_FENCE
	df DARK_OAK_FENCE
	dg CRIMSON_FENCE
	dh WARPED_FENCE
	di PUMPKIN
	dj CARVED_PUMPKIN
	dk NETHERRACK
	dl SOUL_SAND
	dm SOUL_SOIL
	dn BASALT
	do POLISHED_BASALT
	dp SOUL_TORCH
	dq GLOWSTONE
	dr JACK_O_LANTERN
	ds OAK_TRAPDOOR
	dt SPRUCE_TRAPDOOR
	du BIRCH_TRAPDOOR
	dv JUNGLE_TRAPDOOR
	dw ACACIA_TRAPDOOR
	dx DARK_OAK_TRAPDOOR
	dy CRIMSON_TRAPDOOR
	dz WARPED_TRAPDOOR
	dA INFESTED_STONE
	dB INFESTED_COBBLESTONE
	dC INFESTED_STONE_BRICKS
	dD INFESTED_MOSSY_STONE_BRICKS
	dE INFESTED_CRACKED_STONE_BRICKS
	dF INFESTED_CHISELED_STONE_BRICKS
	dG STONE_BRICKS
	dH MOSSY_STONE_BRICKS
	dI CRACKED_STONE_BRICKS
	dJ CHISELED_STONE_BRICKS
	dK BROWN_MUSHROOM_BLOCK
	dL RED_MUSHROOM_BLOCK
	dM MUSHROOM_STEM
	dN IRON_BARS
	dO CHAIN
	dP GLASS_PANE
	dQ MELON
	dR VINE
	dS OAK_FENCE_GATE
	dT SPRUCE_FENCE_GATE
	dU BIRCH_FENCE_GATE
	dV JUNGLE_FENCE_GATE
	dW ACACIA_FENCE_GATE
	dX DARK_OAK_FENCE_GATE
	dY CRIMSON_FENCE_GATE
	dZ WARPED_FENCE_GATE
	ea BRICK_STAIRS
	eb STONE_BRICK_STAIRS
	ec MYCELIUM
	ed LILY_PAD
	ee NETHER_BRICKS
	ef CRACKED_NETHER_BRICKS
	eg CHISELED_NETHER_BRICKS
	eh NETHER_BRICK_FENCE
	ei NETHER_BRICK_STAIRS
	ej ENCHANTING_TABLE
	ek END_PORTAL_FRAME
	el END_STONE
	em END_STONE_BRICKS
	en DRAGON_EGG
	eo REDSTONE_LAMP
	ep SANDSTONE_STAIRS
	eq EMERALD_ORE
	er ENDER_CHEST
	es TRIPWIRE_HOOK
	et EMERALD_BLOCK
	eu SPRUCE_STAIRS
	ev BIRCH_STAIRS
	ew JUNGLE_STAIRS
	ex CRIMSON_STAIRS
	ey WARPED_STAIRS
	ez COMMAND_BLOCK
	eA BEACON
	eB COBBLESTONE_WALL
	eC MOSSY_COBBLESTONE_WALL
	eD BRICK_WALL
	eE PRISMARINE_WALL
	eF RED_SANDSTONE_WALL
	eG MOSSY_STONE_BRICK_WALL
	eH GRANITE_WALL
	eI STONE_BRICK_WALL
	eJ NETHER_BRICK_WALL
	eK ANDESITE_WALL
	eL RED_NETHER_BRICK_WALL
	eM SANDSTONE_WALL
	eN END_STONE_BRICK_WALL
	eO DIORITE_WALL
	eP BLACKSTONE_WALL
	eQ POLISHED_BLACKSTONE_WALL
	eR POLISHED_BLACKSTONE_BRICK_WALL
	eS STONE_BUTTON
	eT OAK_BUTTON
	eU SPRUCE_BUTTON
	eV BIRCH_BUTTON
	eW JUNGLE_BUTTON
	eX ACACIA_BUTTON
	eY DARK_OAK_BUTTON
	eZ CRIMSON_BUTTON
	fa WARPED_BUTTON
	fb POLISHED_BLACKSTONE_BUTTON
	fc ANVIL
	fd CHIPPED_ANVIL
	fe DAMAGED_ANVIL
	ff TRAPPED_CHEST
	fg LIGHT_WEIGHTED_PRESSURE_PLATE
	fh HEAVY_WEIGHTED_PRESSURE_PLATE
	fi DAYLIGHT_DETECTOR
	fj REDSTONE_BLOCK
	fk NETHER_QUARTZ_ORE
	fl HOPPER
	fm CHISELED_QUARTZ_BLOCK
	fn QUARTZ_BLOCK
	fo QUARTZ_BRICKS
	fp QUARTZ_PILLAR
	fq QUARTZ_STAIRS
	fr ACTIVATOR_RAIL
	fs DROPPER
	ft WHITE_TERRACOTTA
	fu ORANGE_TERRACOTTA
	fv MAGENTA_TERRACOTTA
	fw LIGHT_BLUE_TERRACOTTA
	fx YELLOW_TERRACOTTA
	fy LIME_TERRACOTTA
	fz PINK_TERRACOTTA
	fA GRAY_TERRACOTTA
	fB LIGHT_GRAY_TERRACOTTA
	fC CYAN_TERRACOTTA
	fD PURPLE_TERRACOTTA
	fE BLUE_TERRACOTTA
	fF BROWN_TERRACOTTA
	fG GREEN_TERRACOTTA
	fH RED_TERRACOTTA
	fI BLACK_TERRACOTTA
	fJ BARRIER
	fK IRON_TRAPDOOR
	fL HAY_BLOCK
	fM WHITE_CARPET
	fN ORANGE_CARPET
	fO MAGENTA_CARPET
	fP LIGHT_BLUE_CARPET
	fQ YELLOW_CARPET
	fR LIME_CARPET
	fS PINK_CARPET
	fT GRAY_CARPET
	fU LIGHT_GRAY_CARPET
	fV CYAN_CARPET
	fW PURPLE_CARPET
	fX BLUE_CARPET
	fY BROWN_CARPET
	fZ GREEN_CARPET
	ga RED_CARPET
	gb BLACK_CARPET
	gc TERRACOTTA
	gd COAL_BLOCK
	ge PACKED_ICE
	gf ACACIA_STAIRS
	gg DARK_OAK_STAIRS
	gh SLIME_BLOCK
	gi GRASS_PATH
	gj SUNFLOWER
	gk LILAC
	gl ROSE_BUSH
	gm PEONY
	gn TALL_GRASS
	go LARGE_FERN
	gp WHITE_STAINED_GLASS
	gq ORANGE_STAINED_GLASS
	gr MAGENTA_STAINED_GLASS
	gs LIGHT_BLUE_STAINED_GLASS
	gt YELLOW_STAINED_GLASS
	gu LIME_STAINED_GLASS
	gv PINK_STAINED_GLASS
	gw GRAY_STAINED_GLASS
	gx LIGHT_GRAY_STAINED_GLASS
	gy CYAN_STAINED_GLASS
	gz PURPLE_STAINED_GLASS
	gA BLUE_STAINED_GLASS
	gB BROWN_STAINED_GLASS
	gC GREEN_STAINED_GLASS
	gD RED_STAINED_GLASS
	gE BLACK_STAINED_GLASS
	gF WHITE_STAINED_GLASS_PANE
	gG ORANGE_STAINED_GLASS_PANE
	gH MAGENTA_STAINED_GLASS_PANE
	gI LIGHT_BLUE_STAINED_GLASS_PANE
	gJ YELLOW_STAINED_GLASS_PANE
	gK LIME_STAINED_GLASS_PANE
	gL PINK_STAINED_GLASS_PANE
	gM GRAY_STAINED_GLASS_PANE
	gN LIGHT_GRAY_STAINED_GLASS_PANE
	gO CYAN_STAINED_GLASS_PANE
	gP PURPLE_STAINED_GLASS_PANE
	gQ BLUE_STAINED_GLASS_PANE
	gR BROWN_STAINED_GLASS_PANE
	gS GREEN_STAINED_GLASS_PANE
	gT RED_STAINED_GLASS_PANE
	gU BLACK_STAINED_GLASS_PANE
	gV PRISMARINE
	gW PRISMARINE_BRICKS
	gX DARK_PRISMARINE
	gY PRISMARINE_STAIRS
	gZ PRISMARINE_BRICK_STAIRS
	ha DARK_PRISMARINE_STAIRS
	hb SEA_LANTERN
	hc RED_SANDSTONE
	hd CHISELED_RED_SANDSTONE
	he CUT_RED_SANDSTONE
	hf RED_SANDSTONE_STAIRS
	hg REPEATING_COMMAND_BLOCK
	hh CHAIN_COMMAND_BLOCK
	hi MAGMA_BLOCK
	hj NETHER_WART_BLOCK
	hk WARPED_WART_BLOCK
	hl RED_NETHER_BRICKS
	hm BONE_BLOCK
	hn STRUCTURE_VOID
	ho OBSERVER
	hp SHULKER_BOX
	hq WHITE_SHULKER_BOX
	hr ORANGE_SHULKER_BOX
	hs MAGENTA_SHULKER_BOX
	ht LIGHT_BLUE_SHULKER_BOX
	hu YELLOW_SHULKER_BOX
	hv LIME_SHULKER_BOX
	hw PINK_SHULKER_BOX
	hx GRAY_SHULKER_BOX
	hy LIGHT_GRAY_SHULKER_BOX
	hz CYAN_SHULKER_BOX
	hA PURPLE_SHULKER_BOX
	hB BLUE_SHULKER_BOX
	hC BROWN_SHULKER_BOX
	hD GREEN_SHULKER_BOX
	hE RED_SHULKER_BOX
	hF BLACK_SHULKER_BOX
	hG WHITE_GLAZED_TERRACOTTA
	hH ORANGE_GLAZED_TERRACOTTA
	hI MAGENTA_GLAZED_TERRACOTTA
	hJ LIGHT_BLUE_GLAZED_TERRACOTTA
	hK YELLOW_GLAZED_TERRACOTTA
	hL LIME_GLAZED_TERRACOTTA
	hM PINK_GLAZED_TERRACOTTA
	hN GRAY_GLAZED_TERRACOTTA
	hO LIGHT_GRAY_GLAZED_TERRACOTTA
	hP CYAN_GLAZED_TERRACOTTA
	hQ PURPLE_GLAZED_TERRACOTTA
	hR BLUE_GLAZED_TERRACOTTA
	hS BROWN_GLAZED_TERRACOTTA
	hT GREEN_GLAZED_TERRACOTTA
	hU RED_GLAZED_TERRACOTTA
	hV BLACK_GLAZED_TERRACOTTA
	hW WHITE_CONCRETE
	hX ORANGE_CONCRETE
	hY MAGENTA_CONCRETE
	hZ LIGHT_BLUE_CONCRETE
	ia YELLOW_CONCRETE
	ib LIME_CONCRETE
	ic PINK_CONCRETE
	id GRAY_CONCRETE
	ie LIGHT_GRAY_CONCRETE
	if CYAN_CONCRETE
	ig PURPLE_CONCRETE
	ih BLUE_CONCRETE
	ii BROWN_CONCRETE
	ij GREEN_CONCRETE
	ik RED_CONCRETE
	il BLACK_CONCRETE
	im WHITE_CONCRETE_POWDER
	in ORANGE_CONCRETE_POWDER
	io MAGENTA_CONCRETE_POWDER
	ip LIGHT_BLUE_CONCRETE_POWDER
	iq YELLOW_CONCRETE_POWDER
	ir LIME_CONCRETE_POWDER
	is PINK_CONCRETE_POWDER
	it GRAY_CONCRETE_POWDER
	iu LIGHT_GRAY_CONCRETE_POWDER
	iv CYAN_CONCRETE_POWDER
	iw PURPLE_CONCRETE_POWDER
	ix BLUE_CONCRETE_POWDER
	iy BROWN_CONCRETE_POWDER
	iz GREEN_CONCRETE_POWDER
	iA RED_CONCRETE_POWDER
	iB BLACK_CONCRETE_POWDER
	iC TURTLE_EGG
	iD DEAD_TUBE_CORAL_BLOCK
	iE DEAD_BRAIN_CORAL_BLOCK
	iF DEAD_BUBBLE_CORAL_BLOCK
	iG DEAD_FIRE_CORAL_BLOCK
	iH DEAD_HORN_CORAL_BLOCK
	iI TUBE_CORAL_BLOCK
	iJ BRAIN_CORAL_BLOCK
	iK BUBBLE_CORAL_BLOCK
	iL FIRE_CORAL_BLOCK
	iM HORN_CORAL_BLOCK
	iN TUBE_CORAL
	iO BRAIN_CORAL
	iP BUBBLE_CORAL
	iQ FIRE_CORAL
	iR HORN_CORAL
	iS DEAD_BRAIN_CORAL
	iT DEAD_BUBBLE_CORAL
	iU DEAD_FIRE_CORAL
	iV DEAD_HORN_CORAL
	iW DEAD_TUBE_CORAL
	iX TUBE_CORAL_FAN
	iY BRAIN_CORAL_FAN
	iZ BUBBLE_CORAL_FAN
	ja FIRE_CORAL_FAN
	jb HORN_CORAL_FAN
	jc DEAD_TUBE_CORAL_FAN
	jd DEAD_BRAIN_CORAL_FAN
	je DEAD_BUBBLE_CORAL_FAN
	jf DEAD_FIRE_CORAL_FAN
	jg DEAD_HORN_CORAL_FAN
	jh BLUE_ICE
	ji CONDUIT
	jj POLISHED_GRANITE_STAIRS
	jk SMOOTH_RED_SANDSTONE_STAIRS
	jl MOSSY_STONE_BRICK_STAIRS
	jm POLISHED_DIORITE_STAIRS
	jn MOSSY_COBBLESTONE_STAIRS
	jo END_STONE_BRICK_STAIRS
	jp STONE_STAIRS
	jq SMOOTH_SANDSTONE_STAIRS
	jr SMOOTH_QUARTZ_STAIRS
	js GRANITE_STAIRS
	jt ANDESITE_STAIRS
	ju RED_NETHER_BRICK_STAIRS
	jv POLISHED_ANDESITE_STAIRS
	jw DIORITE_STAIRS
	jx POLISHED_GRANITE_SLAB
	jy SMOOTH_RED_SANDSTONE_SLAB
	jz MOSSY_STONE_BRICK_SLAB
	jA POLISHED_DIORITE_SLAB
	jB MOSSY_COBBLESTONE_SLAB
	jC END_STONE_BRICK_SLAB
	jD SMOOTH_SANDSTONE_SLAB
	jE SMOOTH_QUARTZ_SLAB
	jF GRANITE_SLAB
	jG ANDESITE_SLAB
	jH RED_NETHER_BRICK_SLAB
	jI POLISHED_ANDESITE_SLAB
	jJ DIORITE_SLAB
	jK SCAFFOLDING
	jL IRON_DOOR
	jM OAK_DOOR
	jN SPRUCE_DOOR
	jO BIRCH_DOOR
	jP JUNGLE_DOOR
	jQ ACACIA_DOOR
	jR DARK_OAK_DOOR
	jS CRIMSON_DOOR
	jT WARPED_DOOR
	jU REPEATER
	jV COMPARATOR
	jW STRUCTURE_BLOCK
	jX JIGSAW
	jY TURTLE_HELMET
	jZ SCUTE
	ka FLINT_AND_STEEL
	kb APPLE
	kc BOW
	kd ARROW
	ke COAL
	kf CHARCOAL
	kg DIAMOND
	kh IRON_INGOT
	ki GOLD_INGOT
	kj NETHERITE_INGOT
	kk NETHERITE_SCRAP
	kl WOODEN_SWORD
	km WOODEN_SHOVEL
	kn WOODEN_PICKAXE
	ko WOODEN_AXE
	kp WOODEN_HOE
	kq STONE_SWORD
	kr STONE_SHOVEL
	ks STONE_PICKAXE
	kt STONE_AXE
	ku STONE_HOE
	kv GOLDEN_SWORD
	kw GOLDEN_SHOVEL
	kx GOLDEN_PICKAXE
	ky GOLDEN_AXE
	kz GOLDEN_HOE
	kA IRON_SWORD
	kB IRON_SHOVEL
	kC IRON_PICKAXE
	kD IRON_AXE
	kE IRON_HOE
	kF DIAMOND_SWORD
	kG DIAMOND_SHOVEL
	kH DIAMOND_PICKAXE
	kI DIAMOND_AXE
	kJ DIAMOND_HOE
	kK NETHERITE_SWORD
	kL NETHERITE_SHOVEL
	kM NETHERITE_PICKAXE
	kN NETHERITE_AXE
	kO NETHERITE_HOE
	kP STICK
	kQ BOWL
	kR MUSHROOM_STEW
	kS STRING
	kT FEATHER
	kU GUNPOWDER
	kV WHEAT_SEEDS
	kW WHEAT
	kX BREAD
	kY LEATHER_HELMET
	kZ LEATHER_CHESTPLATE
	la LEATHER_LEGGINGS
	lb LEATHER_BOOTS
	lc CHAINMAIL_HELMET
	ld CHAINMAIL_CHESTPLATE
	le CHAINMAIL_LEGGINGS
	lf CHAINMAIL_BOOTS
	lg IRON_HELMET
	lh IRON_CHESTPLATE
	li IRON_LEGGINGS
	lj IRON_BOOTS
	lk DIAMOND_HELMET
	ll DIAMOND_CHESTPLATE
	lm DIAMOND_LEGGINGS
	ln DIAMOND_BOOTS
	lo GOLDEN_HELMET
	lp GOLDEN_CHESTPLATE
	lq GOLDEN_LEGGINGS
	lr GOLDEN_BOOTS
	ls NETHERITE_HELMET
	lt NETHERITE_CHESTPLATE
	lu NETHERITE_LEGGINGS
	lv NETHERITE_BOOTS
	lw FLINT
	lx PORKCHOP
	ly COOKED_PORKCHOP
	lz PAINTING
	lA GOLDEN_APPLE
	lB ENCHANTED_GOLDEN_APPLE
	lC OAK_SIGN
	lD SPRUCE_SIGN
	lE BIRCH_SIGN
	lF JUNGLE_SIGN
	lG ACACIA_SIGN
	lH DARK_OAK_SIGN
	lI CRIMSON_SIGN
	lJ WARPED_SIGN
	lK BUCKET
	lL WATER_BUCKET
	lM LAVA_BUCKET
	lN MINECART
	lO SADDLE
	lP REDSTONE
	lQ SNOWBALL
	lR OAK_BOAT
	lS LEATHER
	lT MILK_BUCKET
	lU PUFFERFISH_BUCKET
	lV SALMON_BUCKET
	lW COD_BUCKET
	lX TROPICAL_FISH_BUCKET
	lY BRICK
	lZ CLAY_BALL
	ma DRIED_KELP_BLOCK
	mb PAPER
	mc BOOK
	md SLIME_BALL
	me CHEST_MINECART
	mf FURNACE_MINECART
	mg EGG
	mh COMPASS
	mi FISHING_ROD
	mj CLOCK
	mk GLOWSTONE_DUST
	ml COD
	mm SALMON
	mn TROPICAL_FISH
	mo PUFFERFISH
	mp COOKED_COD
	mq COOKED_SALMON
	mr INK_SAC
	ms COCOA_BEANS
	mt LAPIS_LAZULI
	mu WHITE_DYE
	mv ORANGE_DYE
	mw MAGENTA_DYE
	mx LIGHT_BLUE_DYE
	my YELLOW_DYE
	mz LIME_DYE
	mA PINK_DYE
	mB GRAY_DYE
	mC LIGHT_GRAY_DYE
	mD CYAN_DYE
	mE PURPLE_DYE
	mF BLUE_DYE
	mG BROWN_DYE
	mH GREEN_DYE
	mI RED_DYE
	mJ BLACK_DYE
	mK BONE_MEAL
	mL BONE
	mM SUGAR
	mN CAKE
	mO WHITE_BED
	mP ORANGE_BED
	mQ MAGENTA_BED
	mR LIGHT_BLUE_BED
	mS YELLOW_BED
	mT LIME_BED
	mU PINK_BED
	mV GRAY_BED
	mW LIGHT_GRAY_BED
	mX CYAN_BED
	mY PURPLE_BED
	mZ BLUE_BED
	na BROWN_BED
	nb GREEN_BED
	nc RED_BED
	nd BLACK_BED
	ne COOKIE
	nf FILLED_MAP
	ng SHEARS
	nh MELON_SLICE
	ni DRIED_KELP
	nj PUMPKIN_SEEDS
	nk MELON_SEEDS
	nl BEEF
	nm COOKED_BEEF
	nn CHICKEN
	no COOKED_CHICKEN
	np ROTTEN_FLESH
	nq ENDER_PEARL
	nr BLAZE_ROD
	ns GHAST_TEAR
	nt GOLD_NUGGET
	nu NETHER_WART
	nv POTION
	nw GLASS_BOTTLE
	nx SPIDER_EYE
	ny FERMENTED_SPIDER_EYE
	nz BLAZE_POWDER
	nA MAGMA_CREAM
	nB BREWING_STAND
	nC CAULDRON
	nD ENDER_EYE
	nE GLISTERING_MELON_SLICE
	nF BAT_SPAWN_EGG
	nG BEE_SPAWN_EGG
	nH BLAZE_SPAWN_EGG
	nI CAT_SPAWN_EGG
	nJ CAVE_SPIDER_SPAWN_EGG
	nK CHICKEN_SPAWN_EGG
	nL COD_SPAWN_EGG
	nM COW_SPAWN_EGG
	nN CREEPER_SPAWN_EGG
	nO DOLPHIN_SPAWN_EGG
	nP DONKEY_SPAWN_EGG
	nQ DROWNED_SPAWN_EGG
	nR ELDER_GUARDIAN_SPAWN_EGG
	nS ENDERMAN_SPAWN_EGG
	nT ENDERMITE_SPAWN_EGG
	nU EVOKER_SPAWN_EGG
	nV FOX_SPAWN_EGG
	nW GHAST_SPAWN_EGG
	nX GUARDIAN_SPAWN_EGG
	nY HOGLIN_SPAWN_EGG
	nZ HORSE_SPAWN_EGG
	oa HUSK_SPAWN_EGG
	ob LLAMA_SPAWN_EGG
	oc MAGMA_CUBE_SPAWN_EGG
	od MOOSHROOM_SPAWN_EGG
	oe MULE_SPAWN_EGG
	of OCELOT_SPAWN_EGG
	og PANDA_SPAWN_EGG
	oh PARROT_SPAWN_EGG
	oi PHANTOM_SPAWN_EGG
	oj PIG_SPAWN_EGG
	ok PIGLIN_SPAWN_EGG
	ol PIGLIN_BRUTE_SPAWN_EGG
	om PILLAGER_SPAWN_EGG
	on POLAR_BEAR_SPAWN_EGG
	oo PUFFERFISH_SPAWN_EGG
	op RABBIT_SPAWN_EGG
	oq RAVAGER_SPAWN_EGG
	or SALMON_SPAWN_EGG
	os SHEEP_SPAWN_EGG
	ot SHULKER_SPAWN_EGG
	ou SILVERFISH_SPAWN_EGG
	ov SKELETON_SPAWN_EGG
	ow SKELETON_HORSE_SPAWN_EGG
	ox SLIME_SPAWN_EGG
	oy SPIDER_SPAWN_EGG
	oz SQUID_SPAWN_EGG
	oA STRAY_SPAWN_EGG
	oB STRIDER_SPAWN_EGG
	oC TRADER_LLAMA_SPAWN_EGG
	oD TROPICAL_FISH_SPAWN_EGG
	oE TURTLE_SPAWN_EGG
	oF VEX_SPAWN_EGG
	oG VILLAGER_SPAWN_EGG
	oH VINDICATOR_SPAWN_EGG
	oI WANDERING_TRADER_SPAWN_EGG
	oJ WITCH_SPAWN_EGG
	oK WITHER_SKELETON_SPAWN_EGG
	oL WOLF_SPAWN_EGG
	oM ZOGLIN_SPAWN_EGG
	oN ZOMBIE_SPAWN_EGG
	oO ZOMBIE_HORSE_SPAWN_EGG
	oP ZOMBIE_VILLAGER_SPAWN_EGG
	oQ ZOMBIFIED_PIGLIN_SPAWN_EGG
	oR EXPERIENCE_BOTTLE
	oS FIRE_CHARGE
	oT WRITABLE_BOOK
	oU WRITTEN_BOOK
	oV EMERALD
	oW ITEM_FRAME
	oX FLOWER_POT
	oY CARROT
	oZ POTATO
	pa BAKED_POTATO
	pb POISONOUS_POTATO
	pc MAP
	pd GOLDEN_CARROT
	pe SKELETON_SKULL
	pf WITHER_SKELETON_SKULL
	pg PLAYER_HEAD
	ph ZOMBIE_HEAD
	pi CREEPER_HEAD
	pj DRAGON_HEAD
	pk CARROT_ON_A_STICK
	pl WARPED_FUNGUS_ON_A_STICK
	pm NETHER_STAR
	pn PUMPKIN_PIE
	po FIREWORK_ROCKET
	pp FIREWORK_STAR
	pq ENCHANTED_BOOK
	pr NETHER_BRICK
	ps QUARTZ
	pt TNT_MINECART
	pu HOPPER_MINECART
	pv PRISMARINE_SHARD
	pw PRISMARINE_CRYSTALS
	px RABBIT
	py COOKED_RABBIT
	pz RABBIT_STEW
	pA RABBIT_FOOT
	pB RABBIT_HIDE
	pC ARMOR_STAND
	pD IRON_HORSE_ARMOR
	pE GOLDEN_HORSE_ARMOR
	pF DIAMOND_HORSE_ARMOR
	pG LEATHER_HORSE_ARMOR
	pH LEAD
	pI NAME_TAG
	pJ COMMAND_BLOCK_MINECART
	pK MUTTON
	pL COOKED_MUTTON
	pM WHITE_BANNER
	pN ORANGE_BANNER
	pO MAGENTA_BANNER
	pP LIGHT_BLUE_BANNER
	pQ YELLOW_BANNER
	pR LIME_BANNER
	pS PINK_BANNER
	pT GRAY_BANNER
	pU LIGHT_GRAY_BANNER
	pV CYAN_BANNER
	pW PURPLE_BANNER
	pX BLUE_BANNER
	pY BROWN_BANNER
	pZ GREEN_BANNER
	qa RED_BANNER
	qb BLACK_BANNER
	qc END_CRYSTAL
	qd CHORUS_FRUIT
	qe POPPED_CHORUS_FRUIT
	qf BEETROOT
	qg BEETROOT_SEEDS
	qh BEETROOT_SOUP
	qi DRAGON_BREATH
	qj SPLASH_POTION
	qk SPECTRAL_ARROW
	ql TIPPED_ARROW
	qm LINGERING_POTION
	qn SHIELD
	qo ELYTRA
	qp SPRUCE_BOAT
	qq BIRCH_BOAT
	qr JUNGLE_BOAT
	qs ACACIA_BOAT
	qt DARK_OAK_BOAT
	qu TOTEM_OF_UNDYING
	qv SHULKER_SHELL
	qw IRON_NUGGET
	qx KNOWLEDGE_BOOK
	qy DEBUG_STICK
	qz MUSIC_DISC_13
	qA MUSIC_DISC_CAT
	qB MUSIC_DISC_BLOCKS
	qC MUSIC_DISC_CHIRP
	qD MUSIC_DISC_FAR
	qE MUSIC_DISC_MALL
	qF MUSIC_DISC_MELLOHI
	qG MUSIC_DISC_STAL
	qH MUSIC_DISC_STRAD
	qI MUSIC_DISC_WARD
	qJ MUSIC_DISC_11
	qK MUSIC_DISC_WAIT
	qL MUSIC_DISC_PIGSTEP
	qM TRIDENT
	qN PHANTOM_MEMBRANE
	qO NAUTILUS_SHELL
	qP HEART_OF_THE_SEA
	qQ CROSSBOW
	qR SUSPICIOUS_STEW
	qS LOOM
	qT FLOWER_BANNER_PATTERN
	qU CREEPER_BANNER_PATTERN
	qV SKULL_BANNER_PATTERN
	qW MOJANG_BANNER_PATTERN
	qX GLOBE_BANNER_PATTER
	qY PIGLIN_BANNER_PATTERN
	qZ COMPOSTER
	ra BARREL
	rb SMOKER
	rc BLAST_FURNACE
	rd CARTOGRAPHY_TABLE
	re FLETCHING_TABLE
	rf GRINDSTONE
	rg LECTERN
	rh SMITHING_TABLE
	ri STONECUTTER
	rj BELL
	rk LANTERN
	rl SOUL_LANTERN
	rm SWEET_BERRIES
	rn CAMPFIRE
	ro SOUL_CAMPFIRE
	rp SHROOMLIGHT
	rq HONEYCOMB
	rr BEE_NEST
	rs BEEHIVE
	rt HONEY_BOTTLE
	ru HONEY_BLOCK
	rv HONEYCOMB_BLOCK
	rw LODESTONE
	rx NETHERITE_BLOCK
	ry ANCIENT_DEBRIS
	rz TARGET
	rA CRYING_OBSIDIAN
	rB BLACKSTONE
	rC BLACKSTONE_SLAB
	rD BLACKSTONE_STAIRS
	rE GILDED_BLACKSTONE
	rF POLISHED_BLACKSTONE
	rG POLISHED_BLACKSTONE_SLAB
	rH POLISHED_BLACKSTONE_STAIRS
	rI CHISELED_POLISHED_BLACKSTONE
	rJ POLISHED_BLACKSTONE_BRICKS
	rK POLISHED_BLACKSTONE_BRICK_SLAB
	rL POLISHED_BLACKSTONE_BRICK_STAIRS
	rM CRACKED_POLISHED_BLACKSTONE_BRICKS
	rN RESPAWN_ANCHOR
	<init> ()V <init>
	a (Lbul;)Lblu; registerBlock
	a (Lbul;Lbkp;)Lblu; registerBlock
	a (Lbke;)Lblu; registerBlock
	a (Lbul;Lblu;)Lblu; registerBlock
	a (Ljava/lang/String;Lblu;)Lblu; registerItem
	a (Lvk;Lblu;)Lblu; registerItem
	<clinit> ()V <clinit>
bmb net/minecraft/world/item/KnowledgeBookItem
	a LOGGER
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
	<clinit> ()V <clinit>
bmc net/minecraft/world/item/LeadItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbft;Lbru;Lfx;)Laor; bindPlayerMobs
bmd net/minecraft/world/item/LingeringPotionItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	a (Lbru;Lbft;Laoq;)Laos; use
bme net/minecraft/world/item/MapItem
	<init> (Lblu$a;)V <init>
	a (Lbru;IIBZZ)Lbly; create
	a (Lbly;Lbru;)Lcxu; getSavedData
	b (Lbly;Lbru;)Lcxu; getOrCreateSavedData
	d (Lbly;)I getMapId
	a (Lbly;Lbru;IIIZZLvj;)Lcxu; createAndStoreSavedData
	a (I)Ljava/lang/String; makeKey
	a (Lbru;Lapx;Lcxu;)V update
	a (Lbru;Lcee;Lfx;)Lcee; getCorrectStateForFluidBlock
	a ([Lbss;III)Z isLand
	a (Laag;Lbly;)V renderBiomePreviewMap
	a (Lbly;Lbru;Lapx;IZ)V inventoryTick
	a (Lbly;Lbru;Lbft;)Loj; getUpdatePacket
	b (Lbly;Lbru;Lbft;)V onCraftedBy
	a (Lbly;Lbru;I)V scaleMap
	a (Lbru;Lbly;)V lockMap
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	g (Lbly;)I getColor
	a (Lbnx;)Laor; useOn
bmf net/minecraft/world/item/MilkBucketItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
	e_ (Lbly;)I getUseDuration
	d_ (Lbly;)Lbnk; getUseAnimation
	a (Lbru;Lbft;Laoq;)Laos; use
bmg net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	<init> (Lbhi$a;Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbmg;)Lbhi$a; access$000
	<clinit> ()V <clinit>
bmg$1 net/minecraft/world/item/MinecartItem$1
	b defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lfy;Lbly;)Lbly; execute
	a (Lfy;)V playSound
bmh net/minecraft/world/item/NameTagItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbft;Laqj;Laoq;)Laor; interactLivingEntity
bmi net/minecraft/world/item/PickaxeItem
	a DIGGABLES
	<init> (Lbne;IFLblu$a;)V <init>
	b (Lcee;)Z isCorrectToolForDrops
	a (Lbly;Lcee;)F getDestroySpeed
	<clinit> ()V <clinit>
bmj net/minecraft/world/item/PlayerHeadItem
	<init> (Lbul;Lbul;Lblu$a;)V <init>
	h (Lbly;)Lnr; getName
	b (Lmd;)Z verifyTagAfterLoad
bmk net/minecraft/world/item/PotionItem
	<init> (Lblu$a;)V <init>
	r ()Lbly; getDefaultInstance
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
	e_ (Lbly;)I getUseDuration
	d_ (Lbly;)Lbnk; getUseAnimation
	a (Lbru;Lbft;Laoq;)Laos; use
	f (Lbly;)Ljava/lang/String; getDescriptionId
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	e (Lbly;)Z isFoil
	a (Lbkp;Lgj;)V fillItemCategory
bml net/minecraft/world/item/ProjectileWeaponItem
	a ARROW_ONLY
	b ARROW_OR_FIREWORK
	<init> (Lblu$a;)V <init>
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	a (Laqj;Ljava/util/function/Predicate;)Lbly; getHeldProjectile
	c ()I getEnchantmentValue
	d ()I getDefaultProjectileRange
	d (Lbly;)Z lambda$static$1
	g (Lbly;)Z lambda$static$0
	<clinit> ()V <clinit>
bml$a net/minecraft/world/item/ProjectileWeaponItem$Type
	a BOW
	b CROSSBOW
	c $VALUES
	values ()[Lbml$a; values
	valueOf (Ljava/lang/String;)Lbml$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bmm net/minecraft/world/item/Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d EPIC
	e color
	f $VALUES
	values ()[Lbmm; values
	valueOf (Ljava/lang/String;)Lbmm; valueOf
	<init> (Ljava/lang/String;ILk;)V <init>
	<clinit> ()V <clinit>
bmn net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	<init> (ILadn;Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	f ()I getAnalogOutput
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	g ()Lnx; getDisplayName
	a (Ladn;)Lbmn; getBySound
	v ()Ladn; getSound
	<clinit> ()V <clinit>
bmo net/minecraft/world/item/SaddleItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbft;Laqj;Laoq;)Laor; interactLivingEntity
bmp net/minecraft/world/item/ScaffoldingBlockItem
	<init> (Lbul;Lblu$a;)V <init>
	b (Lbnv;)Lbnv; updatePlacementContext
	d ()Z mustSurvive
bmq net/minecraft/world/item/ServerItemCooldowns
	a player
	<init> (Laah;)V <init>
	b (Lblu;I)V onCooldownStarted
	c (Lblu;)V onCooldownEnded
bmr net/minecraft/world/item/ShearsItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lbru;Lcee;Lfx;Laqj;)Z mineBlock
	b (Lcee;)Z isCorrectToolForDrops
	a (Lbly;Lcee;)F getDestroySpeed
	a (Laqj;)V lambda$mineBlock$0
bms net/minecraft/world/item/ShieldItem
	<init> (Lblu$a;)V <init>
	f (Lbly;)Ljava/lang/String; getDescriptionId
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	d_ (Lbly;)Lbnk; getUseAnimation
	e_ (Lbly;)I getUseDuration
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Lbly;)Z isValidRepairItem
	d (Lbly;)Lbku; getColor
bmt net/minecraft/world/item/ShovelItem
	c DIGGABLES
	a FLATTENABLES
	<init> (Lbne;FFLblu$a;)V <init>
	b (Lcee;)Z isCorrectToolForDrops
	a (Lbnx;)Laor; useOn
	a (Lbnx;Lbft;)V lambda$useOn$0
	<clinit> ()V <clinit>
bmu net/minecraft/world/item/SignItem
	<init> (Lblu$a;Lbul;Lbul;)V <init>
	a (Lfx;Lbru;Lbft;Lbly;Lcee;)Z updateCustomBlockEntityTag
bmv net/minecraft/world/item/SimpleFoiledItem
	<init> (Lblu$a;)V <init>
	e (Lbly;)Z isFoil
bmw net/minecraft/world/item/SnowballItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
bmx net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b color1
	c color2
	d defaultType
	<init> (Laqb;IILblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lmd;Laqb;)Z spawnsEntity
	a (I)I getColor
	a (Laqb;)Lbmx; byId
	f ()Ljava/lang/Iterable; eggs
	a (Lmd;)Laqb; getType
	a (Lbft;Laqk;Laqb;Laag;Ldck;Lbly;)Ljava/util/Optional; spawnOffspringFromSpawnEgg
	<clinit> ()V <clinit>
bmy net/minecraft/world/item/SpectralArrowItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbly;Laqj;)Lbfx; createArrow
bmz net/minecraft/world/item/SplashPotionItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
bna net/minecraft/world/item/StandingAndWallBlockItem
	a wallBlock
	<init> (Lbul;Lbul;Lblu$a;)V <init>
	c (Lbnv;)Lcee; getPlacementState
	a (Ljava/util/Map;Lblu;)V registerBlocks
bnb net/minecraft/world/item/SuspiciousStewItem
	<init> (Lblu$a;)V <init>
	a (Lbly;Lapp;I)V saveMobEffect
	a (Lbly;Lbru;Laqj;)Lbly; finishUsingItem
bnc net/minecraft/world/item/SwordItem
	a attackDamage
	b defaultModifiers
	<init> (Lbne;IFLblu$a;)V <init>
	f ()F getDamage
	a (Lcee;Lbru;Lfx;Lbft;)Z canAttackBlock
	a (Lbly;Lcee;)F getDestroySpeed
	a (Lbly;Laqj;Laqj;)Z hurtEnemy
	a (Lbly;Lbru;Lcee;Lfx;Laqj;)Z mineBlock
	b (Lcee;)Z isCorrectToolForDrops
	a (Laqc;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Laqj;)V lambda$mineBlock$1
	b (Laqj;)V lambda$hurtEnemy$0
bnd net/minecraft/world/item/ThrowablePotionItem
	<init> (Lblu$a;)V <init>
	a (Lbru;Lbft;Laoq;)Laos; use
bne net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lbok; getRepairIngredient
bnf net/minecraft/world/item/TieredItem
	a tier
	<init> (Lbne;Lblu$a;)V <init>
	g ()Lbne; getTier
	c ()I getEnchantmentValue
	a (Lbly;Lbly;)Z isValidRepairItem
bng net/minecraft/world/item/Tiers
	a WOOD
	b STONE
	c IRON
	d DIAMOND
	e GOLD
	f NETHERITE
	g level
	h uses
	i speed
	j damage
	k enchantmentValue
	l repairIngredient
	m $VALUES
	values ()[Lbng; values
	valueOf (Ljava/lang/String;)Lbng; valueOf
	<init> (Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V <init>
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lbok; getRepairIngredient
	g ()Lbok; lambda$static$5
	h ()Lbok; lambda$static$4
	i ()Lbok; lambda$static$3
	j ()Lbok; lambda$static$2
	k ()Lbok; lambda$static$1
	l ()Lbok; lambda$static$0
	<clinit> ()V <clinit>
bnh net/minecraft/world/item/TippedArrowItem
	<init> (Lblu$a;)V <init>
	r ()Lbly; getDefaultInstance
	a (Lbkp;Lgj;)V fillItemCategory
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	f (Lbly;)Ljava/lang/String; getDescriptionId
bni net/minecraft/world/item/TooltipFlag
	a ()Z isAdvanced
bni$a net/minecraft/world/item/TooltipFlag$Default
	a NORMAL
	b ADVANCED
	c advanced
	d $VALUES
	values ()[Lbni$a; values
	valueOf (Ljava/lang/String;)Lbni$a; valueOf
	<init> (Ljava/lang/String;IZ)V <init>
	a ()Z isAdvanced
	<clinit> ()V <clinit>
bnj net/minecraft/world/item/TridentItem
	a defaultModifiers
	<init> (Lblu$a;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;)Z canAttackBlock
	d_ (Lbly;)Lbnk; getUseAnimation
	e_ (Lbly;)I getUseDuration
	a (Lbly;Lbru;Laqj;I)V releaseUsing
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Laqj;Laqj;)Z hurtEnemy
	a (Lbly;Lbru;Lcee;Lfx;Laqj;)Z mineBlock
	a (Laqc;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	c ()I getEnchantmentValue
	a (Laqj;)V lambda$mineBlock$2
	b (Laqj;)V lambda$hurtEnemy$1
	a (Laqj;Lbft;)V lambda$releaseUsing$0
bnk net/minecraft/world/item/UseAnim
	a NONE
	b EAT
	c DRINK
	d BLOCK
	e BOW
	f SPEAR
	g CROSSBOW
	h $VALUES
	values ()[Lbnk; values
	valueOf (Ljava/lang/String;)Lbnk; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bnl net/minecraft/world/item/Vanishable
bnm net/minecraft/world/item/WaterLilyBlockItem
	<init> (Lbul;Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbru;Lbft;Laoq;)Laos; use
bnn net/minecraft/world/item/Wearable
bno net/minecraft/world/item/WritableBookItem
	<init> (Lblu$a;)V <init>
	a (Lbnx;)Laor; useOn
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lmd;)Z makeSureTagIsValid
bnp net/minecraft/world/item/WrittenBookItem
	<init> (Lblu$a;)V <init>
	a (Lmd;)Z makeSureTagIsValid
	d (Lbly;)I getGeneration
	g (Lbly;)I getPageCount
	h (Lbly;)Lnr; getName
	a (Lbly;Lbru;Ljava/util/List;Lbni;)V appendHoverText
	a (Lbnx;)Laor; useOn
	a (Lbru;Lbft;Laoq;)Laos; use
	a (Lbly;Ldb;Lbft;)Z resolveBookComponents
	e (Lbly;)Z isFoil
bnq net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	a (Ljava/lang/String;)Lbnq; byName
	<init> ([Lapr;)V <init>
	<init> (Ljava/lang/String;[Lapr;)V <init>
	b (Ljava/lang/String;)Ljava/lang/String; getName
	a ()Ljava/util/List; getEffects
	b ()Z hasInstantEffects
bnr net/minecraft/world/item/alchemy/PotionBrewing
	a POTION_MIXES
	b CONTAINER_MIXES
	c ALLOWED_CONTAINERS
	d ALLOWED_CONTAINER
	<init> ()V <init>
	a (Lbly;)Z isIngredient
	b (Lbly;)Z isContainerIngredient
	c (Lbly;)Z isPotionIngredient
	a (Lbnq;)Z isBrewablePotion
	a (Lbly;Lbly;)Z hasMix
	b (Lbly;Lbly;)Z hasContainerMix
	c (Lbly;Lbly;)Z hasPotionMix
	d (Lbly;Lbly;)Lbly; mix
	a ()V bootStrap
	a (Lblu;Lblu;Lblu;)V addContainerRecipe
	a (Lblu;)V addContainer
	a (Lbnq;Lblu;Lbnq;)V addMix
	d (Lbly;)Z lambda$static$0
	<clinit> ()V <clinit>
bnr$a net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
	<init> (Ljava/lang/Object;Lbok;Ljava/lang/Object;)V <init>
	a (Lbnr$a;)Lbok; access$000
	b (Lbnr$a;)Ljava/lang/Object; access$100
	c (Lbnr$a;)Ljava/lang/Object; access$200
bns net/minecraft/world/item/alchemy/PotionUtils
	a NO_EFFECT
	<init> ()V <init>
	a (Lbly;)Ljava/util/List; getMobEffects
	a (Lbnq;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	a (Lmd;)Ljava/util/List; getAllEffects
	b (Lbly;)Ljava/util/List; getCustomEffects
	b (Lmd;)Ljava/util/List; getCustomEffects
	a (Lmd;Ljava/util/List;)V getCustomEffects
	c (Lbly;)I getColor
	a (Lbnq;)I getColor
	a (Ljava/util/Collection;)I getColor
	d (Lbly;)Lbnq; getPotion
	c (Lmd;)Lbnq; getPotion
	a (Lbly;Lbnq;)Lbly; setPotion
	a (Lbly;Ljava/util/Collection;)Lbly; setCustomEffects
	a (Lbly;Ljava/util/List;F)V addPotionTooltip
	<clinit> ()V <clinit>
bnt net/minecraft/world/item/alchemy/Potions
	a EMPTY
	b WATER
	c MUNDANE
	d THICK
	e AWKWARD
	f NIGHT_VISION
	g LONG_NIGHT_VISION
	h INVISIBILITY
	i LONG_INVISIBILITY
	j LEAPING
	k LONG_LEAPING
	l STRONG_LEAPING
	m FIRE_RESISTANCE
	n LONG_FIRE_RESISTANCE
	o SWIFTNESS
	p LONG_SWIFTNESS
	q STRONG_SWIFTNESS
	r SLOWNESS
	s LONG_SLOWNESS
	t STRONG_SLOWNESS
	u TURTLE_MASTER
	v LONG_TURTLE_MASTER
	w STRONG_TURTLE_MASTER
	x WATER_BREATHING
	y LONG_WATER_BREATHING
	z HEALING
	A STRONG_HEALING
	B HARMING
	C STRONG_HARMING
	D POISON
	E LONG_POISON
	F STRONG_POISON
	G REGENERATION
	H LONG_REGENERATION
	I STRONG_REGENERATION
	J STRENGTH
	K LONG_STRENGTH
	L STRONG_STRENGTH
	M WEAKNESS
	N LONG_WEAKNESS
	O LUCK
	P SLOW_FALLING
	Q LONG_SLOW_FALLING
	<init> ()V <init>
	a (Ljava/lang/String;Lbnq;)Lbnq; register
	<clinit> ()V <clinit>
bnu net/minecraft/world/item/alchemy/package-info
bnv net/minecraft/world/item/context/BlockPlaceContext
	b relativePos
	a replaceClicked
	<init> (Lbft;Laoq;Lbly;Ldcg;)V <init>
	<init> (Lbnx;)V <init>
	<init> (Lbru;Lbft;Laoq;Lbly;Ldcg;)V <init>
	a (Lbnv;Lfx;Lgc;)Lbnv; at
	a ()Lfx; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lgc; getNearestLookingDirection
	e ()[Lgc; getNearestLookingDirections
bnw net/minecraft/world/item/context/DirectionalPlaceContext
	b direction
	<init> (Lbru;Lfx;Lgc;Lbly;Lgc;)V <init>
	a ()Lfx; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lgc; getNearestLookingDirection
	e ()[Lgc; getNearestLookingDirections
	f ()Lgc; getHorizontalDirection
	g ()Z isSecondaryUseActive
	h ()F getRotation
bnw$1 net/minecraft/world/item/context/DirectionalPlaceContext$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
bnx net/minecraft/world/item/context/UseOnContext
	a player
	b hand
	c hitResult
	d level
	e itemStack
	<init> (Lbft;Laoq;Ldcg;)V <init>
	<init> (Lbru;Lbft;Laoq;Lbly;Ldcg;)V <init>
	i ()Ldcg; getHitResult
	a ()Lfx; getClickedPos
	j ()Lgc; getClickedFace
	k ()Ldck; getClickLocation
	l ()Z isInside
	m ()Lbly; getItemInHand
	n ()Lbft; getPlayer
	o ()Laoq; getHand
	p ()Lbru; getLevel
	f ()Lgc; getHorizontalDirection
	g ()Z isSecondaryUseActive
	h ()F getRotation
bny net/minecraft/world/item/context/package-info
bnz net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	b id
	c group
	d ingredient
	e result
	f experience
	g cookingTime
	<init> (Lboq;Lvk;Ljava/lang/String;Lbok;Lbly;FI)V <init>
	a (Laok;Lbru;)Z matches
	a (Laok;)Lbly; assemble
	a (II)Z canCraftInDimensions
	a ()Lgj; getIngredients
	b ()F getExperience
	c ()Lbly; getResultItem
	d ()Ljava/lang/String; getGroup
	e ()I getCookingTime
	f ()Lvk; getId
	g ()Lboq; getType
boa net/minecraft/world/item/crafting/ArmorDyeRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bob net/minecraft/world/item/crafting/BannerDuplicateRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	b (Lbil;)Lgj; getRemainingItems
	ag_ ()Lbop; getSerializer
	a (II)Z canCraftInDimensions
	b (Laok;)Lgj; getRemainingItems
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
boc net/minecraft/world/item/crafting/BlastingRecipe
	<init> (Lvk;Ljava/lang/String;Lbok;Lbly;FI)V <init>
	h ()Lbly; getToastSymbol
	ag_ ()Lbop; getSerializer
bod net/minecraft/world/item/crafting/BookCloningRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	b (Lbil;)Lgj; getRemainingItems
	ag_ ()Lbop; getSerializer
	a (II)Z canCraftInDimensions
	b (Laok;)Lgj; getRemainingItems
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
boe net/minecraft/world/item/crafting/CampfireCookingRecipe
	<init> (Lvk;Ljava/lang/String;Lbok;Lbly;FI)V <init>
	h ()Lbly; getToastSymbol
	ag_ ()Lbop; getSerializer
bof net/minecraft/world/item/crafting/CraftingRecipe
	g ()Lboq; getType
bog net/minecraft/world/item/crafting/CustomRecipe
	a id
	<init> (Lvk;)V <init>
	f ()Lvk; getId
	af_ ()Z isSpecial
	c ()Lbly; getResultItem
boh net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	c ()Lbly; getResultItem
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
	<clinit> ()V <clinit>
boi net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
	<clinit> ()V <clinit>
boj net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	c ()Lbly; getResultItem
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
bok net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b values
	c itemStacks
	d stackingIds
	<init> (Ljava/util/stream/Stream;)V <init>
	a ()[Lbly; getItems
	f ()V dissolve
	a (Lbly;)Z test
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	a (Lnf;)V toNetwork
	c ()Lcom/google/gson/JsonElement; toJson
	d ()Z isEmpty
	b (Ljava/util/stream/Stream;)Lbok; fromValues
	e ()Lbok; of
	a ([Lbrt;)Lbok; of
	a ([Lbly;)Lbok; of
	a (Ljava/util/stream/Stream;)Lbok; of
	a (Laej;)Lbok; of
	b (Lnf;)Lbok; fromNetwork
	a (Lcom/google/gson/JsonElement;)Lbok; fromJson
	a (Lcom/google/gson/JsonObject;)Lbok$c; valueFromJson
	test (Ljava/lang/Object;)Z test
	a (Lvk;)Lcom/google/gson/JsonSyntaxException; lambda$valueFromJson$7
	b (Lcom/google/gson/JsonElement;)Lbok$c; lambda$fromJson$6
	c (Lnf;)Lbok$a; lambda$fromNetwork$5
	b (Lbly;)Lbok$a; lambda$of$4
	c (Lbly;)Z lambda$of$3
	a (I)[Lbly; lambda$dissolve$2
	a (Lbok$c;)Ljava/util/stream/Stream; lambda$dissolve$1
	b (I)[Lbok$c; lambda$new$0
	<clinit> ()V <clinit>
bok$1 net/minecraft/world/item/crafting/Ingredient$1
bok$a net/minecraft/world/item/crafting/Ingredient$ItemValue
	a item
	<init> (Lbly;)V <init>
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
	<init> (Lbly;Lbok$1;)V <init>
bok$b net/minecraft/world/item/crafting/Ingredient$TagValue
	a tag
	<init> (Laej;)V <init>
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
	<init> (Laej;Lbok$1;)V <init>
bok$c net/minecraft/world/item/crafting/Ingredient$Value
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
bol net/minecraft/world/item/crafting/MapCloningRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bom net/minecraft/world/item/crafting/MapExtendingRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lcxu;)Z isExplorationMap
	a (Lbil;)Lbly; assemble
	af_ ()Z isSpecial
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bon net/minecraft/world/item/crafting/Recipe
	a (Laok;Lbru;)Z matches
	a (Laok;)Lbly; assemble
	a (II)Z canCraftInDimensions
	c ()Lbly; getResultItem
	b (Laok;)Lgj; getRemainingItems
	a ()Lgj; getIngredients
	af_ ()Z isSpecial
	d ()Ljava/lang/String; getGroup
	h ()Lbly; getToastSymbol
	f ()Lvk; getId
	ag_ ()Lbop; getSerializer
	g ()Lboq; getType
boo net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	c recipes
	d hasErrors
	<init> ()V <init>
	a (Ljava/util/Map;Lacf;Lant;)V apply
	a ()Z hadErrorsLoading
	a (Lboq;Laok;Lbru;)Ljava/util/Optional; getRecipeFor
	a (Lboq;)Ljava/util/List; getAllRecipesFor
	b (Lboq;Laok;Lbru;)Ljava/util/List; getRecipesFor
	b (Lboq;)Ljava/util/Map; byType
	c (Lboq;Laok;Lbru;)Lgj; getRemainingItemsFor
	a (Lvk;)Ljava/util/Optional; byKey
	b ()Ljava/util/Collection; getRecipes
	d ()Ljava/util/stream/Stream; getRecipeIds
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
	a (Ljava/lang/Iterable;)V replaceRecipes
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	a (Ljava/util/Map;Lbon;)V lambda$replaceRecipes$11
	c (Lboq;)Ljava/util/Map; lambda$null$10
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$9
	a (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipeIds$8
	b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipes$7
	a (Lvk;Ljava/util/Map;)Lbon; lambda$byKey$6
	a (Lbon;)Ljava/lang/String; lambda$getRecipesFor$5
	a (Lboq;Lbru;Laok;Lbon;)Ljava/util/stream/Stream; lambda$getRecipesFor$4
	b (Lbon;)Lbon; lambda$getAllRecipesFor$3
	b (Lboq;Lbru;Laok;Lbon;)Ljava/util/stream/Stream; lambda$getRecipeFor$2
	a (Ljava/util/Map$Entry;)Ljava/util/Map; lambda$apply$1
	d (Lboq;)Lcom/google/common/collect/ImmutableMap$Builder; lambda$apply$0
	<clinit> ()V <clinit>
bop net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	u SMITHING
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lnf;Lbon;)V toNetwork
	a (Ljava/lang/String;Lbop;)Lbop; register
	<clinit> ()V <clinit>
boq net/minecraft/world/item/crafting/RecipeType
	a CRAFTING
	b SMELTING
	c BLASTING
	d SMOKING
	e CAMPFIRE_COOKING
	f STONECUTTING
	g SMITHING
	a (Ljava/lang/String;)Lboq; register
	a (Lbon;Lbru;Laok;)Ljava/util/Optional; tryMatch
	<clinit> ()V <clinit>
boq$1 net/minecraft/world/item/crafting/RecipeType$1
	h val$name
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
bor net/minecraft/world/item/crafting/RepairItemRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
	a (Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lbpp;)V lambda$assemble$0
bos net/minecraft/world/item/crafting/ShapedRecipe
	a width
	b height
	c recipeItems
	d result
	e id
	f group
	<init> (Lvk;Ljava/lang/String;IILgj;Lbly;)V <init>
	f ()Lvk; getId
	ag_ ()Lbop; getSerializer
	d ()Ljava/lang/String; getGroup
	c ()Lbly; getResultItem
	a ()Lgj; getIngredients
	a (II)Z canCraftInDimensions
	a (Lbil;Lbru;)Z matches
	a (Lbil;IIZ)Z matches
	a (Lbil;)Lbly; assemble
	i ()I getWidth
	j ()I getHeight
	b ([Ljava/lang/String;Ljava/util/Map;II)Lgj; dissolvePattern
	a ([Ljava/lang/String;)[Ljava/lang/String; shrink
	a (Ljava/lang/String;)I firstNonSpace
	b (Ljava/lang/String;)I lastNonSpace
	b (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
	c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
	a (Lcom/google/gson/JsonObject;)Lbly; itemFromJson
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
	c (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$itemFromJson$0
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; access$000
	a (Lcom/google/gson/JsonArray;)[Ljava/lang/String; access$100
	a ([Ljava/lang/String;Ljava/util/Map;II)Lgj; access$200
	a (Lbos;)I access$300
	b (Lbos;)I access$400
	c (Lbos;)Ljava/lang/String; access$500
	d (Lbos;)Lgj; access$600
	e (Lbos;)Lbly; access$700
bos$a net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	<init> ()V <init>
	b (Lvk;Lcom/google/gson/JsonObject;)Lbos; fromJson
	b (Lvk;Lnf;)Lbos; fromNetwork
	a (Lnf;Lbos;)V toNetwork
	a (Lnf;Lbon;)V toNetwork
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
bot net/minecraft/world/item/crafting/ShapelessRecipe
	a id
	b group
	c result
	d ingredients
	<init> (Lvk;Ljava/lang/String;Lbly;Lgj;)V <init>
	f ()Lvk; getId
	ag_ ()Lbop; getSerializer
	d ()Ljava/lang/String; getGroup
	c ()Lbly; getResultItem
	a ()Lgj; getIngredients
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
	a (Lbot;)Ljava/lang/String; access$000
	b (Lbot;)Lgj; access$100
	c (Lbot;)Lbly; access$200
bot$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	<init> ()V <init>
	b (Lvk;Lcom/google/gson/JsonObject;)Lbot; fromJson
	a (Lcom/google/gson/JsonArray;)Lgj; itemsFromJson
	b (Lvk;Lnf;)Lbot; fromNetwork
	a (Lnf;Lbot;)V toNetwork
	a (Lnf;Lbon;)V toNetwork
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
bou net/minecraft/world/item/crafting/ShieldDecorationRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bov net/minecraft/world/item/crafting/ShulkerBoxColoring
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bow net/minecraft/world/item/crafting/SimpleCookingSerializer
	v defaultCookingTime
	w factory
	<init> (Lbow$a;I)V <init>
	b (Lvk;Lcom/google/gson/JsonObject;)Lbnz; fromJson
	b (Lvk;Lnf;)Lbnz; fromNetwork
	a (Lnf;Lbnz;)V toNetwork
	a (Lnf;Lbon;)V toNetwork
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
	a (Ljava/lang/String;)Ljava/lang/IllegalStateException; lambda$fromJson$0
bow$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
	create (Lvk;Ljava/lang/String;Lbok;Lbly;FI)Lbnz; create
box net/minecraft/world/item/crafting/SimpleRecipeSerializer
	v constructor
	<init> (Ljava/util/function/Function;)V <init>
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lnf;Lbon;)V toNetwork
boy net/minecraft/world/item/crafting/SingleItemRecipe
	a ingredient
	b result
	e type
	f serializer
	c id
	d group
	<init> (Lboq;Lbop;Lvk;Ljava/lang/String;Lbok;Lbly;)V <init>
	g ()Lboq; getType
	ag_ ()Lbop; getSerializer
	f ()Lvk; getId
	d ()Ljava/lang/String; getGroup
	c ()Lbly; getResultItem
	a ()Lgj; getIngredients
	a (II)Z canCraftInDimensions
	a (Laok;)Lbly; assemble
boy$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	v factory
	<init> (Lboy$a$a;)V <init>
	b (Lvk;Lcom/google/gson/JsonObject;)Lboy; fromJson
	b (Lvk;Lnf;)Lboy; fromNetwork
	a (Lnf;Lboy;)V toNetwork
	a (Lnf;Lbon;)V toNetwork
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
boy$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
	create (Lvk;Ljava/lang/String;Lbok;Lbly;)Lboy; create
boz net/minecraft/world/item/crafting/SmeltingRecipe
	<init> (Lvk;Ljava/lang/String;Lbok;Lbly;FI)V <init>
	h ()Lbly; getToastSymbol
	ag_ ()Lbop; getSerializer
bpa net/minecraft/world/item/crafting/SmokingRecipe
	<init> (Lvk;Ljava/lang/String;Lbok;Lbly;FI)V <init>
	h ()Lbly; getToastSymbol
	ag_ ()Lbop; getSerializer
bpb net/minecraft/world/item/crafting/StonecutterRecipe
	<init> (Lvk;Ljava/lang/String;Lbok;Lbly;)V <init>
	a (Laok;Lbru;)Z matches
	h ()Lbly; getToastSymbol
bpc net/minecraft/world/item/crafting/SuspiciousStewRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bpd net/minecraft/world/item/crafting/TippedArrowRecipe
	<init> (Lvk;)V <init>
	a (Lbil;Lbru;)Z matches
	a (Lbil;)Lbly; assemble
	a (II)Z canCraftInDimensions
	ag_ ()Lbop; getSerializer
	a (Laok;)Lbly; assemble
	a (Laok;Lbru;)Z matches
bpe net/minecraft/world/item/crafting/UpgradeRecipe
	a base
	b addition
	c result
	d id
	<init> (Lvk;Lbok;Lbok;Lbly;)V <init>
	a (Laok;Lbru;)Z matches
	a (Laok;)Lbly; assemble
	a (II)Z canCraftInDimensions
	c ()Lbly; getResultItem
	a (Lbly;)Z isAdditionIngredient
	h ()Lbly; getToastSymbol
	f ()Lvk; getId
	ag_ ()Lbop; getSerializer
	g ()Lboq; getType
	a (Lbpe;)Lbok; access$000
	b (Lbpe;)Lbok; access$100
	c (Lbpe;)Lbly; access$200
bpe$a net/minecraft/world/item/crafting/UpgradeRecipe$Serializer
	<init> ()V <init>
	b (Lvk;Lcom/google/gson/JsonObject;)Lbpe; fromJson
	b (Lvk;Lnf;)Lbpe; fromNetwork
	a (Lnf;Lbpe;)V toNetwork
	a (Lnf;Lbon;)V toNetwork
	a (Lvk;Lnf;)Lbon; fromNetwork
	a (Lvk;Lcom/google/gson/JsonObject;)Lbon; fromJson
bpf net/minecraft/world/item/crafting/package-info
bpg net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bph net/minecraft/world/item/enchantment/ArrowFireEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bpi net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bpj net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bpk net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bpl net/minecraft/world/item/enchantment/BindingCurseEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	b ()Z isTreasureOnly
	c ()Z isCurse
bpm net/minecraft/world/item/enchantment/DamageEnchantment
	d NAMES
	e MIN_COST
	f LEVEL_COST
	g LEVEL_COST_SPAN
	a type
	<init> (Lbpp$a;I[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (ILaqn;)F getDamageBonus
	a (Lbpp;)Z checkCompatibility
	a (Lbly;)Z canEnchant
	a (Laqj;Lapx;I)V doPostAttack
	<clinit> ()V <clinit>
bpn net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbly;)Z canEnchant
	a (Lbly;ILjava/util/Random;)Z shouldIgnoreDurabilityDrop
bpo net/minecraft/world/item/enchantment/DiggingEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbly;)Z canEnchant
bpp net/minecraft/world/item/enchantment/Enchantment
	a slots
	d rarity
	b category
	c descriptionId
	c (I)Lbpp; byId
	<init> (Lbpp$a;Lbpq;[Laqc;)V <init>
	a (Laqj;)Ljava/util/Map; getSlotItems
	d ()Lbpp$a; getRarity
	e ()I getMinLevel
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	a (ILaph;)I getDamageProtection
	a (ILaqn;)F getDamageBonus
	b (Lbpp;)Z isCompatibleWith
	a (Lbpp;)Z checkCompatibility
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	d (I)Lnr; getFullname
	a (Lbly;)Z canEnchant
	a (Laqj;Lapx;I)V doPostAttack
	b (Laqj;Lapx;I)V doPostHurt
	b ()Z isTreasureOnly
	c ()Z isCurse
	h ()Z isTradeable
	i ()Z isDiscoverable
bpp$a net/minecraft/world/item/enchantment/Enchantment$Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d VERY_RARE
	e weight
	f $VALUES
	values ()[Lbpp$a; values
	valueOf (Ljava/lang/String;)Lbpp$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getWeight
	<clinit> ()V <clinit>
bpq net/minecraft/world/item/enchantment/EnchantmentCategory
	a ARMOR
	b ARMOR_FEET
	c ARMOR_LEGS
	d ARMOR_CHEST
	e ARMOR_HEAD
	f WEAPON
	g DIGGER
	h FISHING_ROD
	i TRIDENT
	j BREAKABLE
	k BOW
	l WEARABLE
	m CROSSBOW
	n VANISHABLE
	o $VALUES
	values ()[Lbpq; values
	valueOf (Ljava/lang/String;)Lbpq; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
	<init> (Ljava/lang/String;ILbpq$1;)V <init>
	<clinit> ()V <clinit>
bpq$1 net/minecraft/world/item/enchantment/EnchantmentCategory$1
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$2 net/minecraft/world/item/enchantment/EnchantmentCategory$10
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$3 net/minecraft/world/item/enchantment/EnchantmentCategory$11
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$4 net/minecraft/world/item/enchantment/EnchantmentCategory$12
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$5 net/minecraft/world/item/enchantment/EnchantmentCategory$13
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$6 net/minecraft/world/item/enchantment/EnchantmentCategory$14
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$7 net/minecraft/world/item/enchantment/EnchantmentCategory$2
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$8 net/minecraft/world/item/enchantment/EnchantmentCategory$3
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$9 net/minecraft/world/item/enchantment/EnchantmentCategory$4
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$10 net/minecraft/world/item/enchantment/EnchantmentCategory$5
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$11 net/minecraft/world/item/enchantment/EnchantmentCategory$6
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$12 net/minecraft/world/item/enchantment/EnchantmentCategory$7
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$13 net/minecraft/world/item/enchantment/EnchantmentCategory$8
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpq$14 net/minecraft/world/item/enchantment/EnchantmentCategory$9
	<init> (Ljava/lang/String;I)V <init>
	a (Lblu;)Z canEnchant
bpr net/minecraft/world/item/enchantment/EnchantmentHelper
	<init> ()V <init>
	a (Lbpp;Lbly;)I getItemEnchantmentLevel
	a (Lbly;)Ljava/util/Map; getEnchantments
	a (Lmj;)Ljava/util/Map; deserializeEnchantments
	a (Ljava/util/Map;Lbly;)V setEnchantments
	a (Lbpr$a;Lbly;)V runIterationOnItem
	a (Lbpr$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Ljava/lang/Iterable;Laph;)I getDamageProtection
	a (Lbly;Laqn;)F getDamageBonus
	a (Laqj;)F getSweepingDamageRatio
	a (Laqj;Lapx;)V doPostHurtEffects
	b (Laqj;Lapx;)V doPostDamageEffects
	a (Lbpp;Laqj;)I getEnchantmentLevel
	b (Laqj;)I getKnockbackBonus
	c (Laqj;)I getFireAspect
	d (Laqj;)I getRespiration
	e (Laqj;)I getDepthStrider
	f (Laqj;)I getBlockEfficiency
	b (Lbly;)I getFishingLuckBonus
	c (Lbly;)I getFishingSpeedBonus
	g (Laqj;)I getMobLooting
	h (Laqj;)Z hasAquaAffinity
	i (Laqj;)Z hasFrostWalker
	j (Laqj;)Z hasSoulSpeed
	d (Lbly;)Z hasBindingCurse
	e (Lbly;)Z hasVanishingCurse
	f (Lbly;)I getLoyalty
	g (Lbly;)I getRiptide
	h (Lbly;)Z hasChanneling
	b (Lbpp;Laqj;)Ljava/util/Map$Entry; getRandomItemWith
	a (Lbpp;Laqj;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; getRandomItemWith
	a (Ljava/util/Random;IILbly;)I getEnchantmentCost
	a (Ljava/util/Random;Lbly;IZ)Lbly; enchantItem
	b (Ljava/util/Random;Lbly;IZ)Ljava/util/List; selectEnchantment
	a (Ljava/util/List;Lbps;)V filterCompatibleEnchantments
	a (Ljava/util/Collection;Lbpp;)Z isEnchantmentCompatible
	a (ILbly;Z)Ljava/util/List; getAvailableEnchantmentResults
	i (Lbly;)Z lambda$getRandomItemWith$6
	a (Laqj;Lapx;Lbpp;I)V lambda$doPostDamageEffects$5
	b (Laqj;Lapx;Lbpp;I)V lambda$doPostHurtEffects$4
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;Laqn;Lbpp;I)V lambda$getDamageBonus$3
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Laph;Lbpp;I)V lambda$getDamageProtection$2
	a (Lbpr$a;ILbpp;)V lambda$runIterationOnItem$1
	a (Ljava/util/Map;Lmd;Lbpp;)V lambda$deserializeEnchantments$0
bpr$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
	accept (Lbpp;I)V accept
bps net/minecraft/world/item/enchantment/EnchantmentInstance
	b enchantment
	c level
	<init> (Lbpp;I)V <init>
bpt net/minecraft/world/item/enchantment/Enchantments
	M ARMOR_SLOTS
	a ALL_DAMAGE_PROTECTION
	b FIRE_PROTECTION
	c FALL_PROTECTION
	d BLAST_PROTECTION
	e PROJECTILE_PROTECTION
	f RESPIRATION
	g AQUA_AFFINITY
	h THORNS
	i DEPTH_STRIDER
	j FROST_WALKER
	k BINDING_CURSE
	l SOUL_SPEED
	m SHARPNESS
	n SMITE
	o BANE_OF_ARTHROPODS
	p KNOCKBACK
	q FIRE_ASPECT
	r MOB_LOOTING
	s SWEEPING_EDGE
	t BLOCK_EFFICIENCY
	u SILK_TOUCH
	v UNBREAKING
	w BLOCK_FORTUNE
	x POWER_ARROWS
	y PUNCH_ARROWS
	z FLAMING_ARROWS
	A INFINITY_ARROWS
	B FISHING_LUCK
	C FISHING_SPEED
	D LOYALTY
	E IMPALING
	F RIPTIDE
	G CHANNELING
	H MULTISHOT
	I QUICK_CHARGE
	J PIERCING
	K MENDING
	L VANISHING_CURSE
	<init> ()V <init>
	a (Ljava/lang/String;Lbpp;)Lbpp; register
	<clinit> ()V <clinit>
bpu net/minecraft/world/item/enchantment/FireAspectEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bpv net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	<init> (Lbpp$a;Lbpq;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bpw net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	a ()I getMaxLevel
	a (Laqj;Lbru;Lfx;I)V onEntityMoved
	a (Lbpp;)Z checkCompatibility
bpx net/minecraft/world/item/enchantment/KnockbackEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bpy net/minecraft/world/item/enchantment/LootBonusEnchantment
	<init> (Lbpp$a;Lbpq;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bpz net/minecraft/world/item/enchantment/MendingEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	a ()I getMaxLevel
bqa net/minecraft/world/item/enchantment/MultiShotEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bqb net/minecraft/world/item/enchantment/OxygenEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bqc net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	<init> (Lbpp$a;Lbqc$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (ILaph;)I getDamageProtection
	a (Lbpp;)Z checkCompatibility
	a (Laqj;I)I getFireAfterDampener
	a (Laqj;D)D getExplosionKnockbackAfterDampener
bqc$a net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	a ALL
	b FIRE
	c FALL
	d EXPLOSION
	e PROJECTILE
	f name
	g minCost
	h levelCost
	i $VALUES
	values ()[Lbqc$a; values
	valueOf (Ljava/lang/String;)Lbqc$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;II)V <init>
	a ()Ljava/lang/String; getName
	b ()I getMinCost
	c ()I getLevelCost
	<clinit> ()V <clinit>
bqd net/minecraft/world/item/enchantment/QuickChargeEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bqe net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	h ()Z isTradeable
	i ()Z isDiscoverable
	a ()I getMaxLevel
bqf net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	e (I)F getSweepingDamageRatio
bqg net/minecraft/world/item/enchantment/ThornsEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbly;)Z canEnchant
	b (Laqj;Lapx;I)V doPostHurt
	a (ILjava/util/Random;)Z shouldHit
	b (ILjava/util/Random;)I getDamage
	a (Ljava/util/Map$Entry;Laqj;)V lambda$doPostHurt$0
bqh net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bqi net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (ILaqn;)F getDamageBonus
bqj net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bqk net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bql net/minecraft/world/item/enchantment/UntouchingEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bqm net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	b ()Z isTreasureOnly
	c ()Z isCurse
bqn net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lbpp;)Z checkCompatibility
bqo net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	<init> (Lbpp$a;[Laqc;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
bqp net/minecraft/world/item/enchantment/package-info
bqq net/minecraft/world/item/package-info
bqr net/minecraft/world/item/trading/Merchant
	f (Lbft;)V setTradingPlayer
	eM ()Lbft; getTradingPlayer
	eO ()Lbqt; getOffers
	a (Lbqt;)V overrideOffers
	a (Lbqs;)V notifyTrade
	k (Lbly;)V notifyTradeUpdated
	eV ()Lbru; getLevel
	eL ()I getVillagerXp
	t (I)V overrideXp
	eP ()Z showProgressBar
	eQ ()Ladn; getNotifyTradeSound
	fa ()Z canRestock
	a (Lbft;Lnr;I)V openTradingScreen
	a (ILbfs;Lbft;)Lbhz; lambda$openTradingScreen$0
bqs net/minecraft/world/item/trading/MerchantOffer
	a baseCostA
	b costB
	c result
	d uses
	e maxUses
	f rewardExp
	g specialPriceDiff
	h demand
	i priceMultiplier
	j xp
	<init> (Lmd;)V <init>
	<init> (Lbly;Lbly;IIF)V <init>
	<init> (Lbly;Lbly;Lbly;IIF)V <init>
	<init> (Lbly;Lbly;Lbly;IIIF)V <init>
	<init> (Lbly;Lbly;Lbly;IIIFI)V <init>
	a ()Lbly; getBaseCostA
	b ()Lbly; getCostA
	c ()Lbly; getCostB
	d ()Lbly; getResult
	e ()V updateDemand
	f ()Lbly; assemble
	a (Lbqs;)Z isSame
	g ()I getUses
	h ()V resetUses
	i ()I getMaxUses
	j ()V increaseUses
	k ()I getDemand
	a (I)V addToSpecialPriceDiff
	l ()V resetSpecialPriceDiff
	m ()I getSpecialPriceDiff
	b (I)V setSpecialPriceDiff
	n ()F getPriceMultiplier
	o ()I getXp
	p ()Z isOutOfStock
	q ()V setToOutOfStock
	r ()Z needsRestock
	s ()Z shouldRewardExp
	t ()Lmd; createTag
	a (Lbly;Lbly;)Z satisfiedBy
	c (Lbly;Lbly;)Z isRequiredItem
	b (Lbly;Lbly;)Z take
bqt net/minecraft/world/item/trading/MerchantOffers
	<init> ()V <init>
	<init> (Lmd;)V <init>
	a (Lbly;Lbly;I)Lbqs; getRecipeFor
	a (Lnf;)V writeToStream
	b (Lnf;)Lbqt; createFromStream
	a ()Lmd; createTag
bqu net/minecraft/world/item/trading/package-info
bqv net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	c DEFAULT_NAME
	d lastExecution
	e updateLastExecution
	f successCount
	g trackOutput
	h lastOutput
	i command
	j name
	<init> ()V <init>
	i ()I getSuccessCount
	a (I)V setSuccessCount
	j ()Lnr; getLastOutput
	a (Lmd;)Lmd; save
	b (Lmd;)V load
	a (Ljava/lang/String;)V setCommand
	k ()Ljava/lang/String; getCommand
	a (Lbru;)Z performCommand
	l ()Lnr; getName
	a (Lnr;)V setName
	a (Lnr;Ljava/util/UUID;)V sendMessage
	d ()Laag; getLevel
	e ()V onUpdated
	b (Lnr;)V setLastOutput
	a (Z)V setTrackOutput
	m ()Z isTrackOutput
	a (Lbft;)Laor; usedBy
	f ()Ldck; getPosition
	h ()Ldb; createCommandSourceStack
	a ()Z acceptsSuccess
	b ()Z acceptsFailure
	R_ ()Z shouldInformAdmins
	g ()Ljava/lang/String; lambda$performCommand$1
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$performCommand$0
	<clinit> ()V <clinit>
bqw net/minecraft/world/level/BaseSpawner
	a LOGGER
	b spawnDelay
	c spawnPotentials
	d nextSpawnData
	e spin
	f oSpin
	g minSpawnDelay
	h maxSpawnDelay
	i spawnCount
	j displayEntity
	k maxNearbyEntities
	l requiredPlayerRange
	m spawnRange
	<init> ()V <init>
	g ()Lvk; getEntityId
	a (Laqb;)V setEntityId
	h ()Z isNearPlayer
	c ()V tick
	i ()V delay
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	d ()Lapx; getOrCreateDisplayEntity
	b (I)Z onEventTriggered
	a (Lbsj;)V setNextSpawnData
	a (I)V broadcastEvent
	a ()Lbru; getLevel
	b ()Lfx; getPos
	e ()D getSpin
	f ()D getoSpin
	a (DDDLapx;)Lapx; lambda$tick$0
	<clinit> ()V <clinit>
bqx net/minecraft/world/level/BlockAndTintGetter
	a (Lgc;Z)F getShade
	e ()Lcul; getLightEngine
	a (Lfx;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lbsc;Lfx;)I getBrightness
	b (Lfx;I)I getRawBrightness
	e (Lfx;)Z canSeeSky
bqy net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	<init> (Lfx;Lbul;II)V <init>
	a ()Lfx; getPos
	b ()Lbul; getBlock
	c ()I getParamA
	d ()I getParamB
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
bqz net/minecraft/world/level/BlockGetter
	c (Lfx;)Lccg; getBlockEntity
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	f (Lfx;)I getLightBlock
	g (Lfx;)I getLightEmission
	J ()I getMaxLightLevel
	K ()I getMaxBuildHeight
	a (Ldcf;)Ljava/util/stream/Stream; getBlockStates
	a (Lbrc;)Ldcg; clip
	a (Ldck;Ldck;Lfx;Ldde;Lcee;)Ldcg; clipWithInteractionOverride
	a (Ldde;Ljava/util/function/Supplier;)D getBlockFloorHeight
	h (Lfx;)D getBlockFloorHeight
	a (Lbrc;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	j (Lfx;)Ldde; lambda$getBlockFloorHeight$2
	b (Lbrc;)Ldcg; lambda$clip$1
	a (Lbrc;Lfx;)Ldcg; lambda$clip$0
bra net/minecraft/world/level/ChunkPos
	a INVALID_CHUNK_POS
	b x
	c z
	<init> (II)V <init>
	<init> (Lfx;)V <init>
	<init> (J)V <init>
	a ()J toLong
	a (II)J asLong
	a (J)I getX
	b (J)I getZ
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I getMiddleBlockX
	c ()I getMiddleBlockZ
	d ()I getMinBlockX
	e ()I getMinBlockZ
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	h ()I getRegionX
	i ()I getRegionZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	a (III)Lfx; getBlockAt
	a (I)Lfx; getMiddleBlockPosition
	toString ()Ljava/lang/String; toString
	l ()Lfx; getWorldPosition
	a (Lbra;)I getChessboardDistance
	a (Lbra;I)Ljava/util/stream/Stream; rangeClosed
	a (Lbra;Lbra;)Ljava/util/stream/Stream; rangeClosed
	<clinit> ()V <clinit>
bra$1 net/minecraft/world/level/ChunkPos$1
	e pos
	a val$from
	b val$to
	c val$zDiff
	d val$xDiff
	<init> (JILbra;Lbra;II)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
brb net/minecraft/world/level/ChunkTickList
	a ticks
	b toId
	<init> (Ljava/util/function/Function;Ljava/util/List;J)V <init>
	<init> (Ljava/util/function/Function;Ljava/util/List;)V <init>
	a (Lfx;Ljava/lang/Object;)Z hasScheduledTick
	a (Lfx;Ljava/lang/Object;ILbsn;)V scheduleTick
	b (Lfx;Ljava/lang/Object;)Z willTickThisTick
	b ()Lmj; save
	a (Lmj;Ljava/util/function/Function;Ljava/util/function/Function;)Lbrb; create
	a (Lbsl;)V copyOut
	a ()I size
	a (Lbsl;Lbrb$a;)V lambda$copyOut$1
	a (JLbsm;)Lbrb$a; lambda$new$0
brb$1 net/minecraft/world/level/ChunkTickList$1
brb$a net/minecraft/world/level/ChunkTickList$ScheduledTick
	d type
	a pos
	b delay
	c priority
	<init> (Ljava/lang/Object;Lfx;ILbsn;)V <init>
	toString ()Ljava/lang/String; toString
	<init> (Ljava/lang/Object;Lfx;ILbsn;Lbrb$1;)V <init>
	a (Lbrb$a;)Ljava/lang/Object; access$100
brc net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	<init> (Ldck;Ldck;Lbrc$a;Lbrc$b;Lapx;)V <init>
	a ()Ldck; getTo
	b ()Ldck; getFrom
	a (Lcee;Lbqz;Lfx;)Ldde; getBlockShape
	a (Lcuu;Lbqz;Lfx;)Ldde; getFluidShape
brc$a net/minecraft/world/level/ClipContext$Block
	a COLLIDER
	b OUTLINE
	c VISUAL
	d shapeGetter
	e $VALUES
	values ()[Lbrc$a; values
	valueOf (Ljava/lang/String;)Lbrc$a; valueOf
	<init> (Ljava/lang/String;ILbrc$c;)V <init>
	get (Lcee;Lbqz;Lfx;Ldcp;)Ldde; get
	<clinit> ()V <clinit>
brc$b net/minecraft/world/level/ClipContext$Fluid
	a NONE
	b SOURCE_ONLY
	c ANY
	d canPick
	e $VALUES
	values ()[Lbrc$b; values
	valueOf (Ljava/lang/String;)Lbrc$b; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Predicate;)V <init>
	a (Lcuu;)Z canPick
	b (Lcuu;)Z lambda$static$1
	c (Lcuu;)Z lambda$static$0
	<clinit> ()V <clinit>
brc$c net/minecraft/world/level/ClipContext$ShapeGetter
	get (Lcee;Lbqz;Lfx;Ldcp;)Ldde; get
brd net/minecraft/world/level/CollisionGetter
	f ()Lcfr; getWorldBorder
	c (II)Lbqz; getChunkForCollisions
	a (Lapx;Ldde;)Z isUnobstructed
	a (Lcee;Lfx;Ldcp;)Z isUnobstructed
	j (Lapx;)Z isUnobstructed
	b (Ldcf;)Z noCollision
	k (Lapx;)Z noCollision
	a_ (Lapx;Ldcf;)Z noCollision
	b (Lapx;Ldcf;Ljava/util/function/Predicate;)Z noCollision
	c (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	d (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getCollisions
	b (Lapx;Ldcf;)Ljava/util/stream/Stream; getBlockCollisions
	a (Lapx;Ldcf;Ljava/util/function/BiPredicate;)Z noBlockCollision
	b (Lapx;Ldcf;Ljava/util/function/BiPredicate;)Ljava/util/stream/Stream; getBlockCollisions
	a (Lapx;)Z lambda$noCollision$2
	b (Lapx;)Z lambda$noCollision$1
	d (Lapx;)Z lambda$noCollision$0
bre net/minecraft/world/level/CollisionSpliterator
	a source
	b box
	c context
	d cursor
	e pos
	f entityShape
	g collisionGetter
	h needsBorderCheck
	i predicate
	<init> (Lbrd;Lapx;Ldcf;)V <init>
	<init> (Lbrd;Lapx;Ldcf;Ljava/util/function/BiPredicate;)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
	a (Ljava/util/function/Consumer;)Z collisionCheck
	a (II)Lbqz; getChunk
	b (Ljava/util/function/Consumer;)Z worldBorderCheck
	a (Ldde;Ldcf;)Z isCloseToBorder
	b (Ldde;Ldcf;)Z isOutsideBorder
	a (Lcfr;Ldcf;)Z isBoxFullyWithinWorldBorder
	a (Lcee;Lfx;)Z lambda$new$0
net/minecraft/world/level/ColorResolver net/minecraft/world/level/ColorResolver
	getColor (Lbss;DD)I getColor
brf net/minecraft/world/level/CommonLevelAccessor
	c (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	a (Lapx;Ldde;)Z isUnobstructed
	a (Lchk$a;Lfx;)Lfx; getHeightmapPos
	r ()Lgn; registryAccess
	i (Lfx;)Ljava/util/Optional; getBiomeName
brg net/minecraft/world/level/CustomSpawner
	a (Laag;ZZ)I tick
brh net/minecraft/world/level/DataPackConfig
	a DEFAULT
	b CODEC
	c enabled
	d disabled
	<init> (Ljava/util/List;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getEnabled
	b ()Ljava/util/List; getDisabled
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbrh;)Ljava/util/List; lambda$null$1
	b (Lbrh;)Ljava/util/List; lambda$null$0
	<clinit> ()V <clinit>
bri net/minecraft/world/level/EmptyBlockGetter
	a INSTANCE
	b $VALUES
	values ()[Lbri; values
	valueOf (Ljava/lang/String;)Lbri; valueOf
	<init> (Ljava/lang/String;I)V <init>
	c (Lfx;)Lccg; getBlockEntity
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	<clinit> ()V <clinit>
brj net/minecraft/world/level/EmptyTickList
	a INSTANCE
	<init> ()V <init>
	b ()Lbrj; empty
	a (Lfx;Ljava/lang/Object;)Z hasScheduledTick
	a (Lfx;Ljava/lang/Object;I)V scheduleTick
	a (Lfx;Ljava/lang/Object;ILbsn;)V scheduleTick
	b (Lfx;Ljava/lang/Object;)Z willTickThisTick
	a ()I size
	<clinit> ()V <clinit>
brk net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	a source
	<init> (Lapx;)V <init>
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;)Ljava/util/Optional; getBlockExplosionResistance
	a (Lbrm;Lbqz;Lfx;Lcee;F)Z shouldBlockExplode
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;Ljava/lang/Float;)Ljava/lang/Float; lambda$getBlockExplosionResistance$0
brl net/minecraft/world/level/EntityGetter
	a (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ljava/lang/Class;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	b (Ljava/lang/Class;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	x ()Ljava/util/List; players
	a (Lapx;Ldcf;)Ljava/util/List; getEntities
	a (Lapx;Ldde;)Z isUnobstructed
	a (Ljava/lang/Class;Ldcf;)Ljava/util/List; getEntitiesOfClass
	b (Ljava/lang/Class;Ldcf;)Ljava/util/List; getLoadedEntitiesOfClass
	c (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	a (DDDDLjava/util/function/Predicate;)Lbft; getNearestPlayer
	a (Lapx;D)Lbft; getNearestPlayer
	a (DDDDZ)Lbft; getNearestPlayer
	a (DDDD)Z hasNearbyAlivePlayer
	a (Lazd;Laqj;)Lbft; getNearestPlayer
	a (Lazd;Laqj;DDD)Lbft; getNearestPlayer
	a (Lazd;DDD)Lbft; getNearestPlayer
	a (Ljava/lang/Class;Lazd;Laqj;DDDLdcf;)Laqj; getNearestEntity
	b (Ljava/lang/Class;Lazd;Laqj;DDDLdcf;)Laqj; getNearestLoadedEntity
	a (Ljava/util/List;Lazd;Laqj;DDD)Laqj; getNearestEntity
	a (Lazd;Laqj;Ldcf;)Ljava/util/List; getNearbyPlayers
	a (Ljava/lang/Class;Lazd;Laqj;Ldcf;)Ljava/util/List; getNearbyEntities
	b (Ljava/util/UUID;)Lbft; getPlayerByUUID
	a (Ldcf;Lapx;Lapx;)Z lambda$getEntityCollisions$0
brm net/minecraft/world/level/Explosion
	a EXPLOSION_DAMAGE_CALCULATOR
	b fire
	c blockInteraction
	d random
	e level
	f x
	g y
	h z
	i source
	j radius
	k damageSource
	l damageCalculator
	m toBlow
	n hitPlayers
	<init> (Lbru;Lapx;DDDF)V <init>
	<init> (Lbru;Lapx;DDDFLjava/util/List;)V <init>
	<init> (Lbru;Lapx;DDDFZLbrm$a;Ljava/util/List;)V <init>
	<init> (Lbru;Lapx;DDDFZLbrm$a;)V <init>
	<init> (Lbru;Lapx;Laph;Lbrn;DDDFZLbrm$a;)V <init>
	a (Lapx;)Lbrn; makeDamageCalculator
	a (Ldck;Lapx;)F getSeenPercent
	a ()V explode
	a (Z)V finalizeExplosion
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lbly;Lfx;)V addBlockDrops
	b ()Laph; getDamageSource
	c ()Ljava/util/Map; getHitPlayers
	d ()Laqj; getSourceMob
	e ()V clearToBlow
	f ()Ljava/util/List; getToBlow
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lfx;Lbly;)V lambda$finalizeExplosion$0
	<clinit> ()V <clinit>
brm$a net/minecraft/world/level/Explosion$BlockInteraction
	a NONE
	b BREAK
	c DESTROY
	d $VALUES
	values ()[Lbrm$a; values
	valueOf (Ljava/lang/String;)Lbrm$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
brn net/minecraft/world/level/ExplosionDamageCalculator
	<init> ()V <init>
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;)Ljava/util/Optional; getBlockExplosionResistance
	a (Lbrm;Lbqz;Lfx;Lcee;F)Z shouldBlockExplode
bro net/minecraft/world/level/FoliageColor
	a pixels
	<init> ()V <init>
	a ([I)V init
	a (DD)I get
	a ()I getEvergreenColor
	b ()I getBirchColor
	c ()I getDefaultColor
	<clinit> ()V <clinit>
brp net/minecraft/world/level/ForcedChunksSavedData
	a chunks
	<init> ()V <init>
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
brq net/minecraft/world/level/GameRules
	H LOGGER
	I GAME_RULE_TYPES
	a RULE_DOFIRETICK
	b RULE_MOBGRIEFING
	c RULE_KEEPINVENTORY
	d RULE_DOMOBSPAWNING
	e RULE_DOMOBLOOT
	f RULE_DOBLOCKDROPS
	g RULE_DOENTITYDROPS
	h RULE_COMMANDBLOCKOUTPUT
	i RULE_NATURAL_REGENERATION
	j RULE_DAYLIGHT
	k RULE_LOGADMINCOMMANDS
	l RULE_SHOWDEATHMESSAGES
	m RULE_RANDOMTICKING
	n RULE_SENDCOMMANDFEEDBACK
	o RULE_REDUCEDDEBUGINFO
	p RULE_SPECTATORSGENERATECHUNKS
	q RULE_SPAWN_RADIUS
	r RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	s RULE_MAX_ENTITY_CRAMMING
	t RULE_WEATHER_CYCLE
	u RULE_LIMITED_CRAFTING
	v RULE_MAX_COMMAND_CHAIN_LENGTH
	w RULE_ANNOUNCE_ADVANCEMENTS
	x RULE_DISABLE_RAIDS
	y RULE_DOINSOMNIA
	z RULE_DO_IMMEDIATE_RESPAWN
	A RULE_DROWNING_DAMAGE
	B RULE_FALL_DAMAGE
	C RULE_FIRE_DAMAGE
	D RULE_DO_PATROL_SPAWNING
	E RULE_DO_TRADER_SPAWNING
	F RULE_FORGIVE_DEAD_PLAYERS
	G RULE_UNIVERSAL_ANGER
	J rules
	a (Ljava/lang/String;Lbrq$b;Lbrq$f;)Lbrq$e; register
	<init> (Lcom/mojang/serialization/DynamicLike;)V <init>
	<init> (Lbrq;Lnet/minecraft/server/MinecraftServer;)V <init>
	<init> ()V <init>
	<init> (Ljava/util/Map;)V <init>
	a (Lbrq$e;)Lbrq$g; getRule
	a ()Lmd; createTag
	a (Lcom/mojang/serialization/DynamicLike;)V loadFromTag
	b ()Lbrq; copy
	a (Lbrq$c;)V visitGameRuleTypes
	a (Lbrq$c;Lbrq$e;Lbrq$f;)V callVisitorCap
	a (Lbrq;Lnet/minecraft/server/MinecraftServer;)V assignFrom
	a (Lbrq$e;Lbrq;Lnet/minecraft/server/MinecraftServer;)V assignCap
	b (Lbrq$e;)Z getBoolean
	c (Lbrq$e;)I getInt
	a (Lbrq;Lnet/minecraft/server/MinecraftServer;Lbrq$e;)V lambda$assignFrom$8
	b (Lbrq$c;Lbrq$e;Lbrq$f;)V lambda$visitGameRuleTypes$7
	a (Ljava/util/Map$Entry;)Lbrq$g; lambda$copy$6
	a (Lcom/mojang/serialization/DynamicLike;Lbrq$e;Lbrq$g;)V lambda$loadFromTag$5
	a (Lmd;Lbrq$e;Lbrq$g;)V lambda$createTag$4
	b (Ljava/util/Map$Entry;)Lbrq$g; lambda$new$3
	a (Lnet/minecraft/server/MinecraftServer;Lbrq$a;)V lambda$static$2
	b (Lnet/minecraft/server/MinecraftServer;Lbrq$a;)V lambda$static$1
	d (Lbrq$e;)Ljava/lang/String; lambda$static$0
	c ()Lorg/apache/logging/log4j/Logger; access$500
	<clinit> ()V <clinit>
brq$1 net/minecraft/world/level/GameRules$1
brq$a net/minecraft/world/level/GameRules$BooleanValue
	b value
	b (ZLjava/util/function/BiConsumer;)Lbrq$f; create
	b (Z)Lbrq$f; create
	<init> (Lbrq$f;Z)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a ()Z get
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	a (Ljava/lang/String;)V deserialize
	c ()I getCommandResult
	d ()Lbrq$a; getSelf
	e ()Lbrq$a; copy
	a (Lbrq$a;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lbrq$g;Lnet/minecraft/server/MinecraftServer;)V setFrom
	f ()Lbrq$g; copy
	g ()Lbrq$g; getSelf
	a (Lnet/minecraft/server/MinecraftServer;Lbrq$a;)V lambda$create$1
	a (ZLbrq$f;)Lbrq$a; lambda$create$0
	a (Z)Lbrq$f; access$000
	a (ZLjava/util/function/BiConsumer;)Lbrq$f; access$200
brq$b net/minecraft/world/level/GameRules$Category
	a PLAYER
	b MOBS
	c SPAWNING
	d DROPS
	e UPDATES
	f CHAT
	g MISC
	h descriptionId
	i $VALUES
	values ()[Lbrq$b; values
	valueOf (Ljava/lang/String;)Lbrq$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getDescriptionId
	<clinit> ()V <clinit>
brq$c net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lbrq$e;Lbrq$f;)V visit
	b (Lbrq$e;Lbrq$f;)V visitBoolean
	c (Lbrq$e;Lbrq$f;)V visitInteger
brq$d net/minecraft/world/level/GameRules$IntegerValue
	b value
	a (ILjava/util/function/BiConsumer;)Lbrq$f; create
	b (I)Lbrq$f; create
	<init> (Lbrq$f;I)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a ()I get
	a (ILnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	a (Ljava/lang/String;)V deserialize
	b (Ljava/lang/String;)Z tryDeserialize
	c (Ljava/lang/String;)I safeParse
	c ()I getCommandResult
	d ()Lbrq$d; getSelf
	e ()Lbrq$d; copy
	a (Lbrq$d;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lbrq$g;Lnet/minecraft/server/MinecraftServer;)V setFrom
	f ()Lbrq$g; copy
	g ()Lbrq$g; getSelf
	a (Lnet/minecraft/server/MinecraftServer;Lbrq$d;)V lambda$create$1
	a (ILbrq$f;)Lbrq$d; lambda$create$0
	a (I)Lbrq$f; access$100
brq$e net/minecraft/world/level/GameRules$Key
	a id
	b category
	<init> (Ljava/lang/String;Lbrq$b;)V <init>
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/lang/String; getId
	b ()Ljava/lang/String; getDescriptionId
	c ()Lbrq$b; getCategory
	a (Lbrq$e;)Ljava/lang/String; access$600
brq$f net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	d visitorCaller
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lbrq$h;)V <init>
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	a ()Lbrq$g; createRule
	a (Lbrq$c;Lbrq$e;)V callVisitor
	a (Lbrq$f;)Ljava/util/function/BiConsumer; access$300
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lbrq$h;Lbrq$1;)V <init>
brq$g net/minecraft/world/level/GameRules$Value
	a type
	<init> (Lbrq$f;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	a (Lnet/minecraft/server/MinecraftServer;)V onChanged
	a (Ljava/lang/String;)V deserialize
	b ()Ljava/lang/String; serialize
	toString ()Ljava/lang/String; toString
	c ()I getCommandResult
	g ()Lbrq$g; getSelf
	f ()Lbrq$g; copy
	a (Lbrq$g;Lnet/minecraft/server/MinecraftServer;)V setFrom
brq$h net/minecraft/world/level/GameRules$VisitorCaller
	call (Lbrq$c;Lbrq$e;Lbrq$f;)V call
brr net/minecraft/world/level/GameType
	a NOT_SET
	b SURVIVAL
	c CREATIVE
	d ADVENTURE
	e SPECTATOR
	f id
	g name
	h $VALUES
	values ()[Lbrr; values
	valueOf (Ljava/lang/String;)Lbrr; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	c ()Lnr; getDisplayName
	a (Lbfq;)V updatePlayerAbilities
	d ()Z isBlockPlacingRestricted
	e ()Z isCreative
	f ()Z isSurvival
	a (I)Lbrr; byId
	a (ILbrr;)Lbrr; byId
	a (Ljava/lang/String;)Lbrr; byName
	a (Ljava/lang/String;Lbrr;)Lbrr; byName
	<clinit> ()V <clinit>
brs net/minecraft/world/level/GrassColor
	a pixels
	<init> ()V <init>
	a ([I)V init
	a (DD)I get
	<clinit> ()V <clinit>
brt net/minecraft/world/level/ItemLike
	h ()Lblu; asItem
bru net/minecraft/world/level/Level
	e LOGGER
	f RESOURCE_KEY_CODEC
	g OVERWORLD
	h NETHER
	i END
	a DIRECTIONS
	j blockEntityList
	k tickableBlockEntities
	l pendingBlockEntities
	m blockEntitiesToUnload
	b thread
	c isDebug
	d skyDarken
	n randValue
	o addend
	p oRainLevel
	q rainLevel
	r oThunderLevel
	s thunderLevel
	t random
	x dimensionType
	u levelData
	y profiler
	v isClientSide
	w updatingBlockEntities
	z worldBorder
	A biomeManager
	B dimension
	<init> (Lcyl;Lvj;Lcha;Ljava/util/function/Supplier;ZZJ)V <init>
	s_ ()Z isClientSide
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	j (Lfx;)Lcee; getTopBlockState
	k (Lfx;)Z isInWorldBounds
	l (Lfx;)Z isInSpawnableBounds
	D (Lfx;)Z isInWorldBoundsHorizontal
	d (I)Z isOutsideSpawnableHeight
	m (Lfx;)Z isOutsideBuildHeight
	b (I)Z isOutsideBuildHeight
	n (Lfx;)Lcge; getChunkAt
	d (II)Lcge; getChunk
	a (IILcfx;Z)Lcft; getChunk
	a (Lfx;Lcee;I)Z setBlock
	a (Lfx;Lcee;II)Z setBlock
	a (Lfx;Lcee;Lcee;)V onBlockStateChange
	a (Lfx;Z)Z removeBlock
	a (Lfx;ZLapx;I)Z destroyBlock
	a (Lfx;Lcee;)Z setBlockAndUpdate
	a (Lfx;Lcee;Lcee;I)V sendBlockUpdated
	b (Lfx;Lcee;Lcee;)V setBlocksDirty
	b (Lfx;Lbul;)V updateNeighborsAt
	a (Lfx;Lbul;Lgc;)V updateNeighborsAtExceptFromFacing
	a (Lfx;Lbul;Lfx;)V neighborChanged
	a (Lchk$a;II)I getHeight
	e ()Lcul; getLightEngine
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	L ()Z isDay
	M ()Z isNight
	a (Lbft;Lfx;Ladn;Ladp;FF)V playSound
	a (Lbft;DDDLadn;Ladp;FF)V playSound
	a (Lbft;Lapx;Ladn;Ladp;FF)V playSound
	a (DDDLadn;Ladp;FFZ)V playLocalSound
	a (Lhf;DDDDDD)V addParticle
	a (Lhf;ZDDDDDD)V addParticle
	b (Lhf;DDDDDD)V addAlwaysVisibleParticle
	b (Lhf;ZDDDDDD)V addAlwaysVisibleParticle
	a (F)F getSunAngle
	a (Lccg;)Z addBlockEntity
	a (Ljava/util/Collection;)V addAllPendingBlockEntities
	N ()V tickBlockEntities
	a (Ljava/util/function/Consumer;Lapx;)V guardEntityTick
	a (Lapx;DDDFLbrm$a;)Lbrm; explode
	a (Lapx;DDDFZLbrm$a;)Lbrm; explode
	a (Lapx;Laph;Lbrn;DDDFZLbrm$a;)Lbrm; explode
	O ()Ljava/lang/String; gatherChunkSourceStats
	c (Lfx;)Lccg; getBlockEntity
	E (Lfx;)Lccg; getPendingBlockEntityAt
	a (Lfx;Lccg;)V setBlockEntity
	o (Lfx;)V removeBlockEntity
	p (Lfx;)Z isLoaded
	a (Lfx;Lapx;Lgc;)Z loadedAndEntityCanStandOnFace
	a (Lfx;Lapx;)Z loadedAndEntityCanStandOn
	P ()V updateSkyBrightness
	b (ZZ)V setSpawnSettings
	Q ()V prepareWeather
	close ()V close
	c (II)Lbqz; getChunkForCollisions
	a (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Laqb;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ljava/lang/Class;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	b (Ljava/lang/Class;Ldcf;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	a (I)Lapx; getEntity
	b (Lfx;Lccg;)V blockEntityChanged
	t_ ()I getSeaLevel
	q (Lfx;)I getDirectSignalTo
	a (Lfx;Lgc;)Z hasSignal
	b (Lfx;Lgc;)I getSignal
	r (Lfx;)Z hasNeighborSignal
	s (Lfx;)I getBestNeighborSignal
	R ()V disconnect
	S ()J getGameTime
	T ()J getDayTime
	a (Lbft;Lfx;)Z mayInteract
	a (Lapx;B)V broadcastEntityEvent
	a (Lfx;Lbul;II)V blockEvent
	h ()Lcya; getLevelData
	U ()Lbrq; getGameRules
	b (F)F getThunderLevel
	c (F)V setThunderLevel
	d (F)F getRainLevel
	e (F)V setRainLevel
	V ()Z isThundering
	W ()Z isRaining
	t (Lfx;)Z isRainingAt
	u (Lfx;)Z isHumidAt
	a (Ljava/lang/String;)Lcxu; getMapData
	a (Lcxu;)V setMapData
	t ()I getFreeMapId
	b (ILfx;I)V globalLevelEvent
	a (Ll;)Lm; fillReportDetails
	a (ILfx;I)V destroyBlockProgress
	a (DDDDDDLmd;)V createFireworks
	F ()Lddk; getScoreboard
	c (Lfx;Lbul;)V updateNeighbourForOutputSignal
	d (Lfx;)Laop; getCurrentDifficultyAt
	c ()I getSkyDarken
	c (I)V setSkyFlashTime
	f ()Lcfr; getWorldBorder
	a (Loj;)V sendPacketToServer
	k ()Lcha; dimensionType
	X ()Lvj; dimension
	u_ ()Ljava/util/Random; getRandom
	a (Lfx;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lfx;Ljava/util/function/Predicate;)Z isFluidAtPosition
	o ()Lboo; getRecipeManager
	p ()Lael; getTagManager
	a (IIII)Lfx; getBlockRandomPos
	q ()Z noSave
	Y ()Lant; getProfiler
	Z ()Ljava/util/function/Supplier; getProfilerSupplier
	d ()Lbsu; getBiomeManager
	aa ()Z isDebug
	a (II)Lcft; getChunk
	a ()Ljava/lang/String; lambda$fillReportDetails$4
	b ()Ljava/lang/String; lambda$fillReportDetails$3
	b (Lccg;)Ljava/lang/String; lambda$tickBlockEntities$2
	c (Lccg;)Ljava/lang/Object; lambda$addBlockEntity$1
	a (Lbul;)Ljava/lang/String; lambda$neighborChanged$0
	<clinit> ()V <clinit>
bru$1 net/minecraft/world/level/Level$1
	a val$dimensionType
	b this$0
	<init> (Lbru;Lcha;)V <init>
	a ()D getCenterX
	b ()D getCenterZ
brv net/minecraft/world/level/LevelAccessor
	ab ()J dayTime
	I ()Lbsl; getBlockTicks
	H ()Lbsl; getLiquidTicks
	h ()Lcya; getLevelData
	d (Lfx;)Laop; getCurrentDifficultyAt
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	ac ()Laoo; getDifficulty
	G ()Lcfw; getChunkSource
	b (II)Z hasChunk
	u_ ()Ljava/util/Random; getRandom
	a (Lfx;Lbul;)V blockUpdated
	a (Lbft;Lfx;Ladn;Ladp;FF)V playSound
	a (Lhf;DDDDDD)V addParticle
	a (Lbft;ILfx;I)V levelEvent
	ad ()I getHeight
	c (ILfx;I)V levelEvent
brw net/minecraft/world/level/LevelReader
	a (IILcfx;Z)Lcft; getChunk
	b (II)Z hasChunk
	a (Lchk$a;II)I getHeight
	c ()I getSkyDarken
	d ()Lbsu; getBiomeManager
	v (Lfx;)Lbss; getBiome
	c (Ldcf;)Ljava/util/stream/Stream; getBlockStatesIfLoaded
	a (Lfx;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	b (III)Lbss; getNoiseBiome
	a (III)Lbss; getUncachedNoiseBiome
	s_ ()Z isClientSide
	t_ ()I getSeaLevel
	k ()Lcha; dimensionType
	a (Lchk$a;Lfx;)Lfx; getHeightmapPos
	w (Lfx;)Z isEmptyBlock
	x (Lfx;)Z canSeeSkyFromBelowWater
	y (Lfx;)F getBrightness
	c (Lfx;Lgc;)I getDirectSignal
	z (Lfx;)Lcft; getChunk
	a (II)Lcft; getChunk
	a (IILcfx;)Lcft; getChunk
	c (II)Lbqz; getChunkForCollisions
	A (Lfx;)Z isWaterAt
	d (Ldcf;)Z containsAnyLiquid
	B (Lfx;)I getMaxLocalRawBrightness
	c (Lfx;I)I getMaxLocalRawBrightness
	C (Lfx;)Z hasChunkAt
	a (Lfx;Lfx;)Z hasChunksAt
	a (IIIIII)Z hasChunksAt
brx net/minecraft/world/level/LevelSettings
	a levelName
	b gameType
	c hardcore
	d difficulty
	e allowCommands
	f gameRules
	g dataPackConfig
	<init> (Ljava/lang/String;Lbrr;ZLaoo;ZLbrq;Lbrh;)V <init>
	a (Lcom/mojang/serialization/Dynamic;Lbrh;)Lbrx; parse
	a ()Ljava/lang/String; levelName
	b ()Lbrr; gameType
	c ()Z hardcore
	d ()Laoo; difficulty
	e ()Z allowCommands
	f ()Lbrq; gameRules
	g ()Lbrh; getDataPackConfig
	a (Lbrr;)Lbrx; withGameType
	a (Laoo;)Lbrx; withDifficulty
	a (Lbrh;)Lbrx; withDataPackConfig
	h ()Lbrx; copy
	a (Ljava/lang/Number;)Laoo; lambda$parse$0
bry net/minecraft/world/level/LevelSimulatedRW
brz net/minecraft/world/level/LevelSimulatedReader
	a (Lfx;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lfx;Ljava/util/function/Predicate;)Z isFluidAtPosition
	a (Lchk$a;Lfx;)Lfx; getHeightmapPos
bsa net/minecraft/world/level/LevelTimeAccess
	ab ()J dayTime
	ae ()F getMoonBrightness
	f (F)F getTimeOfDay
	af ()I getMoonPhase
bsb net/minecraft/world/level/LevelWriter
	a (Lfx;Lcee;II)Z setBlock
	a (Lfx;Lcee;I)Z setBlock
	a (Lfx;Z)Z removeBlock
	b (Lfx;Z)Z destroyBlock
	a (Lfx;ZLapx;)Z destroyBlock
	a (Lfx;ZLapx;I)Z destroyBlock
	c (Lapx;)Z addFreshEntity
bsc net/minecraft/world/level/LightLayer
	a SKY
	b BLOCK
	c surrounding
	d $VALUES
	values ()[Lbsc; values
	valueOf (Ljava/lang/String;)Lbsc; valueOf
	<init> (Ljava/lang/String;II)V <init>
	<clinit> ()V <clinit>
bsd net/minecraft/world/level/NaturalSpawner
	a LOGGER
	b MAGIC_NUMBER
	c SPAWNING_CATEGORIES
	<init> ()V <init>
	a (ILjava/lang/Iterable;Lbsd$b;)Lbsd$d; createState
	b (Lfx;Lcft;)Lbss; getRoughBiome
	a (Laag;Lcge;Lbsd$d;ZZZ)V spawnForChunk
	a (Laql;Laag;Lcge;Lbsd$c;Lbsd$a;)V spawnCategoryForChunk
	a (Laql;Laag;Lfx;)V spawnCategoryForPosition
	a (Laql;Laag;Lcft;Lfx;Lbsd$c;Lbsd$a;)V spawnCategoryForPosition
	a (Laag;Lcft;Lfx$a;D)Z isRightDistanceToPlayerAndSpawnPoint
	a (Laag;Laql;Lbsk;Lcfv;Lbtd$c;Lfx$a;D)Z isValidSpawnPostitionForType
	a (Laag;Laqb;)Laqk; getMobForSpawn
	a (Laag;Laqk;D)Z isValidPositionForMob
	a (Laag;Lbsk;Lcfv;Laql;Ljava/util/Random;Lfx;)Lbtd$c; getRandomSpawnMobAt
	a (Laag;Lbsk;Lcfv;Laql;Lbtd$c;Lfx;)Z canSpawnMobAt
	a (Laag;Lbsk;Lcfv;Laql;Lfx;Lbss;)Ljava/util/List; mobsAt
	a (Lbru;Lcge;)Lfx; getRandomPosWithin
	a (Lbqz;Lfx;Lcee;Lcuu;Laqb;)Z isValidEmptySpawnBlock
	a (Lara$c;Lbrw;Lfx;Laqb;)Z isSpawnPositionOk
	a (Lbsh;Lbss;IILjava/util/Random;)V spawnMobsForChunkGeneration
	a (Lbrw;Laqb;II)Lfx; getTopNonCollidingPos
	a (Laqk;Lcft;)V lambda$spawnCategoryForPosition$6
	a (Laqb;Lfx;Lcft;)Z lambda$spawnCategoryForPosition$5
	a (Lbsd$d;Laqk;Lcft;)V lambda$spawnForChunk$4
	a (Lbsd$d;Laqb;Lfx;Lcft;)Z lambda$spawnForChunk$3
	a (Lfx;Lapx;Lbsg;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Laql;Lcge;)V lambda$createState$2
	a (I)[Laql; lambda$static$1
	a (Laql;)Z lambda$static$0
	a (Lfx;Lcft;)Lbss; access$000
	a ()I access$100
	<clinit> ()V <clinit>
bsd$1 net/minecraft/world/level/NaturalSpawner$1
	a $SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
	<clinit> ()V <clinit>
bsd$a net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
	run (Laqk;Lcft;)V run
bsd$b net/minecraft/world/level/NaturalSpawner$ChunkGetter
	query (JLjava/util/function/Consumer;)V query
bsd$c net/minecraft/world/level/NaturalSpawner$SpawnPredicate
	test (Laqb;Lfx;Lcft;)Z test
bsd$d net/minecraft/world/level/NaturalSpawner$SpawnState
	a spawnableChunkCount
	b mobCategoryCounts
	c spawnPotential
	d unmodifiableMobCategoryCounts
	e lastCheckedPos
	f lastCheckedType
	g lastCharge
	<init> (ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lbsg;)V <init>
	a (Laqb;Lfx;Lcft;)Z canSpawn
	a (Laqk;Lcft;)V afterSpawn
	a ()I getSpawnableChunkCount
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
	a (Laql;)Z canSpawnForCategory
	<init> (ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lbsg;Lbsd$1;)V <init>
	a (Lbsd$d;Laql;)Z access$300
	a (Lbsd$d;Laqk;Lcft;)V access$400
	a (Lbsd$d;Laqb;Lfx;Lcft;)Z access$500
bse net/minecraft/world/level/NoiseColumn
	a column
	<init> ([Lcee;)V <init>
	c (Lfx;)Lccg; getBlockEntity
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
bsf net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	<init> (Lbru;Lfx;Lfx;)V <init>
	d (Lfx;)Lcft; getChunk
	a (II)Lcft; getChunk
	f ()Lcfr; getWorldBorder
	c (II)Lbqz; getChunkForCollisions
	c (Lfx;)Lccg; getBlockEntity
	d_ (Lfx;)Lcee; getBlockState
	c (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	d (Lapx;Ldcf;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getCollisions
	b (Lfx;)Lcuu; getFluidState
bsg net/minecraft/world/level/PotentialCalculator
	a charges
	<init> ()V <init>
	a (Lfx;D)V addCharge
	b (Lfx;D)D getPotentialEnergyChange
bsg$a net/minecraft/world/level/PotentialCalculator$PointCharge
	a pos
	b charge
	<init> (Lfx;D)V <init>
	a (Lfx;)D getPotentialChange
bsh net/minecraft/world/level/ServerLevelAccessor
	E ()Laag; getLevel
	l (Lapx;)V addFreshEntityWithPassengers
bsi net/minecraft/world/level/ServerTickList
	a ignore
	b toId
	c tickNextTickSet
	d tickNextTickList
	e level
	f currentlyTicking
	g alreadyTicked
	h ticker
	<init> (Laag;Ljava/util/function/Predicate;Ljava/util/function/Function;Ljava/util/function/Consumer;)V <init>
	b ()V tick
	b (Lfx;Ljava/lang/Object;)Z willTickThisTick
	a (Lbra;ZZ)Ljava/util/List; fetchTicksInChunk
	a (Lcqx;ZZ)Ljava/util/List; fetchTicksInArea
	a (Ljava/util/List;Ljava/util/Collection;Lcqx;Z)Ljava/util/List; fetchTicksInArea
	a (Lcqx;Lfx;)V copy
	a (Lbra;)Lmj; save
	a (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lmj; saveTickList
	a (Lfx;Ljava/lang/Object;)Z hasScheduledTick
	a (Lfx;Ljava/lang/Object;ILbsn;)V scheduleTick
	a (Lbsm;)V addTickData
	a ()I size
bsj net/minecraft/world/level/SpawnData
	b tag
	<init> ()V <init>
	<init> (Lmd;)V <init>
	<init> (ILmd;)V <init>
	a ()Lmd; save
	b ()Lmd; getTag
bsk net/minecraft/world/level/StructureFeatureManager
	a level
	b worldGenSettings
	<init> (Lbrv;Lcht;)V <init>
	a (Laam;)Lbsk; forWorldGenRegion
	a (Lgp;Lckx;)Ljava/util/stream/Stream; startsForFeature
	a (Lgp;Lckx;Lcga;)Lcrs; getStartForFeature
	a (Lgp;Lckx;Lcrs;Lcga;)V setStartForFeature
	a (Lgp;Lckx;JLcga;)V addReferenceForFeature
	a ()Z shouldGenerateFeatures
	a (Lfx;ZLckx;)Lcrs; getStructureAt
	a (ZLfx;Lcrs;)Z lambda$getStructureAt$5
	a (Lfx;Lcrr;)Z lambda$null$4
	a (Lfx;Lcrs;)Z lambda$getStructureAt$3
	a (Lcrs;)Z lambda$startsForFeature$2
	a (Lckx;Lgp;)Lcrs; lambda$startsForFeature$1
	a (Ljava/lang/Long;)Lgp; lambda$startsForFeature$0
bsl net/minecraft/world/level/TickList
	a (Lfx;Ljava/lang/Object;)Z hasScheduledTick
	a (Lfx;Ljava/lang/Object;I)V scheduleTick
	a (Lfx;Ljava/lang/Object;ILbsn;)V scheduleTick
	b (Lfx;Ljava/lang/Object;)Z willTickThisTick
	a ()I size
bsm net/minecraft/world/level/TickNextTickData
	d counter
	e type
	a pos
	b triggerTick
	c priority
	f c
	<init> (Lfx;Ljava/lang/Object;)V <init>
	<init> (Lfx;Ljava/lang/Object;JLbsn;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/util/Comparator; createTimeComparator
	toString ()Ljava/lang/String; toString
	b ()Ljava/lang/Object; getType
	a (Lbsm;)J lambda$createTimeComparator$2
	b (Lbsm;)Lbsn; lambda$createTimeComparator$1
	c (Lbsm;)J lambda$createTimeComparator$0
bsn net/minecraft/world/level/TickPriority
	a EXTREMELY_HIGH
	b VERY_HIGH
	c HIGH
	d NORMAL
	e LOW
	f VERY_LOW
	g EXTREMELY_LOW
	h value
	i $VALUES
	values ()[Lbsn; values
	valueOf (Ljava/lang/String;)Lbsn; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a (I)Lbsn; byValue
	a ()I getValue
	<clinit> ()V <clinit>
bso net/minecraft/world/level/WorldGenLevel
	C ()J getSeed
	a (Lgp;Lckx;)Ljava/util/stream/Stream; startsForFeature
bsp net/minecraft/world/level/biome/AmbientAdditionsSettings
	a CODEC
	b soundEvent
	c tickChance
	<init> (Ladn;D)V <init>
	a ()Ladn; getSoundEvent
	b ()D getTickChance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbsp;)Ljava/lang/Double; lambda$null$1
	b (Lbsp;)Ladn; lambda$null$0
	<clinit> ()V <clinit>
bsq net/minecraft/world/level/biome/AmbientMoodSettings
	a CODEC
	b LEGACY_CAVE_SETTINGS
	c soundEvent
	d tickDelay
	e blockSearchExtent
	f soundPositionOffset
	<init> (Ladn;IID)V <init>
	a ()Ladn; getSoundEvent
	b ()I getTickDelay
	c ()I getBlockSearchExtent
	d ()D getSoundPositionOffset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lbsq;)Ljava/lang/Double; lambda$null$3
	b (Lbsq;)Ljava/lang/Integer; lambda$null$2
	c (Lbsq;)Ljava/lang/Integer; lambda$null$1
	d (Lbsq;)Ladn; lambda$null$0
	<clinit> ()V <clinit>
bsr net/minecraft/world/level/biome/AmbientParticleSettings
	a CODEC
	b options
	c probability
	<init> (Lhf;F)V <init>
	a ()Lhf; getOptions
	a (Ljava/util/Random;)Z canSpawn
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbsr;)Ljava/lang/Float; lambda$null$1
	b (Lbsr;)Lhf; lambda$null$0
	<clinit> ()V <clinit>
bss net/minecraft/world/level/biome/Biome
	a LOGGER
	b DIRECT_CODEC
	c NETWORK_CODEC
	d CODEC
	e LIST_CODEC
	g structuresByStep
	h TEMPERATURE_NOISE
	i FROZEN_TEMPERATURE_NOISE
	f BIOME_INFO_NOISE
	j climateSettings
	k generationSettings
	l mobSettings
	m depth
	n scale
	o biomeCategory
	p specialEffects
	q temperatureCache
	<init> (Lbss$d;Lbss$b;FFLbsw;Lbst;Lbtd;)V <init>
	a ()I getSkyColor
	b ()Lbtd; getMobSettings
	c ()Lbss$e; getPrecipitation
	d ()Z isHumid
	b (Lfx;)F getHeightAdjustedTemperature
	a (Lfx;)F getTemperature
	a (Lbrw;Lfx;)Z shouldFreeze
	a (Lbrw;Lfx;Z)Z shouldFreeze
	b (Lbrw;Lfx;)Z shouldSnow
	e ()Lbst; getGenerationSettings
	a (Lbsk;Lcfv;Laam;JLchu;Lfx;)V generate
	f ()I getFogColor
	a (DD)I getGrassColor
	v ()I getGrassColorFromTexture
	g ()I getFoliageColor
	w ()I getFoliageColorFromTexture
	a (Ljava/util/Random;Lcft;IIIDLcee;Lcee;IJ)V buildSurfaceAt
	h ()F getDepth
	i ()F getDownfall
	j ()F getScale
	k ()F getBaseTemperature
	l ()Lbsw; getSpecialEffects
	m ()I getWaterColor
	n ()I getWaterFogColor
	o ()Ljava/util/Optional; getAmbientParticle
	p ()Ljava/util/Optional; getAmbientLoop
	q ()Ljava/util/Optional; getAmbientMood
	r ()Ljava/util/Optional; getAmbientAdditions
	s ()Ljava/util/Optional; getBackgroundMusic
	t ()Lbss$b; getBiomeCategory
	toString ()Ljava/lang/String; toString
	a (Lcis;)Ljava/lang/String; lambda$generate$20
	a (Lckx;)Ljava/lang/String; lambda$generate$19
	a (Laam;Lbsk;Lcfv;Lchu;IIIILcrs;)V lambda$generate$18
	x ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$17
	y ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$null$16
	b (Lckx;)Ljava/lang/Integer; lambda$new$15
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$14
	a (Lbss$d;Lbss$b;Ljava/lang/Float;Ljava/lang/Float;Lbsw;)Lbss; lambda$null$13
	a (Lbss;)Lbsw; lambda$null$12
	b (Lbss;)Ljava/lang/Float; lambda$null$11
	c (Lbss;)Ljava/lang/Float; lambda$null$10
	d (Lbss;)Lbss$b; lambda$null$9
	e (Lbss;)Lbss$d; lambda$null$8
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	f (Lbss;)Lbtd; lambda$null$6
	g (Lbss;)Lbst; lambda$null$5
	h (Lbss;)Lbsw; lambda$null$4
	i (Lbss;)Ljava/lang/Float; lambda$null$3
	j (Lbss;)Ljava/lang/Float; lambda$null$2
	k (Lbss;)Lbss$b; lambda$null$1
	l (Lbss;)Lbss$d; lambda$null$0
	u ()Lctz; access$100
	<init> (Lbss$d;Lbss$b;FFLbsw;Lbst;Lbtd;Lbss$1;)V <init>
	<clinit> ()V <clinit>
bss$1 net/minecraft/world/level/biome/Biome$1
	a this$0
	<init> (Lbss;IF)V <init>
	rehash (I)V rehash
bss$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a precipitation
	b biomeCategory
	c depth
	d scale
	e temperature
	f temperatureModifier
	g downfall
	h specialEffects
	i mobSpawnSettings
	j generationSettings
	<init> ()V <init>
	a (Lbss$e;)Lbss$a; precipitation
	a (Lbss$b;)Lbss$a; biomeCategory
	a (F)Lbss$a; depth
	b (F)Lbss$a; scale
	c (F)Lbss$a; temperature
	d (F)Lbss$a; downfall
	a (Lbsw;)Lbss$a; specialEffects
	a (Lbtd;)Lbss$a; mobSpawnSettings
	a (Lbst;)Lbss$a; generationSettings
	a (Lbss$f;)Lbss$a; temperatureAdjustment
	a ()Lbss; build
	toString ()Ljava/lang/String; toString
bss$b net/minecraft/world/level/biome/Biome$BiomeCategory
	a NONE
	b TAIGA
	c EXTREME_HILLS
	d JUNGLE
	e MESA
	f PLAINS
	g SAVANNA
	h ICY
	i THEEND
	j BEACH
	k FOREST
	l OCEAN
	m DESERT
	n RIVER
	o SWAMP
	p MUSHROOM
	q NETHER
	r CODEC
	s BY_NAME
	t name
	u $VALUES
	values ()[Lbss$b; values
	valueOf (Ljava/lang/String;)Lbss$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbss$b; byName
	a ()Ljava/lang/String; getSerializedName
	a (Lbss$b;)Lbss$b; lambda$static$0
	<clinit> ()V <clinit>
bss$c net/minecraft/world/level/biome/Biome$ClimateParameters
	a CODEC
	b temperature
	c humidity
	d altitude
	e weirdness
	f offset
	<init> (FFFFF)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lbss$c;)F fitness
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	b (Lbss$c;)Ljava/lang/Float; lambda$null$4
	c (Lbss$c;)Ljava/lang/Float; lambda$null$3
	d (Lbss$c;)Ljava/lang/Float; lambda$null$2
	e (Lbss$c;)Ljava/lang/Float; lambda$null$1
	f (Lbss$c;)Ljava/lang/Float; lambda$null$0
	<clinit> ()V <clinit>
bss$d net/minecraft/world/level/biome/Biome$ClimateSettings
	a CODEC
	b precipitation
	c temperature
	d temperatureModifier
	e downfall
	<init> (Lbss$e;FLbss$f;F)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	e (Lbss$d;)Ljava/lang/Float; lambda$null$3
	f (Lbss$d;)Lbss$f; lambda$null$2
	g (Lbss$d;)Ljava/lang/Float; lambda$null$1
	h (Lbss$d;)Lbss$e; lambda$null$0
	a (Lbss$d;)Lbss$e; access$200
	b (Lbss$d;)Lbss$f; access$300
	c (Lbss$d;)F access$400
	d (Lbss$d;)F access$500
	<init> (Lbss$e;FLbss$f;FLbss$1;)V <init>
	<clinit> ()V <clinit>
bss$e net/minecraft/world/level/biome/Biome$Precipitation
	a NONE
	b RAIN
	c SNOW
	d CODEC
	e BY_NAME
	f name
	g $VALUES
	values ()[Lbss$e; values
	valueOf (Ljava/lang/String;)Lbss$e; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbss$e; byName
	a ()Ljava/lang/String; getSerializedName
	a (Lbss$e;)Lbss$e; lambda$static$0
	<clinit> ()V <clinit>
bss$f net/minecraft/world/level/biome/Biome$TemperatureModifier
	a NONE
	b FROZEN
	d name
	c CODEC
	e BY_NAME
	f $VALUES
	values ()[Lbss$f; values
	valueOf (Ljava/lang/String;)Lbss$f; valueOf
	a (Lfx;F)F modifyTemperature
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lbss$f; byName
	a (Lbss$f;)Lbss$f; lambda$static$0
	<init> (Ljava/lang/String;ILjava/lang/String;Lbss$1;)V <init>
	<clinit> ()V <clinit>
bss$f$1 net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lfx;F)F modifyTemperature
bss$f$2 net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lfx;F)F modifyTemperature
bst net/minecraft/world/level/biome/BiomeGenerationSettings
	a LOGGER
	b EMPTY
	c CODEC
	d surfaceBuilder
	e carvers
	f features
	g structureStarts
	h flowerFeatures
	<init> (Ljava/util/function/Supplier;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V <init>
	a (Lchj$a;)Ljava/util/List; getCarvers
	a (Lckx;)Z isValidStart
	a ()Ljava/util/Collection; structures
	a (Lcit;)Lcit; withBiomeConfig
	b ()Ljava/util/List; getFlowerFeatures
	c ()Ljava/util/List; features
	d ()Ljava/util/function/Supplier; getSurfaceBuilder
	e ()Lcts; getSurfaceBuilderConfig
	a (Lcit;Lcit;)Z lambda$withBiomeConfig$8
	a (Lckx;Ljava/util/function/Supplier;)Z lambda$isValidStart$7
	a (Lcis;)Z lambda$new$6
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lbst;)Ljava/util/List; lambda$null$4
	b (Lbst;)Ljava/util/List; lambda$null$3
	c (Lbst;)Ljava/util/Map; lambda$null$2
	d (Lbst;)Ljava/util/function/Supplier; lambda$null$1
	f ()Lctd; lambda$static$0
	<init> (Ljava/util/function/Supplier;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lbst$1;)V <init>
	<clinit> ()V <clinit>
bst$1 net/minecraft/world/level/biome/BiomeGenerationSettings$1
bst$a net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	a surfaceBuilder
	b carvers
	c features
	d structureStarts
	<init> ()V <init>
	a (Lctd;)Lbst$a; surfaceBuilder
	a (Ljava/util/function/Supplier;)Lbst$a; surfaceBuilder
	a (Lchj$b;Lcis;)Lbst$a; addFeature
	a (ILjava/util/function/Supplier;)Lbst$a; addFeature
	a (Lchj$a;Lchy;)Lbst$a; addCarver
	a (Lcit;)Lbst$a; addStructureStart
	a (I)V addFeatureStepsUpTo
	a ()Lbst; build
	a (Ljava/util/Map$Entry;)Ljava/util/List; lambda$build$6
	b ()Ljava/lang/IllegalStateException; lambda$build$5
	b (Lcit;)Lcit; lambda$addStructureStart$4
	a (Lchy;)Lchy; lambda$addCarver$3
	a (Lchj$a;)Ljava/util/List; lambda$addCarver$2
	a (Lcis;)Lcis; lambda$addFeature$1
	b (Lctd;)Lctd; lambda$surfaceBuilder$0
bsu net/minecraft/world/level/biome/BiomeManager
	a noiseBiomeSource
	b biomeZoomSeed
	c zoomer
	<init> (Lbsu$a;JLbsx;)V <init>
	a (J)J obfuscateSeed
	a (Lbsv;)Lbsu; withDifferentSource
	a (Lfx;)Lbss; getBiome
	a (DDD)Lbss; getNoiseBiomeAtPosition
	b (Lfx;)Lbss; getNoiseBiomeAtPosition
	a (III)Lbss; getNoiseBiomeAtQuart
bsu$a net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	b (III)Lbss; getNoiseBiome
bsv net/minecraft/world/level/biome/BiomeSource
	a CODEC
	b supportedStructures
	c surfaceBlocks
	d possibleBiomes
	<init> (Ljava/util/stream/Stream;)V <init>
	<init> (Ljava/util/List;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lbsv; withSeed
	b ()Ljava/util/List; possibleBiomes
	a (IIII)Ljava/util/Set; getBiomesWithin
	a (IIIILjava/util/function/Predicate;Ljava/util/Random;)Lfx; findBiomeHorizontal
	a (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lfx; findBiomeHorizontal
	a (Lckx;)Z canGenerateStructure
	c ()Ljava/util/Set; getSurfaceBlocks
	b (Lckx;)Ljava/lang/Boolean; lambda$canGenerateStructure$1
	a (Lckx;Lbss;)Z lambda$null$0
	<clinit> ()V <clinit>
bsw net/minecraft/world/level/biome/BiomeSpecialEffects
	a CODEC
	b fogColor
	c waterColor
	d waterFogColor
	e skyColor
	f foliageColorOverride
	g grassColorOverride
	h grassColorModifier
	i ambientParticleSettings
	j ambientLoopSoundEvent
	k ambientMoodSettings
	l ambientAdditionsSettings
	m backgroundMusic
	<init> (IIIILjava/util/Optional;Ljava/util/Optional;Lbsw$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V <init>
	a ()I getFogColor
	b ()I getWaterColor
	c ()I getWaterFogColor
	d ()I getSkyColor
	e ()Ljava/util/Optional; getFoliageColorOverride
	f ()Ljava/util/Optional; getGrassColorOverride
	g ()Lbsw$b; getGrassColorModifier
	h ()Ljava/util/Optional; getAmbientParticleSettings
	i ()Ljava/util/Optional; getAmbientLoopSoundEvent
	j ()Ljava/util/Optional; getAmbientMoodSettings
	k ()Ljava/util/Optional; getAmbientAdditionsSettings
	l ()Ljava/util/Optional; getBackgroundMusic
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$12
	a (Lbsw;)Ljava/util/Optional; lambda$null$11
	b (Lbsw;)Ljava/util/Optional; lambda$null$10
	c (Lbsw;)Ljava/util/Optional; lambda$null$9
	d (Lbsw;)Ljava/util/Optional; lambda$null$8
	e (Lbsw;)Ljava/util/Optional; lambda$null$7
	f (Lbsw;)Lbsw$b; lambda$null$6
	g (Lbsw;)Ljava/util/Optional; lambda$null$5
	h (Lbsw;)Ljava/util/Optional; lambda$null$4
	i (Lbsw;)Ljava/lang/Integer; lambda$null$3
	j (Lbsw;)Ljava/lang/Integer; lambda$null$2
	k (Lbsw;)Ljava/lang/Integer; lambda$null$1
	l (Lbsw;)Ljava/lang/Integer; lambda$null$0
	<init> (IIIILjava/util/Optional;Ljava/util/Optional;Lbsw$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lbsw$1;)V <init>
	<clinit> ()V <clinit>
bsw$1 net/minecraft/world/level/biome/BiomeSpecialEffects$1
bsw$a net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	a fogColor
	b waterColor
	c waterFogColor
	d skyColor
	e foliageColorOverride
	f grassColorOverride
	g grassColorModifier
	h ambientParticle
	i ambientLoopSoundEvent
	j ambientMoodSettings
	k ambientAdditionsSettings
	l backgroundMusic
	<init> ()V <init>
	a (I)Lbsw$a; fogColor
	b (I)Lbsw$a; waterColor
	c (I)Lbsw$a; waterFogColor
	d (I)Lbsw$a; skyColor
	e (I)Lbsw$a; foliageColorOverride
	f (I)Lbsw$a; grassColorOverride
	a (Lbsw$b;)Lbsw$a; grassColorModifier
	a (Lbsr;)Lbsw$a; ambientParticle
	a (Ladn;)Lbsw$a; ambientLoopSound
	a (Lbsq;)Lbsw$a; ambientMoodSound
	a (Lbsp;)Lbsw$a; ambientAdditionsSound
	a (Ladl;)Lbsw$a; backgroundMusic
	a ()Lbsw; build
	b ()Ljava/lang/IllegalStateException; lambda$build$3
	c ()Ljava/lang/IllegalStateException; lambda$build$2
	d ()Ljava/lang/IllegalStateException; lambda$build$1
	e ()Ljava/lang/IllegalStateException; lambda$build$0
bsw$b net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	a NONE
	b DARK_FOREST
	c SWAMP
	e name
	d CODEC
	f BY_NAME
	g $VALUES
	values ()[Lbsw$b; values
	valueOf (Ljava/lang/String;)Lbsw$b; valueOf
	a (DDI)I modifyColor
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lbsw$b; byName
	a (Lbsw$b;)Lbsw$b; lambda$static$0
	<init> (Ljava/lang/String;ILjava/lang/String;Lbsw$1;)V <init>
	<clinit> ()V <clinit>
bsw$b$1 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (DDI)I modifyColor
bsw$b$2 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (DDI)I modifyColor
bsw$b$3 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (DDI)I modifyColor
bsx net/minecraft/world/level/biome/BiomeZoomer
	a (JIIILbsu$a;)Lbss; getBiome
bsy net/minecraft/world/level/biome/Biomes
	a OCEAN
	b PLAINS
	c DESERT
	d MOUNTAINS
	e FOREST
	f TAIGA
	g SWAMP
	h RIVER
	i NETHER_WASTES
	j THE_END
	k FROZEN_OCEAN
	l FROZEN_RIVER
	m SNOWY_TUNDRA
	n SNOWY_MOUNTAINS
	o MUSHROOM_FIELDS
	p MUSHROOM_FIELD_SHORE
	q BEACH
	r DESERT_HILLS
	s WOODED_HILLS
	t TAIGA_HILLS
	u MOUNTAIN_EDGE
	v JUNGLE
	w JUNGLE_HILLS
	x JUNGLE_EDGE
	y DEEP_OCEAN
	z STONE_SHORE
	A SNOWY_BEACH
	B BIRCH_FOREST
	C BIRCH_FOREST_HILLS
	D DARK_FOREST
	E SNOWY_TAIGA
	F SNOWY_TAIGA_HILLS
	G GIANT_TREE_TAIGA
	H GIANT_TREE_TAIGA_HILLS
	I WOODED_MOUNTAINS
	J SAVANNA
	K SAVANNA_PLATEAU
	L BADLANDS
	M WOODED_BADLANDS_PLATEAU
	N BADLANDS_PLATEAU
	O SMALL_END_ISLANDS
	P END_MIDLANDS
	Q END_HIGHLANDS
	R END_BARRENS
	S WARM_OCEAN
	T LUKEWARM_OCEAN
	U COLD_OCEAN
	V DEEP_WARM_OCEAN
	W DEEP_LUKEWARM_OCEAN
	X DEEP_COLD_OCEAN
	Y DEEP_FROZEN_OCEAN
	Z THE_VOID
	aa SUNFLOWER_PLAINS
	ab DESERT_LAKES
	ac GRAVELLY_MOUNTAINS
	ad FLOWER_FOREST
	ae TAIGA_MOUNTAINS
	af SWAMP_HILLS
	ag ICE_SPIKES
	ah MODIFIED_JUNGLE
	ai MODIFIED_JUNGLE_EDGE
	aj TALL_BIRCH_FOREST
	ak TALL_BIRCH_HILLS
	al DARK_FOREST_HILLS
	am SNOWY_TAIGA_MOUNTAINS
	an GIANT_SPRUCE_TAIGA
	ao GIANT_SPRUCE_TAIGA_HILLS
	ap MODIFIED_GRAVELLY_MOUNTAINS
	aq SHATTERED_SAVANNA
	ar SHATTERED_SAVANNA_PLATEAU
	as ERODED_BADLANDS
	at MODIFIED_WOODED_BADLANDS_PLATEAU
	au MODIFIED_BADLANDS_PLATEAU
	av BAMBOO_JUNGLE
	aw BAMBOO_JUNGLE_HILLS
	ax SOUL_SAND_VALLEY
	ay CRIMSON_FOREST
	az WARPED_FOREST
	aA BASALT_DELTAS
	<init> ()V <init>
	a (Ljava/lang/String;)Lvj; register
	<clinit> ()V <clinit>
bsz net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	e CODEC
	f allowedBiomes
	g bitShift
	h size
	<init> (Ljava/util/List;I)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lbsv; withSeed
	b (III)Lbss; getNoiseBiome
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbsz;)Ljava/lang/Integer; lambda$null$1
	b (Lbsz;)Ljava/util/List; lambda$null$0
	<clinit> ()V <clinit>
bta net/minecraft/world/level/biome/FixedBiomeSource
	e CODEC
	f biome
	<init> (Lbss;)V <init>
	<init> (Ljava/util/function/Supplier;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lbsv; withSeed
	b (III)Lbss; getNoiseBiome
	a (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lfx; findBiomeHorizontal
	a (IIII)Ljava/util/Set; getBiomesWithin
	a (Lbss;)Lbss; lambda$new$1
	a (Lbta;)Ljava/util/function/Supplier; lambda$static$0
	<clinit> ()V <clinit>
btb net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer
	a INSTANCE
	b $VALUES
	values ()[Lbtb; values
	valueOf (Ljava/lang/String;)Lbtb; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (JIIILbsu$a;)Lbss; getBiome
	a (JIIIDDD)D getFiddledDistance
	a (J)D getFiddle
	a (D)D sqr
	<clinit> ()V <clinit>
btc net/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer
	a INSTANCE
	b $VALUES
	values ()[Lbtc; values
	valueOf (Ljava/lang/String;)Lbtc; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (JIIILbsu$a;)Lbss; getBiome
	<clinit> ()V <clinit>
btd net/minecraft/world/level/biome/MobSpawnSettings
	a LOGGER
	b EMPTY
	c CODEC
	d creatureGenerationProbability
	e spawners
	f mobSpawnCosts
	g playerSpawnFriendly
	<init> (FLjava/util/Map;Ljava/util/Map;Z)V <init>
	a (Laql;)Ljava/util/List; getMobs
	a (Laqb;)Lbtd$b; getMobSpawnCost
	a ()F getCreatureProbability
	b ()Z playerSpawnFriendly
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lbtd;)Ljava/util/Map; lambda$null$4
	b (Lbtd;)Ljava/util/Map; lambda$null$3
	c (Lbtd;)Ljava/lang/Float; lambda$null$2
	b (Laql;)Ljava/util/List; lambda$static$1
	c (Laql;)Laql; lambda$static$0
	<init> (FLjava/util/Map;Ljava/util/Map;ZLbtd$1;)V <init>
	<clinit> ()V <clinit>
btd$1 net/minecraft/world/level/biome/MobSpawnSettings$1
btd$a net/minecraft/world/level/biome/MobSpawnSettings$Builder
	a spawners
	b mobSpawnCosts
	c creatureGenerationProbability
	d playerCanSpawn
	<init> ()V <init>
	a (Laql;Lbtd$c;)Lbtd$a; addSpawn
	a (Laqb;DD)Lbtd$a; addMobCharge
	a (F)Lbtd$a; creatureGenerationProbability
	a ()Lbtd$a; setPlayerCanSpawn
	b ()Lbtd; build
	a (Ljava/util/Map$Entry;)Ljava/util/List; lambda$build$2
	a (Laql;)Ljava/util/List; lambda$new$1
	b (Laql;)Laql; lambda$new$0
btd$b net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	a CODEC
	b energyBudget
	c charge
	<init> (DD)V <init>
	a ()D getEnergyBudget
	b ()D getCharge
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbtd$b;)Ljava/lang/Double; lambda$null$1
	b (Lbtd$b;)Ljava/lang/Double; lambda$null$0
	<init> (DDLbtd$1;)V <init>
	<clinit> ()V <clinit>
btd$c net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	b CODEC
	c type
	d minCount
	e maxCount
	<init> (Laqb;III)V <init>
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lbtd$c;)Ljava/lang/Integer; lambda$null$3
	b (Lbtd$c;)Ljava/lang/Integer; lambda$null$2
	c (Lbtd$c;)Ljava/lang/Integer; lambda$null$1
	d (Lbtd$c;)Laqb; lambda$null$0
	<clinit> ()V <clinit>
bte net/minecraft/world/level/biome/MultiNoiseBiomeSource
	g DEFAULT_NOISE_PARAMETERS
	e DIRECT_CODEC
	f CODEC
	h temperatureParams
	i humidityParams
	j altitudeParams
	k weirdnessParams
	l temperatureNoise
	m humidityNoise
	n altitudeNoise
	o weirdnessNoise
	p parameters
	q useY
	r seed
	s preset
	<init> (JLjava/util/List;)V <init>
	<init> (JLjava/util/List;Ljava/util/Optional;)V <init>
	<init> (JLjava/util/List;Lbte$a;Lbte$a;Lbte$a;Lbte$a;)V <init>
	<init> (JLjava/util/List;Lbte$a;Lbte$a;Lbte$a;Lbte$a;Ljava/util/Optional;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lbsv; withSeed
	d ()Ljava/util/Optional; preset
	b (III)Lbss; getNoiseBiome
	b (J)Z stable
	a (Lbss$c;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Float; lambda$getNoiseBiome$12
	a (Lcom/mojang/datafixers/util/Pair;)Lbte$c; lambda$preset$11
	a (Lbte;)Lcom/mojang/datafixers/util/Either; lambda$static$10
	b (Lbte;)Lcom/mojang/datafixers/util/Either; lambda$null$9
	a (Lcom/mojang/datafixers/util/Either;)Lbte; lambda$static$8
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	c (Lbte;)Lbte$a; lambda$null$6
	d (Lbte;)Lbte$a; lambda$null$5
	e (Lbte;)Lbte$a; lambda$null$4
	f (Lbte;)Lbte$a; lambda$null$3
	g (Lbte;)Ljava/util/List; lambda$null$2
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$null$1
	h (Lbte;)Ljava/lang/Long; lambda$null$0
	<init> (JLjava/util/List;Ljava/util/Optional;Lbte$1;)V <init>
	<clinit> ()V <clinit>
bte$1 net/minecraft/world/level/biome/MultiNoiseBiomeSource$1
bte$a net/minecraft/world/level/biome/MultiNoiseBiomeSource$NoiseParameters
	b firstOctave
	c amplitudes
	a CODEC
	<init> (ILjava/util/List;)V <init>
	a ()I firstOctave
	b ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
bte$b net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset
	b BY_NAME
	a NETHER
	c name
	d biomeSource
	<init> (Lvk;Lcom/mojang/datafixers/util/Function3;)V <init>
	a (Lgm;J)Lbte; biomeSource
	a (Lbte$b;Lgm;Ljava/lang/Long;)Lbte; lambda$static$5
	a (Lgm;)Lbss; lambda$null$4
	b (Lgm;)Lbss; lambda$null$3
	c (Lgm;)Lbss; lambda$null$2
	d (Lgm;)Lbss; lambda$null$1
	e (Lgm;)Lbss; lambda$null$0
	a (Lbte$b;)Lvk; access$000
	a ()Ljava/util/Map; access$100
	<clinit> ()V <clinit>
bte$c net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance
	a CODEC
	b preset
	c biomes
	d seed
	<init> (Lbte$b;Lgm;J)V <init>
	a ()Lbte$b; preset
	b ()Lgm; biomes
	c ()J seed
	d ()Lbte; biomeSource
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lbte$b;)Lcom/mojang/serialization/DataResult; lambda$null$2
	a (Lvk;)Lcom/mojang/serialization/DataResult; lambda$null$1
	b (Lvk;)Lcom/mojang/serialization/DataResult; lambda$null$0
	<init> (Lbte$b;Lgm;JLbte$1;)V <init>
	<clinit> ()V <clinit>
btf net/minecraft/world/level/biome/NearestNeighborBiomeZoomer
	a INSTANCE
	b $VALUES
	values ()[Lbtf; values
	valueOf (Ljava/lang/String;)Lbtf; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (JIIILbsu$a;)Lbss; getBiome
	<clinit> ()V <clinit>
btg net/minecraft/world/level/biome/OverworldBiomeSource
	e CODEC
	f noiseBiomeLayer
	g POSSIBLE_BIOMES
	h seed
	i legacyBiomeInitLayer
	j largeBiomes
	k biomes
	<init> (JZZLgm;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lbsv; withSeed
	b (III)Lbss; getNoiseBiome
	a (Lgm;Lvj;)Ljava/util/function/Supplier; lambda$new$6
	b (Lgm;Lvj;)Lbss; lambda$null$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lbtg;)Lgm; lambda$null$3
	b (Lbtg;)Ljava/lang/Boolean; lambda$null$2
	c (Lbtg;)Ljava/lang/Boolean; lambda$null$1
	d (Lbtg;)Ljava/lang/Long; lambda$null$0
	<clinit> ()V <clinit>
bth net/minecraft/world/level/biome/TheEndBiomeSource
	e CODEC
	f islandNoise
	g biomes
	h seed
	i end
	j highlands
	k midlands
	l islands
	m barrens
	<init> (Lgm;J)V <init>
	<init> (Lgm;JLbss;Lbss;Lbss;Lbss;Lbss;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lbsv; withSeed
	b (III)Lbss; getNoiseBiome
	b (J)Z stable
	a (Lcua;II)F getHeightValue
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbth;)Ljava/lang/Long; lambda$null$1
	b (Lbth;)Lgm; lambda$null$0
	<clinit> ()V <clinit>
bti net/minecraft/world/level/biome/package-info
btj net/minecraft/world/level/block/AbstractBannerBlock
	a color
	<init> (Lbku;Lced$c;)V <init>
	ai_ ()Z isPossibleToRespawnInThis
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	b ()Lbku; getColor
btk net/minecraft/world/level/block/AbstractChestBlock
	a blockEntityType
	<init> (Lced$c;Ljava/util/function/Supplier;)V <init>
	a (Lcee;Lbru;Lfx;Z)Lbvz$c; combine
btl net/minecraft/world/level/block/AbstractFurnaceBlock
	a FACING
	b LIT
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lbft;)V openContainer
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
btm net/minecraft/world/level/block/AbstractGlassBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	a (Lcee;Lbqz;Lfx;)F getShadeBrightness
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
btn net/minecraft/world/level/block/AbstractSkullBlock
	a type
	<init> (Lbzs$a;Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	b ()Lbzs$a; getType
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
bto net/minecraft/world/level/block/AirBlock
	<init> (Lced$c;)V <init>
	b (Lcee;)Lbze; getRenderShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
btp net/minecraft/world/level/block/AnvilBlock
	a FACING
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbcr;)V falling
	a (Lbru;Lfx;Lcee;Lcee;Lbcr;)V onLand
	a (Lbru;Lfx;Lbcr;)V onBroken
	c (Lcee;)Lcee; damage
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	c (Lcee;Lbqz;Lfx;)I getDustColor
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
btq net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b fruit
	c AABBS
	<init> (Lcak;Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	b ()Lblu; getSeedItem
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
btr net/minecraft/world/level/block/BambooBlock
	a SMALL_SHAPE
	b LARGE_SHAPE
	c COLLISION_SHAPE
	d AGE
	e LEAVES
	f STAGE
	<init> (Lced$c;)V <init>
	a (Lcef$a;)V createBlockStateDefinition
	ah_ ()Lced$b; getOffsetType
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcee;Lbft;Lbqz;Lfx;)F getDestroyProgress
	a (Lcee;Lbru;Lfx;Ljava/util/Random;I)V growBamboo
	a (Lbqz;Lfx;)I getHeightAboveUpToMax
	b (Lbqz;Lfx;)I getHeightBelowUpToMax
	<clinit> ()V <clinit>
bts net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_SHAPE
	<init> (Lced$c;)V <init>
	ah_ ()Lced$b; getOffsetType
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcee;Lbft;Lbqz;Lfx;)F getDestroyProgress
	a (Lbru;Lfx;)V growBamboo
	<clinit> ()V <clinit>
btt net/minecraft/world/level/block/BannerBlock
	a ROTATION
	b BY_COLOR
	c SHAPE
	<init> (Lbku;Lced$c;)V <init>
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbku;)Lbul; byColor
	<clinit> ()V <clinit>
btu net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lbqz;)Lccg; newBlockEntity
	b (Lcee;)Lbze; getRenderShape
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbnv;)Lcee; getStateForPlacement
	<clinit> ()V <clinit>
btv net/minecraft/world/level/block/BarrierBlock
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbqz;Lfx;)F getShadeBrightness
btw net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	<clinit> ()V <clinit>
btx net/minecraft/world/level/block/BaseCoralPlantBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	<clinit> ()V <clinit>
bty net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	b WATERLOGGED
	a AABB
	<init> (Lced$c;)V <init>
	a (Lcee;Lbrv;Lfx;)V tryScheduleDieTick
	c (Lcee;Lbqz;Lfx;)Z scanForWater
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcef$a;)V createBlockStateDefinition
	d (Lcee;)Lcuu; getFluidState
	<clinit> ()V <clinit>
btz net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	c SHAPES
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbnv;)Lcee; getStateForPlacement
	<clinit> ()V <clinit>
bua net/minecraft/world/level/block/BaseEntityBlock
	<init> (Lced$c;)V <init>
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbru;Lfx;II)Z triggerEvent
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
bub net/minecraft/world/level/block/BaseFireBlock
	b fireDamage
	a DOWN_AABB
	<init> (Lced$c;F)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbqz;Lfx;)Lcee; getState
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	e (Lcee;)Z canBurn
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lbru;)Z inPortalDimension
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lbru;Lfx;Lgc;)Z canBePlacedAt
	b (Lbru;Lfx;Lgc;)Z isPortal
	<clinit> ()V <clinit>
buc net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c ()I getPressedTime
	ai_ ()Z isPossibleToRespawnInThis
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lbru;Lfx;Lcee;I)V checkPressed
	a (Lbrv;Lfx;)V playOnSound
	b (Lbrv;Lfx;)V playOffSound
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbru;Lfx;)V updateNeighbours
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	b_ (Lcee;)Z isSignalSource
	f (Lcee;)Lcuz; getPistonPushReaction
	b (Lbru;Lfx;)I getSignalStrength
	g (Lcee;)I getSignalForState
	a (Lcee;I)Lcee; setSignalForState
	<clinit> ()V <clinit>
bud net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c isStraight
	a (Lbru;Lfx;)Z isRail
	g (Lcee;)Z isRail
	<init> (ZLced$c;)V <init>
	c ()Z isStraight
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Z)Lcee; updateState
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lfx;Lbru;Lcfh;)Z shouldBeRemoved
	a (Lcee;Lbru;Lfx;Lbul;)V updateState
	a (Lbru;Lfx;Lcee;Z)Lcee; updateDir
	f (Lcee;)Lcuz; getPistonPushReaction
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbnv;)Lcee; getStateForPlacement
	d ()Lcfg; getShapeProperty
	<clinit> ()V <clinit>
bud$1 net/minecraft/world/level/block/BaseRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	<clinit> ()V <clinit>
bue net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lbku; getColor
buf net/minecraft/world/level/block/BeaconBlock
	<init> (Lced$c;)V <init>
	a ()Lbku; getColor
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;)Lbze; getRenderShape
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
bug net/minecraft/world/level/block/BedBlock
	a PART
	b OCCUPIED
	c BASE
	d LEG_NORTH_WEST
	e LEG_SOUTH_WEST
	f LEG_NORTH_EAST
	g LEG_SOUTH_EAST
	h NORTH_SHAPE
	i SOUTH_SHAPE
	j WEST_SHAPE
	k EAST_SHAPE
	o color
	<init> (Lbku;Lced$c;)V <init>
	a (Lbqz;Lfx;)Lgc; getBedOrientation
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;)Z canSetSpawn
	a (Lbru;Lfx;)Z kickVillagerOutOfBed
	a (Lbru;Lfx;Lapx;F)V fallOn
	a (Lbqz;Lapx;)V updateEntityAfterFallOn
	a (Lapx;)V bounceUp
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lces;Lgc;)Lgc; getNeighbourDirection
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	g (Lcee;)Lgc; getConnectedDirection
	h (Lcee;)Lbvz$a; getBlockType
	b (Lbqz;Lfx;)Z isBunkBed
	a (Laqb;Lbrd;Lfx;F)Ljava/util/Optional; findStandUpPosition
	a (Laqb;Lbrd;Lfx;Lgc;Lgc;)Ljava/util/Optional; findBunkBedStandUpPosition
	a (Laqb;Lbrd;Lfx;[[IZ)Ljava/util/Optional; findStandUpPositionAtOffset
	f (Lcee;)Lcuz; getPistonPushReaction
	b (Lcee;)Lbze; getRenderShape
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	c ()Lbku; getColor
	a (Lcee;Lfx;)J getSeed
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lgc;Lgc;)[[I bedStandUpOffsets
	b (Lgc;Lgc;)[[I bedSurroundStandUpOffsets
	a (Lgc;)[[I bedAboveStandUpOffsets
	a (Lbft;Lbft$a;)V lambda$use$0
	<clinit> ()V <clinit>
bug$1 net/minecraft/world/level/block/BedBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
buh net/minecraft/world/level/block/BeehiveBlock
	c SPAWN_DIRECTIONS
	a FACING
	b HONEY_LEVEL
	<init> (Lced$c;)V <init>
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lbru;Lbft;Lfx;Lcee;Lccg;Lbly;)V playerDestroy
	b (Lbru;Lfx;)V angerNearbyBees
	a (Lbru;Lfx;)V dropHoneycomb
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	d (Lbru;Lfx;)Z hiveContainsBees
	a (Lbru;Lcee;Lfx;Lbft;Lccd$b;)V releaseBeesAndResetHoneyLevel
	a (Lbru;Lcee;Lfx;)V resetHoneyLevel
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbru;Lfx;Lcee;)V trySpawnDripParticles
	a (Lbru;Lfx;Ldde;D)V spawnParticle
	a (Lbru;DDDDD)V spawnFluidParticle
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	b (Lcee;)Lbze; getRenderShape
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lcee;Lcys$a;)Ljava/util/List; getDrops
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Ljava/util/Random;)Lgc; getRandomOffset
	a (Laoq;Lbft;)V lambda$use$0
	<clinit> ()V <clinit>
bui net/minecraft/world/level/block/BeetrootBlock
	a AGE
	c SHAPE_BY_AGE
	<init> (Lced$c;)V <init>
	c ()Lcfd; getAgeProperty
	d ()I getMaxAge
	e ()Lbrt; getBaseSeedId
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbru;)I getBonemealAgeIncrease
	a (Lcef$a;)V createBlockStateDefinition
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	<clinit> ()V <clinit>
buj net/minecraft/world/level/block/BellBlock
	a FACING
	b ATTACHMENT
	c POWERED
	d NORTH_SOUTH_FLOOR_SHAPE
	e EAST_WEST_FLOOR_SHAPE
	f BELL_TOP_SHAPE
	g BELL_BOTTOM_SHAPE
	h BELL_SHAPE
	i NORTH_SOUTH_BETWEEN
	j EAST_WEST_BETWEEN
	k TO_WEST
	o TO_EAST
	p TO_NORTH
	q TO_SOUTH
	r CEILING_SHAPE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lcee;Ldcg;Lbft;Z)Z onHit
	a (Lcee;Lgc;D)Z isProperHit
	a (Lbru;Lfx;Lgc;)Z attemptToRing
	h (Lcee;)Ldde; getVoxelShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;)Lbze; getRenderShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	l (Lcee;)Lgc; getConnectedDirection
	f (Lcee;)Lcuz; getPistonPushReaction
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
buj$1 net/minecraft/world/level/block/BellBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
	<clinit> ()V <clinit>
buk net/minecraft/world/level/block/BlastFurnaceBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lbft;)V openContainer
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
bul net/minecraft/world/level/block/Block
	l LOGGER
	m BLOCK_STATE_REGISTRY
	a SHAPE_FULL_BLOCK_CACHE
	n stateDefinition
	b defaultBlockState
	c descriptionId
	d item
	e OCCLUSION_CACHE
	i (Lcee;)I getId
	a (I)Lcee; stateById
	a (Lblu;)Lbul; byItem
	a (Lcee;Lcee;Lbru;Lfx;)Lcee; pushEntitiesUp
	a (DDDDDD)Ldde; box
	a (Laej;)Z is
	a (Lbul;)Z is
	b (Lcee;Lbrv;Lfx;)Lcee; updateFromNeighbourShapes
	a (Lcee;Lcee;Lbrv;Lfx;I)V updateOrDestroy
	a (Lcee;Lcee;Lbrv;Lfx;II)V updateOrDestroy
	<init> (Lced$c;)V <init>
	b (Lbul;)Z isExceptionForConnection
	a_ (Lcee;)Z isRandomlyTicking
	c (Lcee;Lbqz;Lfx;Lgc;)Z shouldRenderFace
	c (Lbqz;Lfx;)Z canSupportRigidBlock
	a (Lbrw;Lfx;Lgc;)Z canSupportCenter
	a (Ldde;Lgc;)Z isFaceFull
	a (Ldde;)Z isShapeFullBlock
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbrv;Lfx;Lcee;)V destroy
	a (Lbrw;)I getTickDelay
	a (Lcee;Laag;Lfx;Lccg;)Ljava/util/List; getDrops
	a (Lcee;Laag;Lfx;Lccg;Lapx;Lbly;)Ljava/util/List; getDrops
	b (Lcee;Lcys$a;)V dropResources
	c (Lcee;Lbru;Lfx;)V dropResources
	a (Lcee;Lbrv;Lfx;Lccg;)V dropResources
	a (Lcee;Lbru;Lfx;Lccg;Lapx;Lbly;)V dropResources
	a (Lbru;Lfx;Lbly;)V popResource
	a (Laag;Lfx;I)V popExperience
	f ()F getExplosionResistance
	a (Lbru;Lfx;Lbrm;)V wasExploded
	a (Lbru;Lfx;Lapx;)V stepOn
	a (Lbnv;)Lcee; getStateForPlacement
	d (Lbqz;Lfx;)V prepareRender
	a (Lbru;Lbft;Lfx;Lcee;Lccg;Lbly;)V playerDestroy
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	ai_ ()Z isPossibleToRespawnInThis
	g ()Lnx; getName
	i ()Ljava/lang/String; getDescriptionId
	a (Lbru;Lfx;Lapx;F)V fallOn
	a (Lbqz;Lapx;)V updateEntityAfterFallOn
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lbkp;Lgj;)V fillItemCategory
	j ()F getFriction
	k ()F getSpeedFactor
	l ()F getJumpFactor
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	c (Lbru;Lfx;)V handleRain
	a (Lbrm;)Z dropFromExplosion
	a (Lcef$a;)V createBlockStateDefinition
	m ()Lcef; getStateDefinition
	j (Lcee;)V registerDefaultState
	n ()Lcee; defaultBlockState
	k (Lcee;)Lcab; getSoundType
	h ()Lblu; asItem
	o ()Z hasDynamicShape
	toString ()Ljava/lang/String; toString
	a (Lbly;Lbqz;Ljava/util/List;Lbni;)V appendHoverText
	p ()Lbul; asBlock
	b (Lbru;Lfx;Lbly;)V lambda$dropResources$4
	a (Lbrv;Lfx;Lbly;)V lambda$dropResources$3
	c (Lbru;Lfx;Lbly;)V lambda$dropResources$2
	a (Laag;Lfx;Lbly;)V lambda$dropResources$1
	c ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
	<clinit> ()V <clinit>
bul$1 net/minecraft/world/level/block/Block$1
	<init> ()V <init>
	a (Ldde;)Ljava/lang/Boolean; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
bul$2 net/minecraft/world/level/block/Block$2
	<init> (IF)V <init>
	rehash (I)V rehash
bul$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
	<init> (Lcee;Lcee;Lgc;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
bum net/minecraft/world/level/block/Blocks
	a AIR
	b STONE
	c GRANITE
	d POLISHED_GRANITE
	e DIORITE
	f POLISHED_DIORITE
	g ANDESITE
	h POLISHED_ANDESITE
	i GRASS_BLOCK
	j DIRT
	k COARSE_DIRT
	l PODZOL
	m COBBLESTONE
	n OAK_PLANKS
	o SPRUCE_PLANKS
	p BIRCH_PLANKS
	q JUNGLE_PLANKS
	r ACACIA_PLANKS
	s DARK_OAK_PLANKS
	t OAK_SAPLING
	u SPRUCE_SAPLING
	v BIRCH_SAPLING
	w JUNGLE_SAPLING
	x ACACIA_SAPLING
	y DARK_OAK_SAPLING
	z BEDROCK
	A WATER
	B LAVA
	C SAND
	D RED_SAND
	E GRAVEL
	F GOLD_ORE
	G IRON_ORE
	H COAL_ORE
	I NETHER_GOLD_ORE
	J OAK_LOG
	K SPRUCE_LOG
	L BIRCH_LOG
	M JUNGLE_LOG
	N ACACIA_LOG
	O DARK_OAK_LOG
	P STRIPPED_SPRUCE_LOG
	Q STRIPPED_BIRCH_LOG
	R STRIPPED_JUNGLE_LOG
	S STRIPPED_ACACIA_LOG
	T STRIPPED_DARK_OAK_LOG
	U STRIPPED_OAK_LOG
	V OAK_WOOD
	W SPRUCE_WOOD
	X BIRCH_WOOD
	Y JUNGLE_WOOD
	Z ACACIA_WOOD
	aa DARK_OAK_WOOD
	ab STRIPPED_OAK_WOOD
	ac STRIPPED_SPRUCE_WOOD
	ad STRIPPED_BIRCH_WOOD
	ae STRIPPED_JUNGLE_WOOD
	af STRIPPED_ACACIA_WOOD
	ag STRIPPED_DARK_OAK_WOOD
	ah OAK_LEAVES
	ai SPRUCE_LEAVES
	aj BIRCH_LEAVES
	ak JUNGLE_LEAVES
	al ACACIA_LEAVES
	am DARK_OAK_LEAVES
	an SPONGE
	ao WET_SPONGE
	ap GLASS
	aq LAPIS_ORE
	ar LAPIS_BLOCK
	as DISPENSER
	at SANDSTONE
	au CHISELED_SANDSTONE
	av CUT_SANDSTONE
	aw NOTE_BLOCK
	ax WHITE_BED
	ay ORANGE_BED
	az MAGENTA_BED
	aA LIGHT_BLUE_BED
	aB YELLOW_BED
	aC LIME_BED
	aD PINK_BED
	aE GRAY_BED
	aF LIGHT_GRAY_BED
	aG CYAN_BED
	aH PURPLE_BED
	aI BLUE_BED
	aJ BROWN_BED
	aK GREEN_BED
	aL RED_BED
	aM BLACK_BED
	aN POWERED_RAIL
	aO DETECTOR_RAIL
	aP STICKY_PISTON
	aQ COBWEB
	aR GRASS
	aS FERN
	aT DEAD_BUSH
	aU SEAGRASS
	aV TALL_SEAGRASS
	aW PISTON
	aX PISTON_HEAD
	aY WHITE_WOOL
	aZ ORANGE_WOOL
	ba MAGENTA_WOOL
	bb LIGHT_BLUE_WOOL
	bc YELLOW_WOOL
	bd LIME_WOOL
	be PINK_WOOL
	bf GRAY_WOOL
	bg LIGHT_GRAY_WOOL
	bh CYAN_WOOL
	bi PURPLE_WOOL
	bj BLUE_WOOL
	bk BROWN_WOOL
	bl GREEN_WOOL
	bm RED_WOOL
	bn BLACK_WOOL
	bo MOVING_PISTON
	bp DANDELION
	bq POPPY
	br BLUE_ORCHID
	bs ALLIUM
	bt AZURE_BLUET
	bu RED_TULIP
	bv ORANGE_TULIP
	bw WHITE_TULIP
	bx PINK_TULIP
	by OXEYE_DAISY
	bz CORNFLOWER
	bA WITHER_ROSE
	bB LILY_OF_THE_VALLEY
	bC BROWN_MUSHROOM
	bD RED_MUSHROOM
	bE GOLD_BLOCK
	bF IRON_BLOCK
	bG BRICKS
	bH TNT
	bI BOOKSHELF
	bJ MOSSY_COBBLESTONE
	bK OBSIDIAN
	bL TORCH
	bM WALL_TORCH
	bN FIRE
	bO SOUL_FIRE
	bP SPAWNER
	bQ OAK_STAIRS
	bR CHEST
	bS REDSTONE_WIRE
	bT DIAMOND_ORE
	bU DIAMOND_BLOCK
	bV CRAFTING_TABLE
	bW WHEAT
	bX FARMLAND
	bY FURNACE
	bZ OAK_SIGN
	ca SPRUCE_SIGN
	cb BIRCH_SIGN
	cc ACACIA_SIGN
	cd JUNGLE_SIGN
	ce DARK_OAK_SIGN
	cf OAK_DOOR
	cg LADDER
	ch RAIL
	ci COBBLESTONE_STAIRS
	cj OAK_WALL_SIGN
	ck SPRUCE_WALL_SIGN
	cl BIRCH_WALL_SIGN
	cm ACACIA_WALL_SIGN
	cn JUNGLE_WALL_SIGN
	co DARK_OAK_WALL_SIGN
	cp LEVER
	cq STONE_PRESSURE_PLATE
	cr IRON_DOOR
	cs OAK_PRESSURE_PLATE
	ct SPRUCE_PRESSURE_PLATE
	cu BIRCH_PRESSURE_PLATE
	cv JUNGLE_PRESSURE_PLATE
	cw ACACIA_PRESSURE_PLATE
	cx DARK_OAK_PRESSURE_PLATE
	cy REDSTONE_ORE
	cz REDSTONE_TORCH
	cA REDSTONE_WALL_TORCH
	cB STONE_BUTTON
	cC SNOW
	cD ICE
	cE SNOW_BLOCK
	cF CACTUS
	cG CLAY
	cH SUGAR_CANE
	cI JUKEBOX
	cJ OAK_FENCE
	cK PUMPKIN
	cL NETHERRACK
	cM SOUL_SAND
	cN SOUL_SOIL
	cO BASALT
	cP POLISHED_BASALT
	cQ SOUL_TORCH
	cR SOUL_WALL_TORCH
	cS GLOWSTONE
	cT NETHER_PORTAL
	cU CARVED_PUMPKIN
	cV JACK_O_LANTERN
	cW CAKE
	cX REPEATER
	cY WHITE_STAINED_GLASS
	cZ ORANGE_STAINED_GLASS
	da MAGENTA_STAINED_GLASS
	db LIGHT_BLUE_STAINED_GLASS
	dc YELLOW_STAINED_GLASS
	dd LIME_STAINED_GLASS
	de PINK_STAINED_GLASS
	df GRAY_STAINED_GLASS
	dg LIGHT_GRAY_STAINED_GLASS
	dh CYAN_STAINED_GLASS
	di PURPLE_STAINED_GLASS
	dj BLUE_STAINED_GLASS
	dk BROWN_STAINED_GLASS
	dl GREEN_STAINED_GLASS
	dm RED_STAINED_GLASS
	dn BLACK_STAINED_GLASS
	do OAK_TRAPDOOR
	dp SPRUCE_TRAPDOOR
	dq BIRCH_TRAPDOOR
	dr JUNGLE_TRAPDOOR
	ds ACACIA_TRAPDOOR
	dt DARK_OAK_TRAPDOOR
	du STONE_BRICKS
	dv MOSSY_STONE_BRICKS
	dw CRACKED_STONE_BRICKS
	dx CHISELED_STONE_BRICKS
	dy INFESTED_STONE
	dz INFESTED_COBBLESTONE
	dA INFESTED_STONE_BRICKS
	dB INFESTED_MOSSY_STONE_BRICKS
	dC INFESTED_CRACKED_STONE_BRICKS
	dD INFESTED_CHISELED_STONE_BRICKS
	dE BROWN_MUSHROOM_BLOCK
	dF RED_MUSHROOM_BLOCK
	dG MUSHROOM_STEM
	dH IRON_BARS
	dI CHAIN
	dJ GLASS_PANE
	dK MELON
	dL ATTACHED_PUMPKIN_STEM
	dM ATTACHED_MELON_STEM
	dN PUMPKIN_STEM
	dO MELON_STEM
	dP VINE
	dQ OAK_FENCE_GATE
	dR BRICK_STAIRS
	dS STONE_BRICK_STAIRS
	dT MYCELIUM
	dU LILY_PAD
	dV NETHER_BRICKS
	dW NETHER_BRICK_FENCE
	dX NETHER_BRICK_STAIRS
	dY NETHER_WART
	dZ ENCHANTING_TABLE
	ea BREWING_STAND
	eb CAULDRON
	ec END_PORTAL
	ed END_PORTAL_FRAME
	ee END_STONE
	ef DRAGON_EGG
	eg REDSTONE_LAMP
	eh COCOA
	ei SANDSTONE_STAIRS
	ej EMERALD_ORE
	ek ENDER_CHEST
	el TRIPWIRE_HOOK
	em TRIPWIRE
	en EMERALD_BLOCK
	eo SPRUCE_STAIRS
	ep BIRCH_STAIRS
	eq JUNGLE_STAIRS
	er COMMAND_BLOCK
	es BEACON
	et COBBLESTONE_WALL
	eu MOSSY_COBBLESTONE_WALL
	ev FLOWER_POT
	ew POTTED_OAK_SAPLING
	ex POTTED_SPRUCE_SAPLING
	ey POTTED_BIRCH_SAPLING
	ez POTTED_JUNGLE_SAPLING
	eA POTTED_ACACIA_SAPLING
	eB POTTED_DARK_OAK_SAPLING
	eC POTTED_FERN
	eD POTTED_DANDELION
	eE POTTED_POPPY
	eF POTTED_BLUE_ORCHID
	eG POTTED_ALLIUM
	eH POTTED_AZURE_BLUET
	eI POTTED_RED_TULIP
	eJ POTTED_ORANGE_TULIP
	eK POTTED_WHITE_TULIP
	eL POTTED_PINK_TULIP
	eM POTTED_OXEYE_DAISY
	eN POTTED_CORNFLOWER
	eO POTTED_LILY_OF_THE_VALLEY
	eP POTTED_WITHER_ROSE
	eQ POTTED_RED_MUSHROOM
	eR POTTED_BROWN_MUSHROOM
	eS POTTED_DEAD_BUSH
	eT POTTED_CACTUS
	eU CARROTS
	eV POTATOES
	eW OAK_BUTTON
	eX SPRUCE_BUTTON
	eY BIRCH_BUTTON
	eZ JUNGLE_BUTTON
	fa ACACIA_BUTTON
	fb DARK_OAK_BUTTON
	fc SKELETON_SKULL
	fd SKELETON_WALL_SKULL
	fe WITHER_SKELETON_SKULL
	ff WITHER_SKELETON_WALL_SKULL
	fg ZOMBIE_HEAD
	fh ZOMBIE_WALL_HEAD
	fi PLAYER_HEAD
	fj PLAYER_WALL_HEAD
	fk CREEPER_HEAD
	fl CREEPER_WALL_HEAD
	fm DRAGON_HEAD
	fn DRAGON_WALL_HEAD
	fo ANVIL
	fp CHIPPED_ANVIL
	fq DAMAGED_ANVIL
	fr TRAPPED_CHEST
	fs LIGHT_WEIGHTED_PRESSURE_PLATE
	ft HEAVY_WEIGHTED_PRESSURE_PLATE
	fu COMPARATOR
	fv DAYLIGHT_DETECTOR
	fw REDSTONE_BLOCK
	fx NETHER_QUARTZ_ORE
	fy HOPPER
	fz QUARTZ_BLOCK
	fA CHISELED_QUARTZ_BLOCK
	fB QUARTZ_PILLAR
	fC QUARTZ_STAIRS
	fD ACTIVATOR_RAIL
	fE DROPPER
	fF WHITE_TERRACOTTA
	fG ORANGE_TERRACOTTA
	fH MAGENTA_TERRACOTTA
	fI LIGHT_BLUE_TERRACOTTA
	fJ YELLOW_TERRACOTTA
	fK LIME_TERRACOTTA
	fL PINK_TERRACOTTA
	fM GRAY_TERRACOTTA
	fN LIGHT_GRAY_TERRACOTTA
	fO CYAN_TERRACOTTA
	fP PURPLE_TERRACOTTA
	fQ BLUE_TERRACOTTA
	fR BROWN_TERRACOTTA
	fS GREEN_TERRACOTTA
	fT RED_TERRACOTTA
	fU BLACK_TERRACOTTA
	fV WHITE_STAINED_GLASS_PANE
	fW ORANGE_STAINED_GLASS_PANE
	fX MAGENTA_STAINED_GLASS_PANE
	fY LIGHT_BLUE_STAINED_GLASS_PANE
	fZ YELLOW_STAINED_GLASS_PANE
	ga LIME_STAINED_GLASS_PANE
	gb PINK_STAINED_GLASS_PANE
	gc GRAY_STAINED_GLASS_PANE
	gd LIGHT_GRAY_STAINED_GLASS_PANE
	ge CYAN_STAINED_GLASS_PANE
	gf PURPLE_STAINED_GLASS_PANE
	gg BLUE_STAINED_GLASS_PANE
	gh BROWN_STAINED_GLASS_PANE
	gi GREEN_STAINED_GLASS_PANE
	gj RED_STAINED_GLASS_PANE
	gk BLACK_STAINED_GLASS_PANE
	gl ACACIA_STAIRS
	gm DARK_OAK_STAIRS
	gn SLIME_BLOCK
	go BARRIER
	gp IRON_TRAPDOOR
	gq PRISMARINE
	gr PRISMARINE_BRICKS
	gs DARK_PRISMARINE
	gt PRISMARINE_STAIRS
	gu PRISMARINE_BRICK_STAIRS
	gv DARK_PRISMARINE_STAIRS
	gw PRISMARINE_SLAB
	gx PRISMARINE_BRICK_SLAB
	gy DARK_PRISMARINE_SLAB
	gz SEA_LANTERN
	gA HAY_BLOCK
	gB WHITE_CARPET
	gC ORANGE_CARPET
	gD MAGENTA_CARPET
	gE LIGHT_BLUE_CARPET
	gF YELLOW_CARPET
	gG LIME_CARPET
	gH PINK_CARPET
	gI GRAY_CARPET
	gJ LIGHT_GRAY_CARPET
	gK CYAN_CARPET
	gL PURPLE_CARPET
	gM BLUE_CARPET
	gN BROWN_CARPET
	gO GREEN_CARPET
	gP RED_CARPET
	gQ BLACK_CARPET
	gR TERRACOTTA
	gS COAL_BLOCK
	gT PACKED_ICE
	gU SUNFLOWER
	gV LILAC
	gW ROSE_BUSH
	gX PEONY
	gY TALL_GRASS
	gZ LARGE_FERN
	ha WHITE_BANNER
	hb ORANGE_BANNER
	hc MAGENTA_BANNER
	hd LIGHT_BLUE_BANNER
	he YELLOW_BANNER
	hf LIME_BANNER
	hg PINK_BANNER
	hh GRAY_BANNER
	hi LIGHT_GRAY_BANNER
	hj CYAN_BANNER
	hk PURPLE_BANNER
	hl BLUE_BANNER
	hm BROWN_BANNER
	hn GREEN_BANNER
	ho RED_BANNER
	hp BLACK_BANNER
	hq WHITE_WALL_BANNER
	hr ORANGE_WALL_BANNER
	hs MAGENTA_WALL_BANNER
	ht LIGHT_BLUE_WALL_BANNER
	hu YELLOW_WALL_BANNER
	hv LIME_WALL_BANNER
	hw PINK_WALL_BANNER
	hx GRAY_WALL_BANNER
	hy LIGHT_GRAY_WALL_BANNER
	hz CYAN_WALL_BANNER
	hA PURPLE_WALL_BANNER
	hB BLUE_WALL_BANNER
	hC BROWN_WALL_BANNER
	hD GREEN_WALL_BANNER
	hE RED_WALL_BANNER
	hF BLACK_WALL_BANNER
	hG RED_SANDSTONE
	hH CHISELED_RED_SANDSTONE
	hI CUT_RED_SANDSTONE
	hJ RED_SANDSTONE_STAIRS
	hK OAK_SLAB
	hL SPRUCE_SLAB
	hM BIRCH_SLAB
	hN JUNGLE_SLAB
	hO ACACIA_SLAB
	hP DARK_OAK_SLAB
	hQ STONE_SLAB
	hR SMOOTH_STONE_SLAB
	hS SANDSTONE_SLAB
	hT CUT_SANDSTONE_SLAB
	hU PETRIFIED_OAK_SLAB
	hV COBBLESTONE_SLAB
	hW BRICK_SLAB
	hX STONE_BRICK_SLAB
	hY NETHER_BRICK_SLAB
	hZ QUARTZ_SLAB
	ia RED_SANDSTONE_SLAB
	ib CUT_RED_SANDSTONE_SLAB
	ic PURPUR_SLAB
	id SMOOTH_STONE
	ie SMOOTH_SANDSTONE
	if SMOOTH_QUARTZ
	ig SMOOTH_RED_SANDSTONE
	ih SPRUCE_FENCE_GATE
	ii BIRCH_FENCE_GATE
	ij JUNGLE_FENCE_GATE
	ik ACACIA_FENCE_GATE
	il DARK_OAK_FENCE_GATE
	im SPRUCE_FENCE
	in BIRCH_FENCE
	io JUNGLE_FENCE
	ip ACACIA_FENCE
	iq DARK_OAK_FENCE
	ir SPRUCE_DOOR
	is BIRCH_DOOR
	it JUNGLE_DOOR
	iu ACACIA_DOOR
	iv DARK_OAK_DOOR
	iw END_ROD
	ix CHORUS_PLANT
	iy CHORUS_FLOWER
	iz PURPUR_BLOCK
	iA PURPUR_PILLAR
	iB PURPUR_STAIRS
	iC END_STONE_BRICKS
	iD BEETROOTS
	iE GRASS_PATH
	iF END_GATEWAY
	iG REPEATING_COMMAND_BLOCK
	iH CHAIN_COMMAND_BLOCK
	iI FROSTED_ICE
	iJ MAGMA_BLOCK
	iK NETHER_WART_BLOCK
	iL RED_NETHER_BRICKS
	iM BONE_BLOCK
	iN STRUCTURE_VOID
	iO OBSERVER
	iP SHULKER_BOX
	iQ WHITE_SHULKER_BOX
	iR ORANGE_SHULKER_BOX
	iS MAGENTA_SHULKER_BOX
	iT LIGHT_BLUE_SHULKER_BOX
	iU YELLOW_SHULKER_BOX
	iV LIME_SHULKER_BOX
	iW PINK_SHULKER_BOX
	iX GRAY_SHULKER_BOX
	iY LIGHT_GRAY_SHULKER_BOX
	iZ CYAN_SHULKER_BOX
	ja PURPLE_SHULKER_BOX
	jb BLUE_SHULKER_BOX
	jc BROWN_SHULKER_BOX
	jd GREEN_SHULKER_BOX
	je RED_SHULKER_BOX
	jf BLACK_SHULKER_BOX
	jg WHITE_GLAZED_TERRACOTTA
	jh ORANGE_GLAZED_TERRACOTTA
	ji MAGENTA_GLAZED_TERRACOTTA
	jj LIGHT_BLUE_GLAZED_TERRACOTTA
	jk YELLOW_GLAZED_TERRACOTTA
	jl LIME_GLAZED_TERRACOTTA
	jm PINK_GLAZED_TERRACOTTA
	jn GRAY_GLAZED_TERRACOTTA
	jo LIGHT_GRAY_GLAZED_TERRACOTTA
	jp CYAN_GLAZED_TERRACOTTA
	jq PURPLE_GLAZED_TERRACOTTA
	jr BLUE_GLAZED_TERRACOTTA
	js BROWN_GLAZED_TERRACOTTA
	jt GREEN_GLAZED_TERRACOTTA
	ju RED_GLAZED_TERRACOTTA
	jv BLACK_GLAZED_TERRACOTTA
	jw WHITE_CONCRETE
	jx ORANGE_CONCRETE
	jy MAGENTA_CONCRETE
	jz LIGHT_BLUE_CONCRETE
	jA YELLOW_CONCRETE
	jB LIME_CONCRETE
	jC PINK_CONCRETE
	jD GRAY_CONCRETE
	jE LIGHT_GRAY_CONCRETE
	jF CYAN_CONCRETE
	jG PURPLE_CONCRETE
	jH BLUE_CONCRETE
	jI BROWN_CONCRETE
	jJ GREEN_CONCRETE
	jK RED_CONCRETE
	jL BLACK_CONCRETE
	jM WHITE_CONCRETE_POWDER
	jN ORANGE_CONCRETE_POWDER
	jO MAGENTA_CONCRETE_POWDER
	jP LIGHT_BLUE_CONCRETE_POWDER
	jQ YELLOW_CONCRETE_POWDER
	jR LIME_CONCRETE_POWDER
	jS PINK_CONCRETE_POWDER
	jT GRAY_CONCRETE_POWDER
	jU LIGHT_GRAY_CONCRETE_POWDER
	jV CYAN_CONCRETE_POWDER
	jW PURPLE_CONCRETE_POWDER
	jX BLUE_CONCRETE_POWDER
	jY BROWN_CONCRETE_POWDER
	jZ GREEN_CONCRETE_POWDER
	ka RED_CONCRETE_POWDER
	kb BLACK_CONCRETE_POWDER
	kc KELP
	kd KELP_PLANT
	ke DRIED_KELP_BLOCK
	kf TURTLE_EGG
	kg DEAD_TUBE_CORAL_BLOCK
	kh DEAD_BRAIN_CORAL_BLOCK
	ki DEAD_BUBBLE_CORAL_BLOCK
	kj DEAD_FIRE_CORAL_BLOCK
	kk DEAD_HORN_CORAL_BLOCK
	kl TUBE_CORAL_BLOCK
	km BRAIN_CORAL_BLOCK
	kn BUBBLE_CORAL_BLOCK
	ko FIRE_CORAL_BLOCK
	kp HORN_CORAL_BLOCK
	kq DEAD_TUBE_CORAL
	kr DEAD_BRAIN_CORAL
	ks DEAD_BUBBLE_CORAL
	kt DEAD_FIRE_CORAL
	ku DEAD_HORN_CORAL
	kv TUBE_CORAL
	kw BRAIN_CORAL
	kx BUBBLE_CORAL
	ky FIRE_CORAL
	kz HORN_CORAL
	kA DEAD_TUBE_CORAL_FAN
	kB DEAD_BRAIN_CORAL_FAN
	kC DEAD_BUBBLE_CORAL_FAN
	kD DEAD_FIRE_CORAL_FAN
	kE DEAD_HORN_CORAL_FAN
	kF TUBE_CORAL_FAN
	kG BRAIN_CORAL_FAN
	kH BUBBLE_CORAL_FAN
	kI FIRE_CORAL_FAN
	kJ HORN_CORAL_FAN
	kK DEAD_TUBE_CORAL_WALL_FAN
	kL DEAD_BRAIN_CORAL_WALL_FAN
	kM DEAD_BUBBLE_CORAL_WALL_FAN
	kN DEAD_FIRE_CORAL_WALL_FAN
	kO DEAD_HORN_CORAL_WALL_FAN
	kP TUBE_CORAL_WALL_FAN
	kQ BRAIN_CORAL_WALL_FAN
	kR BUBBLE_CORAL_WALL_FAN
	kS FIRE_CORAL_WALL_FAN
	kT HORN_CORAL_WALL_FAN
	kU SEA_PICKLE
	kV BLUE_ICE
	kW CONDUIT
	kX BAMBOO_SAPLING
	kY BAMBOO
	kZ POTTED_BAMBOO
	la VOID_AIR
	lb CAVE_AIR
	lc BUBBLE_COLUMN
	ld POLISHED_GRANITE_STAIRS
	le SMOOTH_RED_SANDSTONE_STAIRS
	lf MOSSY_STONE_BRICK_STAIRS
	lg POLISHED_DIORITE_STAIRS
	lh MOSSY_COBBLESTONE_STAIRS
	li END_STONE_BRICK_STAIRS
	lj STONE_STAIRS
	lk SMOOTH_SANDSTONE_STAIRS
	ll SMOOTH_QUARTZ_STAIRS
	lm GRANITE_STAIRS
	ln ANDESITE_STAIRS
	lo RED_NETHER_BRICK_STAIRS
	lp POLISHED_ANDESITE_STAIRS
	lq DIORITE_STAIRS
	lr POLISHED_GRANITE_SLAB
	ls SMOOTH_RED_SANDSTONE_SLAB
	lt MOSSY_STONE_BRICK_SLAB
	lu POLISHED_DIORITE_SLAB
	lv MOSSY_COBBLESTONE_SLAB
	lw END_STONE_BRICK_SLAB
	lx SMOOTH_SANDSTONE_SLAB
	ly SMOOTH_QUARTZ_SLAB
	lz GRANITE_SLAB
	lA ANDESITE_SLAB
	lB RED_NETHER_BRICK_SLAB
	lC POLISHED_ANDESITE_SLAB
	lD DIORITE_SLAB
	lE BRICK_WALL
	lF PRISMARINE_WALL
	lG RED_SANDSTONE_WALL
	lH MOSSY_STONE_BRICK_WALL
	lI GRANITE_WALL
	lJ STONE_BRICK_WALL
	lK NETHER_BRICK_WALL
	lL ANDESITE_WALL
	lM RED_NETHER_BRICK_WALL
	lN SANDSTONE_WALL
	lO END_STONE_BRICK_WALL
	lP DIORITE_WALL
	lQ SCAFFOLDING
	lR LOOM
	lS BARREL
	lT SMOKER
	lU BLAST_FURNACE
	lV CARTOGRAPHY_TABLE
	lW FLETCHING_TABLE
	lX GRINDSTONE
	lY LECTERN
	lZ SMITHING_TABLE
	ma STONECUTTER
	mb BELL
	mc LANTERN
	md SOUL_LANTERN
	me CAMPFIRE
	mf SOUL_CAMPFIRE
	mg SWEET_BERRY_BUSH
	mh WARPED_STEM
	mi STRIPPED_WARPED_STEM
	mj WARPED_HYPHAE
	mk STRIPPED_WARPED_HYPHAE
	ml WARPED_NYLIUM
	mm WARPED_FUNGUS
	mn WARPED_WART_BLOCK
	mo WARPED_ROOTS
	mp NETHER_SPROUTS
	mq CRIMSON_STEM
	mr STRIPPED_CRIMSON_STEM
	ms CRIMSON_HYPHAE
	mt STRIPPED_CRIMSON_HYPHAE
	mu CRIMSON_NYLIUM
	mv CRIMSON_FUNGUS
	mw SHROOMLIGHT
	mx WEEPING_VINES
	my WEEPING_VINES_PLANT
	mz TWISTING_VINES
	mA TWISTING_VINES_PLANT
	mB CRIMSON_ROOTS
	mC CRIMSON_PLANKS
	mD WARPED_PLANKS
	mE CRIMSON_SLAB
	mF WARPED_SLAB
	mG CRIMSON_PRESSURE_PLATE
	mH WARPED_PRESSURE_PLATE
	mI CRIMSON_FENCE
	mJ WARPED_FENCE
	mK CRIMSON_TRAPDOOR
	mL WARPED_TRAPDOOR
	mM CRIMSON_FENCE_GATE
	mN WARPED_FENCE_GATE
	mO CRIMSON_STAIRS
	mP WARPED_STAIRS
	mQ CRIMSON_BUTTON
	mR WARPED_BUTTON
	mS CRIMSON_DOOR
	mT WARPED_DOOR
	mU CRIMSON_SIGN
	mV WARPED_SIGN
	mW CRIMSON_WALL_SIGN
	mX WARPED_WALL_SIGN
	mY STRUCTURE_BLOCK
	mZ JIGSAW
	na COMPOSTER
	nb TARGET
	nc BEE_NEST
	nd BEEHIVE
	ne HONEY_BLOCK
	nf HONEYCOMB_BLOCK
	ng NETHERITE_BLOCK
	nh ANCIENT_DEBRIS
	ni CRYING_OBSIDIAN
	nj RESPAWN_ANCHOR
	nk POTTED_CRIMSON_FUNGUS
	nl POTTED_WARPED_FUNGUS
	nm POTTED_CRIMSON_ROOTS
	nn POTTED_WARPED_ROOTS
	no LODESTONE
	np BLACKSTONE
	nq BLACKSTONE_STAIRS
	nr BLACKSTONE_WALL
	ns BLACKSTONE_SLAB
	nt POLISHED_BLACKSTONE
	nu POLISHED_BLACKSTONE_BRICKS
	nv CRACKED_POLISHED_BLACKSTONE_BRICKS
	nw CHISELED_POLISHED_BLACKSTONE
	nx POLISHED_BLACKSTONE_BRICK_SLAB
	ny POLISHED_BLACKSTONE_BRICK_STAIRS
	nz POLISHED_BLACKSTONE_BRICK_WALL
	nA GILDED_BLACKSTONE
	nB POLISHED_BLACKSTONE_STAIRS
	nC POLISHED_BLACKSTONE_SLAB
	nD POLISHED_BLACKSTONE_PRESSURE_PLATE
	nE POLISHED_BLACKSTONE_BUTTON
	nF POLISHED_BLACKSTONE_WALL
	nG CHISELED_NETHER_BRICKS
	nH CRACKED_NETHER_BRICKS
	nI QUARTZ_BRICKS
	<init> ()V <init>
	a (I)Ljava/util/function/ToIntFunction; litBlockEmission
	a (Lcee;Lbqz;Lfx;Laqb;)Ljava/lang/Boolean; never
	b (Lcee;Lbqz;Lfx;Laqb;)Ljava/lang/Boolean; always
	c (Lcee;Lbqz;Lfx;Laqb;)Ljava/lang/Boolean; ocelotOrParrot
	a (Lbku;)Lbug; bed
	a (Lcuy;Lcuy;)Lbzi; log
	a (Lcuy;)Lbul; netherStem
	a (Lcee;Lbqz;Lfx;)Z always
	b (Lcee;Lbqz;Lfx;)Z never
	b (Lbku;)Lcaf; stainedGlass
	b ()Lbxu; leaves
	a (Lbku;Lced$c;)Lbzp; shulkerBox
	a (Z)Lcdx; pistonBase
	a (Ljava/lang/String;Lbul;)Lbul; register
	a ()V rebuildCache
	a (Lcee;)I lambda$static$39
	b (Lcee;)I lambda$static$38
	c (Lcee;)I lambda$static$37
	c ()Lcis; lambda$static$36
	d ()Lcis; lambda$static$35
	d (Lcee;)I lambda$static$34
	e (Lcee;)I lambda$static$33
	f (Lcee;)I lambda$static$32
	g (Lcee;)I lambda$static$31
	d (Lcee;Lbqz;Lfx;Laqb;)Z lambda$static$30
	h (Lcee;)I lambda$static$29
	e (Lcee;Lbqz;Lfx;Laqb;)Z lambda$static$28
	i (Lcee;)I lambda$static$27
	j (Lcee;)I lambda$static$26
	k (Lcee;)I lambda$static$25
	l (Lcee;)I lambda$static$24
	m (Lcee;)I lambda$static$23
	n (Lcee;)I lambda$static$22
	o (Lcee;)I lambda$static$21
	p (Lcee;)I lambda$static$20
	q (Lcee;)I lambda$static$19
	r (Lcee;)I lambda$static$18
	s (Lcee;)I lambda$static$17
	t (Lcee;)I lambda$static$16
	u (Lcee;)I lambda$static$15
	v (Lcee;)I lambda$static$14
	f (Lcee;Lbqz;Lfx;Laqb;)Z lambda$static$13
	e ()Lcch; lambda$static$12
	w (Lcee;)I lambda$static$11
	x (Lcee;)I lambda$static$10
	y (Lcee;)I lambda$static$9
	z (Lcee;)I lambda$static$8
	A (Lcee;)I lambda$static$7
	B (Lcee;)I lambda$static$6
	c (Lcee;Lbqz;Lfx;)Z lambda$pistonBase$5
	d (Lcee;Lbqz;Lfx;)Z lambda$shulkerBox$4
	a (Lcuy;Lcee;)Lcuy; lambda$netherStem$3
	a (Lcuy;Lcuy;Lcee;)Lcuy; lambda$log$2
	a (Lbku;Lcee;)Lcuy; lambda$bed$1
	a (ILcee;)I lambda$litBlockEmission$0
	<clinit> ()V <clinit>
bun net/minecraft/world/level/block/BonemealableBlock
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
buo net/minecraft/world/level/block/BrewingStandBlock
	a HAS_BOTTLE
	b SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;)Lbze; getRenderShape
	a (Lbqz;)Lccg; newBlockEntity
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bup net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	d (Lcee;)Lcuu; getFluidState
	a (Lbrv;Lfx;Z)V growColumn
	a (Lbrv;Lfx;)Z canExistIn
	a (Lbqz;Lfx;)Z getDrag
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;)Lbze; getRenderShape
	a (Lcef$a;)V createBlockStateDefinition
	b (Lbrv;Lfx;Lcee;)Lcut; takeLiquid
	<clinit> ()V <clinit>
buq net/minecraft/world/level/block/BucketPickup
	b (Lbrv;Lfx;Lcee;)Lcut; takeLiquid
bur net/minecraft/world/level/block/BushBlock
	<init> (Lced$c;)V <init>
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
bus net/minecraft/world/level/block/ButtonBlock
	a POWERED
	b CEILING_AABB_X
	c CEILING_AABB_Z
	d FLOOR_AABB_X
	e FLOOR_AABB_Z
	f NORTH_AABB
	g SOUTH_AABB
	h WEST_AABB
	i EAST_AABB
	j PRESSED_CEILING_AABB_X
	k PRESSED_CEILING_AABB_Z
	o PRESSED_FLOOR_AABB_X
	p PRESSED_FLOOR_AABB_Z
	q PRESSED_NORTH_AABB
	r PRESSED_SOUTH_AABB
	s PRESSED_WEST_AABB
	t PRESSED_EAST_AABB
	v sensitive
	<init> (ZLced$c;)V <init>
	c ()I getPressDuration
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	d (Lcee;Lbru;Lfx;)V press
	a (Lbft;Lbrv;Lfx;Z)V playSound
	a (Z)Ladn; getSound
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	e (Lcee;Lbru;Lfx;)V checkPressed
	f (Lcee;Lbru;Lfx;)V updateNeighbours
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bus$1 net/minecraft/world/level/block/ButtonBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
but net/minecraft/world/level/block/CactusBlock
	a AGE
	b COLLISION_SHAPE
	c OUTLINE_SHAPE
	<init> (Lced$c;)V <init>
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
buu net/minecraft/world/level/block/CakeBlock
	a BITES
	b SHAPE_BY_BITE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbrv;Lfx;Lcee;Lbft;)Laor; eat
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
buv net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	f VIRTUAL_FENCE_POST
	g spawnParticles
	h fireDamage
	<init> (ZILced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	l (Lcee;)Z isSmokeSource
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	c (Lbrv;Lfx;Lcee;)V dowse
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	a (Lbru;Lfx;ZZ)V makeParticles
	a (Lbru;Lfx;)Z isSmokeyPos
	g (Lcee;)Z isLitCampfire
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	h (Lcee;)Z canLight
	a (Lced$a;)Z lambda$canLight$0
	<clinit> ()V <clinit>
buw net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	<init> (Lced$c;)V <init>
	e ()Lbrt; getBaseSeedId
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	<clinit> ()V <clinit>
bux net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
buy net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lbrw;Lfx;)Z canSpawnGolem
	a (Lbru;Lfx;)V trySpawnGolem
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	c ()Lcej; getOrCreateSnowGolemBase
	d ()Lcej; getOrCreateSnowGolemFull
	e ()Lcej; getOrCreateIronGolemBase
	t ()Lcej; getOrCreateIronGolemFull
	h (Lcee;)Z lambda$static$0
	<clinit> ()V <clinit>
buz net/minecraft/world/level/block/CauldronBlock
	a LEVEL
	c INSIDE
	b SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a_ (Lcee;Lbqz;Lfx;)Ldde; getInteractionShape
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lcee;I)V setWaterLevel
	c (Lbru;Lfx;)V handleRain
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bva net/minecraft/world/level/block/ChainBlock
	a WATERLOGGED
	b Y_AXIS_AABB
	c Z_AXIS_AABB
	d X_AXIS_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcef$a;)V createBlockStateDefinition
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bva$1 net/minecraft/world/level/block/ChainBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
bvb net/minecraft/world/level/block/ChestBlock
	b FACING
	c TYPE
	d WATERLOGGED
	e NORTH_AABB
	f SOUTH_AABB
	g WEST_AABB
	h EAST_AABB
	i AABB
	j CHEST_COMBINER
	k MENU_PROVIDER_COMBINER
	<init> (Lced$c;Ljava/util/function/Supplier;)V <init>
	g (Lcee;)Lbvz$a; getBlockType
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	h (Lcee;)Lgc; getConnectedDirection
	a (Lbnv;)Lcee; getStateForPlacement
	d (Lcee;)Lcuu; getFluidState
	a (Lbnv;Lgc;)Lgc; candidatePartnerFacing
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	c ()Ladv; getOpenChestStat
	d ()Lcch; blockEntityType
	a (Lbvb;Lcee;Lbru;Lfx;Z)Laok; getContainer
	a (Lcee;Lbru;Lfx;Z)Lbvz$c; combine
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lccz;)Lbvz$b; opennessCombiner
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbrv;Lfx;)Z isChestBlockedAt
	a (Lbqz;Lfx;)Z isBlockedChestByBlock
	b (Lbrv;Lfx;)Z isCatSittingOnChest
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	c (Lbrv;Lfx;)Z lambda$combine$0
	<clinit> ()V <clinit>
bvb$1 net/minecraft/world/level/block/ChestBlock$1
	<init> ()V <init>
	a (Lcck;Lcck;)Ljava/util/Optional; acceptDouble
	a (Lcck;)Ljava/util/Optional; acceptSingle
	a ()Ljava/util/Optional; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
bvb$2 net/minecraft/world/level/block/ChestBlock$2
	<init> ()V <init>
	a (Lcck;Lcck;)Ljava/util/Optional; acceptDouble
	a (Lcck;)Ljava/util/Optional; acceptSingle
	a ()Ljava/util/Optional; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
bvb$2$1 net/minecraft/world/level/block/ChestBlock$2$1
	a val$first
	b val$second
	c val$container
	d this$0
	<init> (Lbvb$2;Lcck;Lcck;Laok;)V <init>
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
	d ()Lnr; getDisplayName
bvb$3 net/minecraft/world/level/block/ChestBlock$3
	a val$entity
	<init> (Lccz;)V <init>
	a (Lcck;Lcck;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptDouble
	a (Lcck;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptSingle
	a ()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lcck;Lcck;F)F lambda$acceptDouble$0
bvb$4 net/minecraft/world/level/block/ChestBlock$4
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
bvc net/minecraft/world/level/block/ChorusFlowerBlock
	a AGE
	b plant
	<init> (Lbvd;Lced$c;)V <init>
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbru;Lfx;I)V placeGrownFlower
	a (Lbru;Lfx;)V placeDeadFlower
	b (Lbrw;Lfx;Lgc;)Z allNeighborsEmpty
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbrv;Lfx;Ljava/util/Random;I)V generatePlant
	a (Lbrv;Lfx;Ljava/util/Random;Lfx;II)V growTreeRecursive
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	<clinit> ()V <clinit>
bvd net/minecraft/world/level/block/ChorusPlantBlock
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbqz;Lfx;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
bve net/minecraft/world/level/block/CocoaBlock
	a AGE
	b EAST_AABB
	c WEST_AABB
	d NORTH_AABB
	e SOUTH_AABB
	<init> (Lced$c;)V <init>
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bve$1 net/minecraft/world/level/block/CocoaBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
bvf net/minecraft/world/level/block/CommandBlock
	c LOGGER
	a FACING
	b CONDITIONAL
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;Lbqv;Z)V execute
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lgc;)V executeChain
	<clinit> ()V <clinit>
bvg net/minecraft/world/level/block/ComparatorBlock
	a MODE
	<init> (Lced$c;)V <init>
	g (Lcee;)I getDelay
	b (Lbqz;Lfx;Lcee;)I getOutputSignal
	e (Lbru;Lfx;Lcee;)I calculateOutputSignal
	a (Lbru;Lfx;Lcee;)Z shouldTurnOn
	b (Lbru;Lfx;Lcee;)I getInputSignal
	a (Lbru;Lgc;Lfx;)Lbcm; getItemFrame
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	c (Lbru;Lfx;Lcee;)V checkTickOnNeighbor
	f (Lbru;Lfx;Lcee;)V refreshOutputState
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;II)Z triggerEvent
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcef$a;)V createBlockStateDefinition
	a (Lgc;Lbcm;)Z lambda$getItemFrame$0
	<clinit> ()V <clinit>
bvh net/minecraft/world/level/block/ComposterBlock
	a LEVEL
	b COMPOSTABLES
	c OUTER_SHAPE
	d SHAPES
	c ()V bootStrap
	a (FLbrt;)V add
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Z)V handleFill
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a_ (Lcee;Lbqz;Lfx;)Ldde; getInteractionShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Laag;Lbly;Lfx;)Lcee; insertItem
	d (Lcee;Lbru;Lfx;)Lcee; extractProduce
	d (Lcee;Lbrv;Lfx;)Lcee; empty
	b (Lcee;Lbrv;Lfx;Lbly;)Lcee; addItem
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lcee;Lbrv;Lfx;)Lapb; getContainer
	a ([Ldde;)V lambda$static$0
	c (Lcee;Lbrv;Lfx;)Lcee; access$000
	a (Lcee;Lbrv;Lfx;Lbly;)Lcee; access$100
	<clinit> ()V <clinit>
bvh$a net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	<init> ()V <init>
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
bvh$b net/minecraft/world/level/block/ComposterBlock$InputContainer
	a state
	b level
	c pos
	d changed
	<init> (Lcee;Lbrv;Lfx;)V <init>
	V_ ()I getMaxStackSize
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
	X_ ()V setChanged
bvh$c net/minecraft/world/level/block/ComposterBlock$OutputContainer
	a state
	b level
	c pos
	d changed
	<init> (Lcee;Lbrv;Lfx;Lbly;)V <init>
	V_ ()I getMaxStackSize
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
	X_ ()V setChanged
bvi net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	<init> (Lbul;Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;Lcee;Lbcr;)V onLand
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lbqz;Lfx;Lcee;)Z shouldSolidify
	a (Lbqz;Lfx;)Z touchesLiquid
	l (Lcee;)Z canSolidify
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	c (Lcee;Lbqz;Lfx;)I getDustColor
bvj net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	b SHAPE
	<init> (Lced$c;)V <init>
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;)Lccg; newBlockEntity
	b (Lcee;)Lbze; getRenderShape
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bvk net/minecraft/world/level/block/CoralBlock
	a deadBlock
	<init> (Lbul;Lced$c;)V <init>
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;)Z scanForWater
	a (Lbnv;)Lcee; getStateForPlacement
bvl net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	<init> (Lbul;Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
bvm net/minecraft/world/level/block/CoralPlantBlock
	c deadBlock
	a SHAPE
	<init> (Lbul;Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	<clinit> ()V <clinit>
bvn net/minecraft/world/level/block/CoralWallFanBlock
	c deadBlock
	<init> (Lbul;Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
bvo net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
bvp net/minecraft/world/level/block/CropBlock
	b AGE
	a SHAPE_BY_AGE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	c ()Lcfd; getAgeProperty
	d ()I getMaxAge
	g (Lcee;)I getAge
	b (I)Lcee; getStateForAge
	h (Lcee;)Z isMaxAge
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbru;Lfx;Lcee;)V growCrops
	a (Lbru;)I getBonemealAgeIncrease
	a (Lbul;Lbqz;Lfx;)F getGrowthSpeed
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	e ()Lbrt; getBaseSeedId
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bvq net/minecraft/world/level/block/CrossCollisionBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	<init> (FFFFFLced$c;)V <init>
	a (FFFFF)[Ldde; makeShapes
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a (Lgc;)I indexFor
	g (Lcee;)I getAABBIndex
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	h (Lcee;)I lambda$getAABBIndex$1
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	<clinit> ()V <clinit>
bvq$1 net/minecraft/world/level/block/CrossCollisionBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
bvr net/minecraft/world/level/block/CryingObsidianBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
bvs net/minecraft/world/level/block/DaylightDetectorBlock
	a POWER
	b INVERTED
	c SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c_ (Lcee;)Z useShapeForLightOcclusion
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	d (Lcee;Lbru;Lfx;)V updateSignalStrength
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;)Lbze; getRenderShape
	b_ (Lcee;)Z isSignalSource
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bvt net/minecraft/world/level/block/DeadBushBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	<clinit> ()V <clinit>
bvu net/minecraft/world/level/block/DetectorRailBlock
	c SHAPE
	d POWERED
	<init> (Lced$c;)V <init>
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	a (Lbru;Lfx;Lcee;)V checkPressed
	b (Lbru;Lfx;Lcee;Z)V updatePowerToConnected
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	d ()Lcfg; getShapeProperty
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lbru;Lfx;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lfx;)Ldcf; getSearchBB
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bvu$1 net/minecraft/world/level/block/DetectorRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
bvv net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	c (Lbru;Lfx;Lcee;)V checkTickOnNeighbor
	a (Lbrw;Lfx;Lcee;)Z isLocked
	a (Lbru;Lfx;Lcee;)Z shouldTurnOn
	b (Lbru;Lfx;Lcee;)I getInputSignal
	b (Lbrw;Lfx;Lcee;)I getAlternateSignal
	b (Lbrw;Lfx;Lgc;)I getAlternateSignalAt
	b_ (Lcee;)Z isSignalSource
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	d (Lbru;Lfx;Lcee;)V updateNeighborsInFront
	h (Lcee;)Z isAlternateInput
	b (Lbqz;Lfx;Lcee;)I getOutputSignal
	l (Lcee;)Z isDiode
	c (Lbqz;Lfx;Lcee;)Z shouldPrioritize
	g (Lcee;)I getDelay
	<clinit> ()V <clinit>
bvw net/minecraft/world/level/block/DirectionalBlock
	a FACING
	<init> (Lced$c;)V <init>
	<clinit> ()V <clinit>
bvx net/minecraft/world/level/block/DispenserBlock
	a FACING
	b TRIGGERED
	c DISPENSER_REGISTRY
	a (Lbrt;Lgw;)V registerBehavior
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Laag;Lfx;)V dispenseFrom
	a (Lbly;)Lgw; getDispenseMethod
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lfy;)Lgk; getDispensePosition
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
bvy net/minecraft/world/level/block/DoorBlock
	a FACING
	b OPEN
	c HINGE
	d POWERED
	e HALF
	f SOUTH_AABB
	g NORTH_AABB
	h WEST_AABB
	i EAST_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	c ()I getCloseSound
	d ()I getOpenSound
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	b (Lbnv;)Lcez; getHinge
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	h (Lcee;)Z isOpen
	a (Lbru;Lcee;Lfx;Z)V setOpen
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbru;Lfx;Z)V playSound
	f (Lcee;)Lcuz; getPistonPushReaction
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcee;Lfx;)J getSeed
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbru;Lfx;)Z isWoodenDoor
	l (Lcee;)Z isWoodenDoor
	<clinit> ()V <clinit>
bvy$1 net/minecraft/world/level/block/DoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
bvz net/minecraft/world/level/block/DoubleBlockCombiner
	<init> ()V <init>
	a (Lcch;Ljava/util/function/Function;Ljava/util/function/Function;Lcey;Lcee;Lbrv;Lfx;Ljava/util/function/BiPredicate;)Lbvz$c; combineWithNeigbour
bvz$a net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	a SINGLE
	b FIRST
	c SECOND
	d $VALUES
	values ()[Lbvz$a; values
	valueOf (Ljava/lang/String;)Lbvz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bvz$b net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	b ()Ljava/lang/Object; acceptNone
bvz$c net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
	apply (Lbvz$b;)Ljava/lang/Object; apply
bvz$c$a net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	a first
	b second
	<init> (Ljava/lang/Object;Ljava/lang/Object;)V <init>
	apply (Lbvz$b;)Ljava/lang/Object; apply
bvz$c$b net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	a single
	<init> (Ljava/lang/Object;)V <init>
	apply (Lbvz$b;)Ljava/lang/Object; apply
bwa net/minecraft/world/level/block/DoublePlantBlock
	a HALF
	<init> (Lced$c;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbrv;Lfx;I)V placeAt
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lbru;Lbft;Lfx;Lcee;Lccg;Lbly;)V playerDestroy
	b (Lbru;Lfx;Lcee;Lbft;)V preventCreativeDropFromBottomPart
	a (Lcef$a;)V createBlockStateDefinition
	ah_ ()Lced$b; getOffsetType
	a (Lcee;Lfx;)J getSeed
	<clinit> ()V <clinit>
bwb net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;Lbft;)V attack
	d (Lcee;Lbru;Lfx;)V teleport
	c ()I getDelayAfterPlace
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bwc net/minecraft/world/level/block/DropperBlock
	c DISPENSE_BEHAVIOUR
	<init> (Lced$c;)V <init>
	a (Lbly;)Lgw; getDispenseMethod
	a (Lbqz;)Lccg; newBlockEntity
	a (Laag;Lfx;)V dispenseFrom
	<clinit> ()V <clinit>
bwd net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	c_ (Lcee;)Z useShapeForLightOcclusion
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	b (Lcee;)Lbze; getRenderShape
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
bwe net/minecraft/world/level/block/EndGatewayBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lcut;)Z canBeReplaced
bwf net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lcut;)Z canBeReplaced
	<clinit> ()V <clinit>
bwg net/minecraft/world/level/block/EndPortalFrameBlock
	a FACING
	b HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	<init> (Lced$c;)V <init>
	c_ (Lcee;)Z useShapeForLightOcclusion
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	c ()Lcej; getOrCreatePortalShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bwh net/minecraft/world/level/block/EndRodBlock
	b Y_AXIS_AABB
	c Z_AXIS_AABB
	d X_AXIS_AABB
	<init> (Lced$c;)V <init>
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcef$a;)V createBlockStateDefinition
	f (Lcee;)Lcuz; getPistonPushReaction
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bwh$1 net/minecraft/world/level/block/EndRodBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
bwi net/minecraft/world/level/block/EnderChestBlock
	b FACING
	c WATERLOGGED
	d SHAPE
	e CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Z)Lbvz$c; combine
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;)Lbze; getRenderShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbjf;ILbfs;Lbft;)Lbhz; lambda$use$1
	c ()Lcch; lambda$new$0
	<clinit> ()V <clinit>
bwj net/minecraft/world/level/block/EntityBlock
	a (Lbqz;)Lccg; newBlockEntity
bwk net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	u FACE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lbrw;Lfx;Lgc;)Z canAttach
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	h (Lcee;)Lgc; getConnectedDirection
	<clinit> ()V <clinit>
bwk$1 net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
bwl net/minecraft/world/level/block/FallingBlock
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lbcr;)V falling
	c ()I getDelayAfterPlace
	h (Lcee;)Z isFree
	a (Lbru;Lfx;Lcee;Lcee;Lbcr;)V onLand
	a (Lbru;Lfx;Lbcr;)V onBroken
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	c (Lcee;Lbqz;Lfx;)I getDustColor
bwm net/minecraft/world/level/block/FarmBlock
	a MOISTURE
	b SHAPE
	<init> (Lced$c;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbnv;)Lcee; getStateForPlacement
	c_ (Lcee;)Z useShapeForLightOcclusion
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbru;Lfx;Lapx;F)V fallOn
	d (Lcee;Lbru;Lfx;)V turnToDirt
	a (Lbqz;Lfx;)Z isUnderCrops
	a (Lbrw;Lfx;)Z isNearWater
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bwn net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	<init> (Lced$c;)V <init>
	d (Lcee;Lbqz;Lfx;)Ldde; getOcclusionShape
	a (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lcee;ZLgc;)Z connectsTo
	c (Lbul;)Z isSameFence
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcef$a;)V createBlockStateDefinition
bwo net/minecraft/world/level/block/FenceGateBlock
	a OPEN
	b POWERED
	c IN_WALL
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_OCCLUSION_SHAPE
	k X_OCCLUSION_SHAPE
	o Z_OCCLUSION_SHAPE_LOW
	p X_OCCLUSION_SHAPE_LOW
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	d (Lcee;Lbqz;Lfx;)Ldde; getOcclusionShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbnv;)Lcee; getStateForPlacement
	h (Lcee;)Z isWall
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lgc;)Z connectsToDirection
	<clinit> ()V <clinit>
bwo$1 net/minecraft/world/level/block/FenceGateBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
bwp net/minecraft/world/level/block/FireBlock
	b AGE
	c NORTH
	d EAST
	e SOUTH
	f WEST
	g UP
	h PROPERTY_BY_DIRECTION
	i UP_AABB
	j WEST_AABB
	k EAST_AABB
	o NORTH_AABB
	p SOUTH_AABB
	q shapesCache
	r flameOdds
	s burnOdds
	<init> (Lced$c;)V <init>
	h (Lcee;)Ldde; calculateShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lbqz;Lfx;)Lcee; getStateForPlacement
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lbru;Lfx;)Z isNearRain
	l (Lcee;)I getBurnOdd
	m (Lcee;)I getFlameOdds
	a (Lbru;Lfx;ILjava/util/Random;I)V checkBurnOut
	a (Lbrv;Lfx;I)Lcee; getStateWithAge
	e (Lbqz;Lfx;)Z isValidFireLocation
	a (Lbrw;Lfx;)I getFireOdds
	e (Lcee;)Z canBurn
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Ljava/util/Random;)I getFireTickDelay
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbul;II)V setFlammable
	c ()V bootStrap
	n (Lcee;)Z lambda$new$1
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	<clinit> ()V <clinit>
bwq net/minecraft/world/level/block/FletchingTableBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
bwr net/minecraft/world/level/block/FlowerBlock
	a SHAPE
	b suspiciousStewEffect
	c effectDuration
	<init> (Lapp;ILced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	ah_ ()Lced$b; getOffsetType
	c ()Lapp; getSuspiciousStewEffect
	d ()I getEffectDuration
	<clinit> ()V <clinit>
bws net/minecraft/world/level/block/FlowerPotBlock
	b POTTED_BY_CONTENT
	a SHAPE
	c content
	<init> (Lbul;Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	c ()Lbul; getContent
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bwt net/minecraft/world/level/block/FrostedIceBlock
	a AGE
	<init> (Lced$c;)V <init>
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	e (Lcee;Lbru;Lfx;)Z slightlyMelt
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbqz;Lfx;I)Z fewerNeigboursThan
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	<clinit> ()V <clinit>
bwu net/minecraft/world/level/block/FungusBlock
	a SHAPE
	b feature
	<init> (Lced$c;Ljava/util/function/Supplier;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	<clinit> ()V <clinit>
bwv net/minecraft/world/level/block/FurnaceBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lbft;)V openContainer
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
bww net/minecraft/world/level/block/GlassBlock
	<init> (Lced$c;)V <init>
bwx net/minecraft/world/level/block/GlazedTerracottaBlock
	<init> (Lced$c;)V <init>
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbnv;)Lcee; getStateForPlacement
	f (Lcee;)Lcuz; getPistonPushReaction
bwy net/minecraft/world/level/block/GrassBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
bwz net/minecraft/world/level/block/GrassPathBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	c_ (Lcee;)Z useShapeForLightOcclusion
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bxa net/minecraft/world/level/block/GravelBlock
	<init> (Lced$c;)V <init>
	c (Lcee;Lbqz;Lfx;)I getDustColor
bxb net/minecraft/world/level/block/GrindstoneBlock
	a FLOOR_NORTH_SOUTH_LEFT_POST
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	o FLOOR_EAST_WEST_RIGHT_PIVOT
	p FLOOR_EAST_WEST_LEFT_LEG
	q FLOOR_EAST_WEST_RIGHT_LEG
	r FLOOR_EAST_WEST_ALL_LEGS
	s FLOOR_EAST_WEST_GRINDSTONE
	t WALL_SOUTH_LEFT_POST
	v WALL_SOUTH_RIGHT_POST
	w WALL_SOUTH_LEFT_PIVOT
	x WALL_SOUTH_RIGHT_PIVOT
	y WALL_SOUTH_LEFT_LEG
	z WALL_SOUTH_RIGHT_LEG
	A WALL_SOUTH_ALL_LEGS
	B WALL_SOUTH_GRINDSTONE
	C WALL_NORTH_LEFT_POST
	D WALL_NORTH_RIGHT_POST
	E WALL_NORTH_LEFT_PIVOT
	F WALL_NORTH_RIGHT_PIVOT
	G WALL_NORTH_LEFT_LEG
	H WALL_NORTH_RIGHT_LEG
	I WALL_NORTH_ALL_LEGS
	J WALL_NORTH_GRINDSTONE
	K WALL_WEST_LEFT_POST
	L WALL_WEST_RIGHT_POST
	M WALL_WEST_LEFT_PIVOT
	N WALL_WEST_RIGHT_PIVOT
	O WALL_WEST_LEFT_LEG
	P WALL_WEST_RIGHT_LEG
	Q WALL_WEST_ALL_LEGS
	R WALL_WEST_GRINDSTONE
	S WALL_EAST_LEFT_POST
	T WALL_EAST_RIGHT_POST
	U WALL_EAST_LEFT_PIVOT
	V WALL_EAST_RIGHT_PIVOT
	W WALL_EAST_LEFT_LEG
	X WALL_EAST_RIGHT_LEG
	Y WALL_EAST_ALL_LEGS
	Z WALL_EAST_GRINDSTONE
	aa CEILING_NORTH_SOUTH_LEFT_POST
	ab CEILING_NORTH_SOUTH_RIGHT_POST
	ac CEILING_NORTH_SOUTH_LEFT_PIVOT
	ad CEILING_NORTH_SOUTH_RIGHT_PIVOT
	ae CEILING_NORTH_SOUTH_LEFT_LEG
	af CEILING_NORTH_SOUTH_RIGHT_LEG
	ag CEILING_NORTH_SOUTH_ALL_LEGS
	ah CEILING_NORTH_SOUTH_GRINDSTONE
	ai CEILING_EAST_WEST_LEFT_POST
	aj CEILING_EAST_WEST_RIGHT_POST
	ak CEILING_EAST_WEST_LEFT_PIVOT
	al CEILING_EAST_WEST_RIGHT_PIVOT
	am CEILING_EAST_WEST_LEFT_LEG
	an CEILING_EAST_WEST_RIGHT_LEG
	ao CEILING_EAST_WEST_ALL_LEGS
	ap CEILING_EAST_WEST_GRINDSTONE
	aD CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	b (Lcee;)Lbze; getRenderShape
	l (Lcee;)Ldde; getVoxelShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
bxb$1 net/minecraft/world/level/block/GrindstoneBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
bxc net/minecraft/world/level/block/GrowingPlantBlock
	a growthDirection
	b scheduleFluidTicks
	c shape
	<init> (Lced$c;Lgc;Ldde;Z)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbrv;)Lcee; getStateForPlacement
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	c (Lbul;)Z canAttachToBlock
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c ()Lbxe; getHeadBlock
	d ()Lbul; getBodyBlock
bxd net/minecraft/world/level/block/GrowingPlantBodyBlock
	<init> (Lced$c;Lgc;Ldde;Z)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	b (Lbqz;Lfx;Lcee;)Ljava/util/Optional; getHeadPos
	a (Lcee;Lbnv;)Z canBeReplaced
	d ()Lbul; getBodyBlock
bxe net/minecraft/world/level/block/GrowingPlantHeadBlock
	d AGE
	e growPerTickProbability
	<init> (Lced$c;Lgc;Ldde;ZD)V <init>
	a (Lbrv;)Lcee; getStateForPlacement
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	h (Lcee;)Z canGrowInto
	c ()Lbxe; getHeadBlock
	<clinit> ()V <clinit>
bxf net/minecraft/world/level/block/HalfTransparentBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lcee;Lgc;)Z skipRendering
bxg net/minecraft/world/level/block/HayBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lapx;F)V fallOn
bxh net/minecraft/world/level/block/HoneyBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	c (Lapx;)Z doesEntityDoHoneyBlockSlideEffects
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a (Lbru;Lfx;Lapx;F)V fallOn
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lfx;Lapx;)Z isSlidingDown
	a (Lapx;Lfx;)V maybeDoSlideAchievement
	d (Lapx;)V doSlideMovement
	a (Lbru;Lapx;)V maybeDoSlideEffects
	a (Lapx;)V showSlideParticles
	b (Lapx;)V showJumpParticles
	a (Lapx;I)V showParticles
	<clinit> ()V <clinit>
bxi net/minecraft/world/level/block/HopperBlock
	a FACING
	b ENABLED
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	o DOWN_INTERACTION_SHAPE
	p EAST_INTERACTION_SHAPE
	q NORTH_INTERACTION_SHAPE
	r SOUTH_INTERACTION_SHAPE
	s WEST_INTERACTION_SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a_ (Lcee;Lbqz;Lfx;)Ldde; getInteractionShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbru;Lfx;Lcee;)V checkPoweredState
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bxi$1 net/minecraft/world/level/block/HopperBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
bxj net/minecraft/world/level/block/HorizontalDirectionalBlock
	aq FACING
	<init> (Lced$c;)V <init>
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	<clinit> ()V <clinit>
bxk net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bxl net/minecraft/world/level/block/IceBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lbft;Lfx;Lcee;Lccg;Lbly;)V playerDestroy
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	d (Lcee;Lbru;Lfx;)V melt
	f (Lcee;)Lcuz; getPistonPushReaction
bxm net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	<init> (Lbul;Lced$c;)V <init>
	c ()Lbul; getHostBlock
	h (Lcee;)Z isCompatibleHostBlock
	a (Laag;Lfx;)V spawnInfestation
	a (Lcee;Laag;Lfx;Lbly;)V spawnAfterBreak
	a (Lbru;Lfx;Lbrm;)V wasExploded
	c (Lbul;)Lcee; stateByHostBlock
	<clinit> ()V <clinit>
bxn net/minecraft/world/level/block/IronBarsBlock
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	a (Lcee;Lcee;Lgc;)Z skipRendering
	a (Lcee;Z)Z attachsTo
	a (Lcef$a;)V createBlockStateDefinition
bxo net/minecraft/world/level/block/JigsawBlock
	a ORIENTATION
	<init> (Lced$c;)V <init>
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcsy$c;Lcsy$c;)Z canAttach
	h (Lcee;)Lgc; getFrontFacing
	l (Lcee;)Lgc; getTopFacing
	a (Lgc;)Lccw$a; lambda$canAttach$0
	<clinit> ()V <clinit>
bxp net/minecraft/world/level/block/JukeboxBlock
	a HAS_RECORD
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbrv;Lfx;Lcee;Lbly;)V setRecord
	a (Lbru;Lfx;)V dropRecording
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	b (Lcee;)Lbze; getRenderShape
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bxq net/minecraft/world/level/block/KelpBlock
	e SHAPE
	<init> (Lced$c;)V <init>
	h (Lcee;)Z canGrowInto
	d ()Lbul; getBodyBlock
	c (Lbul;)Z canAttachToBlock
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	a (Lbnv;)Lcee; getStateForPlacement
	d (Lcee;)Lcuu; getFluidState
	<clinit> ()V <clinit>
bxr net/minecraft/world/level/block/KelpPlantBlock
	<init> (Lced$c;)V <init>
	c ()Lbxe; getHeadBlock
	d (Lcee;)Lcuu; getFluidState
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
bxs net/minecraft/world/level/block/LadderBlock
	a FACING
	b WATERLOGGED
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbqz;Lfx;Lgc;)Z canAttachTo
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	d (Lcee;)Lcuu; getFluidState
	<clinit> ()V <clinit>
bxs$1 net/minecraft/world/level/block/LadderBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
bxt net/minecraft/world/level/block/Lantern
	a HANGING
	b WATERLOGGED
	c AABB
	d HANGING_AABB
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	h (Lcee;)Lgc; getConnectedDirection
	f (Lcee;)Lcuz; getPistonPushReaction
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bxu net/minecraft/world/level/block/LeavesBlock
	a DISTANCE
	b PERSISTENT
	<init> (Lced$c;)V <init>
	e (Lcee;Lbqz;Lfx;)Ldde; getBlockSupportShape
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	f (Lcee;Lbqz;Lfx;)I getLightBlock
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrv;Lfx;)Lcee; updateDistance
	h (Lcee;)I getDistanceAt
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbnv;)Lcee; getStateForPlacement
	<clinit> ()V <clinit>
bxv net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	o SHAPE_SOUTH
	<init> (Lced$c;)V <init>
	b (Lcee;)Lbze; getRenderShape
	d (Lcee;Lbqz;Lfx;)Ldde; getOcclusionShape
	c_ (Lcee;)Z useShapeForLightOcclusion
	a (Lbnv;)Lcee; getStateForPlacement
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lcee;Lbly;)Z tryPlaceBook
	b (Lbru;Lfx;Lcee;Lbly;)V placeBook
	a (Lbru;Lfx;Lcee;Z)V resetBookState
	a (Lbru;Lfx;Lcee;)V signalPageChange
	b (Lbru;Lfx;Lcee;Z)V changePowered
	b (Lbru;Lfx;Lcee;)V updateBelow
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	d (Lcee;Lbru;Lfx;)V popBook
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lbru;Lfx;Lbft;)V openScreen
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bxv$1 net/minecraft/world/level/block/LecternBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
bxw net/minecraft/world/level/block/LevelEvent
	<init> ()V <init>
bxx net/minecraft/world/level/block/LeverBlock
	a POWERED
	b NORTH_AABB
	c SOUTH_AABB
	d WEST_AABB
	e EAST_AABB
	f UP_AABB_Z
	g UP_AABB_X
	h DOWN_AABB_Z
	i DOWN_AABB_X
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	d (Lcee;Lbru;Lfx;)Lcee; pull
	a (Lcee;Lbrv;Lfx;F)V makeParticle
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	b_ (Lcee;)Z isSignalSource
	e (Lcee;Lbru;Lfx;)V updateNeighbours
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bxx$1 net/minecraft/world/level/block/LeverBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
	c $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
bxy net/minecraft/world/level/block/LiquidBlock
	a LEVEL
	b fluid
	d stateCache
	c STABLE_SHAPE
	<init> (Lcus;Lced$c;)V <init>
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lcee;Lgc;)Z skipRendering
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lcys$a;)Ljava/util/List; getDrops
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbru;Lfx;Lcee;)Z shouldSpreadLiquid
	a (Lbrv;Lfx;)V fizz
	a (Lcef$a;)V createBlockStateDefinition
	b (Lbrv;Lfx;Lcee;)Lcut; takeLiquid
	<clinit> ()V <clinit>
bxz net/minecraft/world/level/block/LiquidBlockContainer
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
bya net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
byb net/minecraft/world/level/block/MagmaBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lapx;)V stepOn
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
byc net/minecraft/world/level/block/MelonBlock
	<init> (Lced$c;)V <init>
	c ()Lcaj; getStem
	d ()Lbtq; getAttachedStem
byd net/minecraft/world/level/block/Mirror
	a NONE
	b LEFT_RIGHT
	c FRONT_BACK
	d rotation
	e $VALUES
	values ()[Lbyd; values
	valueOf (Ljava/lang/String;)Lbyd; valueOf
	<init> (Ljava/lang/String;ILc;)V <init>
	a (II)I mirror
	a (Lgc;)Lbzj; getRotation
	b (Lgc;)Lgc; mirror
	a ()Lc; rotation
	<clinit> ()V <clinit>
byd$1 net/minecraft/world/level/block/Mirror$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
bye net/minecraft/world/level/block/MushroomBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Laag;Lfx;Lcee;Ljava/util/Random;)Z growMushroom
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	<clinit> ()V <clinit>
byf net/minecraft/world/level/block/MyceliumBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
byg net/minecraft/world/level/block/NetherPortalBlock
	a AXIS
	b X_AXIS_AABB
	c Z_AXIS_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
byg$1 net/minecraft/world/level/block/NetherPortalBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
byh net/minecraft/world/level/block/NetherSproutsBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	ah_ ()Lced$b; getOffsetType
	<clinit> ()V <clinit>
byi net/minecraft/world/level/block/NetherVines
	<init> ()V <init>
	a (Lcee;)Z isValidGrowthState
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
byj net/minecraft/world/level/block/NetherWartBlock
	a AGE
	b SHAPE_BY_AGE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
byk net/minecraft/world/level/block/NetherrackBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
byl net/minecraft/world/level/block/NoteBlock
	a INSTRUMENT
	b POWERED
	c NOTE
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbru;Lfx;)V playNote
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;Lbft;)V attack
	a (Lcee;Lbru;Lfx;II)Z triggerEvent
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bym net/minecraft/world/level/block/NyliumBlock
	<init> (Lced$c;)V <init>
	b (Lcee;Lbrw;Lfx;)Z canBeNylium
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
byn net/minecraft/world/level/block/ObserverBlock
	b POWERED
	<init> (Lced$c;)V <init>
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbrv;Lfx;)V startSignal
	a (Lbru;Lfx;Lcee;)V updateNeighborsInFront
	b_ (Lcee;)Z isSignalSource
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbnv;)Lcee; getStateForPlacement
	<clinit> ()V <clinit>
byo net/minecraft/world/level/block/OreBlock
	<init> (Lced$c;)V <init>
	a (Ljava/util/Random;)I xpOnDrop
	a (Lcee;Laag;Lfx;Lbly;)V spawnAfterBreak
byp net/minecraft/world/level/block/PipeBlock
	i DIRECTIONS
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	<init> (FLced$c;)V <init>
	a (F)[Ldde; makeShapes
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	h (Lcee;)I getAABBIndex
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
byq net/minecraft/world/level/block/PlayerHeadBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
byr net/minecraft/world/level/block/PlayerWallHeadBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lcys$a;)Ljava/util/List; getDrops
bys net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	<init> (Lced$c;)V <init>
	e ()Lbrt; getBaseSeedId
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	<clinit> ()V <clinit>
byt net/minecraft/world/level/block/PoweredBlock
	<init> (Lced$c;)V <init>
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
byu net/minecraft/world/level/block/PoweredRailBlock
	c SHAPE
	d POWERED
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;ZI)Z findPoweredRailSignal
	a (Lbru;Lfx;ZILcfh;)Z isSameRailWithPower
	a (Lcee;Lbru;Lfx;Lbul;)V updateState
	d ()Lcfg; getShapeProperty
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
byu$1 net/minecraft/world/level/block/PoweredRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
byv net/minecraft/world/level/block/PressurePlateBlock
	d POWERED
	e sensitivity
	<init> (Lbyv$a;Lced$c;)V <init>
	g (Lcee;)I getSignalForState
	a (Lcee;I)Lcee; setSignalForState
	a (Lbrv;Lfx;)V playOnSound
	b (Lbrv;Lfx;)V playOffSound
	b (Lbru;Lfx;)I getSignalStrength
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
byv$1 net/minecraft/world/level/block/PressurePlateBlock$1
	a $SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
	<clinit> ()V <clinit>
byv$a net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	a EVERYTHING
	b MOBS
	c $VALUES
	values ()[Lbyv$a; values
	valueOf (Ljava/lang/String;)Lbyv$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
byw net/minecraft/world/level/block/PumpkinBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	c ()Lcaj; getStem
	d ()Lbtq; getAttachedStem
	a (Laoq;Lbft;)V lambda$use$0
byx net/minecraft/world/level/block/RailBlock
	c SHAPE
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbul;)V updateState
	d ()Lcfg; getShapeProperty
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
byx$1 net/minecraft/world/level/block/RailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
byy net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	<init> (Lbru;Lfx;Lcee;)V <init>
	a ()Ljava/util/List; getConnections
	a (Lcfh;)V updateConnections
	d ()V removeSoftConnections
	a (Lfx;)Z hasRail
	b (Lfx;)Lbyy; getRail
	a (Lbyy;)Z connectsTo
	c (Lfx;)Z hasConnection
	b ()I countPotentialConnections
	b (Lbyy;)Z canConnectTo
	c (Lbyy;)V connectTo
	d (Lfx;)Z hasNeighborRail
	a (ZZLcfh;)Lbyy; place
	c ()Lcee; getState
byy$1 net/minecraft/world/level/block/RailState$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	<clinit> ()V <clinit>
byz net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;)V attack
	a (Lbru;Lfx;Lapx;)V stepOn
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	d (Lcee;Lbru;Lfx;)V interact
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Laag;Lfx;Lbly;)V spawnAfterBreak
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbru;Lfx;)V spawnParticles
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bza net/minecraft/world/level/block/RedStoneWireBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e POWER
	f PROPERTY_BY_DIRECTION
	g SHAPE_DOT
	h SHAPES_FLOOR
	i SHAPES_UP
	j SHAPES_CACHE
	k COLORS
	o crossState
	p shouldSignal
	<init> (Lced$c;)V <init>
	l (Lcee;)Ldde; calculateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbqz;Lcee;Lfx;)Lcee; getConnectionState
	b (Lbqz;Lcee;Lfx;)Lcee; getMissingConnections
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	m (Lcee;)Z isCross
	n (Lcee;)Z isDot
	a (Lcee;Lbrv;Lfx;II)V updateIndirectNeighbourShapes
	a (Lbqz;Lfx;Lgc;)Lcfi; getConnectingSide
	a (Lbqz;Lfx;Lgc;Z)Lcfi; getConnectingSide
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	b (Lbqz;Lfx;Lcee;)Z canSurviveOn
	a (Lbru;Lfx;Lcee;)V updatePowerStrength
	a (Lbru;Lfx;)I calculateTargetStrength
	o (Lcee;)I getWireSignal
	b (Lbru;Lfx;)V checkCornerChangeAt
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	d (Lbru;Lfx;)V updateNeighborsOfNeighboringWires
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	h (Lcee;)Z shouldConnectTo
	a (Lcee;Lgc;)Z shouldConnectTo
	b_ (Lcee;)Z isSignalSource
	b (I)I getColorForPower
	a (Lbru;Ljava/util/Random;Lfx;Lg;Lgc;Lgc;FF)V spawnParticlesAlongLine
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lcee;Lcee;)V updatesOnShapeChange
	<clinit> ()V <clinit>
bza$1 net/minecraft/world/level/block/RedStoneWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
bzb net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bzc net/minecraft/world/level/block/RedstoneTorchBlock
	a LIT
	b RECENT_TOGGLES
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	a (Lbru;Lfx;Lcee;)Z hasNeighborSignal
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbru;Lfx;Z)Z isToggledTooFrequently
	a (Lbqz;)Ljava/util/List; lambda$isToggledTooFrequently$0
	<clinit> ()V <clinit>
bzc$a net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
	<init> (Lfx;J)V <init>
	a (Lbzc$a;)J access$000
	b (Lbzc$a;)Lfx; access$100
bzd net/minecraft/world/level/block/RedstoneWallTorchBlock
	b FACING
	c LIT
	<init> (Lced$c;)V <init>
	i ()Ljava/lang/String; getDescriptionId
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lbru;Lfx;Lcee;)Z hasNeighborSignal
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bze net/minecraft/world/level/block/RenderShape
	a INVISIBLE
	b ENTITYBLOCK_ANIMATED
	c MODEL
	d $VALUES
	values ()[Lbze; values
	valueOf (Ljava/lang/String;)Lbze; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bzf net/minecraft/world/level/block/RepeaterBlock
	a LOCKED
	d DELAY
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	g (Lcee;)I getDelay
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbrw;Lfx;Lcee;)Z isLocked
	h (Lcee;)Z isAlternateInput
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bzg net/minecraft/world/level/block/RespawnAnchorBlock
	a CHARGE
	b RESPAWN_HORIZONTAL_OFFSETS
	c RESPAWN_OFFSETS
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbly;)Z isRespawnFuel
	h (Lcee;)Z canBeCharged
	a (Lfx;Lbru;)Z isWaterThatWouldFlow
	d (Lcee;Lbru;Lfx;)V explode
	a (Lbru;)Z canSetSpawn
	a (Lbru;Lfx;Lcee;)V charge
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;I)I getScaledChargeLevel
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Laqb;Lbrd;Lfx;)Ljava/util/Optional; findStandUpPosition
	a (Laqb;Lbrd;Lfx;Z)Ljava/util/Optional; findStandUpPosition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbru;Lfx;)Z lambda$explode$0
	<clinit> ()V <clinit>
bzg$1 net/minecraft/world/level/block/RespawnAnchorBlock$1
	a val$pos
	b val$inWater
	c this$0
	<init> (Lbzg;Lfx;Z)V <init>
	a (Lbrm;Lbqz;Lfx;Lcee;Lcuu;)Ljava/util/Optional; getBlockExplosionResistance
bzh net/minecraft/world/level/block/RootsBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	ah_ ()Lced$b; getOffsetType
	<clinit> ()V <clinit>
bzi net/minecraft/world/level/block/RotatedPillarBlock
	e AXIS
	<init> (Lced$c;)V <init>
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbnv;)Lcee; getStateForPlacement
	<clinit> ()V <clinit>
bzi$1 net/minecraft/world/level/block/RotatedPillarBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
bzj net/minecraft/world/level/block/Rotation
	a NONE
	b CLOCKWISE_90
	c CLOCKWISE_180
	d COUNTERCLOCKWISE_90
	e rotation
	f $VALUES
	values ()[Lbzj; values
	valueOf (Ljava/lang/String;)Lbzj; valueOf
	<init> (Ljava/lang/String;ILc;)V <init>
	a (Lbzj;)Lbzj; getRotated
	a ()Lc; rotation
	a (Lgc;)Lgc; rotate
	a (II)I rotate
	a (Ljava/util/Random;)Lbzj; getRandom
	b (Ljava/util/Random;)Ljava/util/List; getShuffled
	<clinit> ()V <clinit>
bzj$1 net/minecraft/world/level/block/Rotation$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
bzk net/minecraft/world/level/block/SandBlock
	a dustColor
	<init> (ILced$c;)V <init>
	c (Lcee;Lbqz;Lfx;)I getDustColor
bzl net/minecraft/world/level/block/SaplingBlock
	a STAGE
	b SHAPE
	c treeGrower
	<init> (Lcdn;Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Laag;Lfx;Lcee;Ljava/util/Random;)V advanceTree
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bzm net/minecraft/world/level/block/ScaffoldingBlock
	d STABLE_SHAPE
	e UNSTABLE_SHAPE
	f UNSTABLE_SHAPE_BOTTOM
	g BELOW_BLOCK
	a DISTANCE
	b WATERLOGGED
	c BOTTOM
	<init> (Lced$c;)V <init>
	a (Lcef$a;)V createBlockStateDefinition
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a_ (Lcee;Lbqz;Lfx;)Ldde; getInteractionShape
	a (Lcee;Lbnv;)Z canBeReplaced
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	d (Lcee;)Lcuu; getFluidState
	a (Lbqz;Lfx;I)Z isBottom
	a (Lbqz;Lfx;)I getDistance
	<clinit> ()V <clinit>
bzn net/minecraft/world/level/block/SeaPickleBlock
	a PICKLES
	b WATERLOGGED
	c ONE_AABB
	d TWO_AABB
	e THREE_AABB
	f FOUR_AABB
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	h (Lcee;)Z isDead
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbnv;)Z canBeReplaced
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	d (Lcee;)Lcuu; getFluidState
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bzo net/minecraft/world/level/block/Seagrass
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	d (Lcee;)Lcuu; getFluidState
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
	<clinit> ()V <clinit>
bzp net/minecraft/world/level/block/ShulkerBoxBlock
	a FACING
	b CONTENTS
	c color
	<init> (Lbku;Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lcee;Lcys$a;)Ljava/util/List; getDrops
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbly;Lbqz;Ljava/util/List;Lbni;)V appendHoverText
	f (Lcee;)Lcuz; getPistonPushReaction
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;)Z hasAnalogOutputSignal
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	b (Lblu;)Lbku; getColorFromItem
	c (Lbul;)Lbku; getColorFromBlock
	a (Lbku;)Lbul; getBlockByColor
	c ()Lbku; getColor
	b (Lbku;)Lbly; getColoredItemStack
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcdb;Lcys;Ljava/util/function/Consumer;)V lambda$getDrops$0
	<clinit> ()V <clinit>
bzp$1 net/minecraft/world/level/block/ShulkerBoxBlock$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
	<clinit> ()V <clinit>
bzq net/minecraft/world/level/block/SignBlock
	a WATERLOGGED
	b SHAPE
	c type
	<init> (Lced$c;Lcfn;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	ai_ ()Z isPossibleToRespawnInThis
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	d (Lcee;)Lcuu; getFluidState
	c ()Lcfn; type
	<clinit> ()V <clinit>
bzr net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
	b (Lbrv;Lfx;Lcee;)Lcut; takeLiquid
bzs net/minecraft/world/level/block/SkullBlock
	a ROTATION
	b SHAPE
	<init> (Lbzs$a;Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	d (Lcee;Lbqz;Lfx;)Ldde; getOcclusionShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bzs$a net/minecraft/world/level/block/SkullBlock$Type
bzs$b net/minecraft/world/level/block/SkullBlock$Types
	a SKELETON
	b WITHER_SKELETON
	c PLAYER
	d ZOMBIE
	e CREEPER
	f DRAGON
	g $VALUES
	values ()[Lbzs$b; values
	valueOf (Ljava/lang/String;)Lbzs$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
bzt net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	<init> (Lced$c;)V <init>
	c_ (Lcee;)Z useShapeForLightOcclusion
	a (Lcef$a;)V createBlockStateDefinition
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbnv;)Z canBeReplaced
	d (Lcee;)Lcuu; getFluidState
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
bzt$1 net/minecraft/world/level/block/SlabBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
bzu net/minecraft/world/level/block/SlimeBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lapx;F)V fallOn
	a (Lbqz;Lapx;)V updateEntityAfterFallOn
	a (Lapx;)V bounceUp
	a (Lbru;Lfx;Lapx;)V stepOn
bzv net/minecraft/world/level/block/SmithingTableBlock
	a CONTAINER_TITLE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
bzw net/minecraft/world/level/block/SmokerBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lbru;Lfx;Lbft;)V openContainer
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
bzx net/minecraft/world/level/block/SnowLayerBlock
	a LAYERS
	b SHAPE_BY_LAYER
	<init> (Lced$c;)V <init>
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	e (Lcee;Lbqz;Lfx;)Ldde; getBlockSupportShape
	a (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	c_ (Lcee;)Z useShapeForLightOcclusion
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lbnv;)Z canBeReplaced
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bzx$1 net/minecraft/world/level/block/SnowLayerBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
bzy net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	<init> (Lced$c;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
bzz net/minecraft/world/level/block/SoulFireBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	c (Lbul;)Z canSurviveOnBlock
	e (Lcee;)Z canBurn
caa net/minecraft/world/level/block/SoulSandBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	e (Lcee;Lbqz;Lfx;)Ldde; getBlockSupportShape
	a (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
cab net/minecraft/world/level/block/SoundType
	a WOOD
	b GRAVEL
	c GRASS
	d LILY_PAD
	e STONE
	f METAL
	g GLASS
	h WOOL
	i SAND
	j SNOW
	k LADDER
	l ANVIL
	m SLIME_BLOCK
	n HONEY_BLOCK
	o WET_GRASS
	p CORAL_BLOCK
	q BAMBOO
	r BAMBOO_SAPLING
	s SCAFFOLDING
	t SWEET_BERRY_BUSH
	u CROP
	v HARD_CROP
	w VINE
	x NETHER_WART
	y LANTERN
	z STEM
	A NYLIUM
	B FUNGUS
	C ROOTS
	D SHROOMLIGHT
	E WEEPING_VINES
	F TWISTING_VINES
	G SOUL_SAND
	H SOUL_SOIL
	I BASALT
	J WART_BLOCK
	K NETHERRACK
	L NETHER_BRICKS
	M NETHER_SPROUTS
	N NETHER_ORE
	O BONE_BLOCK
	P NETHERITE_BLOCK
	Q ANCIENT_DEBRIS
	R LODESTONE
	S CHAIN
	T NETHER_GOLD_ORE
	U GILDED_BLACKSTONE
	V volume
	W pitch
	X breakSound
	Y stepSound
	Z placeSound
	aa hitSound
	ab fallSound
	<init> (FFLadn;Ladn;Ladn;Ladn;Ladn;)V <init>
	a ()F getVolume
	b ()F getPitch
	c ()Ladn; getBreakSound
	d ()Ladn; getStepSound
	e ()Ladn; getPlaceSound
	f ()Ladn; getHitSound
	g ()Ladn; getFallSound
	<clinit> ()V <clinit>
cac net/minecraft/world/level/block/SpawnerBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Laag;Lfx;Lbly;)V spawnAfterBreak
	b (Lcee;)Lbze; getRenderShape
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
cad net/minecraft/world/level/block/SpongeBlock
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbru;Lfx;)V tryAbsorbWater
	b (Lbru;Lfx;)Z removeWaterBreadthFirstSearch
cae net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	<init> (Lced$c;)V <init>
	b (Lcee;Lbrw;Lfx;)Z canBeGrass
	c (Lcee;Lbrw;Lfx;)Z canPropagate
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
caf net/minecraft/world/level/block/StainedGlassBlock
	a color
	<init> (Lbku;Lced$c;)V <init>
	a ()Lbku; getColor
cag net/minecraft/world/level/block/StainedGlassPaneBlock
	i color
	<init> (Lbku;Lced$c;)V <init>
	a ()Lbku; getColor
cah net/minecraft/world/level/block/StairBlock
	a FACING
	b HALF
	c SHAPE
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	o OCTET_PNP
	p OCTET_PPN
	q OCTET_PPP
	r TOP_SHAPES
	s BOTTOM_SHAPES
	t SHAPE_BY_STATE
	u base
	v baseState
	a (Ldde;Ldde;Ldde;Ldde;Ldde;)[Ldde; makeShapes
	a (ILdde;Ldde;Ldde;Ldde;Ldde;)Ldde; makeStairShape
	<init> (Lcee;Lced$c;)V <init>
	c_ (Lcee;)Z useShapeForLightOcclusion
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	l (Lcee;)I getShapeIndex
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbru;Lfx;Lbft;)V attack
	a (Lbrv;Lfx;Lcee;)V destroy
	f ()F getExplosionResistance
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	d (Lbqz;Lfx;)V prepareRender
	a (Lbru;Lfx;Lapx;)V stepOn
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lbrm;)V wasExploded
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	g (Lcee;Lbqz;Lfx;)Lcfk; getStairsShape
	d (Lcee;Lbqz;Lfx;Lgc;)Z canTakeShape
	h (Lcee;)Z isStairs
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	b (I)[Ldde; lambda$makeShapes$1
	a (Ldde;Ldde;Ldde;Ldde;Ldde;I)Ldde; lambda$makeShapes$0
	<clinit> ()V <clinit>
cah$1 net/minecraft/world/level/block/StairBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cai net/minecraft/world/level/block/StandingSignBlock
	c ROTATION
	<init> (Lced$c;Lcfn;)V <init>
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
caj net/minecraft/world/level/block/StemBlock
	a AGE
	b SHAPE_BY_AGE
	c fruit
	<init> (Lcak;Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	c ()Lblu; getSeedItem
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	a (Lcef$a;)V createBlockStateDefinition
	d ()Lcak; getFruit
	<clinit> ()V <clinit>
cak net/minecraft/world/level/block/StemGrownBlock
	<init> (Lced$c;)V <init>
	c ()Lcaj; getStem
	d ()Lbtq; getAttachedStem
cal net/minecraft/world/level/block/StoneButtonBlock
	<init> (Lced$c;)V <init>
	a (Z)Ladn; getSound
cam net/minecraft/world/level/block/StonecutterBlock
	c CONTAINER_TITLE
	a FACING
	b SHAPE
	<init> (Lced$c;)V <init>
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c_ (Lcee;)Z useShapeForLightOcclusion
	b (Lcee;)Lbze; getRenderShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbru;Lfx;ILbfs;Lbft;)Lbhz; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
can net/minecraft/world/level/block/StructureBlock
	a MODE
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	b (Lcee;)Lbze; getRenderShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Laag;Lcdg;)V trigger
	<clinit> ()V <clinit>
can$1 net/minecraft/world/level/block/StructureBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
	<clinit> ()V <clinit>
cao net/minecraft/world/level/block/StructureVoidBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;)Lbze; getRenderShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbqz;Lfx;)F getShadeBrightness
	f (Lcee;)Lcuz; getPistonPushReaction
	<clinit> ()V <clinit>
cap net/minecraft/world/level/block/SugarCaneBlock
	a AGE
	b SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
caq net/minecraft/world/level/block/SupportType
	a FULL
	b CENTER
	c RIGID
	d $VALUES
	values ()[Lcaq; values
	valueOf (Ljava/lang/String;)Lcaq; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcee;Lbqz;Lfx;Lgc;)Z isSupporting
	<init> (Ljava/lang/String;ILcaq$1;)V <init>
	<clinit> ()V <clinit>
caq$1 net/minecraft/world/level/block/SupportType$1
	<init> (Ljava/lang/String;I)V <init>
	a (Lcee;Lbqz;Lfx;Lgc;)Z isSupporting
caq$2 net/minecraft/world/level/block/SupportType$2
	d CENTER_SUPPORT_WIDTH
	e CENTER_SUPPORT_SHAPE
	<init> (Ljava/lang/String;I)V <init>
	a (Lcee;Lbqz;Lfx;Lgc;)Z isSupporting
caq$3 net/minecraft/world/level/block/SupportType$3
	d RIGID_SUPPORT_WIDTH
	e RIGID_SUPPORT_SHAPE
	<init> (Ljava/lang/String;I)V <init>
	a (Lcee;Lbqz;Lfx;Lgc;)Z isSupporting
car net/minecraft/world/level/block/SweetBerryBushBlock
	a AGE
	b SAPLING_SHAPE
	c MID_GROWTH_SHAPE
	<init> (Lced$c;)V <init>
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a_ (Lcee;)Z isRandomlyTicking
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	<clinit> ()V <clinit>
cas net/minecraft/world/level/block/TallFlowerBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbnv;)Z canBeReplaced
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
cat net/minecraft/world/level/block/TallGrassBlock
	a SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbqz;Lfx;Lcee;Z)Z isValidBonemealTarget
	a (Lbru;Ljava/util/Random;Lfx;Lcee;)Z isBonemealSuccess
	a (Laag;Ljava/util/Random;Lfx;Lcee;)V performBonemeal
	ah_ ()Lced$b; getOffsetType
	<clinit> ()V <clinit>
cau net/minecraft/world/level/block/TallSeagrass
	b HALF
	c SHAPE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	d (Lcee;)Lcuu; getFluidState
	a (Lbqz;Lfx;Lcee;Lcut;)Z canPlaceLiquid
	a (Lbrv;Lfx;Lcee;Lcuu;)Z placeLiquid
	<clinit> ()V <clinit>
cav net/minecraft/world/level/block/TargetBlock
	a OUTPUT_POWER
	<init> (Lced$c;)V <init>
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	a (Lbrv;Lcee;Ldcg;Lapx;)I updateRedstoneOutput
	a (Ldcg;Ldck;)I getRedstoneStrength
	a (Lbrv;Lcee;ILfx;I)V setOutputPower
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b_ (Lcee;)Z isSignalSource
	a (Lcef$a;)V createBlockStateDefinition
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	<clinit> ()V <clinit>
caw net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lbru;Lfx;Lbrm;)V wasExploded
	a (Lbru;Lfx;)V explode
	a (Lbru;Lfx;Laqj;)V explode
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	a (Lbrm;)Z dropFromExplosion
	a (Lcef$a;)V createBlockStateDefinition
	a (Laoq;Lbft;)V lambda$use$0
	<clinit> ()V <clinit>
cax net/minecraft/world/level/block/TorchBlock
	d AABB
	e flameParticle
	<init> (Lced$c;Lhf;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	<clinit> ()V <clinit>
cay net/minecraft/world/level/block/TrapDoorBlock
	a OPEN
	b HALF
	c POWERED
	d WATERLOGGED
	e EAST_OPEN_AABB
	f WEST_OPEN_AABB
	g SOUTH_OPEN_AABB
	h NORTH_OPEN_AABB
	i BOTTOM_AABB
	j TOP_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbft;Lbru;Lfx;Z)V playSound
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	<clinit> ()V <clinit>
cay$1 net/minecraft/world/level/block/TrapDoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
caz net/minecraft/world/level/block/TrappedChestBlock
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	c ()Ladv; getOpenChestStat
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	e ()Lcch; lambda$new$0
cba net/minecraft/world/level/block/TripWireBlock
	a POWERED
	b ATTACHED
	c DISARMED
	d NORTH
	e EAST
	f SOUTH
	g WEST
	j PROPERTY_BY_DIRECTION
	h AABB
	i NOT_ATTACHED_AABB
	k hook
	<init> (Lcbb;Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lbru;Lfx;Lcee;)V updateSource
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lbru;Lfx;)V checkPressed
	a (Lcee;Lgc;)Z shouldConnectTo
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cba$1 net/minecraft/world/level/block/TripWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cbb net/minecraft/world/level/block/TripWireHookBlock
	a FACING
	b POWERED
	c ATTACHED
	d NORTH_AABB
	e SOUTH_AABB
	f WEST_AABB
	g EAST_AABB
	<init> (Lced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lbru;Lfx;Lcee;ZZILcee;)V calculateState
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lbru;Lfx;ZZZZ)V playSound
	a (Lbru;Lfx;Lgc;)V notifyNeighbors
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	b_ (Lcee;)Z isSignalSource
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cbb$1 net/minecraft/world/level/block/TripWireHookBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cbc net/minecraft/world/level/block/TurtleEggBlock
	c ONE_EGG_AABB
	d MULTIPLE_EGGS_AABB
	a HATCH
	b EGGS
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lapx;)V stepOn
	a (Lbru;Lfx;Lapx;F)V fallOn
	a (Lbru;Lfx;Lapx;I)V destroyEgg
	a (Lbru;Lfx;Lcee;)V decreaseEggs
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbqz;Lfx;)Z onSand
	b (Lbqz;Lfx;)Z isSand
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lbru;)Z shouldUpdateHatchLevel
	a (Lbru;Lbft;Lfx;Lcee;Lccg;Lbly;)V playerDestroy
	a (Lcee;Lbnv;)Z canBeReplaced
	a (Lbnv;)Lcee; getStateForPlacement
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcef$a;)V createBlockStateDefinition
	a (Lbru;Lapx;)Z canDestroyEgg
	<clinit> ()V <clinit>
cbd net/minecraft/world/level/block/TwistingVines
	e SHAPE
	<init> (Lced$c;)V <init>
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	d ()Lbul; getBodyBlock
	h (Lcee;)Z canGrowInto
	<clinit> ()V <clinit>
cbe net/minecraft/world/level/block/TwistingVinesPlant
	d SHAPE
	<init> (Lced$c;)V <init>
	c ()Lbxe; getHeadBlock
	<clinit> ()V <clinit>
cbf net/minecraft/world/level/block/VineBlock
	a UP
	b NORTH
	c EAST
	d SOUTH
	e WEST
	f PROPERTY_BY_DIRECTION
	g UP_AABB
	h WEST_AABB
	i EAST_AABB
	j NORTH_AABB
	k SOUTH_AABB
	o shapesCache
	<init> (Lced$c;)V <init>
	h (Lcee;)Ldde; calculateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	l (Lcee;)Z hasFaces
	m (Lcee;)I countFaces
	b (Lbqz;Lfx;Lgc;)Z canSupportAtFace
	a (Lbqz;Lfx;Lgc;)Z isAcceptableNeighbour
	g (Lcee;Lbqz;Lfx;)Lcee; getUpdatedState
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Lcee;Ljava/util/Random;)Lcee; copyRandomFaces
	n (Lcee;)Z hasHorizontalConnection
	a (Lbqz;Lfx;)Z canSpread
	a (Lcee;Lbnv;)Z canBeReplaced
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lgc;)Lcev; getPropertyForFace
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	<clinit> ()V <clinit>
cbf$1 net/minecraft/world/level/block/VineBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cbg net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	<init> (Lbku;Lced$c;)V <init>
	i ()Ljava/lang/String; getDescriptionId
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cbh net/minecraft/world/level/block/WallBlock
	a UP
	b EAST_WALL
	c NORTH_WALL
	d SOUTH_WALL
	e WEST_WALL
	f WATERLOGGED
	g shapeByIndex
	h collisionShapeByIndex
	i POST_TEST
	j NORTH_TEST
	k SOUTH_TEST
	o WEST_TEST
	p EAST_TEST
	<init> (Lced$c;)V <init>
	a (Ldde;Lcfm;Ldde;Ldde;)Ldde; applyWallShape
	a (FFFFFF)Ljava/util/Map; makeShapes
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lcee;ZLgc;)Z connectsTo
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lcfg;)Z isConnected
	a (Ldde;Ldde;)Z isCovered
	a (Lbrw;Lcee;Lfx;Lcee;)Lcee; topUpdate
	a (Lbrw;Lfx;Lcee;Lfx;Lcee;Lgc;)Lcee; sideUpdate
	a (Lbrw;Lcee;Lfx;Lcee;ZZZZ)Lcee; updateShape
	a (Lcee;Lcee;Ldde;)Z shouldRaisePost
	a (Lcee;ZZZZLdde;)Lcee; updateSides
	a (ZLdde;Ldde;)Lcfm; makeWallState
	d (Lcee;)Lcuu; getFluidState
	b (Lcee;Lbqz;Lfx;)Z propagatesSkylightDown
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	<clinit> ()V <clinit>
cbh$1 net/minecraft/world/level/block/WallBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cbi net/minecraft/world/level/block/WallSignBlock
	c FACING
	d AABBS
	<init> (Lced$c;Lcfn;)V <init>
	i ()Ljava/lang/String; getDescriptionId
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cbj net/minecraft/world/level/block/WallSkullBlock
	a FACING
	b AABBS
	<init> (Lbzs$a;Lced$c;)V <init>
	i ()Ljava/lang/String; getDescriptionId
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cbk net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABBS
	<init> (Lced$c;Lhf;)V <init>
	i ()Ljava/lang/String; getDescriptionId
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	h (Lcee;)Ldde; getShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cbl net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	<clinit> ()V <clinit>
cbm net/minecraft/world/level/block/WebBlock
	<init> (Lced$c;)V <init>
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
cbn net/minecraft/world/level/block/WeepingVines
	e SHAPE
	<init> (Lced$c;)V <init>
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	d ()Lbul; getBodyBlock
	h (Lcee;)Z canGrowInto
	<clinit> ()V <clinit>
cbo net/minecraft/world/level/block/WeepingVinesPlant
	d SHAPE
	<init> (Lced$c;)V <init>
	c ()Lbxe; getHeadBlock
	<clinit> ()V <clinit>
cbp net/minecraft/world/level/block/WeightedPressurePlateBlock
	d POWER
	e maxWeight
	<init> (ILced$c;)V <init>
	b (Lbru;Lfx;)I getSignalStrength
	a (Lbrv;Lfx;)V playOnSound
	b (Lbrv;Lfx;)V playOffSound
	g (Lcee;)I getSignalForState
	a (Lcee;I)Lcee; setSignalForState
	c ()I getPressedTime
	a (Lcef$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cbq net/minecraft/world/level/block/WetSpongeBlock
	<init> (Lced$c;)V <init>
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
cbr net/minecraft/world/level/block/WitherRoseBlock
	<init> (Lapp;Lced$c;)V <init>
	c (Lcee;Lbqz;Lfx;)Z mayPlaceOn
	a (Lcee;Lbru;Lfx;Ljava/util/Random;)V animateTick
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
cbs net/minecraft/world/level/block/WitherSkullBlock
	c witherPatternFull
	d witherPatternBase
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lbru;Lfx;Lcdd;)V checkSpawn
	b (Lbru;Lfx;Lbly;)Z canSpawnMob
	c ()Lcej; getOrCreateWitherFull
	d ()Lcej; getOrCreateWitherBase
	a (Lcei;)Z lambda$getOrCreateWitherBase$1
	b (Lcei;)Z lambda$getOrCreateWitherFull$0
cbt net/minecraft/world/level/block/WitherWallSkullBlock
	<init> (Lced$c;)V <init>
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
cbu net/minecraft/world/level/block/WoodButtonBlock
	<init> (Lced$c;)V <init>
	a (Z)Ladn; getSound
cbv net/minecraft/world/level/block/WoolCarpetBlock
	a SHAPE
	b color
	<init> (Lbku;Lced$c;)V <init>
	c ()Lbku; getColor
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	<clinit> ()V <clinit>
cbw net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	g SLOTS_FOR_UP
	h SLOTS_FOR_DOWN
	i SLOTS_FOR_SIDES
	a items
	j litTime
	k litDuration
	l cookingProgress
	m cookingTotalTime
	b dataAccess
	n recipesUsed
	c recipeType
	<init> (Lcch;Lboq;)V <init>
	f ()Ljava/util/Map; getFuel
	b (Lblu;)Z isNeverAFurnaceFuel
	a (Ljava/util/Map;Laej;I)V add
	a (Ljava/util/Map;Lbrt;I)V add
	j ()Z isLit
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	aj_ ()V tick
	b (Lbon;)Z canBurn
	c (Lbon;)V burn
	a (Lbly;)I getBurnDuration
	h ()I getTotalCookTime
	b (Lbly;)Z isFuel
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	a (Lbft;)Z stillValid
	b (ILbly;)Z canPlaceItem
	Y_ ()V clearContent
	a (Lbon;)V setRecipeUsed
	ak_ ()Lbon; getRecipeUsed
	b (Lbft;)V awardUsedRecipes
	d (Lbft;)V awardUsedRecipesAndPopExperience
	a (Lbru;Ldck;)Ljava/util/List; getRecipesToAwardAndPopExperience
	a (Lbru;Ldck;IF)V createExperience
	a (Lbfv;)V fillStackedContents
	a (Ljava/util/List;Lbru;Ldck;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lbon;)V lambda$getRecipesToAwardAndPopExperience$1
	a (Lmd;Lvk;Ljava/lang/Integer;)V lambda$save$0
	a (Lcbw;)I access$000
	b (Lcbw;)I access$100
	c (Lcbw;)I access$200
	d (Lcbw;)I access$300
	a (Lcbw;I)I access$002
	b (Lcbw;I)I access$102
	c (Lcbw;I)I access$202
	d (Lcbw;I)I access$302
	<clinit> ()V <clinit>
cbw$1 net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	a this$0
	<init> (Lcbw;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
cbx net/minecraft/world/level/block/entity/BannerBlockEntity
	a name
	b baseColor
	c itemPatterns
	g receivedData
	h patterns
	<init> ()V <init>
	<init> (Lbku;)V <init>
	a (Lbly;)Lmj; getItemPatterns
	a (Lbly;Lbku;)V fromItem
	Q ()Lnr; getName
	S ()Lnr; getCustomName
	a (Lnr;)V setCustomName
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	b (Lbly;)I getPatternCount
	c ()Ljava/util/List; getPatterns
	a (Lbku;Lmj;)Ljava/util/List; createPatterns
	c (Lbly;)V removeLastPattern
	a (Lcee;)Lbly; getItem
	a (Ljava/util/function/Supplier;)Lbku; getBaseColor
	b (Lcee;)Lcee; lambda$getItem$0
cby net/minecraft/world/level/block/entity/BannerPattern
	a BASE
	b SQUARE_BOTTOM_LEFT
	c SQUARE_BOTTOM_RIGHT
	d SQUARE_TOP_LEFT
	e SQUARE_TOP_RIGHT
	f STRIPE_BOTTOM
	g STRIPE_TOP
	h STRIPE_LEFT
	i STRIPE_RIGHT
	j STRIPE_CENTER
	k STRIPE_MIDDLE
	l STRIPE_DOWNRIGHT
	m STRIPE_DOWNLEFT
	n STRIPE_SMALL
	o CROSS
	p STRAIGHT_CROSS
	q TRIANGLE_BOTTOM
	r TRIANGLE_TOP
	s TRIANGLES_BOTTOM
	t TRIANGLES_TOP
	u DIAGONAL_LEFT
	v DIAGONAL_RIGHT
	w DIAGONAL_LEFT_MIRROR
	x DIAGONAL_RIGHT_MIRROR
	y CIRCLE_MIDDLE
	z RHOMBUS_MIDDLE
	A HALF_VERTICAL
	B HALF_HORIZONTAL
	C HALF_VERTICAL_MIRROR
	D HALF_HORIZONTAL_MIRROR
	E BORDER
	F CURLY_BORDER
	G GRADIENT
	H GRADIENT_UP
	I BRICKS
	J GLOBE
	K CREEPER
	L SKULL
	M FLOWER
	N MOJANG
	O PIGLIN
	S VALUES
	P COUNT
	Q PATTERN_ITEM_COUNT
	R AVAILABLE_PATTERNS
	T hasPatternItem
	U filename
	V hashname
	W $VALUES
	values ()[Lcby; values
	valueOf (Ljava/lang/String;)Lcby; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Z)V <init>
	a (Z)Lvk; location
	a ()Ljava/lang/String; getFilename
	b ()Ljava/lang/String; getHashname
	a (Ljava/lang/String;)Lcby; byHash
	b (Lcby;)Z lambda$static$0
	a (Lcby;)Ljava/lang/String; access$000
	<clinit> ()V <clinit>
cby$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	<init> ()V <init>
	a (Lcby;Lbku;)Lcby$a; addPattern
	a ()Lmj; toListTag
cbz net/minecraft/world/level/block/entity/BarrelBlockEntity
	a items
	b openCount
	<init> (Lcch;)V <init>
	<init> ()V <init>
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	Z_ ()I getContainerSize
	f ()Lgj; getItems
	a (Lgj;)V setItems
	g ()Lnr; getDefaultName
	a (ILbfs;)Lbhz; createMenu
	c_ (Lbft;)V startOpen
	j ()V scheduleRecheck
	h ()V recheckOpen
	b_ (Lbft;)V stopOpen
	a (Lcee;Z)V updateBlockState
	a (Lcee;Ladn;)V playSound
cca net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	a lockKey
	b name
	<init> (Lcch;)V <init>
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	a (Lnr;)V setCustomName
	Q ()Lnr; getName
	d ()Lnr; getDisplayName
	S ()Lnr; getCustomName
	g ()Lnr; getDefaultName
	e (Lbft;)Z canOpen
	a (Lbft;Laot;Lnr;)Z canUnlock
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
	a (ILbfs;)Lbhz; createMenu
ccb net/minecraft/world/level/block/entity/BeaconBlockEntity
	a BEACON_EFFECTS
	b VALID_EFFECTS
	c beamSections
	g checkingBeamSections
	h levels
	i lastCheckY
	j primaryPower
	k secondaryPower
	l name
	m lockKey
	n dataAccess
	<init> ()V <init>
	aj_ ()V tick
	a (III)V updateBase
	al_ ()V setRemoved
	j ()V applyEffects
	a (Ladn;)V playSound
	f ()Ljava/util/List; getBeamSections
	h ()I getLevels
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	i ()D getViewDistance
	b (I)Lapp; getValidEffectById
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	a (Lnr;)V setCustomName
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
	d ()Lnr; getDisplayName
	a (Lccb;)I access$000
	b (Lccb;)Lapp; access$100
	c (Lccb;)Lapp; access$200
	a (Lccb;I)I access$002
	d (Lccb;)Ljava/util/List; access$300
	a (Lccb;Lapp;)Lapp; access$102
	a (I)Lapp; access$400
	b (Lccb;Lapp;)Lapp; access$202
	<clinit> ()V <clinit>
ccb$1 net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	a this$0
	<init> (Lccb;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
ccb$a net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	<init> ([F)V <init>
	a ()V increaseHeight
	b ()[F getColor
	c ()I getHeight
	a (Lccb$a;)[F access$500
ccc net/minecraft/world/level/block/entity/BedBlockEntity
	a color
	<init> ()V <init>
	<init> (Lbku;)V <init>
	a ()Low; getUpdatePacket
	d ()Lbku; getColor
	a (Lbku;)V setColor
ccd net/minecraft/world/level/block/entity/BeehiveBlockEntity
	a stored
	b savedFlowerPos
	<init> ()V <init>
	X_ ()V setChanged
	d ()Z isFireNearby
	f ()Z isEmpty
	h ()Z isFull
	a (Lbft;Lcee;Lccd$b;)V emptyAllLivingFromHive
	a (Lcee;Lccd$b;)Ljava/util/List; releaseAllOccupants
	a (Lapx;Z)V addOccupant
	j ()I getOccupantCount
	a (Lcee;)I getHoneyLevel
	k ()Z isSedated
	l ()V sendDebugPackets
	a (Lapx;ZI)V addOccupantWithPresetTicks
	a (Lcee;Lccd$a;Ljava/util/List;Lccd$b;)Z releaseOccupant
	a (ILazx;)V setBeeReleaseData
	x ()Z hasSavedFlowerPos
	y ()V tickOccupants
	aj_ ()V tick
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	m ()Lmj; writeBees
	a (Lapx;)Lapx; lambda$releaseOccupant$1
	a (Lcee;Ljava/util/List;Lccd$b;Lccd$a;)Z lambda$releaseAllOccupants$0
ccd$1 net/minecraft/world/level/block/entity/BeehiveBlockEntity$1
ccd$a net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	a entityData
	b ticksInHive
	c minOccupationTicks
	<init> (Lmd;II)V <init>
	<init> (Lmd;IILccd$1;)V <init>
	a (Lccd$a;)Lmd; access$100
	b (Lccd$a;)I access$200
	c (Lccd$a;)I access$300
	d (Lccd$a;)I access$208
ccd$b net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	a HONEY_DELIVERED
	b BEE_RELEASED
	c EMERGENCY
	d $VALUES
	values ()[Lccd$b; values
	valueOf (Ljava/lang/String;)Lccd$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cce net/minecraft/world/level/block/entity/BellBlockEntity
	g lastRingTimestamp
	a ticks
	b shaking
	c clickDirection
	h nearbyEntities
	i resonating
	j resonationTicks
	<init> ()V <init>
	a_ (II)Z triggerEvent
	aj_ ()V tick
	d ()V playResonateSound
	a (Lgc;)V onHit
	f ()V updateEntities
	h ()Z areRaidersNearby
	a (Lbru;)V makeRaidersGlow
	b (Lbru;)V showBellParticles
	a (Laqj;)Z isRaiderWithinRange
	b (Laqj;)V glow
	a (Lfx;ILorg/apache/commons/lang3/mutable/MutableInt;Lbru;Laqj;)V lambda$showBellParticles$1
	a (Lfx;Laqj;)Z lambda$showBellParticles$0
ccf net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	<init> ()V <init>
	g ()Lnr; getDefaultName
	a (Lbly;)I getBurnDuration
	a (ILbfs;)Lbhz; createMenu
ccg net/minecraft/world/level/block/entity/BlockEntity
	a LOGGER
	b type
	d level
	e worldPosition
	f remove
	c blockState
	g hasLoggedInvalidStateBefore
	<init> (Lcch;)V <init>
	v ()Lbru; getLevel
	a (Lbru;Lfx;)V setLevelAndPosition
	n ()Z hasLevel
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	b (Lmd;)Lmd; saveMetadata
	b (Lcee;Lmd;)Lccg; loadStatic
	X_ ()V setChanged
	i ()D getViewDistance
	o ()Lfx; getBlockPos
	p ()Lcee; getBlockState
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	q ()Z isRemoved
	al_ ()V setRemoved
	r ()V clearRemoved
	a_ (II)Z triggerEvent
	s ()V clearCache
	a (Lm;)V fillCrashReportCategory
	a (Lfx;)V setPosition
	t ()Z onlyOpCanSetNbt
	a (Lbzj;)V rotate
	a (Lbyd;)V mirror
	u ()Lcch; getType
	w ()V logInvalidState
	f ()Ljava/lang/Object; lambda$logInvalidState$4
	j ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	a (Ljava/lang/String;)Lccg; lambda$loadStatic$2
	a (Lcee;Lmd;Ljava/lang/String;Lccg;)Lccg; lambda$loadStatic$1
	a (Ljava/lang/String;Lcch;)Lccg; lambda$loadStatic$0
	<clinit> ()V <clinit>
cch net/minecraft/world/level/block/entity/BlockEntityType
	H LOGGER
	a FURNACE
	b CHEST
	c TRAPPED_CHEST
	d ENDER_CHEST
	e JUKEBOX
	f DISPENSER
	g DROPPER
	h SIGN
	i MOB_SPAWNER
	j PISTON
	k BREWING_STAND
	l ENCHANTING_TABLE
	m END_PORTAL
	n BEACON
	o SKULL
	p DAYLIGHT_DETECTOR
	q HOPPER
	r COMPARATOR
	s BANNER
	t STRUCTURE_BLOCK
	u END_GATEWAY
	v COMMAND_BLOCK
	w SHULKER_BOX
	x BED
	y CONDUIT
	z BARREL
	A SMOKER
	B BLAST_FURNACE
	C LECTERN
	D BELL
	E JIGSAW
	F CAMPFIRE
	G BEEHIVE
	I factory
	J validBlocks
	K dataType
	a (Lcch;)Lvk; getKey
	a (Ljava/lang/String;Lcch$a;)Lcch; register
	<init> (Ljava/util/function/Supplier;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V <init>
	a ()Lccg; create
	a (Lbul;)Z isValid
	a (Lbqz;Lfx;)Lccg; getBlockEntity
	<clinit> ()V <clinit>
cch$a net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	<init> (Ljava/util/function/Supplier;Ljava/util/Set;)V <init>
	a (Ljava/util/function/Supplier;[Lbul;)Lcch$a; of
	a (Lcom/mojang/datafixers/types/Type;)Lcch; build
	a (Lcch$a;)Ljava/util/Set; access$000
cci net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	b SLOTS_FOR_UP
	c SLOTS_FOR_DOWN
	g SLOTS_FOR_SIDES
	h items
	i brewTime
	j lastPotionCount
	k ingredient
	l fuel
	a dataAccess
	<init> ()V <init>
	g ()Lnr; getDefaultName
	Z_ ()I getContainerSize
	c ()Z isEmpty
	aj_ ()V tick
	f ()[Z getPotionBits
	h ()Z isBrewable
	j ()V doBrew
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	a (Lbft;)Z stillValid
	b (ILbly;)Z canPlaceItem
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
	Y_ ()V clearContent
	a (ILbfs;)Lbhz; createMenu
	a (Lcci;)I access$000
	b (Lcci;)I access$100
	a (Lcci;I)I access$002
	b (Lcci;I)I access$102
	<clinit> ()V <clinit>
cci$1 net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	a this$0
	<init> (Lcci;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
ccj net/minecraft/world/level/block/entity/CampfireBlockEntity
	a items
	b cookingProgress
	c cookingTime
	<init> ()V <init>
	aj_ ()V tick
	h ()V cook
	j ()V makeParticles
	d ()Lgj; getItems
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	b (Lmd;)Lmd; saveMetadataAndItems
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	a (Lbly;)Ljava/util/Optional; getCookableRecipe
	a (Lbly;I)Z placeFood
	k ()V markUpdated
	Y_ ()V clearContent
	f ()V dowse
	a (Laok;Lboe;)Lbly; lambda$cook$0
cck net/minecraft/world/level/block/entity/ChestBlockEntity
	i items
	a openness
	b oOpenness
	c openCount
	j tickInterval
	<init> (Lcch;)V <init>
	<init> ()V <init>
	Z_ ()I getContainerSize
	g ()Lnr; getDefaultName
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	aj_ ()V tick
	a (Lbru;Lcca;IIIII)I getOpenCount
	a (Lbru;Lcca;III)I getOpenCount
	a (Ladn;)V playSound
	a_ (II)Z triggerEvent
	c_ (Lbft;)V startOpen
	b_ (Lbft;)V stopOpen
	h ()V signalOpenCount
	f ()Lgj; getItems
	a (Lgj;)V setItems
	a (F)F getOpenNess
	a (Lbqz;Lfx;)I getOpenCount
	a (Lcck;Lcck;)V swapContents
	a (ILbfs;)Lbhz; createMenu
ccl net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	g sendToClient
	h commandBlock
	<init> ()V <init>
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	a ()Low; getUpdatePacket
	t ()Z onlyOpCanSetNbt
	d ()Lbqv; getCommandBlock
	a (Z)V setPowered
	f ()Z isPowered
	g ()Z isAutomatic
	b (Z)V setAutomatic
	h ()V onModeSwitch
	y ()V scheduleTick
	j ()Z wasConditionMet
	k ()Z markConditionMet
	l ()Z isSendToClient
	c (Z)V setSendToClient
	m ()Lccl$a; getMode
	x ()Z isConditional
	r ()V clearRemoved
ccl$1 net/minecraft/world/level/block/entity/CommandBlockEntity$1
	b this$0
	<init> (Lccl;)V <init>
	a (Ljava/lang/String;)V setCommand
	d ()Laag; getLevel
	e ()V onUpdated
	f ()Ldck; getPosition
	h ()Ldb; createCommandSourceStack
ccl$a net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	a SEQUENCE
	b AUTO
	c REDSTONE
	d $VALUES
	values ()[Lccl$a; values
	valueOf (Ljava/lang/String;)Lccl$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ccm net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	<init> ()V <init>
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	d ()I getOutputSignal
	a (I)V setOutputSignal
ccn net/minecraft/world/level/block/entity/ConduitBlockEntity
	b VALID_BLOCKS
	a tickCount
	c activeRotation
	g isActive
	h isHunting
	i effectBlocks
	j destroyTarget
	k destroyTargetUUID
	l nextAmbientSoundActivation
	<init> ()V <init>
	<init> (Lcch;)V <init>
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	aj_ ()V tick
	h ()Z updateShape
	j ()V applyEffects
	k ()V updateDestroyTarget
	l ()V updateClientTarget
	m ()Ldcf; getDestroyRangeAABB
	x ()Laqj; findDestroyTarget
	y ()V animationTick
	d ()Z isActive
	f ()Z isHunting
	a (Z)V setActive
	b (Z)V setHunting
	a (F)F getActiveRotation
	a (Ladn;)V playSound
	a (Laqj;)Z lambda$findDestroyTarget$1
	b (Laqj;)Z lambda$updateDestroyTarget$0
	<clinit> ()V <clinit>
cco net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	<init> ()V <init>
	aj_ ()V tick
ccp net/minecraft/world/level/block/entity/DispenserBlockEntity
	a RANDOM
	b items
	<init> (Lcch;)V <init>
	<init> ()V <init>
	Z_ ()I getContainerSize
	h ()I getRandomSlot
	a (Lbly;)I addItem
	g ()Lnr; getDefaultName
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	f ()Lgj; getItems
	a (Lgj;)V setItems
	a (ILbfs;)Lbhz; createMenu
	<clinit> ()V <clinit>
ccq net/minecraft/world/level/block/entity/DropperBlockEntity
	<init> ()V <init>
	g ()Lnr; getDefaultName
ccr net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	g flipT
	h flipA
	i open
	j oOpen
	k rot
	l oRot
	m tRot
	n RANDOM
	o name
	<init> ()V <init>
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	aj_ ()V tick
	Q ()Lnr; getName
	a (Lnr;)V setCustomName
	S ()Lnr; getCustomName
	<clinit> ()V <clinit>
ccs net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a openness
	b oOpenness
	c openCount
	g tickInterval
	<init> ()V <init>
	aj_ ()V tick
	a_ (II)Z triggerEvent
	al_ ()V setRemoved
	d ()V startOpen
	f ()V stopOpen
	a (Lbft;)Z stillValid
	a (F)F getOpenNess
cct net/minecraft/world/level/block/entity/FurnaceBlockEntity
	<init> ()V <init>
	g ()Lnr; getDefaultName
	a (ILbfs;)Lbhz; createMenu
ccu net/minecraft/world/level/block/entity/Hopper
	a INSIDE
	b ABOVE
	c SUCK
	aa_ ()Ldde; getSuckShape
	v ()Lbru; getLevel
	x ()D getLevelX
	z ()D getLevelY
	A ()D getLevelZ
	<clinit> ()V <clinit>
ccv net/minecraft/world/level/block/entity/HopperBlockEntity
	i items
	j cooldownTime
	k tickedGameTime
	<init> ()V <init>
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	Z_ ()I getContainerSize
	a (II)Lbly; removeItem
	a (ILbly;)V setItem
	g ()Lnr; getDefaultName
	aj_ ()V tick
	a (Ljava/util/function/Supplier;)Z tryMoveItems
	j ()Z inventoryFull
	k ()Z ejectItems
	a (Laok;Lgc;)Ljava/util/stream/IntStream; getSlots
	b (Laok;Lgc;)Z isFullContainer
	c (Laok;Lgc;)Z isEmptyContainer
	a (Lccu;)Z suckInItems
	a (Lccu;Laok;ILgc;)Z tryTakeInItemFromSlot
	a (Laok;Lbcs;)Z addItem
	a (Laok;Laok;Lbly;Lgc;)Lbly; addItem
	a (Laok;Lbly;ILgc;)Z canPlaceItemInContainer
	b (Laok;Lbly;ILgc;)Z canTakeItemFromContainer
	a (Laok;Laok;Lbly;ILgc;)Lbly; tryMoveInItem
	l ()Laok; getAttachedContainer
	b (Lccu;)Laok; getSourceContainer
	c (Lccu;)Ljava/util/List; getItemsAtAndAbove
	b (Lbru;Lfx;)Laok; getContainerAt
	a (Lbru;DDD)Laok; getContainerAt
	a (Lbly;Lbly;)Z canMergeItems
	x ()D getLevelX
	z ()D getLevelY
	A ()D getLevelZ
	c (I)V setCooldown
	m ()Z isOnCooldown
	y ()Z isOnCustomCooldown
	f ()Lgj; getItems
	a (Lgj;)V setItems
	a (Lapx;)V entityInside
	a (ILbfs;)Lbhz; createMenu
	b (Lapx;)Ljava/lang/Boolean; lambda$entityInside$5
	a (Lccu;Ldcf;)Ljava/util/stream/Stream; lambda$getItemsAtAndAbove$4
	a (Lccu;Laok;Lgc;I)Z lambda$suckInItems$3
	a (Laok;I)Z lambda$isEmptyContainer$2
	b (Laok;I)Z lambda$isFullContainer$1
	B ()Ljava/lang/Boolean; lambda$tick$0
ccw net/minecraft/world/level/block/entity/JigsawBlockEntity
	a name
	b target
	c pool
	g joint
	h finalState
	<init> (Lcch;)V <init>
	<init> ()V <init>
	d ()Lvk; getName
	f ()Lvk; getTarget
	g ()Lvk; getPool
	h ()Ljava/lang/String; getFinalState
	j ()Lccw$a; getJoint
	a (Lvk;)V setName
	b (Lvk;)V setTarget
	c (Lvk;)V setPool
	a (Ljava/lang/String;)V setFinalState
	a (Lccw$a;)V setJoint
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	a (Laag;IZ)V generate
	a (Lcee;)Lccw$a; lambda$load$0
ccw$a net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	a ROLLABLE
	b ALIGNED
	c name
	d $VALUES
	values ()[Lccw$a; values
	valueOf (Ljava/lang/String;)Lccw$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ljava/lang/String;Lccw$a;)Z lambda$byName$0
	<clinit> ()V <clinit>
ccx net/minecraft/world/level/block/entity/JukeboxBlockEntity
	a record
	<init> ()V <init>
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	d ()Lbly; getRecord
	a (Lbly;)V setRecord
	Y_ ()V clearContent
ccy net/minecraft/world/level/block/entity/LecternBlockEntity
	a bookAccess
	b dataAccess
	c book
	g page
	h pageCount
	<init> ()V <init>
	f ()Lbly; getBook
	g ()Z hasBook
	a (Lbly;)V setBook
	k ()V onBookItemRemove
	a (Lbly;Lbft;)V setBook
	a (I)V setPage
	h ()I getPage
	j ()I getRedstoneSignal
	b (Lbly;Lbft;)Lbly; resolveBook
	a (Lbft;)Ldb; createCommandSourceStack
	t ()Z onlyOpCanSetNbt
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	Y_ ()V clearContent
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
	d ()Lnr; getDisplayName
	a (Lccy;)Lbly; access$000
	b (Lccy;)V access$100
	a (Lccy;Lbly;)Lbly; access$002
	c (Lccy;)I access$200
	a (Lccy;I)V access$300
ccy$1 net/minecraft/world/level/block/entity/LecternBlockEntity$1
	a this$0
	<init> (Lccy;)V <init>
	Z_ ()I getContainerSize
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	a (Lbft;)Z stillValid
	b (ILbly;)Z canPlaceItem
	Y_ ()V clearContent
ccy$2 net/minecraft/world/level/block/entity/LecternBlockEntity$2
	a this$0
	<init> (Lccy;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
ccz net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
cda net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	g lootTable
	h lootTableSeed
	<init> (Lcch;)V <init>
	a (Lbqz;Ljava/util/Random;Lfx;Lvk;)V setLootTable
	b (Lmd;)Z tryLoadLootTable
	c (Lmd;)Z trySaveLootTable
	d (Lbft;)V unpackLootTable
	a (Lvk;J)V setLootTable
	c ()Z isEmpty
	a (I)Lbly; getItem
	a (II)Lbly; removeItem
	b (I)Lbly; removeItemNoUpdate
	a (ILbly;)V setItem
	a (Lbft;)Z stillValid
	Y_ ()V clearContent
	f ()Lgj; getItems
	a (Lgj;)V setItems
	e (Lbft;)Z canOpen
	createMenu (ILbfs;Lbft;)Lbhz; createMenu
cdb net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	a SLOTS
	b itemStacks
	c openCount
	i animationStatus
	j progress
	k progressOld
	l color
	m loadColorFromBlock
	<init> (Lbku;)V <init>
	<init> ()V <init>
	aj_ ()V tick
	h ()V updateAnimation
	j ()Lcdb$a; getAnimationStatus
	a (Lcee;)Ldcf; getBoundingBox
	b (Lgc;)Ldcf; getBoundingBox
	c (Lgc;)Ldcf; getTopBoundingBox
	m ()V moveCollidedEntities
	Z_ ()I getContainerSize
	a_ (II)Z triggerEvent
	x ()V doNeighborUpdates
	c_ (Lbft;)V startOpen
	b_ (Lbft;)V stopOpen
	g ()Lnr; getDefaultName
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	d (Lmd;)V loadFromTag
	e (Lmd;)Lmd; saveToTag
	f ()Lgj; getItems
	a (Lgj;)V setItems
	a (Lgc;)[I getSlotsForFace
	a (ILbly;Lgc;)Z canPlaceItemThroughFace
	b (ILbly;Lgc;)Z canTakeItemThroughFace
	a (F)F getProgress
	k ()Lbku; getColor
	a (ILbfs;)Lbhz; createMenu
	l ()Z isClosed
	<clinit> ()V <clinit>
cdb$1 net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
	b $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
cdb$a net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	a CLOSED
	b OPENING
	c OPENED
	d CLOSING
	e $VALUES
	values ()[Lcdb$a; values
	valueOf (Ljava/lang/String;)Lcdb$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cdc net/minecraft/world/level/block/entity/SignBlockEntity
	a messages
	b isEditable
	c playerWhoMayEdit
	g renderMessages
	h color
	<init> ()V <init>
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	a (I)Lnr; getMessage
	a (ILnr;)V setMessage
	a (ILjava/util/function/Function;)Laex; getRenderMessage
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	t ()Z onlyOpCanSetNbt
	d ()Z isEditable
	a (Z)V setEditable
	a (Lbft;)V setAllowedPlayerEditor
	f ()Lbft; getPlayerWhoMayEdit
	b (Lbft;)Z executeClickCommands
	a (Laah;)Ldb; createCommandSourceStack
	g ()Lbku; getColor
	a (Lbku;)Z setColor
cdd net/minecraft/world/level/block/entity/SkullBlockEntity
	a profileCache
	b sessionService
	c owner
	g mouthTickCount
	h isMovingMouth
	<init> ()V <init>
	a (Laco;)V setProfileCache
	a (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V setSessionService
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	aj_ ()V tick
	a (F)F getMouthAnimation
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	a (Lcom/mojang/authlib/GameProfile;)V setOwner
	f ()V updateOwnerProfile
	b (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; updateGameprofile
cde net/minecraft/world/level/block/entity/SmokerBlockEntity
	<init> ()V <init>
	g ()Lnr; getDefaultName
	a (Lbly;)I getBurnDuration
	a (ILbfs;)Lbhz; createMenu
cdf net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	<init> ()V <init>
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	aj_ ()V tick
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	a_ (II)Z triggerEvent
	t ()Z onlyOpCanSetNbt
	d ()Lbqw; getSpawner
cdf$1 net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	a this$0
	<init> (Lcdf;)V <init>
	a (I)V broadcastEvent
	a ()Lbru; getLevel
	b ()Lfx; getPos
	a (Lbsj;)V setNextSpawnData
cdg net/minecraft/world/level/block/entity/StructureBlockEntity
	a structureName
	b author
	c metaData
	g structurePos
	h structureSize
	i mirror
	j rotation
	k mode
	l ignoreEntities
	m powered
	n showAir
	o showBoundingBox
	p integrity
	q seed
	<init> ()V <init>
	i ()D getViewDistance
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	K ()V updateBlockState
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	a (Lbft;)Z usedBy
	d ()Ljava/lang/String; getStructureName
	f ()Ljava/lang/String; getStructurePath
	g ()Z hasStructureName
	a (Ljava/lang/String;)V setStructureName
	a (Lvk;)V setStructureName
	a (Laqj;)V createdBy
	h ()Lfx; getStructurePos
	b (Lfx;)V setStructurePos
	j ()Lfx; getStructureSize
	c (Lfx;)V setStructureSize
	k ()Lbyd; getMirror
	b (Lbyd;)V setMirror
	l ()Lbzj; getRotation
	b (Lbzj;)V setRotation
	m ()Ljava/lang/String; getMetaData
	b (Ljava/lang/String;)V setMetaData
	x ()Lcfl; getMode
	a (Lcfl;)V setMode
	y ()V nextMode
	z ()Z isIgnoreEntities
	a (Z)V setIgnoreEntities
	A ()F getIntegrity
	a (F)V setIntegrity
	B ()J getSeed
	a (J)V setSeed
	C ()Z detectSize
	a (Ljava/util/List;)Ljava/util/List; filterRelatedCornerBlocks
	a (Lfx;Lfx;)Ljava/util/List; getNearbyCornerBlocks
	a (Lfx;Ljava/util/List;)Lcqx; calculateEnclosingBoundingBox
	D ()Z saveStructure
	b (Z)Z saveStructure
	a (Laag;)Z loadStructure
	b (J)Ljava/util/Random; createRandom
	a (Laag;Z)Z loadStructure
	a (Laag;ZLcsy;)Z loadStructure
	E ()V unloadStructure
	F ()Z isStructureLoadable
	G ()Z isPowered
	c (Z)V setPowered
	H ()Z getShowAir
	d (Z)V setShowAir
	I ()Z getShowBoundingBox
	e (Z)V setShowBoundingBox
	J ()Lnr; getDisplayName
	d (Lfx;)Lcqx; getStructureBoundingBox
	a (Lcdg;)Z lambda$filterRelatedCornerBlocks$0
cdg$1 net/minecraft/world/level/block/entity/StructureBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
	<clinit> ()V <clinit>
cdg$a net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	a UPDATE_DATA
	b SAVE_AREA
	c LOAD_AREA
	d SCAN_AREA
	e $VALUES
	values ()[Lcdg$a; values
	valueOf (Ljava/lang/String;)Lcdg$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cdh net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	b age
	c teleportCooldown
	g exitPortal
	h exactTeleport
	<init> ()V <init>
	a (Lmd;)Lmd; save
	a (Lcee;Lmd;)V load
	i ()D getViewDistance
	aj_ ()V tick
	a (Lapx;)Z canEntityTeleport
	d ()Z isSpawning
	f ()Z isCoolingDown
	a (F)F getSpawnPercent
	b (F)F getCooldownPercent
	a ()Low; getUpdatePacket
	b ()Lmd; getUpdateTag
	h ()V triggerCooldown
	a_ (II)Z triggerEvent
	b (Lapx;)V teleportEntity
	k ()Lfx; findExitPosition
	a (Laag;)V findExitPortal
	a (Lbqz;Lfx;IZ)Lfx; findTallestBlock
	a (Lbru;Ldck;)Lcge; getChunk
	a (Lcge;)Lfx; findValidSpawnInChunk
	a (Laag;Lfx;)V createExitPortal
	a (Lgc;)Z shouldRenderFace
	j ()I getParticleAmount
	a (Lfx;Z)V setExitPosition
	<clinit> ()V <clinit>
cdi net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	<init> (Lcch;)V <init>
	<init> ()V <init>
	a (Lgc;)Z shouldRenderFace
cdj net/minecraft/world/level/block/entity/TickableBlockEntity
	aj_ ()V tick
cdk net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	<init> ()V <init>
	h ()V signalOpenCount
cdl net/minecraft/world/level/block/entity/package-info
cdm net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	<init> ()V <init>
	a (Laag;Lcfv;Lfx;Lcee;Ljava/util/Random;)Z growTree
	a (Ljava/util/Random;)Lcis; getConfiguredMegaFeature
	a (Laag;Lcfv;Lfx;Lcee;Ljava/util/Random;II)Z placeMega
	a (Lcee;Lbqz;Lfx;II)Z isTwoByTwoSapling
cdn net/minecraft/world/level/block/grower/AbstractTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
	a (Laag;Lcfv;Lfx;Lcee;Ljava/util/Random;)Z growTree
	a (Lbrv;Lfx;)Z hasFlowers
cdo net/minecraft/world/level/block/grower/AcaciaTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
cdp net/minecraft/world/level/block/grower/BirchTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
cdq net/minecraft/world/level/block/grower/DarkOakTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
	a (Ljava/util/Random;)Lcis; getConfiguredMegaFeature
cdr net/minecraft/world/level/block/grower/JungleTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
	a (Ljava/util/Random;)Lcis; getConfiguredMegaFeature
cds net/minecraft/world/level/block/grower/OakTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
cdt net/minecraft/world/level/block/grower/SpruceTreeGrower
	<init> ()V <init>
	a (Ljava/util/Random;Z)Lcis; getConfiguredFeature
	a (Ljava/util/Random;)Lcis; getConfiguredMegaFeature
cdu net/minecraft/world/level/block/grower/package-info
cdv net/minecraft/world/level/block/package-info
cdw net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	<init> (Lced$c;)V <init>
	a (Lbqz;)Lccg; newBlockEntity
	a (Lcee;Lgc;ZZ)Lccg; newMovingBlockEntity
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lbrv;Lfx;Lcee;)V destroy
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lcys$a;)Ljava/util/List; getDrops
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a (Lbqz;Lfx;)Lcea; getBlockEntity
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
cdx net/minecraft/world/level/block/piston/PistonBaseBlock
	b EXTENDED
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	g UP_AABB
	h DOWN_AABB
	i isSticky
	<init> (ZLced$c;)V <init>
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lbru;Lfx;Lcee;Laqj;Lbly;)V setPlacedBy
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lbnv;)Lcee; getStateForPlacement
	a (Lbru;Lfx;Lcee;)V checkIfExtend
	a (Lbru;Lfx;Lgc;)Z getNeighborSignal
	a (Lcee;Lbru;Lfx;II)Z triggerEvent
	a (Lcee;Lbru;Lfx;Lgc;ZLgc;)Z isPushable
	a (Lbru;Lfx;Lgc;Z)Z moveBlocks
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	c_ (Lcee;)Z useShapeForLightOcclusion
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	<clinit> ()V <clinit>
cdx$1 net/minecraft/world/level/block/piston/PistonBaseBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$material$PushReaction
	<clinit> ()V <clinit>
cdy net/minecraft/world/level/block/piston/PistonHeadBlock
	b TYPE
	c SHORT
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	h UP_AABB
	i DOWN_AABB
	j UP_ARM_AABB
	k DOWN_ARM_AABB
	o SOUTH_ARM_AABB
	p NORTH_ARM_AABB
	q EAST_ARM_AABB
	r WEST_ARM_AABB
	s SHORT_UP_ARM_AABB
	t SHORT_DOWN_ARM_AABB
	u SHORT_SOUTH_ARM_AABB
	v SHORT_NORTH_ARM_AABB
	w SHORT_EAST_ARM_AABB
	x SHORT_WEST_ARM_AABB
	y SHAPES_SHORT
	z SHAPES_LONG
	a (Z)[Ldde; makeShapes
	a (Lgc;Z)Ldde; calculateShape
	<init> (Lced$c;)V <init>
	c_ (Lcee;)Z useShapeForLightOcclusion
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	a (Lcee;Lcee;)Z isFittingBase
	a (Lbru;Lfx;Lcee;Lbft;)V playerWillDestroy
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbqz;Lfx;Lcee;)Lbly; getCloneItemStack
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcef$a;)V createBlockStateDefinition
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	b (I)[Ldde; lambda$makeShapes$1
	a (ZLgc;)Ldde; lambda$makeShapes$0
	<clinit> ()V <clinit>
cdy$1 net/minecraft/world/level/block/piston/PistonHeadBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cdz net/minecraft/world/level/block/piston/PistonMath
	<init> ()V <init>
	a (Ldcf;Lgc;D)Ldcf; getMovementArea
cdz$1 net/minecraft/world/level/block/piston/PistonMath$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cea net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	a movedState
	b direction
	c extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	l deathTicks
	<init> ()V <init>
	<init> (Lcee;Lgc;ZZ)V <init>
	b ()Lmd; getUpdateTag
	d ()Z isExtending
	f ()Lgc; getDirection
	h ()Z isSourcePiston
	a (F)F getProgress
	b (F)F getXOff
	c (F)F getYOff
	d (F)F getZOff
	e (F)F getExtendedProgress
	x ()Lcee; getCollisionRelatedBlockState
	f (F)V moveCollidedEntities
	a (Lgc;Lapx;DLgc;)V moveEntityByPiston
	g (F)V moveStuckEntities
	a (Ldcf;Lapx;)Z matchesStickyCritera
	y ()Z isStickyForEntities
	j ()Lgc; getMovementDirection
	a (Ldcf;Lgc;Ldcf;)D getMovement
	a (Ldcf;)Ldcf; moveByPositionAndProgress
	a (Lapx;Lgc;D)V fixEntityWithinPistonBase
	k ()Lcee; getMovedState
	l ()V finalTick
	aj_ ()V tick
	a (Lcee;Lmd;)V load
	a (Lmd;)Lmd; save
	a (Lbqz;Lfx;)Ldde; getCollisionShape
	m ()J getLastTicked
	i ()D getViewDistance
	b (Ldcf;Lapx;)Z lambda$moveStuckEntities$1
	z ()Lgc; lambda$static$0
	<clinit> ()V <clinit>
cea$1 net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
ceb net/minecraft/world/level/block/piston/PistonStructureResolver
	a level
	b pistonPos
	c extending
	d startPos
	e pushDirection
	f toPush
	g toDestroy
	h pistonDirection
	<init> (Lbru;Lfx;Lgc;Z)V <init>
	a ()Z resolve
	a (Lbul;)Z isSticky
	a (Lbul;Lbul;)Z canStickToEachOther
	a (Lfx;Lgc;)Z addBlockLine
	a (II)V reorderListAtCollision
	a (Lfx;)Z addBranchingBlocks
	b ()Lgc; getPushDirection
	c ()Ljava/util/List; getToPush
	d ()Ljava/util/List; getToDestroy
cec net/minecraft/world/level/block/piston/package-info
ced net/minecraft/world/level/block/state/BlockBehaviour
	ar UPDATE_SHAPE_ORDER
	as material
	at hasCollision
	au explosionResistance
	av isRandomlyTicking
	aw soundType
	ax friction
	ay speedFactor
	az jumpFactor
	aA dynamicShape
	aB properties
	aC drops
	<init> (Lced$c;)V <init>
	a (Lcee;Lbrv;Lfx;II)V updateIndirectNeighbourShapes
	a (Lcee;Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lcee;Lcee;Lgc;)Z skipRendering
	a (Lcee;Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	b (Lcee;Lbru;Lfx;Lcee;Z)V onPlace
	a (Lcee;Lbru;Lfx;Lcee;Z)V onRemove
	a (Lcee;Lbru;Lfx;Lbft;Laoq;Ldcg;)Laor; use
	a (Lcee;Lbru;Lfx;II)Z triggerEvent
	b (Lcee;)Lbze; getRenderShape
	c_ (Lcee;)Z useShapeForLightOcclusion
	b_ (Lcee;)Z isSignalSource
	f (Lcee;)Lcuz; getPistonPushReaction
	d (Lcee;)Lcuu; getFluidState
	a (Lcee;)Z hasAnalogOutputSignal
	ah_ ()Lced$b; getOffsetType
	a (Lcee;Lbzj;)Lcee; rotate
	a (Lcee;Lbyd;)Lcee; mirror
	a (Lcee;Lbnv;)Z canBeReplaced
	a (Lcee;Lcut;)Z canBeReplaced
	a (Lcee;Lcys$a;)Ljava/util/List; getDrops
	a (Lcee;Lfx;)J getSeed
	d (Lcee;Lbqz;Lfx;)Ldde; getOcclusionShape
	e (Lcee;Lbqz;Lfx;)Ldde; getBlockSupportShape
	a_ (Lcee;Lbqz;Lfx;)Ldde; getInteractionShape
	f (Lcee;Lbqz;Lfx;)I getLightBlock
	b (Lcee;Lbru;Lfx;)Laou; getMenuProvider
	a (Lcee;Lbrw;Lfx;)Z canSurvive
	a (Lcee;Lbqz;Lfx;)F getShadeBrightness
	a (Lcee;Lbru;Lfx;)I getAnalogOutputSignal
	b (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getShape
	c (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	a (Lcee;Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	b (Lcee;Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lcee;Laag;Lfx;Ljava/util/Random;)V tick
	a (Lcee;Lbft;Lbqz;Lfx;)F getDestroyProgress
	a (Lcee;Laag;Lfx;Lbly;)V spawnAfterBreak
	a (Lcee;Lbru;Lfx;Lbft;)V attack
	a (Lcee;Lbqz;Lfx;Lgc;)I getSignal
	a (Lcee;Lbru;Lfx;Lapx;)V entityInside
	b (Lcee;Lbqz;Lfx;Lgc;)I getDirectSignal
	q ()Z isEntityBlock
	r ()Lvk; getLootTable
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	h ()Lblu; asItem
	p ()Lbul; asBlock
	s ()Lcuy; defaultMaterialColor
	<clinit> ()V <clinit>
ced$1 net/minecraft/world/level/block/state/BlockBehaviour$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
ced$a net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	b lightEmission
	e useShapeForLightOcclusion
	f isAir
	g material
	h materialColor
	i destroySpeed
	j requiresCorrectToolForDrops
	k canOcclude
	l isRedstoneConductor
	m isSuffocating
	n isViewBlocking
	o hasPostProcess
	p emissiveRendering
	a cache
	<init> (Lbul;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	a ()V initCache
	b ()Lbul; getBlock
	c ()Lcux; getMaterial
	a (Lbqz;Lfx;Laqb;)Z isValidSpawn
	a (Lbqz;Lfx;)Z propagatesSkylightDown
	b (Lbqz;Lfx;)I getLightBlock
	a (Lbqz;Lfx;Lgc;)Ldde; getFaceOcclusionShape
	c (Lbqz;Lfx;)Ldde; getOcclusionShape
	d ()Z hasLargeCollisionShape
	e ()Z useShapeForLightOcclusion
	f ()I getLightEmission
	g ()Z isAir
	d (Lbqz;Lfx;)Lcuy; getMapColor
	a (Lbzj;)Lcee; rotate
	a (Lbyd;)Lcee; mirror
	h ()Lbze; getRenderShape
	e (Lbqz;Lfx;)Z emissiveRendering
	f (Lbqz;Lfx;)F getShadeBrightness
	g (Lbqz;Lfx;)Z isRedstoneConductor
	i ()Z isSignalSource
	b (Lbqz;Lfx;Lgc;)I getSignal
	j ()Z hasAnalogOutputSignal
	a (Lbru;Lfx;)I getAnalogOutputSignal
	h (Lbqz;Lfx;)F getDestroySpeed
	a (Lbft;Lbqz;Lfx;)F getDestroyProgress
	c (Lbqz;Lfx;Lgc;)I getDirectSignal
	k ()Lcuz; getPistonPushReaction
	i (Lbqz;Lfx;)Z isSolidRender
	l ()Z canOcclude
	a (Lcee;Lgc;)Z skipRendering
	j (Lbqz;Lfx;)Ldde; getShape
	a (Lbqz;Lfx;Ldcp;)Ldde; getShape
	k (Lbqz;Lfx;)Ldde; getCollisionShape
	b (Lbqz;Lfx;Ldcp;)Ldde; getCollisionShape
	l (Lbqz;Lfx;)Ldde; getBlockSupportShape
	c (Lbqz;Lfx;Ldcp;)Ldde; getVisualShape
	m (Lbqz;Lfx;)Ldde; getInteractionShape
	a (Lbqz;Lfx;Lapx;)Z entityCanStandOn
	a (Lbqz;Lfx;Lapx;Lgc;)Z entityCanStandOnFace
	n (Lbqz;Lfx;)Ldck; getOffset
	a (Lbru;Lfx;II)Z triggerEvent
	a (Lbru;Lfx;Lbul;Lfx;Z)V neighborChanged
	a (Lbrv;Lfx;I)V updateNeighbourShapes
	a (Lbrv;Lfx;II)V updateNeighbourShapes
	b (Lbrv;Lfx;I)V updateIndirectNeighbourShapes
	b (Lbrv;Lfx;II)V updateIndirectNeighbourShapes
	a (Lbru;Lfx;Lcee;Z)V onPlace
	b (Lbru;Lfx;Lcee;Z)V onRemove
	a (Laag;Lfx;Ljava/util/Random;)V tick
	b (Laag;Lfx;Ljava/util/Random;)V randomTick
	a (Lbru;Lfx;Lapx;)V entityInside
	a (Laag;Lfx;Lbly;)V spawnAfterBreak
	a (Lcys$a;)Ljava/util/List; getDrops
	a (Lbru;Lbft;Laoq;Ldcg;)Laor; use
	a (Lbru;Lfx;Lbft;)V attack
	o (Lbqz;Lfx;)Z isSuffocating
	p (Lbqz;Lfx;)Z isViewBlocking
	a (Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbqz;Lfx;Lcxb;)Z isPathfindable
	a (Lbnv;)Z canBeReplaced
	a (Lcut;)Z canBeReplaced
	a (Lbrw;Lfx;)Z canSurvive
	q (Lbqz;Lfx;)Z hasPostProcess
	b (Lbru;Lfx;)Laou; getMenuProvider
	a (Laej;)Z is
	a (Laej;Ljava/util/function/Predicate;)Z is
	a (Lbul;)Z is
	m ()Lcuu; getFluidState
	n ()Z isRandomlyTicking
	a (Lfx;)J getSeed
	o ()Lcab; getSoundType
	a (Lbru;Lcee;Ldcg;Lbgj;)V onProjectileHit
	d (Lbqz;Lfx;Lgc;)Z isFaceSturdy
	a (Lbqz;Lfx;Lgc;Lcaq;)Z isFaceSturdy
	r (Lbqz;Lfx;)Z isCollisionShapeFullBlock
	p ()Lcee; asState
	q ()Z requiresCorrectToolForDrops
ced$a$a net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	e DIRECTIONS
	f SUPPORT_TYPE_COUNT
	a solidRender
	g propagatesSkylightDown
	h lightBlock
	i occlusionShapes
	b collisionShape
	c largeCollisionShape
	j faceSturdy
	d isCollisionShapeFullBlock
	<init> (Lcee;)V <init>
	a (Lgc;Lcaq;)Z isFaceSturdy
	b (Lgc;Lcaq;)I getFaceSupportIndex
	a (Lgc$a;)Z lambda$new$0
	<init> (Lcee;Lced$1;)V <init>
	a (Lced$a$a;)Z access$2300
	b (Lced$a$a;)I access$2400
	c (Lced$a$a;)[Ldde; access$2500
	<clinit> ()V <clinit>
ced$b net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	a NONE
	b XZ
	c XYZ
	d $VALUES
	values ()[Lced$b; values
	valueOf (Ljava/lang/String;)Lced$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
ced$c net/minecraft/world/level/block/state/BlockBehaviour$Properties
	a material
	b materialColor
	c hasCollision
	d soundType
	e lightEmission
	f explosionResistance
	g destroyTime
	h requiresCorrectToolForDrops
	i isRandomlyTicking
	j friction
	k speedFactor
	l jumpFactor
	m drops
	n canOcclude
	o isAir
	p isValidSpawn
	q isRedstoneConductor
	r isSuffocating
	s isViewBlocking
	t hasPostProcess
	u emissiveRendering
	v dynamicShape
	<init> (Lcux;Lcuy;)V <init>
	<init> (Lcux;Ljava/util/function/Function;)V <init>
	a (Lcux;)Lced$c; of
	a (Lcux;Lbku;)Lced$c; of
	a (Lcux;Lcuy;)Lced$c; of
	a (Lcux;Ljava/util/function/Function;)Lced$c; of
	a (Lced;)Lced$c; copy
	a ()Lced$c; noCollission
	b ()Lced$c; noOcclusion
	a (F)Lced$c; friction
	b (F)Lced$c; speedFactor
	c (F)Lced$c; jumpFactor
	a (Lcab;)Lced$c; sound
	a (Ljava/util/function/ToIntFunction;)Lced$c; lightLevel
	a (FF)Lced$c; strength
	c ()Lced$c; instabreak
	d (F)Lced$c; strength
	d ()Lced$c; randomTicks
	e ()Lced$c; dynamicShape
	f ()Lced$c; noDrops
	a (Lbul;)Lced$c; dropsLike
	g ()Lced$c; air
	a (Lced$d;)Lced$c; isValidSpawn
	a (Lced$e;)Lced$c; isRedstoneConductor
	b (Lced$e;)Lced$c; isSuffocating
	c (Lced$e;)Lced$c; isViewBlocking
	d (Lced$e;)Lced$c; hasPostProcess
	e (Lced$e;)Lced$c; emissiveRendering
	h ()Lced$c; requiresCorrectToolForDrops
	a (Lcuy;Lcee;)Lcuy; lambda$new$6
	a (Lcee;Lbqz;Lfx;)Z lambda$new$5
	b (Lcee;Lbqz;Lfx;)Z lambda$new$4
	c (Lcee;Lbqz;Lfx;)Z lambda$new$3
	d (Lcee;Lbqz;Lfx;)Z lambda$new$2
	a (Lcee;Lbqz;Lfx;Laqb;)Z lambda$new$1
	a (Lcee;)I lambda$new$0
	a (Lced$c;)Lcux; access$000
	b (Lced$c;)Z access$100
	c (Lced$c;)Lvk; access$200
	d (Lced$c;)F access$300
	e (Lced$c;)Z access$400
	f (Lced$c;)Lcab; access$500
	g (Lced$c;)F access$600
	h (Lced$c;)F access$700
	i (Lced$c;)F access$800
	j (Lced$c;)Z access$900
	k (Lced$c;)Ljava/util/function/Function; access$1000
	l (Lced$c;)Ljava/util/function/ToIntFunction; access$1100
	m (Lced$c;)Z access$1200
	n (Lced$c;)F access$1300
	o (Lced$c;)Z access$1400
	p (Lced$c;)Z access$1500
	q (Lced$c;)Lced$e; access$1600
	r (Lced$c;)Lced$e; access$1700
	s (Lced$c;)Lced$e; access$1800
	t (Lced$c;)Lced$e; access$1900
	u (Lced$c;)Lced$e; access$2000
	v (Lced$c;)Lced$d; access$2200
ced$d net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
	test (Lcee;Lbqz;Lfx;Ljava/lang/Object;)Z test
ced$e net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
	test (Lcee;Lbqz;Lfx;)Z test
cee net/minecraft/world/level/block/state/BlockState
	b CODEC
	<init> (Lbul;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	p ()Lcee; asState
	<clinit> ()V <clinit>
cef net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	<init> (Ljava/util/function/Function;Ljava/lang/Object;Lcef$b;Ljava/util/Map;)V <init>
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lcfg;)Lcom/mojang/serialization/MapCodec; appendPropertyCodec
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	b ()Lceg; any
	c ()Ljava/lang/Object; getOwner
	d ()Ljava/util/Collection; getProperties
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Lcfg; getProperty
	a (Lcfg;Lceg;)Lcom/mojang/datafixers/util/Pair; lambda$appendPropertyCodec$6
	a (Lcfg;Lcom/mojang/datafixers/util/Pair;)Lceg; lambda$appendPropertyCodec$5
	a (Lcfg;Ljava/util/function/Supplier;)Lcfg$a; lambda$appendPropertyCodec$4
	a (Lcef$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V lambda$new$3
	a (Lcfg;Ljava/util/List;)Ljava/util/stream/Stream; lambda$new$2
	a (Ljava/util/List;Lcfg;Ljava/lang/Comparable;)Ljava/util/List; lambda$null$1
	a (Ljava/util/function/Function;Ljava/lang/Object;)Lceg; lambda$new$0
	e ()Ljava/util/regex/Pattern; access$000
	<clinit> ()V <clinit>
cef$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	<init> (Ljava/lang/Object;)V <init>
	a ([Lcfg;)Lcef$a; add
	a (Lcfg;)V validateProperty
	a (Ljava/util/function/Function;Lcef$b;)Lcef; create
cef$b net/minecraft/world/level/block/state/StateDefinition$Factory
	create (Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object; create
ceg net/minecraft/world/level/block/state/StateHolder
	a PROPERTY_ENTRY_TO_STRING_FUNCTION
	c owner
	b values
	e neighbours
	d propertiesCodec
	<init> (Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	a (Lcfg;)Ljava/lang/Object; cycle
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	toString ()Ljava/lang/String; toString
	r ()Ljava/util/Collection; getProperties
	b (Lcfg;)Z hasProperty
	c (Lcfg;)Ljava/lang/Comparable; getValue
	d (Lcfg;)Ljava/util/Optional; getOptionalValue
	a (Lcfg;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
	a (Ljava/util/Map;)V populateNeighbours
	b (Lcfg;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
	s ()Lcom/google/common/collect/ImmutableMap; getValues
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; lambda$codec$1
	a (Lceg;)Ljava/lang/Object; lambda$codec$0
	<clinit> ()V <clinit>
ceg$1 net/minecraft/world/level/block/state/StateHolder$1
	<init> ()V <init>
	a (Ljava/util/Map$Entry;)Ljava/lang/String; apply
	a (Lcfg;Ljava/lang/Comparable;)Ljava/lang/String; getName
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
ceh net/minecraft/world/level/block/state/package-info
cei net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	<init> (Lbrw;Lfx;Z)V <init>
	a ()Lcee; getState
	b ()Lccg; getEntity
	c ()Lbrw; getLevel
	d ()Lfx; getPos
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	a (Lcee;)Ljava/util/function/Predicate; hasState
	a (Lcee;Lcei;)Z lambda$hasState$1
	a (Ljava/util/function/Predicate;Lcei;)Z lambda$hasState$0
cej net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	<init> ([[[Ljava/util/function/Predicate;)V <init>
	a ()I getDepth
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
	a (Lbrw;Lfx;Lgc;Lgc;)Lcej$b; matches
	a (Lfx;Lgc;Lgc;Lcom/google/common/cache/LoadingCache;)Lcej$b; matches
	a (Lbrw;Lfx;)Lcej$b; find
	a (Lbrw;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	a (Lfx;Lgc;Lgc;III)Lfx; translateAndRotate
cej$a net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	<init> (Lbrw;Z)V <init>
	a (Lfx;)Lcei; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
cej$b net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	<init> (Lfx;Lgc;Lgc;Lcom/google/common/cache/LoadingCache;III)V <init>
	a ()Lfx; getFrontTopLeft
	b ()Lgc; getForwards
	c ()Lgc; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
	a (III)Lcei; getBlock
	toString ()Ljava/lang/String; toString
cek net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	<init> ()V <init>
	a ([Ljava/lang/String;)Lcek; aisle
	a ()Lcek; start
	a (CLjava/util/function/Predicate;)Lcek; where
	b ()Lcej; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
	<clinit> ()V <clinit>
cel net/minecraft/world/level/block/state/pattern/package-info
cem net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	a AIR
	b material
	<init> (Lcux;)V <init>
	a (Lcux;)Lcem; forMaterial
	a (Lcee;)Z test
	test (Ljava/lang/Object;)Z test
	<init> (Lcux;Lcem$1;)V <init>
	<clinit> ()V <clinit>
cem$1 net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate$1
	<init> (Lcux;)V <init>
	a (Lcee;)Z test
	test (Ljava/lang/Object;)Z test
cen net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	<init> (Lbul;)V <init>
	a (Lbul;)Lcen; forBlock
	a (Lcee;)Z test
	test (Ljava/lang/Object;)Z test
ceo net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	<init> (Lcef;)V <init>
	a (Lbul;)Lceo; forBlock
	a (Lcef;)Lceo; forDefinition
	a (Lcee;)Z test
	a (Lcee;Lcfg;Ljava/util/function/Predicate;)Z applies
	a (Lcfg;Ljava/util/function/Predicate;)Lceo; where
	test (Ljava/lang/Object;)Z test
	b (Lcee;)Z lambda$static$0
	<clinit> ()V <clinit>
cep net/minecraft/world/level/block/state/predicate/package-info
ceq net/minecraft/world/level/block/state/properties/AttachFace
	a FLOOR
	b WALL
	c CEILING
	d name
	e $VALUES
	values ()[Lceq; values
	valueOf (Ljava/lang/String;)Lceq; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cer net/minecraft/world/level/block/state/properties/BambooLeaves
	a NONE
	b SMALL
	c LARGE
	d name
	e $VALUES
	values ()[Lcer; values
	valueOf (Ljava/lang/String;)Lcer; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
ces net/minecraft/world/level/block/state/properties/BedPart
	a HEAD
	b FOOT
	c name
	d $VALUES
	values ()[Lces; values
	valueOf (Ljava/lang/String;)Lces; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cet net/minecraft/world/level/block/state/properties/BellAttachType
	a FLOOR
	b CEILING
	c SINGLE_WALL
	d DOUBLE_WALL
	e name
	f $VALUES
	values ()[Lcet; values
	valueOf (Ljava/lang/String;)Lcet; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
ceu net/minecraft/world/level/block/state/properties/BlockStateProperties
	a ATTACHED
	b BOTTOM
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D VINE_END
	E HORIZONTAL_AXIS
	F AXIS
	G UP
	H DOWN
	I NORTH
	J EAST
	K SOUTH
	L WEST
	M FACING
	N FACING_HOPPER
	O HORIZONTAL_FACING
	P ORIENTATION
	Q ATTACH_FACE
	R BELL_ATTACHMENT
	S EAST_WALL
	T NORTH_WALL
	U SOUTH_WALL
	V WEST_WALL
	W EAST_REDSTONE
	X NORTH_REDSTONE
	Y SOUTH_REDSTONE
	Z WEST_REDSTONE
	aa DOUBLE_BLOCK_HALF
	ab HALF
	ac RAIL_SHAPE
	ad RAIL_SHAPE_STRAIGHT
	ae AGE_1
	af AGE_2
	ag AGE_3
	ah AGE_5
	ai AGE_7
	aj AGE_15
	ak AGE_25
	al BITES
	am DELAY
	an DISTANCE
	ao EGGS
	ap HATCH
	aq LAYERS
	ar LEVEL_CAULDRON
	as LEVEL_COMPOSTER
	at LEVEL_FLOWING
	au LEVEL_HONEY
	av LEVEL
	aw MOISTURE
	ax NOTE
	ay PICKLES
	az POWER
	aA STAGE
	aB STABILITY_DISTANCE
	aC RESPAWN_ANCHOR_CHARGES
	aD ROTATION_16
	aE BED_PART
	aF CHEST_TYPE
	aG MODE_COMPARATOR
	aH DOOR_HINGE
	aI NOTEBLOCK_INSTRUMENT
	aJ PISTON_TYPE
	aK SLAB_TYPE
	aL STAIRS_SHAPE
	aM STRUCTUREBLOCK_MODE
	aN BAMBOO_LEAVES
	<init> ()V <init>
	a (Lcfh;)Z lambda$static$1
	a (Lgc;)Z lambda$static$0
	<clinit> ()V <clinit>
cev net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	<init> (Ljava/lang/String;)V <init>
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/String;)Lcev; create
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	equals (Ljava/lang/Object;)Z equals
	b ()I generateHashCode
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
cew net/minecraft/world/level/block/state/properties/ChestType
	a SINGLE
	b LEFT
	c RIGHT
	d BY_ID
	e name
	f opposite
	g $VALUES
	values ()[Lcew; values
	valueOf (Ljava/lang/String;)Lcew; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	a ()Ljava/lang/String; getSerializedName
	b ()Lcew; getOpposite
	<clinit> ()V <clinit>
cex net/minecraft/world/level/block/state/properties/ComparatorMode
	a COMPARE
	b SUBTRACT
	c name
	d $VALUES
	values ()[Lcex; values
	valueOf (Ljava/lang/String;)Lcex; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cey net/minecraft/world/level/block/state/properties/DirectionProperty
	<init> (Ljava/lang/String;Ljava/util/Collection;)V <init>
	a (Ljava/lang/String;)Lcey; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Lcey; create
	a (Ljava/lang/String;[Lgc;)Lcey; create
	a (Ljava/lang/String;Ljava/util/Collection;)Lcey; create
cez net/minecraft/world/level/block/state/properties/DoorHingeSide
	a LEFT
	b RIGHT
	c $VALUES
	values ()[Lcez; values
	valueOf (Ljava/lang/String;)Lcez; valueOf
	<init> (Ljava/lang/String;I)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfa net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	a UPPER
	b LOWER
	c $VALUES
	values ()[Lcfa; values
	valueOf (Ljava/lang/String;)Lcfa; valueOf
	<init> (Ljava/lang/String;I)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfb net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	<init> (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V <init>
	a ()Ljava/util/Collection; getPossibleValues
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	equals (Ljava/lang/Object;)Z equals
	b ()I generateHashCode
	a (Ljava/lang/String;Ljava/lang/Class;)Lcfb; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lcfb; create
	a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lcfb; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lcfb; create
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
cfc net/minecraft/world/level/block/state/properties/Half
	a TOP
	b BOTTOM
	c name
	d $VALUES
	values ()[Lcfc; values
	valueOf (Ljava/lang/String;)Lcfc; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfd net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	<init> (Ljava/lang/String;II)V <init>
	a ()Ljava/util/Collection; getPossibleValues
	equals (Ljava/lang/Object;)Z equals
	b ()I generateHashCode
	a (Ljava/lang/String;II)Lcfd; create
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
cfe net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	a HARP
	b BASEDRUM
	c SNARE
	d HAT
	e BASS
	f FLUTE
	g BELL
	h GUITAR
	i CHIME
	j XYLOPHONE
	k IRON_XYLOPHONE
	l COW_BELL
	m DIDGERIDOO
	n BIT
	o BANJO
	p PLING
	q name
	r soundEvent
	s $VALUES
	values ()[Lcfe; values
	valueOf (Ljava/lang/String;)Lcfe; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ladn;)V <init>
	a ()Ljava/lang/String; getSerializedName
	b ()Ladn; getSoundEvent
	a (Lcee;)Lcfe; byState
	<clinit> ()V <clinit>
cff net/minecraft/world/level/block/state/properties/PistonType
	a DEFAULT
	b STICKY
	c name
	d $VALUES
	values ()[Lcff; values
	valueOf (Ljava/lang/String;)Lcff; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfg net/minecraft/world/level/block/state/properties/Property
	a clazz
	b name
	c hashCode
	d codec
	e valueCodec
	<init> (Ljava/lang/String;Ljava/lang/Class;)V <init>
	b (Ljava/lang/Comparable;)Lcfg$a; value
	a (Lceg;)Lcfg$a; value
	c ()Ljava/util/stream/Stream; getAllValues
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lcom/mojang/serialization/Codec; valueCodec
	f ()Ljava/lang/String; getName
	g ()Ljava/lang/Class; getValueClass
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	b ()I generateHashCode
	a (Lcom/mojang/serialization/DynamicOps;Lceg;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; parseValue
	a (Lceg;Ljava/lang/Comparable;)Lceg; lambda$parseValue$2
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$new$1
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$null$0
cfg$1 net/minecraft/world/level/block/state/properties/Property$1
cfg$a net/minecraft/world/level/block/state/properties/Property$Value
	a property
	b value
	<init> (Lcfg;Ljava/lang/Comparable;)V <init>
	a ()Lcfg; getProperty
	b ()Ljava/lang/Comparable; value
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<init> (Lcfg;Ljava/lang/Comparable;Lcfg$1;)V <init>
cfh net/minecraft/world/level/block/state/properties/RailShape
	a NORTH_SOUTH
	b EAST_WEST
	c ASCENDING_EAST
	d ASCENDING_WEST
	e ASCENDING_NORTH
	f ASCENDING_SOUTH
	g SOUTH_EAST
	h SOUTH_WEST
	i NORTH_WEST
	j NORTH_EAST
	k name
	l $VALUES
	values ()[Lcfh; values
	valueOf (Ljava/lang/String;)Lcfh; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	c ()Z isAscending
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfi net/minecraft/world/level/block/state/properties/RedstoneSide
	a UP
	b SIDE
	c NONE
	d name
	e $VALUES
	values ()[Lcfi; values
	valueOf (Ljava/lang/String;)Lcfi; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	b ()Z isConnected
	<clinit> ()V <clinit>
cfj net/minecraft/world/level/block/state/properties/SlabType
	a TOP
	b BOTTOM
	c DOUBLE
	d name
	e $VALUES
	values ()[Lcfj; values
	valueOf (Ljava/lang/String;)Lcfj; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfk net/minecraft/world/level/block/state/properties/StairsShape
	a STRAIGHT
	b INNER_LEFT
	c INNER_RIGHT
	d OUTER_LEFT
	e OUTER_RIGHT
	f name
	g $VALUES
	values ()[Lcfk; values
	valueOf (Ljava/lang/String;)Lcfk; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfl net/minecraft/world/level/block/state/properties/StructureMode
	a SAVE
	b LOAD
	c CORNER
	d DATA
	e name
	f displayName
	g $VALUES
	values ()[Lcfl; values
	valueOf (Ljava/lang/String;)Lcfl; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getSerializedName
	b ()Lnr; getDisplayName
	<clinit> ()V <clinit>
cfm net/minecraft/world/level/block/state/properties/WallSide
	a NONE
	b LOW
	c TALL
	d name
	e $VALUES
	values ()[Lcfm; values
	valueOf (Ljava/lang/String;)Lcfm; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getSerializedName
	<clinit> ()V <clinit>
cfn net/minecraft/world/level/block/state/properties/WoodType
	i VALUES
	a OAK
	b SPRUCE
	c BIRCH
	d ACACIA
	e JUNGLE
	f DARK_OAK
	g CRIMSON
	h WARPED
	j name
	<init> (Ljava/lang/String;)V <init>
	a (Lcfn;)Lcfn; register
	a ()Ljava/util/stream/Stream; values
	b ()Ljava/lang/String; name
	<clinit> ()V <clinit>
cfo net/minecraft/world/level/block/state/properties/package-info
cfp net/minecraft/world/level/border/BorderChangeListener
	a (Lcfr;D)V onBorderSizeSet
	a (Lcfr;DDJ)V onBorderSizeLerping
	a (Lcfr;DD)V onBorderCenterSet
	a (Lcfr;I)V onBorderSetWarningTime
	b (Lcfr;I)V onBorderSetWarningBlocks
	b (Lcfr;D)V onBorderSetDamagePerBlock
	c (Lcfr;D)V onBorderSetDamageSafeZOne
cfp$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	<init> (Lcfr;)V <init>
	a (Lcfr;D)V onBorderSizeSet
	a (Lcfr;DDJ)V onBorderSizeLerping
	a (Lcfr;DD)V onBorderCenterSet
	a (Lcfr;I)V onBorderSetWarningTime
	b (Lcfr;I)V onBorderSetWarningBlocks
	b (Lcfr;D)V onBorderSetDamagePerBlock
	c (Lcfr;D)V onBorderSetDamageSafeZOne
cfq net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	values ()[Lcfq; values
	valueOf (Ljava/lang/String;)Lcfq; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getColor
	<clinit> ()V <clinit>
cfr net/minecraft/world/level/border/WorldBorder
	a listeners
	b damagePerBlock
	d damageSafeZone
	e warningTime
	f warningBlocks
	g centerX
	h centerZ
	i absoluteMaxSize
	j extent
	c DEFAULT_SETTINGS
	<init> ()V <init>
	a (Lfx;)Z isWithinBounds
	a (Lbra;)Z isWithinBounds
	a (DD)Z isWithinBounds
	a (Ldcf;)Z isWithinBounds
	a (Lapx;)D getDistanceToBorder
	c ()Ldde; getCollisionShape
	b (DD)D getDistanceToBorder
	d ()Lcfq; getStatus
	e ()D getMinX
	f ()D getMinZ
	g ()D getMaxX
	h ()D getMaxZ
	a ()D getCenterX
	b ()D getCenterZ
	c (DD)V setCenter
	i ()D getSize
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	a (D)V setSize
	a (DDJ)V lerpSizeBetween
	l ()Ljava/util/List; getListeners
	a (Lcfp;)V addListener
	b (Lcfp;)V removeListener
	a (I)V setAbsoluteMaxSize
	m ()I getAbsoluteMaxSize
	n ()D getDamageSafeZone
	b (D)V setDamageSafeZone
	o ()D getDamagePerBlock
	c (D)V setDamagePerBlock
	p ()D getLerpSpeed
	q ()I getWarningTime
	b (I)V setWarningTime
	r ()I getWarningBlocks
	c (I)V setWarningBlocks
	s ()V tick
	t ()Lcfr$c; createSettings
	a (Lcfr$c;)V applySettings
	a (Lcfr;)I access$000
	<clinit> ()V <clinit>
cfr$1 net/minecraft/world/level/border/WorldBorder$1
cfr$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lcfq; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lcfr$a; update
	m ()Ldde; getCollisionShape
cfr$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a this$0
	<init> (Lcfr;DDJ)V <init>
	a ()D getMinX
	c ()D getMinZ
	b ()D getMaxX
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lcfq; getStatus
	k ()V onCenterChange
	j ()V onAbsoluteMaxSizeChange
	l ()Lcfr$a; update
	m ()Ldde; getCollisionShape
	<init> (Lcfr;DDJLcfr$1;)V <init>
cfr$c net/minecraft/world/level/border/WorldBorder$Settings
	a centerX
	b centerZ
	c damagePerBlock
	d safeZone
	e warningBlocks
	f warningTime
	g size
	h sizeLerpTime
	i sizeLerpTarget
	<init> (DDDDIIDJD)V <init>
	<init> (Lcfr;)V <init>
	a ()D getCenterX
	b ()D getCenterZ
	c ()D getDamagePerBlock
	d ()D getSafeZone
	e ()I getWarningBlocks
	f ()I getWarningTime
	g ()D getSize
	h ()J getSizeLerpTime
	i ()D getSizeLerpTarget
	a (Lcom/mojang/serialization/DynamicLike;Lcfr$c;)Lcfr$c; read
	a (Lmd;)V write
	<init> (Lcfr;Lcfr$1;)V <init>
	<init> (DDDDIIDJDLcfr$1;)V <init>
cfr$d net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a this$0
	<init> (Lcfr;D)V <init>
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	i ()Lcfq; getStatus
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	n ()V updateBox
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lcfr$a; update
	m ()Ldde; getCollisionShape
cfs net/minecraft/world/level/border/package-info
cft net/minecraft/world/level/chunk/ChunkAccess
	a (Lfx;Lcee;Z)Lcee; setBlockState
	a (Lfx;Lccg;)V setBlockEntity
	a (Lapx;)V addEntity
	a ()Lcgf; getHighestSection
	b ()I getHighestSectionPosition
	c ()Ljava/util/Set; getBlockEntitiesPos
	d ()[Lcgf; getSections
	e ()Lcul; getLightEngine
	f ()Ljava/util/Collection; getHeightmaps
	a (Lchk$a;[J)V setHeightmap
	a (Lchk$a;)Lchk; getOrCreateHeightmapUnprimed
	a (Lchk$a;II)I getHeight
	b (Lchk$a;)Lfx; getHeighestPosition
	g ()Lbra; getPos
	a (J)V setLastSaveTime
	h ()Ljava/util/Map; getAllStarts
	a (Ljava/util/Map;)V setAllStarts
	a (II)Z isYSpaceEmpty
	i ()Lcfu; getBiomes
	a (Z)V setUnsaved
	j ()Z isUnsaved
	k ()Lcfx; getStatus
	d (Lfx;)V removeBlockEntity
	e (Lfx;)V markPosForPostprocessing
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	a (SI)V addPackedPostProcess
	a (Lmd;)V setBlockEntityNbt
	i (Lfx;)Lmd; getBlockEntityNbt
	j (Lfx;)Lmd; getBlockEntityNbtForSaving
	m ()Ljava/util/stream/Stream; getLights
	n ()Lbsl; getBlockTicks
	o ()Lbsl; getLiquidTicks
	p ()Lcgo; getUpgradeData
	b (J)V setInhabitedTime
	q ()J getInhabitedTime
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	r ()Z isLightCorrect
	b (Z)V setLightCorrect
cfu net/minecraft/world/level/chunk/ChunkBiomeContainer
	d LOGGER
	e WIDTH_BITS
	f HEIGHT_BITS
	a BIOMES_SIZE
	b HORIZONTAL_MASK
	c VERTICAL_MASK
	g biomeRegistry
	h biomes
	<init> (Lgg;[Lbss;)V <init>
	<init> (Lgg;)V <init>
	<init> (Lgg;[I)V <init>
	<init> (Lgg;Lbra;Lbsv;)V <init>
	<init> (Lgg;Lbra;Lbsv;[I)V <init>
	a ()[I writeBiomes
	b (III)Lbss; getNoiseBiome
	<clinit> ()V <clinit>
cfv net/minecraft/world/level/chunk/ChunkGenerator
	a CODEC
	b biomeSource
	c runtimeBiomeSource
	d settings
	e strongholdSeed
	f strongholdPositions
	<init> (Lbsv;Lchs;)V <init>
	<init> (Lbsv;Lbsv;Lchs;J)V <init>
	g ()V generateStrongholds
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lcfv; withSeed
	a (Lgm;Lcft;)V createBiomes
	a (JLbsu;Lcft;Lchj$a;)V applyCarvers
	a (Laag;Lckx;Lfx;IZ)Lfx; findNearestMapFeature
	a (Laam;Lbsk;)V applyBiomeDecoration
	a (Laam;Lcft;)V buildSurfaceAndBedrock
	a (Laam;)V spawnOriginalMobs
	b ()Lchs; getSettings
	c ()I getSpawnHeight
	d ()Lbsv; getBiomeSource
	e ()I getGenDepth
	a (Lbss;Lbsk;Laql;Lfx;)Ljava/util/List; getMobsAt
	a (Lgn;Lbsk;Lcft;Lcst;J)V createStructures
	a (Lcit;Lgn;Lbsk;Lcft;Lcst;JLbra;Lbss;)V createStructure
	a (Lbso;Lbsk;Lcft;)V createReferences
	a (Lbrv;Lbsk;Lcft;)V fillFromNoise
	f ()I getSeaLevel
	a (IILchk$a;)I getBaseHeight
	a (II)Lbqz; getBaseColumn
	b (IILchk$a;)I getFirstFreeHeight
	c (IILchk$a;)I getFirstOccupiedHeight
	a (Lbra;)Z hasStronghold
	a (Lcrs;)Ljava/lang/String; lambda$createReferences$2
	b (Lcrs;)Ljava/lang/String; lambda$createReferences$1
	c (Lcrs;)Ljava/lang/String; lambda$createReferences$0
	<clinit> ()V <clinit>
cfw net/minecraft/world/level/chunk/ChunkSource
	<init> ()V <init>
	a (IIZ)Lcge; getChunk
	a (II)Lcge; getChunkNow
	c (II)Lbqz; getChunkForLighting
	b (II)Z hasChunk
	a (IILcfx;Z)Lcft; getChunk
	a (Ljava/util/function/BooleanSupplier;)V tick
	e ()Ljava/lang/String; gatherStats
	h ()I getLoadedChunksCount
	close ()V close
	l ()Lcul; getLightEngine
	a (ZZ)V setSpawnSettings
	a (Lbra;Z)V updateChunkForced
	a (Lapx;)Z isEntityTickingChunk
	a (Lbra;)Z isEntityTickingChunk
	a (Lfx;)Z isTickingChunk
cfx net/minecraft/world/level/chunk/ChunkStatus
	n PRE_FEATURES
	o POST_FEATURES
	p PASSTHROUGH_LOAD_TASK
	a EMPTY
	b STRUCTURE_STARTS
	c STRUCTURE_REFERENCES
	d BIOMES
	e NOISE
	f SURFACE
	g CARVERS
	h LIQUID_CARVERS
	i FEATURES
	j LIGHT
	k SPAWN
	l HEIGHTMAPS
	m FULL
	q STATUS_BY_RANGE
	r RANGE_BY_STATUS
	s name
	t index
	u parent
	v generationTask
	w loadingTask
	x range
	y chunkType
	z heightmapsAfter
	a (Lcfx;Laaj;Lcft;)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Ljava/lang/String;Lcfx;ILjava/util/EnumSet;Lcfx$a;Lcfx$d;)Lcfx; registerSimple
	a (Ljava/lang/String;Lcfx;ILjava/util/EnumSet;Lcfx$a;Lcfx$b;)Lcfx; register
	a (Ljava/lang/String;Lcfx;ILjava/util/EnumSet;Lcfx$a;Lcfx$b;Lcfx$c;)Lcfx; register
	a ()Ljava/util/List; getStatusList
	a (Lcfx;Lcft;)Z isLighted
	a (I)Lcfx; getStatus
	b ()I maxDistance
	a (Lcfx;)I getDistance
	<init> (Ljava/lang/String;Lcfx;ILjava/util/EnumSet;Lcfx$a;Lcfx$b;Lcfx$c;)V <init>
	c ()I getIndex
	d ()Ljava/lang/String; getName
	e ()Lcfx; getParent
	a (Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; generate
	a (Laag;Lcst;Laaj;Ljava/util/function/Function;Lcft;)Ljava/util/concurrent/CompletableFuture; load
	f ()I getRange
	g ()Lcfx$a; getChunkType
	a (Ljava/lang/String;)Lcfx; byName
	h ()Ljava/util/EnumSet; heightmapsAfter
	b (Lcfx;)Z isOrAfter
	toString ()Ljava/lang/String; toString
	a (Lit/unimi/dsi/fastutil/ints/IntArrayList;)V lambda$static$16
	a (Lcfx;Laag;Lcst;Laaj;Ljava/util/function/Function;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$15
	a (Lcfx;Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$14
	a (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$13
	b (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$12
	b (Lcfx;Laag;Lcst;Laaj;Ljava/util/function/Function;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$11
	b (Lcfx;Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$10
	c (Lcfx;Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$9
	c (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$8
	d (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$7
	e (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$6
	f (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$5
	g (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$4
	h (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$3
	d (Lcfx;Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	i (Laag;Lcfv;Ljava/util/List;Lcft;)V lambda$static$1
	c (Lcfx;Laag;Lcst;Laaj;Ljava/util/function/Function;Lcft;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
cfx$a net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	a PROTOCHUNK
	b LEVELCHUNK
	c $VALUES
	values ()[Lcfx$a; values
	valueOf (Ljava/lang/String;)Lcfx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cfx$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
	doWork (Lcfx;Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;Lcft;)Ljava/util/concurrent/CompletableFuture; doWork
cfx$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
	doWork (Lcfx;Laag;Lcst;Laaj;Ljava/util/function/Function;Lcft;)Ljava/util/concurrent/CompletableFuture; doWork
cfx$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
	doWork (Lcfx;Laag;Lcfv;Lcst;Laaj;Ljava/util/function/Function;Ljava/util/List;Lcft;)Ljava/util/concurrent/CompletableFuture; doWork
	doWork (Laag;Lcfv;Ljava/util/List;Lcft;)V doWork
cfy net/minecraft/world/level/chunk/DataLayer
	a data
	<init> ()V <init>
	<init> ([B)V <init>
	<init> (I)V <init>
	a (III)I get
	a (IIII)V set
	b (III)I getIndex
	b (I)I get
	a (II)V set
	c (I)Z isFirst
	d (I)I getPosition
	a ()[B getData
	b ()Lcfy; copy
	toString ()Ljava/lang/String; toString
	a (I)Ljava/lang/String; layerToString
	c ()Z isEmpty
cfz net/minecraft/world/level/chunk/EmptyLevelChunk
	b BIOMES
	<init> (Lbru;Lbra;)V <init>
	d_ (Lfx;)Lcee; getBlockState
	a (Lfx;Lcee;Z)Lcee; setBlockState
	b (Lfx;)Lcuu; getFluidState
	f (Lfx;)I getLightBlock
	e ()Lcul; getLightEngine
	g (Lfx;)I getLightEmission
	a (Lapx;)V addEntity
	b (Lapx;)V removeEntity
	a (Lapx;I)V removeEntity
	a (Lfx;Lcge$a;)Lccg; getBlockEntity
	a (Lccg;)V addBlockEntity
	a (Lfx;Lccg;)V setBlockEntity
	d (Lfx;)V removeBlockEntity
	s ()V markUnsaved
	a (Lapx;Ldcf;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Ljava/lang/Class;Ldcf;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	t ()Z isEmpty
	a (II)Z isYSpaceEmpty
	u ()Lzr$b; getFullStatus
	a ([Lbss;)V lambda$static$0
	<clinit> ()V <clinit>
cga net/minecraft/world/level/chunk/FeatureAccess
	a (Lckx;)Lcrs; getStartForFeature
	a (Lckx;Lcrs;)V setStartForFeature
	b (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	a (Lckx;J)V addReferenceForFeature
	v ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
cgb net/minecraft/world/level/chunk/GlobalPalette
	a registry
	b defaultValue
	<init> (Lgh;Ljava/lang/Object;)V <init>
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lnf;)V read
	b (Lnf;)V write
	a ()I getSerializedSize
	b ()I getSize
	a (Lmj;)V read
cgc net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d reader
	e writer
	f bits
	<init> (Lgh;ILcgk;Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lnf;)V read
	b (Lnf;)V write
	a ()I getSerializedSize
	b ()I getSize
	a (Lmj;)V read
	b (Lmj;)V write
cgd net/minecraft/world/level/chunk/ImposterProtoChunk
	a wrapped
	<init> (Lcge;)V <init>
	c (Lfx;)Lccg; getBlockEntity
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	J ()I getMaxLightLevel
	a (Lfx;Lcee;Z)Lcee; setBlockState
	a (Lfx;Lccg;)V setBlockEntity
	a (Lapx;)V addEntity
	a (Lcfx;)V setStatus
	d ()[Lcgf; getSections
	e ()Lcul; getLightEngine
	a (Lchk$a;[J)V setHeightmap
	c (Lchk$a;)Lchk$a; fixType
	a (Lchk$a;II)I getHeight
	b (Lchk$a;)Lfx; getHeighestPosition
	g ()Lbra; getPos
	a (J)V setLastSaveTime
	a (Lckx;)Lcrs; getStartForFeature
	a (Lckx;Lcrs;)V setStartForFeature
	h ()Ljava/util/Map; getAllStarts
	a (Ljava/util/Map;)V setAllStarts
	b (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	a (Lckx;J)V addReferenceForFeature
	v ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
	i ()Lcfu; getBiomes
	a (Z)V setUnsaved
	j ()Z isUnsaved
	k ()Lcfx; getStatus
	d (Lfx;)V removeBlockEntity
	e (Lfx;)V markPosForPostprocessing
	a (Lmd;)V setBlockEntityNbt
	i (Lfx;)Lmd; getBlockEntityNbt
	j (Lfx;)Lmd; getBlockEntityNbtForSaving
	a (Lcfu;)V setBiomes
	m ()Ljava/util/stream/Stream; getLights
	s ()Lcgn; getBlockTicks
	t ()Lcgn; getLiquidTicks
	a (Lchj$a;)Ljava/util/BitSet; getCarvingMask
	b (Lchj$a;)Ljava/util/BitSet; getOrCreateCarvingMask
	u ()Lcge; getWrapped
	r ()Z isLightCorrect
	b (Z)V setLightCorrect
	o ()Lbsl; getLiquidTicks
	n ()Lbsl; getBlockTicks
	a (Lcut;)Z lambda$getLiquidTicks$1
	a (Lbul;)Z lambda$getBlockTicks$0
cge net/minecraft/world/level/chunk/LevelChunk
	b LOGGER
	a EMPTY_SECTION
	c sections
	d biomes
	e pendingBlockEntities
	f loaded
	g level
	h heightmaps
	i upgradeData
	j blockEntities
	k entitySections
	l structureStarts
	m structuresRefences
	n postProcessing
	o blockTicks
	p liquidTicks
	q lastSaveHadEntities
	r lastSaveTime
	s unsaved
	t inhabitedTime
	u fullStatus
	v postLoad
	w chunkPos
	x isLightCorrect
	<init> (Lbru;Lbra;Lcfu;)V <init>
	<init> (Lbru;Lbra;Lcfu;Lcgo;Lbsl;Lbsl;J[Lcgf;Ljava/util/function/Consumer;)V <init>
	<init> (Lbru;Lcgm;)V <init>
	a (Lchk$a;)Lchk; getOrCreateHeightmapUnprimed
	c ()Ljava/util/Set; getBlockEntitiesPos
	d ()[Lcgf; getSections
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	a (III)Lcuu; getFluidState
	a (Lfx;Lcee;Z)Lcee; setBlockState
	e ()Lcul; getLightEngine
	a (Lapx;)V addEntity
	a (Lchk$a;[J)V setHeightmap
	b (Lapx;)V removeEntity
	a (Lapx;I)V removeEntity
	a (Lchk$a;II)I getHeight
	b (Lchk$a;)Lfx; getHeighestPosition
	k (Lfx;)Lccg; createBlockEntity
	c (Lfx;)Lccg; getBlockEntity
	a (Lfx;Lcge$a;)Lccg; getBlockEntity
	a (Lccg;)V addBlockEntity
	a (Lfx;Lccg;)V setBlockEntity
	a (Lmd;)V setBlockEntityNbt
	j (Lfx;)Lmd; getBlockEntityNbtForSaving
	d (Lfx;)V removeBlockEntity
	w ()V runPostLoad
	s ()V markUnsaved
	a (Lapx;Ldcf;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Laqb;Ldcf;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Ljava/lang/Class;Ldcf;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	t ()Z isEmpty
	g ()Lbra; getPos
	a (Lcfu;Lnf;Lmd;I)V replaceWithPacketData
	i ()Lcfu; getBiomes
	c (Z)V setLoaded
	x ()Lbru; getLevel
	f ()Ljava/util/Collection; getHeightmaps
	y ()Ljava/util/Map; getBlockEntities
	z ()[Laeq; getEntitySections
	i (Lfx;)Lmd; getBlockEntityNbt
	m ()Ljava/util/stream/Stream; getLights
	n ()Lbsl; getBlockTicks
	o ()Lbsl; getLiquidTicks
	a (Z)V setUnsaved
	j ()Z isUnsaved
	d (Z)V setLastSaveHadEntities
	a (J)V setLastSaveTime
	a (Lckx;)Lcrs; getStartForFeature
	a (Lckx;Lcrs;)V setStartForFeature
	h ()Ljava/util/Map; getAllStarts
	a (Ljava/util/Map;)V setAllStarts
	b (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	a (Lckx;J)V addReferenceForFeature
	v ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
	q ()J getInhabitedTime
	b (J)V setInhabitedTime
	A ()V postProcessGeneration
	a (Lfx;Lmd;)Lccg; promotePendingBlockEntity
	p ()Lcgo; getUpgradeData
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	B ()V unpackTicks
	a (Laag;)V packTicks
	k ()Lcfx; getStatus
	u ()Lzr$b; getFullStatus
	a (Ljava/util/function/Supplier;)V setFullStatus
	r ()Z isLightCorrect
	b (Z)V setLightCorrect
	l (Lfx;)Lcut; lambda$unpackTicks$10
	m (Lfx;)Lbul; lambda$unpackTicks$9
	c (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$8
	d (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$7
	n (Lfx;)Z lambda$getLights$6
	a (ILfx;)Z lambda$replaceWithPacketData$5
	o (Lfx;)Z lambda$replaceWithPacketData$4
	b (III)Ljava/lang/String; lambda$getFluidState$3
	c (III)Ljava/lang/String; lambda$getBlockState$2
	c (Lchk$a;)Lchk; lambda$getOrCreateHeightmapUnprimed$1
	c (Lapx;)Lapx; lambda$new$0
	<clinit> ()V <clinit>
cge$a net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	a IMMEDIATE
	b QUEUED
	c CHECK
	d $VALUES
	values ()[Lcge$a; values
	valueOf (Ljava/lang/String;)Lcge$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cgf net/minecraft/world/level/chunk/LevelChunkSection
	a GLOBAL_BLOCKSTATE_PALETTE
	b bottomBlockY
	c nonEmptyBlockCount
	d tickingBlockCount
	e tickingFluidCount
	f states
	<init> (I)V <init>
	<init> (ISSS)V <init>
	a (III)Lcee; getBlockState
	b (III)Lcuu; getFluidState
	a ()V acquire
	b ()V release
	a (IIILcee;)Lcee; setBlockState
	a (IIILcee;Z)Lcee; setBlockState
	c ()Z isEmpty
	a (Lcgf;)Z isEmpty
	d ()Z isRandomlyTicking
	e ()Z isRandomlyTickingBlocks
	f ()Z isRandomlyTickingFluids
	g ()I bottomBlockY
	h ()V recalcBlockCounts
	i ()Lcgl; getStates
	a (Lnf;)V read
	b (Lnf;)V write
	j ()I getSerializedSize
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lcee;I)V lambda$recalcBlockCounts$0
	<clinit> ()V <clinit>
cgg net/minecraft/world/level/chunk/LightChunkGetter
	c (II)Lbqz; getChunkForLighting
	a (Lbsc;Lgp;)V onLightUpdate
	m ()Lbqz; getLevel
cgh net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d reader
	e bits
	f size
	<init> (Lgh;ILcgk;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lnf;)V read
	b (Lnf;)V write
	a ()I getSerializedSize
	b ()I getSize
	a (Lmj;)V read
cgi net/minecraft/world/level/chunk/OldDataLayer
	a data
	b depthBits
	c depthBitsPlusFour
	<init> ([BI)V <init>
	a (III)I get
	a (IIII)V set
	a ()Z isValid
	a (I)V setAll
cgj net/minecraft/world/level/chunk/Palette
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lnf;)V read
	b (Lnf;)V write
	a ()I getSerializedSize
	b ()I getSize
	a (Lmj;)V read
cgk net/minecraft/world/level/chunk/PaletteResize
	onResize (ILjava/lang/Object;)I onResize
cgl net/minecraft/world/level/chunk/PalettedContainer
	b globalPalette
	c dummyPaletteResize
	d registry
	e reader
	f writer
	g defaultValue
	a storage
	h palette
	i bits
	j lock
	a ()V acquire
	b ()V release
	<init> (Lcgj;Lgh;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V <init>
	b (III)I getIndex
	b (I)V setBits
	onResize (ILjava/lang/Object;)I onResize
	a (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	c (IIILjava/lang/Object;)V set
	b (ILjava/lang/Object;)V set
	a (III)Ljava/lang/Object; get
	a (I)Ljava/lang/Object; get
	a (Lnf;)V read
	b (Lnf;)V write
	a (Lmj;[J)V read
	a (Lmd;Ljava/lang/String;Ljava/lang/String;)V write
	c ()I getSerializedSize
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lcgl$a;)V count
	a (Lcgl$a;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V lambda$count$3
	a (Lit/unimi/dsi/fastutil/ints/Int2IntMap;I)V lambda$count$2
	a (Ljava/lang/Thread;)Ljava/lang/String; lambda$acquire$1
	c (ILjava/lang/Object;)I lambda$new$0
cgl$a net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
	accept (Ljava/lang/Object;I)V accept
cgm net/minecraft/world/level/chunk/ProtoChunk
	a LOGGER
	b chunkPos
	c isDirty
	d biomes
	e lightEngine
	f heightmaps
	g status
	h blockEntities
	i blockEntityNbts
	j sections
	k entities
	l lights
	m postProcessing
	n structureStarts
	o structuresRefences
	p upgradeData
	q blockTicks
	r liquidTicks
	s inhabitedTime
	t carvingMasks
	u isLightCorrect
	<init> (Lbra;Lcgo;)V <init>
	<init> (Lbra;Lcgo;[Lcgf;Lcgn;Lcgn;)V <init>
	d_ (Lfx;)Lcee; getBlockState
	b (Lfx;)Lcuu; getFluidState
	m ()Ljava/util/stream/Stream; getLights
	w ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPackedLights
	b (SI)V addLight
	k (Lfx;)V addLight
	a (Lfx;Lcee;Z)Lcee; setBlockState
	a (I)Lcgf; getOrCreateSection
	a (Lfx;Lccg;)V setBlockEntity
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (Lfx;)Lccg; getBlockEntity
	x ()Ljava/util/Map; getBlockEntities
	b (Lmd;)V addEntity
	a (Lapx;)V addEntity
	y ()Ljava/util/List; getEntities
	a (Lcfu;)V setBiomes
	i ()Lcfu; getBiomes
	a (Z)V setUnsaved
	j ()Z isUnsaved
	k ()Lcfx; getStatus
	a (Lcfx;)V setStatus
	d ()[Lcgf; getSections
	e ()Lcul; getLightEngine
	f ()Ljava/util/Collection; getHeightmaps
	a (Lchk$a;[J)V setHeightmap
	a (Lchk$a;)Lchk; getOrCreateHeightmapUnprimed
	a (Lchk$a;II)I getHeight
	b (Lchk$a;)Lfx; getHeighestPosition
	g ()Lbra; getPos
	a (J)V setLastSaveTime
	a (Lckx;)Lcrs; getStartForFeature
	a (Lckx;Lcrs;)V setStartForFeature
	h ()Ljava/util/Map; getAllStarts
	a (Ljava/util/Map;)V setAllStarts
	b (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	a (Lckx;J)V addReferenceForFeature
	v ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
	l (Lfx;)S packOffsetCoordinates
	a (SILbra;)Lfx; unpackOffsetCoordinates
	e (Lfx;)V markPosForPostprocessing
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	a (SI)V addPackedPostProcess
	s ()Lcgn; getBlockTicks
	t ()Lcgn; getLiquidTicks
	p ()Lcgo; getUpgradeData
	b (J)V setInhabitedTime
	q ()J getInhabitedTime
	a (Lmd;)V setBlockEntityNbt
	z ()Ljava/util/Map; getBlockEntityNbts
	i (Lfx;)Lmd; getBlockEntityNbt
	j (Lfx;)Lmd; getBlockEntityNbtForSaving
	d (Lfx;)V removeBlockEntity
	a (Lchj$a;)Ljava/util/BitSet; getCarvingMask
	b (Lchj$a;)Ljava/util/BitSet; getOrCreateCarvingMask
	a (Lchj$a;Ljava/util/BitSet;)V setCarvingMask
	a (Lcul;)V setLightEngine
	r ()Z isLightCorrect
	b (Z)V setLightCorrect
	o ()Lbsl; getLiquidTicks
	n ()Lbsl; getBlockTicks
	c (Lchj$a;)Ljava/util/BitSet; lambda$getOrCreateCarvingMask$5
	c (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$4
	d (Lckx;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$3
	c (Lchk$a;)Lchk; lambda$getOrCreateHeightmapUnprimed$2
	a (Lcut;)Z lambda$new$1
	a (Lbul;)Z lambda$new$0
	<clinit> ()V <clinit>
cgn net/minecraft/world/level/chunk/ProtoTickList
	a ignore
	b chunkPos
	c toBeTicked
	<init> (Ljava/util/function/Predicate;Lbra;)V <init>
	<init> (Ljava/util/function/Predicate;Lbra;Lmj;)V <init>
	b ()Lmj; save
	a (Lbsl;Ljava/util/function/Function;)V copyOut
	a (Lfx;Ljava/lang/Object;)Z hasScheduledTick
	a (Lfx;Ljava/lang/Object;ILbsn;)V scheduleTick
	b (Lfx;Ljava/lang/Object;)Z willTickThisTick
	a ()I size
cgo net/minecraft/world/level/chunk/UpgradeData
	b LOGGER
	a EMPTY
	c DIRECTIONS
	d sides
	e index
	f MAP
	g CHUNKY_FIXERS
	<init> ()V <init>
	<init> (Lmd;)V <init>
	a (Lcge;)V upgrade
	a (Lcge;Lgd;)V upgradeSides
	a (Lcee;Lgc;Lbrv;Lfx;Lfx;)Lcee; updateState
	b (Lcge;)V upgradeInside
	a ()Z isEmpty
	b ()Lmd; write
	a (Lbru;Lcgo$a;)V lambda$upgrade$0
	c ()Ljava/util/Map; access$200
	d ()Ljava/util/Set; access$300
	<clinit> ()V <clinit>
cgo$1 net/minecraft/world/level/chunk/UpgradeData$1
cgo$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbrv;)V processChunk
cgo$b net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	a BLACKLIST
	b DEFAULT
	c CHEST
	d LEAVES
	e STEM_BLOCK
	f DIRECTIONS
	g $VALUES
	values ()[Lcgo$b; values
	valueOf (Ljava/lang/String;)Lcgo$b; valueOf
	<init> (Ljava/lang/String;I[Lbul;)V <init>
	<init> (Ljava/lang/String;IZ[Lbul;)V <init>
	<init> (Ljava/lang/String;I[Lbul;Lcgo$1;)V <init>
	<init> (Ljava/lang/String;IZ[Lbul;Lcgo$1;)V <init>
	<clinit> ()V <clinit>
cgo$b$1 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	<init> (Ljava/lang/String;I[Lbul;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
cgo$b$2 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	<init> (Ljava/lang/String;I[Lbul;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
cgo$b$3 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	<init> (Ljava/lang/String;I[Lbul;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
cgo$b$4 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	g queue
	<init> (Ljava/lang/String;IZ[Lbul;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
	a (Lbrv;)V processChunk
	a ()Ljava/util/List; lambda$$0
cgo$b$5 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	<init> (Ljava/lang/String;I[Lbul;)V <init>
	a (Lcee;Lgc;Lcee;Lbrv;Lfx;Lfx;)Lcee; updateShape
cgp net/minecraft/world/level/chunk/package-info
cgq net/minecraft/world/level/chunk/storage/ChunkSerializer
	a LOGGER
	<init> ()V <init>
	a (Laag;Lcst;Lazl;Lbra;Lmd;)Lcgm; read
	a (Laag;Lcft;)Lmd; write
	a (Lmd;)Lcfx$a; getChunkTypeFromTag
	a (Lmd;Lcge;)V postLoadChunk
	a (Lbra;Ljava/util/Map;Ljava/util/Map;)Lmd; packStructureData
	a (Lcst;Lmd;J)Ljava/util/Map; unpackStructureStart
	a (Lbra;Lmd;)Ljava/util/Map; unpackStructureReferences
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lmj; packOffsets
	a (Lbra;Ljava/lang/String;J)Z lambda$unpackStructureReferences$5
	a (Lcge;Lapx;)Lapx; lambda$postLoadChunk$4
	a (ILcgf;)Z lambda$write$3
	b (Lmd;Lcge;)V lambda$read$2
	a (Lcut;)Z lambda$read$1
	a (Lbul;)Z lambda$read$0
	<clinit> ()V <clinit>
cgr net/minecraft/world/level/chunk/storage/ChunkStorage
	a worker
	b fixerUpper
	c legacyStructureHandler
	<init> (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;Z)V <init>
	a (Lvj;Ljava/util/function/Supplier;Lmd;)Lmd; upgradeChunkTag
	a (Lmd;)I getVersion
	e (Lbra;)Lmd; read
	a (Lbra;Lmd;)V write
	i ()V flushWorker
	close ()V close
cgs net/minecraft/world/level/chunk/storage/IOWorker
	a LOGGER
	b shutdownRequested
	c mailbox
	d storage
	e pendingWrites
	<init> (Ljava/io/File;ZLjava/lang/String;)V <init>
	a (Lbra;Lmd;)Ljava/util/concurrent/CompletableFuture; store
	a (Lbra;)Lmd; load
	a ()Ljava/util/concurrent/CompletableFuture; synchronize
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submitTask
	b ()V storePendingChunk
	c ()V tellStorePending
	a (Lbra;Lcgs$a;)V runStore
	close ()V close
	a (Laoa;)Laod$b; lambda$close$11
	b (Laoa;)V lambda$null$10
	a (Ljava/util/function/Supplier;Laoa;)Laod$b; lambda$submitTask$9
	a (Laoa;Ljava/util/function/Supplier;)V lambda$null$8
	a (Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$synchronize$7
	d ()Lcom/mojang/datafixers/util/Either; lambda$null$6
	e ()Lcom/mojang/datafixers/util/Either; lambda$synchronize$5
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$null$4
	a (Lcgs$a;)Ljava/util/concurrent/CompletableFuture; lambda$null$3
	b (Lbra;)Lcom/mojang/datafixers/util/Either; lambda$load$2
	b (Lbra;Lmd;)Lcom/mojang/datafixers/util/Either; lambda$store$1
	a (Lmd;Lbra;)Lcgs$a; lambda$null$0
	<clinit> ()V <clinit>
cgs$a net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	a data
	b result
	<init> (Lmd;)V <init>
	a (Lcgs$a;)Lmd; access$000
	b (Lcgs$a;)Ljava/util/concurrent/CompletableFuture; access$100
	a (Lcgs$a;Lmd;)Lmd; access$002
cgs$b net/minecraft/world/level/chunk/storage/IOWorker$Priority
	a HIGH
	b LOW
	c $VALUES
	values ()[Lcgs$b; values
	valueOf (Ljava/lang/String;)Lcgs$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cgt net/minecraft/world/level/chunk/storage/OldChunkStorage
	<init> ()V <init>
	a (Lmd;)Lcgt$a; load
	a (Lgn$b;Lcgt$a;Lmd;Lbsv;)V convertToAnvilFormat
cgt$a net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk
	a lastUpdated
	b terrainPopulated
	c heightmap
	d blockLight
	e skyLight
	f data
	g blocks
	h entities
	i blockEntities
	j blockTicks
	k x
	l z
	<init> (II)V <init>
cgu net/minecraft/world/level/chunk/storage/RegionBitmap
	a used
	<init> ()V <init>
	a (II)V force
	b (II)V free
	a (I)I allocate
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getUsed
cgv net/minecraft/world/level/chunk/storage/RegionFile
	b LOGGER
	c PADDING_BUFFER
	d file
	e externalFileDir
	f version
	g header
	h offsets
	i timestamps
	a usedSectors
	<init> (Ljava/io/File;Ljava/io/File;Z)V <init>
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Lcgx;Z)V <init>
	e (Lbra;)Ljava/nio/file/Path; getExternalChunkPath
	a (Lbra;)Ljava/io/DataInputStream; getChunkDataInputStream
	a (B)Z isExternalStreamChunk
	b (B)B getExternalChunkVersion
	a (Lbra;BLjava/io/InputStream;)Ljava/io/DataInputStream; createChunkInputStream
	a (Lbra;B)Ljava/io/DataInputStream; createExternalChunkInputStream
	a (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; createStream
	a (II)I packSectorOffset
	a (I)I getNumSectors
	b (I)I getSectorNumber
	c (I)I sizeToSectors
	b (Lbra;)Z doesChunkExist
	c (Lbra;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	a ()V flush
	a (Lbra;Ljava/nio/ByteBuffer;)V write
	b ()Ljava/nio/ByteBuffer; createExternalStub
	a (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcgv$b; writeToExternalFile
	c ()V writeHeader
	f (Lbra;)I getOffset
	d (Lbra;)Z hasChunk
	g (Lbra;)I getOffsetIndex
	close ()V close
	d ()V padToFullSector
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$writeToExternalFile$1
	h (Lbra;)V lambda$write$0
	a (Lcgv;)Lcgx; access$000
	<clinit> ()V <clinit>
cgv$a net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	b pos
	a this$0
	<init> (Lcgv;Lbra;)V <init>
	close ()V close
cgv$b net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
	run ()V run
cgw net/minecraft/world/level/chunk/storage/RegionFileStorage
	a regionCache
	b folder
	c sync
	<init> (Ljava/io/File;Z)V <init>
	b (Lbra;)Lcgv; getRegionFile
	a (Lbra;)Lmd; read
	a (Lbra;Lmd;)V write
	close ()V close
	a ()V flush
cgx net/minecraft/world/level/chunk/storage/RegionFileVersion
	d VERSIONS
	a VERSION_GZIP
	b VERSION_DEFLATE
	c VERSION_NONE
	e id
	f inputWrapper
	g outputWrapper
	<init> (ILcgx$a;Lcgx$a;)V <init>
	a (Lcgx;)Lcgx; register
	a (I)Lcgx; fromId
	b (I)Z isValidVersion
	a ()I getId
	a (Ljava/io/OutputStream;)Ljava/io/OutputStream; wrap
	a (Ljava/io/InputStream;)Ljava/io/InputStream; wrap
	b (Ljava/io/OutputStream;)Ljava/io/OutputStream; lambda$static$1
	b (Ljava/io/InputStream;)Ljava/io/InputStream; lambda$static$0
	<clinit> ()V <clinit>
cgx$a net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
	wrap (Ljava/lang/Object;)Ljava/lang/Object; wrap
cgy net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b worker
	c storage
	d dirty
	e codec
	f factory
	g fixerUpper
	h type
	<init> (Ljava/io/File;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Lafx;Z)V <init>
	a (Ljava/util/function/BooleanSupplier;)V tick
	c (J)Ljava/util/Optional; get
	d (J)Ljava/util/Optional; getOrLoad
	b (Lgp;)Z outsideStoredRange
	e (J)Ljava/lang/Object; getOrCreate
	b (Lbra;)V readColumn
	c (Lbra;)Lmd; tryRead
	a (Lbra;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V readColumn
	d (Lbra;)V writeColumn
	a (Lbra;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; writeColumn
	b (J)V onSectionLoad
	a (J)V setDirty
	a (Lcom/mojang/serialization/Dynamic;)I getVersion
	a (Lbra;)V flush
	close ()V close
	a (Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V lambda$writeColumn$5
	f (J)V lambda$writeColumn$4
	a (JZLjava/lang/Object;)V lambda$readColumn$3
	a (JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$readColumn$2
	g (J)V lambda$null$1
	h (J)V lambda$getOrCreate$0
	<clinit> ()V <clinit>
cgz net/minecraft/world/level/chunk/storage/package-info
cha net/minecraft/world/level/dimension/DimensionType
	a OVERWORLD_EFFECTS
	b NETHER_EFFECTS
	c END_EFFECTS
	d DIRECT_CODEC
	e MOON_BRIGHTNESS_PER_PHASE
	f OVERWORLD_LOCATION
	g NETHER_LOCATION
	h END_LOCATION
	i DEFAULT_OVERWORLD
	j DEFAULT_NETHER
	k DEFAULT_END
	l OVERWORLD_CAVES_LOCATION
	m DEFAULT_OVERWORLD_CAVES
	n CODEC
	o fixedTime
	p hasSkylight
	q hasCeiling
	r ultraWarm
	s natural
	t coordinateScale
	u createDragonFight
	v piglinSafe
	w bedWorks
	x respawnAnchorWorks
	y hasRaids
	z logicalHeight
	A biomeZoomer
	B infiniburn
	C effectsLocation
	D ambientLight
	E brightnessRamp
	<init> (Ljava/util/OptionalLong;ZZZZDZZZZILvk;Lvk;F)V <init>
	<init> (Ljava/util/OptionalLong;ZZZZDZZZZZILbsx;Lvk;Lvk;F)V <init>
	a (F)[F fillBrightnessRamp
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; parseLegacy
	a (Lgn$b;)Lgn$b; registerBuiltin
	a (Lgm;Lgm;J)Lcfv; defaultEndGenerator
	b (Lgm;Lgm;J)Lcfv; defaultNetherGenerator
	a (Lgm;Lgm;Lgm;J)Lgi; defaultDimensions
	a (Lcha;Lcha;)D getTeleportationScale
	a ()Ljava/lang/String; getFileSuffix
	a (Lvj;Ljava/io/File;)Ljava/io/File; getStorageFolder
	b ()Z hasSkyLight
	c ()Z hasCeiling
	d ()Z ultraWarm
	e ()Z natural
	f ()D coordinateScale
	g ()Z piglinSafe
	h ()Z bedWorks
	i ()Z respawnAnchorWorks
	j ()Z hasRaids
	k ()I logicalHeight
	l ()Z createDragonFight
	m ()Lbsx; getBiomeZoomer
	n ()Z hasFixedTime
	a (J)F timeOfDay
	b (J)I moonPhase
	a (I)F brightness
	o ()Laej; infiniburn
	p ()Lvk; effectsLocation
	a (Lcha;)Z equalTo
	a (Lgm;)Lcha; lambda$defaultDimensions$10
	b (Lgm;)Lcha; lambda$defaultDimensions$9
	c (Lgm;)Lchm; lambda$defaultNetherGenerator$8
	d (Lgm;)Lchm; lambda$defaultEndGenerator$7
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	b (Lcha;)Ljava/lang/Float; lambda$null$5
	c (Lcha;)Lvk; lambda$null$4
	d (Lcha;)Lvk; lambda$null$3
	e (Lcha;)Ljava/util/OptionalLong; lambda$null$2
	a (Ljava/util/OptionalLong;)Ljava/util/Optional; lambda$null$1
	a (Ljava/util/Optional;)Ljava/util/OptionalLong; lambda$null$0
	<clinit> ()V <clinit>
chb net/minecraft/world/level/dimension/LevelStem
	a CODEC
	b OVERWORLD
	c NETHER
	d END
	e BUILTIN_ORDER
	f type
	g generator
	<init> (Ljava/util/function/Supplier;Lcfv;)V <init>
	a ()Ljava/util/function/Supplier; typeSupplier
	b ()Lcha; type
	c ()Lcfv; generator
	a (Lgi;)Lgi; sortMap
	a (JLgi;)Z stable
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
chc net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	a START
	b PREPARING_TO_SUMMON_PILLARS
	c SUMMONING_PILLARS
	d SUMMONING_DRAGON
	e END
	f $VALUES
	values ()[Lchc; values
	valueOf (Ljava/lang/String;)Lchc; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Laag;Lchd;Ljava/util/List;ILfx;)V tick
	<init> (Ljava/lang/String;ILchc$1;)V <init>
	<clinit> ()V <clinit>
chc$1 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	<init> (Ljava/lang/String;I)V <init>
	a (Laag;Lchd;Ljava/util/List;ILfx;)V tick
chc$2 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	<init> (Ljava/lang/String;I)V <init>
	a (Laag;Lchd;Ljava/util/List;ILfx;)V tick
chc$3 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	<init> (Ljava/lang/String;I)V <init>
	a (Laag;Lchd;Ljava/util/List;ILfx;)V tick
chc$4 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	<init> (Ljava/lang/String;I)V <init>
	a (Laag;Lchd;Ljava/util/List;ILfx;)V tick
chc$5 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	<init> (Ljava/lang/String;I)V <init>
	a (Laag;Lchd;Ljava/util/List;ILfx;)V tick
chd net/minecraft/world/level/dimension/end/EndDragonFight
	a LOGGER
	b VALID_PLAYER
	c dragonEvent
	d level
	e gateways
	f exitPortalPattern
	g ticksSinceDragonSeen
	h crystalsAlive
	i ticksSinceCrystalsScanned
	j ticksSinceLastPlayerScan
	k dragonKilled
	l previouslyKilled
	m dragonUUID
	n needsStateScanning
	o portalLocation
	p respawnStage
	q respawnTime
	r respawnCrystals
	<init> (Laag;JLmd;)V <init>
	a ()Lmd; saveData
	b ()V tick
	g ()V scanState
	h ()V findOrCreateDragon
	a (Lchc;)V setRespawnStage
	i ()Z hasActiveExitPortal
	j ()Lcej$b; findExitPortal
	k ()Z isArenaLoaded
	l ()V updatePlayers
	m ()V updateCrystalCount
	a (Lbbo;)V setDragonKilled
	n ()V spawnNewGateway
	a (Lfx;)V spawnNewGateway
	a (Z)V spawnExitPortal
	o ()Lbbo; createNewDragon
	b (Lbbo;)V updateDragon
	c ()I getCrystalsAlive
	a (Lbbn;Laph;)V onCrystalDestroyed
	d ()Z hasPreviouslyKilledDragon
	e ()V tryRespawn
	a (Ljava/util/List;)V respawnDragon
	f ()V resetSpikeCrystals
	<clinit> ()V <clinit>
che net/minecraft/world/level/dimension/end/package-info
chf net/minecraft/world/level/dimension/package-info
chg net/minecraft/world/level/levelgen/DebugLevelSource
	d CODEC
	g ALL_BLOCKS
	h GRID_WIDTH
	i GRID_HEIGHT
	e AIR
	f BARRIER
	j biomes
	<init> (Lgm;)V <init>
	g ()Lgm; biomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lcfv; withSeed
	a (Laam;Lcft;)V buildSurfaceAndBedrock
	a (JLbsu;Lcft;Lchj$a;)V applyCarvers
	a (Laam;Lbsk;)V applyBiomeDecoration
	a (Lbrv;Lbsk;Lcft;)V fillFromNoise
	a (IILchk$a;)I getBaseHeight
	a (II)Lbqz; getBaseColumn
	b (II)Lcee; getBlockStateFor
	a (Lbul;)Ljava/util/stream/Stream; lambda$static$0
	<clinit> ()V <clinit>
chh net/minecraft/world/level/levelgen/Decoratable
	a (Lcpl;)Ljava/lang/Object; decorated
	a (I)Ljava/lang/Object; chance
	a (Laft;)Ljava/lang/Object; count
	b (I)Ljava/lang/Object; count
	c (I)Ljava/lang/Object; countRandom
	d (I)Ljava/lang/Object; range
	a ()Ljava/lang/Object; squared
chi net/minecraft/world/level/levelgen/FlatLevelSource
	d CODEC
	e settings
	<init> (Lcpc;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lcfv; withSeed
	g ()Lcpc; settings
	a (Laam;Lcft;)V buildSurfaceAndBedrock
	c ()I getSpawnHeight
	a (Lbrv;Lbsk;Lcft;)V fillFromNoise
	a (IILchk$a;)I getBaseHeight
	a (II)Lbqz; getBaseColumn
	a (I)[Lcee; lambda$getBaseColumn$1
	a (Lcee;)Lcee; lambda$getBaseColumn$0
	<clinit> ()V <clinit>
chj net/minecraft/world/level/levelgen/GenerationStep
	<init> ()V <init>
chj$a net/minecraft/world/level/levelgen/GenerationStep$Carving
	a AIR
	b LIQUID
	c CODEC
	d BY_NAME
	e name
	f $VALUES
	values ()[Lchj$a; values
	valueOf (Ljava/lang/String;)Lchj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lchj$a; byName
	a ()Ljava/lang/String; getSerializedName
	a (Lchj$a;)Lchj$a; lambda$static$0
	<clinit> ()V <clinit>
chj$b net/minecraft/world/level/levelgen/GenerationStep$Decoration
	a RAW_GENERATION
	b LAKES
	c LOCAL_MODIFICATIONS
	d UNDERGROUND_STRUCTURES
	e SURFACE_STRUCTURES
	f STRONGHOLDS
	g UNDERGROUND_ORES
	h UNDERGROUND_DECORATION
	i VEGETAL_DECORATION
	j TOP_LAYER_MODIFICATION
	k $VALUES
	values ()[Lchj$b; values
	valueOf (Ljava/lang/String;)Lchj$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
chk net/minecraft/world/level/levelgen/Heightmap
	a NOT_AIR
	b MATERIAL_MOTION_BLOCKING
	c data
	d isOpaque
	e chunk
	<init> (Lcft;Lchk$a;)V <init>
	a (Lcft;Ljava/util/Set;)V primeHeightmaps
	a (IIILcee;)Z update
	a (II)I getFirstAvailable
	b (II)I getHighestTaken
	a (I)I getFirstAvailable
	a (III)V setHeight
	a ([J)V setRawData
	a ()[J getRawData
	c (II)I getIndex
	a (Lcee;)Z lambda$static$1
	b (Lcee;)Z lambda$static$0
	b ()Ljava/util/function/Predicate; access$000
	c ()Ljava/util/function/Predicate; access$100
	<clinit> ()V <clinit>
chk$a net/minecraft/world/level/levelgen/Heightmap$Types
	a WORLD_SURFACE_WG
	b WORLD_SURFACE
	c OCEAN_FLOOR_WG
	d OCEAN_FLOOR
	e MOTION_BLOCKING
	f MOTION_BLOCKING_NO_LEAVES
	g CODEC
	h serializationKey
	i usage
	j isOpaque
	k REVERSE_LOOKUP
	l $VALUES
	values ()[Lchk$a; values
	valueOf (Ljava/lang/String;)Lchk$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lchk$b;Ljava/util/function/Predicate;)V <init>
	b ()Ljava/lang/String; getSerializationKey
	c ()Z sendToClient
	d ()Z keepAfterWorldgen
	a (Ljava/lang/String;)Lchk$a; getFromKey
	e ()Ljava/util/function/Predicate; isOpaque
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Lcee;)Z lambda$static$1
	b (Lcee;)Z lambda$static$0
	<clinit> ()V <clinit>
chk$b net/minecraft/world/level/levelgen/Heightmap$Usage
	a WORLDGEN
	b LIVE_WORLD
	c CLIENT
	d $VALUES
	values ()[Lchk$b; values
	valueOf (Ljava/lang/String;)Lchk$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
chl net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	d CODEC
	i BEARD_KERNEL
	j BIOME_WEIGHTS
	k AIR
	l chunkHeight
	m chunkWidth
	n chunkCountX
	o chunkCountY
	p chunkCountZ
	e random
	q minLimitPerlinNoise
	r maxLimitPerlinNoise
	s mainPerlinNoise
	t surfaceNoise
	u depthNoise
	v islandNoise
	f defaultBlock
	g defaultFluid
	w seed
	h settings
	x height
	<init> (Lbsv;JLjava/util/function/Supplier;)V <init>
	<init> (Lbsv;Lbsv;JLjava/util/function/Supplier;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lcfv; withSeed
	a (JLvj;)Z stable
	a (IIIDDDD)D sampleAndClampNoise
	b (II)[D makeAndFillNoiseColumn
	a ([DII)V fillNoiseColumn
	c (II)D getRandomDensity
	a (IILchk$a;)I getBaseHeight
	a (II)Lbqz; getBaseColumn
	a (II[Lcee;Ljava/util/function/Predicate;)I iterateNoiseColumn
	a (DI)Lcee; generateBaseState
	a (Laam;Lcft;)V buildSurfaceAndBedrock
	a (Lcft;Ljava/util/Random;)V setBedrock
	a (Lbrv;Lbsk;Lcft;)V fillFromNoise
	a (III)D getContribution
	b (III)D computeContribution
	e ()I getGenDepth
	f ()I getSeaLevel
	a (Lbss;Lbsk;Laql;Lfx;)Ljava/util/List; getMobsAt
	a (Laam;)V spawnOriginalMobs
	a (Lbra;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Lcrs;)V lambda$fillFromNoise$6
	a ([F)V lambda$static$5
	b ([F)V lambda$static$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lchl;)Ljava/util/function/Supplier; lambda$null$2
	b (Lchl;)Ljava/lang/Long; lambda$null$1
	c (Lchl;)Lbsv; lambda$null$0
	<clinit> ()V <clinit>
chm net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	a DIRECT_CODEC
	b CODEC
	i structureSettings
	j noiseSettings
	k defaultBlock
	l defaultFluid
	m bedrockRoofPosition
	n bedrockFloorPosition
	o seaLevel
	p disableMobGeneration
	c OVERWORLD
	d AMPLIFIED
	e NETHER
	f END
	g CAVES
	h FLOATING_ISLANDS
	q BUILTIN_OVERWORLD
	<init> (Lchs;Lcho;Lcee;Lcee;IIIZ)V <init>
	a ()Lchs; structureSettings
	b ()Lcho; noiseSettings
	c ()Lcee; getDefaultBlock
	d ()Lcee; getDefaultFluid
	e ()I getBedrockRoofPosition
	f ()I getBedrockFloorPosition
	g ()I seaLevel
	h ()Z disableMobGeneration
	a (Lvj;)Z stable
	a (Lvj;Lchm;)Lchm; register
	i ()Lchm; bootstrap
	a (Lchs;Lcee;Lcee;Lvk;ZZ)Lchm; end
	a (Lchs;Lcee;Lcee;Lvk;)Lchm; nether
	a (Lchs;ZLvk;)Lchm; overworld
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
chn net/minecraft/world/level/levelgen/NoiseSamplingSettings
	b SCALE_RANGE
	a CODEC
	c xzScale
	d yScale
	e xzFactor
	f yFactor
	<init> (DDDD)V <init>
	a ()D xzScale
	b ()D yScale
	c ()D xzFactor
	d ()D yFactor
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cho net/minecraft/world/level/levelgen/NoiseSettings
	a CODEC
	b height
	c noiseSamplingSettings
	d topSlideSettings
	e bottomSlideSettings
	f noiseSizeHorizontal
	g noiseSizeVertical
	h densityFactor
	i densityOffset
	j useSimplexSurfaceNoise
	k randomDensityOffset
	l islandNoiseOverride
	m isAmplified
	<init> (ILchn;Lchp;Lchp;IIDDZZZZ)V <init>
	a ()I height
	b ()Lchn; noiseSamplingSettings
	c ()Lchp; topSlideSettings
	d ()Lchp; bottomSlideSettings
	e ()I noiseSizeHorizontal
	f ()I noiseSizeVertical
	g ()D densityFactor
	h ()D densityOffset
	i ()Z useSimplexSurfaceNoise
	j ()Z randomDensityOffset
	k ()Z islandNoiseOverride
	l ()Z isAmplified
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
chp net/minecraft/world/level/levelgen/NoiseSlideSettings
	a CODEC
	b target
	c size
	d offset
	<init> (III)V <init>
	a ()I target
	b ()I size
	c ()I offset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
chq net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	<init> ()V <init>
	a (Laag;ZZ)I tick
	a (Laag;Lfx;Ljava/util/Random;Z)Z spawnPatrolMember
chr net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	<init> ()V <init>
	a (Laag;ZZ)I tick
chs net/minecraft/world/level/levelgen/StructureSettings
	a CODEC
	b DEFAULTS
	c DEFAULT_STRONGHOLD
	d structureConfig
	e stronghold
	<init> (Ljava/util/Optional;Ljava/util/Map;)V <init>
	<init> (Z)V <init>
	a ()Ljava/util/Map; structureConfig
	a (Lckx;)Lcmv; getConfig
	b ()Lcmu; stronghold
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lchs;)Ljava/util/Map; lambda$null$1
	b (Lchs;)Ljava/util/Optional; lambda$null$0
	<clinit> ()V <clinit>
cht net/minecraft/world/level/levelgen/WorldGenSettings
	a CODEC
	b LOGGER
	c seed
	d generateFeatures
	e generateBonusChest
	f dimensions
	g legacyCustomOptions
	m ()Lcom/mojang/serialization/DataResult; guardExperimental
	n ()Z stable
	<init> (JZZLgi;)V <init>
	<init> (JZZLgi;Ljava/util/Optional;)V <init>
	a (Lgn;)Lcht; demoSettings
	a (Lgm;Lgm;Lgm;)Lcht; makeDefault
	a (Lgm;Lgm;J)Lchl; makeDefaultOverworld
	a ()J seed
	b ()Z generateFeatures
	c ()Z generateBonusChest
	a (Lgm;Lgi;Lcfv;)Lgi; withOverworld
	a (Lgi;Ljava/util/function/Supplier;Lcfv;)Lgi; withOverworld
	d ()Lgi; dimensions
	e ()Lcfv; overworld
	f ()Lcom/google/common/collect/ImmutableSet; levels
	g ()Z isDebug
	h ()Z isFlatWorld
	i ()Z isOldCustomizedWorld
	j ()Lcht; withBonusChest
	k ()Lcht; withFeaturesToggled
	l ()Lcht; withBonusChestToggled
	a (Lgn;Ljava/util/Properties;)Lcht; create
	a (ZLjava/util/OptionalLong;)Lcht; withSeed
	a (Lgm;)Lchm; lambda$create$8
	b (Lgm;)Lchm; lambda$create$7
	c (Lgm;)Lcpc; lambda$create$6
	a (Ljava/lang/String;)Ljava/lang/String; lambda$create$5
	a (Ljava/util/Map$Entry;)Lvj; lambda$levels$4
	a (Lchb;Lgm;)Lcha; lambda$withOverworld$3
	d (Lgm;)Lchm; lambda$makeDefaultOverworld$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcht;)Ljava/util/Optional; lambda$null$0
	<clinit> ()V <clinit>
chu net/minecraft/world/level/levelgen/WorldgenRandom
	a count
	<init> ()V <init>
	<init> (J)V <init>
	a ()I getCount
	a (I)V consumeCount
	next (I)I next
	a (II)J setBaseChunkSeed
	a (JII)J setDecorationSeed
	b (JII)J setFeatureSeed
	c (JII)J setLargeFeatureSeed
	a (JIII)J setLargeFeatureWithSalt
	a (IIJJ)Ljava/util/Random; seedSlimeChunk
chv net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m rs
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;IILcmh;)Z isStartChunk
	a (Lcft;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcmh;)Z carve
	a (Lcft;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V genCanyon
	a (DDDI)Z skip
	a (Ljava/util/Random;IILchw;)Z isStartChunk
	a (Lcft;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lchw;)Z carve
chw net/minecraft/world/level/levelgen/carver/CarverConfiguration
	a NONE
	<clinit> ()V <clinit>
chx net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	<init> (Lcom/mojang/serialization/Codec;I)V <init>
	a (Ljava/util/Random;IILcmh;)Z isStartChunk
	a (Lcft;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcmh;)Z carve
	a ()I getCaveBound
	a (Ljava/util/Random;)F getThickness
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
	a (Lcft;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V genRoom
	a (Lcft;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V genTunnel
	a (DDDI)Z skip
	a (Ljava/util/Random;IILchw;)Z isStartChunk
	a (Lcft;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lchw;)Z carve
chy net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d worldCarver
	e config
	<init> (Lcid;Lchw;)V <init>
	a ()Lchw; config
	a (Ljava/util/Random;II)Z isStartChunk
	a (Lcft;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z carve
	a (Lchy;)Lcid; lambda$static$0
	<clinit> ()V <clinit>
chz net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()I getCaveBound
	a (Ljava/util/Random;)F getThickness
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
	a (Lcft;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lfx$a;Lfx$a;Lfx$a;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
cia net/minecraft/world/level/levelgen/carver/NoneCarverConfiguration
	b CODEC
	c INSTANCE
	<init> ()V <init>
	a ()Lcia; lambda$static$0
	<clinit> ()V <clinit>
cib net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcft;IIIIIIII)Z hasWater
	a (Lcft;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lfx$a;Lfx$a;Lfx$a;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
cic net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcft;IIIIIIII)Z hasWater
	a (Lcft;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lfx$a;Lfx$a;Lfx$a;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lcid;Lcft;Ljava/util/BitSet;Ljava/util/Random;Lfx$a;IIIIIIII)Z carveBlock
cid net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b NETHER_CAVE
	c CANYON
	d UNDERWATER_CANYON
	e UNDERWATER_CAVE
	f AIR
	g CAVE_AIR
	h WATER
	i LAVA
	j replaceableBlocks
	k liquids
	m configuredCodec
	l genHeight
	a (Ljava/lang/String;Lcid;)Lcid; register
	<init> (Lcom/mojang/serialization/Codec;I)V <init>
	a (Lchw;)Lchy; configured
	c ()Lcom/mojang/serialization/Codec; configuredCodec
	d ()I getRange
	a (Lcft;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z carveSphere
	a (Lcft;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lfx$a;Lfx$a;Lfx$a;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lcft;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lchw;)Z carve
	a (Ljava/util/Random;IILchw;)Z isStartChunk
	a (Lcee;)Z canReplaceBlock
	a (Lcee;Lcee;)Z canReplaceBlock
	a (Lcft;IIIIIIII)Z hasWater
	a (IIIIII)Z isEdge
	a (IIDDIIF)Z canReach
	a (DDDI)Z skip
	<clinit> ()V <clinit>
cie net/minecraft/world/level/levelgen/carver/package-info
cif net/minecraft/world/level/levelgen/feature/AbstractFlowerFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	a (Lbrv;Lfx;Lclx;)Z isValid
	a (Lclx;)I getCount
	a (Ljava/util/Random;Lfx;Lclx;)Lfx; getPos
	b (Ljava/util/Random;Lfx;Lclx;)Lcee; getRandomFlower
cig net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Ljava/util/Random;Lfx;Lcly;ILfx$a;)V placeTrunk
	a (Ljava/util/Random;)I getTreeHeight
	a (Lbrv;Lfx;ILfx$a;Lcly;)Z isValidPosition
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcly;)Z place
	a (IIII)I getTreeRadiusForHeight
	a (Lbrv;Ljava/util/Random;Lfx;ILfx$a;Lcly;)V makeCap
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cih net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	ab BAMBOO_FINAL_LARGE
	ac BAMBOO_TOP_LARGE
	ad BAMBOO_TOP_SMALL
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmh;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cii net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	a CANNOT_PLACE_ON
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclq;)Z place
	a (Lbrv;ILfx;II)Z placeColumn
	a (Lbrv;ILfx$a;I)Lfx; findSurface
	a (Lbrv;ILfx$a;)Z canPlaceAt
	a (Lbrv;Lfx$a;I)Lfx; findAir
	a (Lbrv;ILfx;)Z isAirOrLavaOcean
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cij net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbrv;Ljava/util/Random;Lfx;)V placeBaseHangOff
	b (Lbrv;Ljava/util/Random;Lfx;)Z placeHangOff
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cik net/minecraft/world/level/levelgen/feature/BaseDiskFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclv;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cil net/minecraft/world/level/levelgen/feature/BastionFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclz;)Z isFeatureChunk
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
cim net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclp;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cin net/minecraft/world/level/levelgen/feature/BlockPileFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclo;)Z place
	a (Lbrv;Lfx;Ljava/util/Random;)Z mayPlaceOn
	a (Lbrv;Lfx;Ljava/util/Random;Lclo;)V tryPlaceBlock
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cio net/minecraft/world/level/levelgen/feature/BlueIceFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cip net/minecraft/world/level/levelgen/feature/BonusChestFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ciq net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcmh;)Z isFeatureChunk
	a ()Lckx$a; getStartFactory
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
ciq$a net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcmh;)V generatePieces
	a ()Lfx; getLocatePos
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cir net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cis net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d LOGGER
	e feature
	f config
	<init> (Lcji;Lclx;)V <init>
	b ()Lcji; feature
	c ()Lclx; config
	b (Lcpl;)Lcis; decorated
	a (F)Lclg; weighted
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;)Z place
	d ()Ljava/util/stream/Stream; getFeatures
	a (Lcpl;)Ljava/lang/Object; decorated
	e ()Lcis; lambda$decorated$1
	a (Lcis;)Lcji; lambda$static$0
	<clinit> ()V <clinit>
cit net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d feature
	e config
	<init> (Lckx;Lclx;)V <init>
	a (Lgn;Lcfv;Lbsv;Lcst;JLbra;Lbss;ILcmv;)Lcrs; generate
	a (Lcit;)Lckx; lambda$static$0
	<clinit> ()V <clinit>
ciu net/minecraft/world/level/levelgen/feature/CoralClawFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Ljava/util/Random;Lfx;Lcee;)Z placeFeature
civ net/minecraft/world/level/levelgen/feature/CoralFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbrv;Ljava/util/Random;Lfx;Lcee;)Z placeFeature
	b (Lbrv;Ljava/util/Random;Lfx;Lcee;)Z placeCoralBlock
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ciw net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Ljava/util/Random;Lfx;Lcee;)Z placeFeature
cix net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Ljava/util/Random;Lfx;Lcee;)Z placeFeature
ciy net/minecraft/world/level/levelgen/feature/DecoratedFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcls;)Z place
	toString ()Ljava/lang/String; toString
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	a (Lcls;Lbso;Lcfv;Ljava/util/Random;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lfx;)V lambda$place$0
ciz net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Lfx;Lcmk;)Z isValid
	a (Lcmk;)I getCount
	a (Ljava/util/Random;Lfx;Lcmk;)Lfx; getPos
	b (Ljava/util/Random;Lfx;Lcmk;)Lcee; getRandomFlower
	b (Ljava/util/Random;Lfx;Lclx;)Lcee; getRandomFlower
	a (Ljava/util/Random;Lfx;Lclx;)Lfx; getPos
	a (Lclx;)I getCount
	a (Lbrv;Lfx;Lclx;)Z isValid
cja net/minecraft/world/level/levelgen/feature/DeltaFeature
	a CANNOT_REPLACE
	ab DIRECTIONS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclu;)Z place
	a (Lbrv;Lfx;Lclu;)Z isClear
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cjb net/minecraft/world/level/levelgen/feature/DesertPyramidFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
cjb$a net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cjc net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	ab sandSlab
	ac sandstone
	ad water
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cjd net/minecraft/world/level/levelgen/feature/DiskReplaceFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclv;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cje net/minecraft/world/level/levelgen/feature/EndCityFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	b ()Z linearSeparation
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcme;)Z isFeatureChunk
	a ()Lckx$a; getStartFactory
	b (IILcfv;)I getYPositionForFeature
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
	a (IILcfv;)I access$000
cje$a net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cjf net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclw;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	a (Lbso;Lfx;Lclw;Lfx;)V lambda$place$0
cjg net/minecraft/world/level/levelgen/feature/EndIslandFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjh net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a END_PODIUM_LOCATION
	ab active
	<init> (Z)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cji net/minecraft/world/level/levelgen/feature/Feature
	b NO_OP
	c TREE
	d FLOWER
	e NO_BONEMEAL_FLOWER
	f RANDOM_PATCH
	g BLOCK_PILE
	h SPRING
	i CHORUS_PLANT
	j EMERALD_ORE
	k VOID_START_PLATFORM
	l DESERT_WELL
	m FOSSIL
	n HUGE_RED_MUSHROOM
	o HUGE_BROWN_MUSHROOM
	p ICE_SPIKE
	q GLOWSTONE_BLOB
	r FREEZE_TOP_LAYER
	s VINES
	t MONSTER_ROOM
	u BLUE_ICE
	v ICEBERG
	w FOREST_ROCK
	x DISK
	y ICE_PATCH
	z LAKE
	A ORE
	B END_SPIKE
	C END_ISLAND
	D END_GATEWAY
	E SEAGRASS
	F KELP
	G CORAL_TREE
	H CORAL_MUSHROOM
	I CORAL_CLAW
	J SEA_PICKLE
	K SIMPLE_BLOCK
	L BAMBOO
	M HUGE_FUNGUS
	N NETHER_FOREST_VEGETATION
	O WEEPING_VINES
	P TWISTING_VINES
	Q BASALT_COLUMNS
	R DELTA_FEATURE
	S REPLACE_BLOBS
	T FILL_LAYER
	U BONUS_CHEST
	V BASALT_PILLAR
	W NO_SURFACE_ORE
	X RANDOM_SELECTOR
	Y SIMPLE_RANDOM_SELECTOR
	Z RANDOM_BOOLEAN_SELECTOR
	aa DECORATED
	a configuredCodec
	a (Ljava/lang/String;Lcji;)Lcji; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	b (Lclx;)Lcis; configured
	a (Lbsb;Lfx;Lcee;)V setBlock
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	a (Lbul;)Z isStone
	b (Lbul;)Z isDirt
	a (Lbrz;Lfx;)Z isGrassOrDirt
	b (Lbrz;Lfx;)Z isAir
	a (Lcee;)Z lambda$isGrassOrDirt$2
	a (Lcis;)Lclx; lambda$new$1
	a (Lclx;)Lcis; lambda$new$0
	<clinit> ()V <clinit>
cjj net/minecraft/world/level/levelgen/feature/FillLayerFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcma;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjk net/minecraft/world/level/levelgen/feature/FossilFeature
	a SPINE_1
	ab SPINE_2
	ac SPINE_3
	ad SPINE_4
	ae SPINE_1_COAL
	af SPINE_2_COAL
	ag SPINE_3_COAL
	ah SPINE_4_COAL
	ai SKULL_1
	aj SKULL_2
	ak SKULL_3
	al SKULL_4
	am SKULL_1_COAL
	an SKULL_2_COAL
	ao SKULL_3_COAL
	ap SKULL_4_COAL
	aq fossils
	ar fossilsCoal
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cjl net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjm net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Ljava/util/Random;Lfx;ILfx$a;Lcly;)V makeCap
	a (IIII)I getTreeRadiusForHeight
cjn net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	a CODEC
	b HUGE_CRIMSON_FUNGI_PLANTED_CONFIG
	c HUGE_CRIMSON_FUNGI_NOT_PLANTED_CONFIG
	d HUGE_WARPED_FUNGI_PLANTED_CONFIG
	e HUGE_WARPED_FUNGI_NOT_PLANTED_CONFIG
	f validBaseState
	g stemState
	h hatState
	i decorState
	j planted
	<init> (Lcee;Lcee;Lcee;Lcee;Z)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lcjn;)Ljava/lang/Boolean; lambda$null$4
	b (Lcjn;)Lcee; lambda$null$3
	c (Lcjn;)Lcee; lambda$null$2
	d (Lcjn;)Lcee; lambda$null$1
	e (Lcjn;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
cjo net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcjn;)Z place
	a (Lbrv;Lfx;Z)Z isReplaceable
	a (Lbrv;Ljava/util/Random;Lcjn;Lfx;IZ)V placeStem
	b (Lbrv;Ljava/util/Random;Lcjn;Lfx;IZ)V placeHat
	a (Lbrv;Ljava/util/Random;Lcjn;Lfx$a;FFF)V placeHatBlock
	a (Lbrv;Ljava/util/Random;Lfx;Lcee;Z)V placeHatDropBlock
	a (Lfx;Lbrv;Ljava/util/Random;)V tryPlaceWeepingVines
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	a (ZLcee;)Z lambda$isReplaceable$0
cjp net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbrv;Ljava/util/Random;Lfx;ILfx$a;Lcly;)V makeCap
	a (IIII)I getTreeRadiusForHeight
cjq net/minecraft/world/level/levelgen/feature/IcePatchFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclv;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjr net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjs net/minecraft/world/level/levelgen/feature/IcebergFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclp;)Z place
	a (Ljava/util/Random;Lbrv;IILfx;ZIDI)V generateCutOut
	a (IILfx;Lbrv;ZDLfx;II)V carve
	a (Lbrv;Lfx;)V removeFloatingSnowLayer
	a (Lbrv;Ljava/util/Random;Lfx;IIIIIIZIDZLcee;)V generateIcebergBlock
	a (Lfx;Lbrv;Ljava/util/Random;IIZZLcee;)V setIcebergBlock
	a (III)I getEllipseC
	a (IILfx;ILjava/util/Random;)D signedDistanceCircle
	a (IILfx;IID)D signedDistanceEllipse
	a (Ljava/util/Random;III)I heightDependentRadiusRound
	b (III)I heightDependentRadiusEllipse
	b (Ljava/util/Random;III)I heightDependentRadiusSteep
	c (Lbul;)Z isIcebergBlock
	a (Lbqz;Lfx;)Z belowIsAir
	a (Lbrv;Lfx;IIZI)V smooth
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjt net/minecraft/world/level/levelgen/feature/IglooFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
cjt$a net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cju net/minecraft/world/level/levelgen/feature/JigsawFeature
	u startY
	v doExpansionHack
	w projectStartToHeightmap
	<init> (Lcom/mojang/serialization/Codec;IZZ)V <init>
	a ()Lckx$a; getStartFactory
	a (Lckx;IILcqx;IJ)Lcrs; lambda$getStartFactory$0
	a (Lcju;)I access$000
	b (Lcju;)Z access$100
	c (Lcju;)Z access$200
cju$a net/minecraft/world/level/levelgen/feature/JigsawFeature$FeatureStart
	e feature
	<init> (Lcju;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lclz;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cjv net/minecraft/world/level/levelgen/feature/JunglePyramidFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
cjv$a net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cjw net/minecraft/world/level/levelgen/feature/KelpFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cjx net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclp;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cjy net/minecraft/world/level/levelgen/feature/MineshaftFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcmb;)Z isFeatureChunk
	a ()Lckx$a; getStartFactory
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
cjy$a net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcmb;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cjy$b net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type
	a NORMAL
	b MESA
	c CODEC
	d BY_NAME
	e name
	f $VALUES
	values ()[Lcjy$b; values
	valueOf (Ljava/lang/String;)Lcjy$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lcjy$b; byName
	a (I)Lcjy$b; byId
	a ()Ljava/lang/String; getSerializedName
	a (Lcjy$b;)Lcjy$b; lambda$static$0
	<clinit> ()V <clinit>
cjz net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	ab MOBS
	ac AIR
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Ljava/util/Random;)Laqb; randomEntityId
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cka net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclo;)Z place
	a (Lbrv;Ljava/util/Random;Lfx;Lclo;II)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckb net/minecraft/world/level/levelgen/feature/NetherFortressFeature
	u FORTRESS_ENEMIES
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcme;)Z isFeatureChunk
	a ()Lckx$a; getStartFactory
	c ()Ljava/util/List; getSpecialEnemies
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
	<clinit> ()V <clinit>
ckb$a net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
ckc net/minecraft/world/level/levelgen/feature/NoOpFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckd net/minecraft/world/level/levelgen/feature/NoSurfaceOreFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmg;)Z place
	a (Lfx$a;Ljava/util/Random;Lfx;I)V offsetTargetPos
	a (Ljava/util/Random;I)I getRandomPlacementInOneAxisRelativeToOrigin
	a (Lbrv;Lfx;)Z isFacingAir
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cke net/minecraft/world/level/levelgen/feature/OceanMonumentFeature
	u MONUMENT_ENEMIES
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	b ()Z linearSeparation
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcme;)Z isFeatureChunk
	a ()Lckx$a; getStartFactory
	c ()Ljava/util/List; getSpecialEnemies
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
	<clinit> ()V <clinit>
cke$a net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart
	e isCreated
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	b (II)V generatePieces
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;)V placeInChunk
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
ckf net/minecraft/world/level/levelgen/feature/OreFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmg;)Z place
	a (Lbrv;Ljava/util/Random;Lcmg;DDDDDDIIIII)Z doPlace
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckg net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature
	u OUTPOST_ENEMIES
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	c ()Ljava/util/List; getSpecialEnemies
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclz;)Z isFeatureChunk
	a (Lcfv;JLchu;II)Z isNearVillage
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
	<clinit> ()V <clinit>
ckh net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmi;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cki net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmk;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckj net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmj;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckk net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmn;)Z place
	a (Lbrv;Lfx$a;Lbul;)Lfx; findTarget
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckl net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmm;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckm net/minecraft/world/level/levelgen/feature/RuinedPortalFeature
	u STRUCTURE_LOCATION_PORTALS
	v STRUCTURE_LOCATION_GIANT_PORTALS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
	b (Lfx;Lbss;)Z isCold
	b (Ljava/util/Random;Lcfv;Lcrm$b;ZIILcqx;)I findSuitableY
	a (Ljava/util/Random;II)I randomIntInclusive
	b (Ljava/util/Random;II)I getRandomWithinInterval
	a (Lcfv;Lfx;)Lbqz; lambda$findSuitableY$0
	d ()[Ljava/lang/String; access$000
	e ()[Ljava/lang/String; access$100
	a (Ljava/util/Random;Lcfv;Lcrm$b;ZIILcqx;)I access$200
	a (Lfx;Lbss;)Z access$300
	<clinit> ()V <clinit>
ckm$a net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcmo;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
ckm$b net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type
	a STANDARD
	b DESERT
	c JUNGLE
	d SWAMP
	e MOUNTAIN
	f OCEAN
	g NETHER
	h CODEC
	i BY_NAME
	j name
	k $VALUES
	values ()[Lckm$b; values
	valueOf (Ljava/lang/String;)Lckm$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lckm$b; byName
	a ()Ljava/lang/String; getSerializedName
	a (Lckm$b;)Lckm$b; lambda$static$0
	<clinit> ()V <clinit>
ckn net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclr;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cko net/minecraft/world/level/levelgen/feature/SeagrassFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmh;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckp net/minecraft/world/level/levelgen/feature/ShipwreckFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
ckp$a net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcmp;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
ckq net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmq;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckr net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmr;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cks net/minecraft/world/level/levelgen/feature/SimulatedFeature
	a (Lzz;Ljava/util/Random;Lfx;Lclx;)V simulate
ckt net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
cku net/minecraft/world/level/levelgen/feature/SpikeFeature
	a SPIKE_CACHE
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;)Ljava/util/List; getSpikesForLevel
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcms;)Z place
	a (Lbsh;Ljava/util/Random;Lcms;Lcku$a;)V placeSpike
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cku$1 net/minecraft/world/level/levelgen/feature/SpikeFeature$1
cku$a net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a CODEC
	b centerX
	c centerZ
	d radius
	e height
	f guarded
	g topBoundingBox
	<init> (IIIIZ)V <init>
	a (Lfx;)Z isCenterWithinChunk
	a ()I getCenterX
	b ()I getCenterZ
	c ()I getRadius
	d ()I getHeight
	e ()Z isGuarded
	f ()Ldcf; getTopBoundingBox
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lcku$a;)Ljava/lang/Boolean; lambda$null$4
	b (Lcku$a;)Ljava/lang/Integer; lambda$null$3
	c (Lcku$a;)Ljava/lang/Integer; lambda$null$2
	d (Lcku$a;)Ljava/lang/Integer; lambda$null$1
	e (Lcku$a;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cku$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	<init> ()V <init>
	a (Ljava/lang/Long;)Ljava/util/List; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
	<init> (Lcku$1;)V <init>
ckv net/minecraft/world/level/levelgen/feature/SpringFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmt;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
ckw net/minecraft/world/level/levelgen/feature/StrongholdFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcme;)Z isFeatureChunk
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
ckw$a net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart
	e seed
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
ckx net/minecraft/world/level/levelgen/feature/StructureFeature
	a STRUCTURES_REGISTRY
	u STEP
	v LOGGER
	b PILLAGER_OUTPOST
	c MINESHAFT
	d WOODLAND_MANSION
	e JUNGLE_TEMPLE
	f DESERT_PYRAMID
	g IGLOO
	h RUINED_PORTAL
	i SHIPWRECK
	j SWAMP_HUT
	k STRONGHOLD
	l OCEAN_MONUMENT
	m OCEAN_RUIN
	n NETHER_BRIDGE
	o END_CITY
	p BURIED_TREASURE
	q VILLAGE
	r NETHER_FOSSIL
	s BASTION_REMNANT
	t NOISE_AFFECTING_FEATURES
	w JIGSAW_RENAME
	x RENAMES
	y configuredStructureCodec
	a (Ljava/lang/String;Lckx;Lchj$b;)Lckx; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	f ()Lchj$b; step
	g ()V bootstrap
	a (Lcst;Lmd;J)Lcrs; loadStaticStart
	h ()Lcom/mojang/serialization/Codec; configuredStructureCodec
	a (Lclx;)Lcit; configured
	a (Lbrw;Lbsk;Lfx;IZJLcmv;)Lfx; getNearestGeneratedFeature
	b ()Z linearSeparation
	a (Lcmv;JLchu;II)Lbra; getPotentialFeatureChunk
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
	a (IILcqx;IJ)Lcrs; createStart
	a (Lgn;Lcfv;Lbsv;Lcst;JLbra;Lbss;ILchu;Lcmv;Lclx;)Lcrs; generate
	a ()Lckx$a; getStartFactory
	i ()Ljava/lang/String; getFeatureName
	c ()Ljava/util/List; getSpecialEnemies
	j ()Ljava/util/List; getSpecialAnimals
	a (Lcit;)Lclx; lambda$new$1
	b (Lclx;)Lcit; lambda$new$0
	<clinit> ()V <clinit>
ckx$a net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory
	create (Lckx;IILcqx;IJ)Lcrs; create
cky net/minecraft/world/level/levelgen/feature/StructurePieceType
	a MINE_SHAFT_CORRIDOR
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e NETHER_FORTRESS_BRIDGE_CROSSING
	f NETHER_FORTRESS_BRIDGE_END_FILLER
	g NETHER_FORTRESS_BRIDGE_STRAIGHT
	h NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	i NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	j NETHER_FORTRESS_CASTLE_ENTRANCE
	k NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	l NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	o NETHER_FORTRESS_CASTLE_STALK_ROOM
	p NETHER_FORTRESS_MONSTER_THRONE
	q NETHER_FORTRESS_ROOM_CROSSING
	r NETHER_FORTRESS_STAIRS_ROOM
	s NETHER_FORTRESS_START
	t STRONGHOLD_CHEST_CORRIDOR
	u STRONGHOLD_FILLER_CORRIDOR
	v STRONGHOLD_FIVE_CROSSING
	w STRONGHOLD_LEFT_TURN
	x STRONGHOLD_LIBRARY
	y STRONGHOLD_PORTAL_ROOM
	z STRONGHOLD_PRISON_HALL
	A STRONGHOLD_RIGHT_TURN
	B STRONGHOLD_ROOM_CROSSING
	C STRONGHOLD_STAIRS_DOWN
	D STRONGHOLD_START
	E STRONGHOLD_STRAIGHT
	F STRONGHOLD_STRAIGHT_STAIRS_DOWN
	G JUNGLE_PYRAMID_PIECE
	H OCEAN_RUIN
	I IGLOO
	J RUINED_PORTAL
	K SWAMPLAND_HUT
	L DESERT_PYRAMID_PIECE
	M OCEAN_MONUMENT_BUILDING
	N OCEAN_MONUMENT_CORE_ROOM
	O OCEAN_MONUMENT_DOUBLE_X_ROOM
	P OCEAN_MONUMENT_DOUBLE_XY_ROOM
	Q OCEAN_MONUMENT_DOUBLE_Y_ROOM
	R OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	S OCEAN_MONUMENT_DOUBLE_Z_ROOM
	T OCEAN_MONUMENT_ENTRY_ROOM
	U OCEAN_MONUMENT_PENTHOUSE
	V OCEAN_MONUMENT_SIMPLE_ROOM
	W OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	X OCEAN_MONUMENT_WING_ROOM
	Y END_CITY_PIECE
	Z WOODLAND_MANSION_PIECE
	aa BURIED_TREASURE_PIECE
	ab SHIPWRECK_PIECE
	ac NETHER_FOSSIL
	ad JIGSAW
	load (Lcst;Lmd;)Lcrr; load
	a (Lcky;Ljava/lang/String;)Lcky; setPieceId
	<clinit> ()V <clinit>
ckz net/minecraft/world/level/levelgen/feature/SwamplandHutFeature
	u SWAMPHUT_ENEMIES
	v SWAMPHUT_ANIMALS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
	c ()Ljava/util/List; getSpecialEnemies
	j ()Ljava/util/List; getSpecialAnimals
	<clinit> ()V <clinit>
ckz$a net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cla net/minecraft/world/level/levelgen/feature/TreeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	c (Lbrz;Lfx;)Z isFree
	f (Lbrz;Lfx;)Z isVine
	g (Lbrz;Lfx;)Z isBlockWater
	d (Lbrz;Lfx;)Z isAirOrLeaves
	h (Lbrz;Lfx;)Z isGrassOrDirtOrFarmland
	i (Lbrz;Lfx;)Z isReplaceablePlant
	b (Lbsb;Lfx;Lcee;)V setBlockKnownShape
	e (Lbrz;Lfx;)Z validTreePos
	a (Lbry;Ljava/util/Random;Lfx;Ljava/util/Set;Ljava/util/Set;Lcqx;Lcmw;)Z doPlace
	a (Lbrz;ILfx;Lcmw;)I getMaxFreeTreeHeight
	a (Lbsb;Lfx;Lcee;)V setBlock
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcmw;)Z place
	a (Lbrv;Lcqx;Ljava/util/Set;Ljava/util/Set;)Ldct; updateLeaves
	a (Lzz;Ljava/util/Random;Lfx;Lcmw;)V simulate
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	a (Lzz;Ljava/util/Random;Lfx;Lclx;)V simulate
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;Lcoo;)V lambda$place$7
	a (Lcmw;Lbry;Ljava/util/Random;IIILjava/util/Set;Lcqx;Lcni$b;)V lambda$doPlace$6
	a (Lcee;)Z lambda$isReplaceablePlant$5
	b (Lcee;)Z lambda$isGrassOrDirtOrFarmland$4
	c (Lcee;)Z lambda$isAirOrLeaves$3
	d (Lcee;)Z lambda$isBlockWater$2
	e (Lcee;)Z lambda$isVine$1
	f (Lcee;)Z lambda$isFree$0
clb net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbrv;Ljava/util/Random;Lfx;III)Z place
	b (Lbrv;Ljava/util/Random;Lfx;III)V placeTwistingVines
	a (Lbrv;Lfx$a;)Z findFirstAirBlockAboveGround
	a (Lbrv;Ljava/util/Random;Lfx$a;III)V placeWeepingVinesColumn
	a (Lbrv;Lfx;)Z isInvalidPlacementLocation
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
clc net/minecraft/world/level/levelgen/feature/VillageFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
cld net/minecraft/world/level/levelgen/feature/VinesFeature
	a DIRECTIONS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
cle net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_ORIGIN
	ab PLATFORM_ORIGIN_CHUNK
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (IIII)I checkerboardDistance
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
clf net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	a DIRECTIONS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lcme;)Z place
	a (Lbrv;Ljava/util/Random;Lfx;)V placeRoofNetherWart
	b (Lbrv;Ljava/util/Random;Lfx;)V placeRoofWeepingVines
	a (Lbrv;Ljava/util/Random;Lfx$a;III)V placeWeepingVinesColumn
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;Lclx;)Z place
	<clinit> ()V <clinit>
clg net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature
	a CODEC
	b feature
	c chance
	<init> (Lcis;F)V <init>
	<init> (Ljava/util/function/Supplier;F)V <init>
	a (Lbso;Lcfv;Ljava/util/Random;Lfx;)Z place
	a (Lcis;)Lcis; lambda$new$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lclg;)Ljava/lang/Float; lambda$null$1
	b (Lclg;)Ljava/util/function/Supplier; lambda$null$0
	<clinit> ()V <clinit>
clh net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	b ()Z linearSeparation
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lcme;)Z isFeatureChunk
	a ()Lckx$a; getStartFactory
	a (Lcfv;Lbsv;JLchu;IILbss;Lbra;Lclx;)Z isFeatureChunk
clh$a net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;)V placeInChunk
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
cli net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacer
	a CODEC
	<init> ()V <init>
	a (Lbrv;Lfx;Lcee;Ljava/util/Random;)V place
	a ()Lclj; type
	<clinit> ()V <clinit>
clj net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType
	a SIMPLE_BLOCK_PLACER
	b DOUBLE_PLANT_PLACER
	c COLUMN_PLACER
	d codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lclj; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
clk net/minecraft/world/level/levelgen/feature/blockplacers/ColumnPlacer
	b CODEC
	c minSize
	d extraSize
	<init> (II)V <init>
	a ()Lclj; type
	a (Lbrv;Lfx;Lcee;Ljava/util/Random;)V place
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lclk;)Ljava/lang/Integer; lambda$null$1
	b (Lclk;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cll net/minecraft/world/level/levelgen/feature/blockplacers/DoublePlantPlacer
	b CODEC
	c INSTANCE
	<init> ()V <init>
	a ()Lclj; type
	a (Lbrv;Lfx;Lcee;Ljava/util/Random;)V place
	b ()Lcll; lambda$static$0
	<clinit> ()V <clinit>
clm net/minecraft/world/level/levelgen/feature/blockplacers/SimpleBlockPlacer
	b CODEC
	c INSTANCE
	<init> ()V <init>
	a ()Lclj; type
	a (Lbrv;Lfx;Lcee;Ljava/util/Random;)V place
	b ()Lclm; lambda$static$0
	<clinit> ()V <clinit>
cln net/minecraft/world/level/levelgen/feature/blockplacers/package-info
clo net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	a CODEC
	b stateProvider
	<init> (Lcnq;)V <init>
	a (Lclo;)Lcnq; lambda$static$0
	<clinit> ()V <clinit>
clp net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	a CODEC
	b state
	<init> (Lcee;)V <init>
	a (Lclp;)Lcee; lambda$static$0
	<clinit> ()V <clinit>
clq net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	a CODEC
	b reach
	c height
	<init> (Laft;Laft;)V <init>
	am_ ()Laft; reach
	b ()Laft; height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lclq;)Laft; lambda$null$1
	b (Lclq;)Laft; lambda$null$0
	<clinit> ()V <clinit>
clr net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	a CODEC
	c count
	<init> (I)V <init>
	<init> (Laft;)V <init>
	a ()Laft; count
	<clinit> ()V <clinit>
cls net/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration
	a CODEC
	b feature
	c decorator
	<init> (Ljava/util/function/Supplier;Lcpl;)V <init>
	toString ()Ljava/lang/String; toString
	an_ ()Ljava/util/stream/Stream; getFeatures
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcls;)Lcpl; lambda$null$1
	b (Lcls;)Ljava/util/function/Supplier; lambda$null$0
	<clinit> ()V <clinit>
clt net/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration
	b NONE
	<clinit> ()V <clinit>
clu net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	a CODEC
	b contents
	c rim
	d size
	e rimSize
	<init> (Lcee;Lcee;Laft;Laft;)V <init>
	b ()Lcee; contents
	c ()Lcee; rim
	d ()Laft; size
	e ()Laft; rimSize
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lclu;)Laft; lambda$null$3
	b (Lclu;)Laft; lambda$null$2
	c (Lclu;)Lcee; lambda$null$1
	d (Lclu;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
clv net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	a CODEC
	b state
	c radius
	d halfHeight
	e targets
	<init> (Lcee;Laft;ILjava/util/List;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lclv;)Ljava/util/List; lambda$null$3
	b (Lclv;)Ljava/lang/Integer; lambda$null$2
	c (Lclv;)Laft; lambda$null$1
	d (Lclv;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
clw net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	a CODEC
	b exit
	c exact
	<init> (Ljava/util/Optional;Z)V <init>
	a (Lfx;Z)Lclw; knownExit
	b ()Lclw; delayedExitSearch
	c ()Ljava/util/Optional; getExit
	d ()Z isExitExact
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lclw;)Ljava/lang/Boolean; lambda$null$1
	b (Lclw;)Ljava/util/Optional; lambda$null$0
	<clinit> ()V <clinit>
clx net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	k NONE
	an_ ()Ljava/util/stream/Stream; getFeatures
	<clinit> ()V <clinit>
cly net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	a CODEC
	b capProvider
	c stemProvider
	d foliageRadius
	<init> (Lcnq;Lcnq;I)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcly;)Ljava/lang/Integer; lambda$null$2
	b (Lcly;)Lcnq; lambda$null$1
	c (Lcly;)Lcnq; lambda$null$0
	<clinit> ()V <clinit>
clz net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration
	a CODEC
	b startPool
	c maxDepth
	<init> (Ljava/util/function/Supplier;I)V <init>
	b ()I maxDepth
	c ()Ljava/util/function/Supplier; startPool
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cma net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	a CODEC
	b height
	c state
	<init> (ILcee;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcma;)Lcee; lambda$null$1
	b (Lcma;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cmb net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration
	a CODEC
	b probability
	c type
	<init> (FLcjy$b;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcmb;)Lcjy$b; lambda$null$1
	b (Lcmb;)Ljava/lang/Float; lambda$null$0
	<clinit> ()V <clinit>
cmc net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration
	a CODEC
	c noiseLevel
	d belowNoise
	e aboveNoise
	<init> (DII)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcmc;)Ljava/lang/Integer; lambda$null$2
	b (Lcmc;)Ljava/lang/Integer; lambda$null$1
	c (Lcmc;)Ljava/lang/Double; lambda$null$0
	<clinit> ()V <clinit>
cmd net/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration
	a CODEC
	c INSTANCE
	<init> ()V <init>
	a ()Lcmd; lambda$static$0
	<clinit> ()V <clinit>
cme net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	a CODEC
	b INSTANCE
	<init> ()V <init>
	b ()Lcme; lambda$static$0
	<clinit> ()V <clinit>
cmf net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration
	a CODEC
	b biomeTemp
	c largeProbability
	d clusterProbability
	<init> (Lcrj$b;FF)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcmf;)Ljava/lang/Float; lambda$null$2
	b (Lcmf;)Ljava/lang/Float; lambda$null$1
	c (Lcmf;)Lcrj$b; lambda$null$0
	<clinit> ()V <clinit>
cmg net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	a CODEC
	b target
	c size
	d state
	<init> (Lcsr;Lcee;I)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcmg;)Ljava/lang/Integer; lambda$null$2
	b (Lcmg;)Lcee; lambda$null$1
	c (Lcmg;)Lcsr; lambda$null$0
	<clinit> ()V <clinit>
cmg$a net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates
	a NATURAL_STONE
	b NETHERRACK
	c NETHER_ORE_REPLACEABLES
	<init> ()V <init>
	<clinit> ()V <clinit>
cmh net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	b CODEC
	c probability
	<init> (F)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcmh;)Ljava/lang/Float; lambda$null$0
	<clinit> ()V <clinit>
cmi net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	a CODEC
	b featureTrue
	c featureFalse
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V <init>
	an_ ()Ljava/util/stream/Stream; getFeatures
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcmi;)Ljava/util/function/Supplier; lambda$null$1
	b (Lcmi;)Ljava/util/function/Supplier; lambda$null$0
	<clinit> ()V <clinit>
cmj net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	a CODEC
	b features
	c defaultFeature
	<init> (Ljava/util/List;Lcis;)V <init>
	<init> (Ljava/util/List;Ljava/util/function/Supplier;)V <init>
	an_ ()Ljava/util/stream/Stream; getFeatures
	a (Lclg;)Ljava/util/stream/Stream; lambda$getFeatures$4
	a (Lcis;)Lcis; lambda$new$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcmj;)Ljava/util/function/Supplier; lambda$null$1
	b (Lcmj;)Ljava/util/List; lambda$null$0
	<clinit> ()V <clinit>
cmk net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	a CODEC
	b stateProvider
	c blockPlacer
	d whitelist
	e blacklist
	f tries
	g xspread
	h yspread
	i zspread
	j canReplace
	l project
	m needWater
	<init> (Lcnq;Lcli;Ljava/util/List;Ljava/util/List;IIIIZZZ)V <init>
	<init> (Lcnq;Lcli;Ljava/util/Set;Ljava/util/Set;IIIIZZZ)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$11
	a (Lcmk;)Ljava/lang/Boolean; lambda$null$10
	b (Lcmk;)Ljava/lang/Boolean; lambda$null$9
	c (Lcmk;)Ljava/lang/Boolean; lambda$null$8
	d (Lcmk;)Ljava/lang/Integer; lambda$null$7
	e (Lcmk;)Ljava/lang/Integer; lambda$null$6
	f (Lcmk;)Ljava/lang/Integer; lambda$null$5
	g (Lcmk;)Ljava/lang/Integer; lambda$null$4
	h (Lcmk;)Ljava/util/List; lambda$null$3
	i (Lcmk;)Ljava/util/List; lambda$null$2
	j (Lcmk;)Lcli; lambda$null$1
	k (Lcmk;)Lcnq; lambda$null$0
	<init> (Lcnq;Lcli;Ljava/util/Set;Ljava/util/Set;IIIIZZZLcmk$1;)V <init>
	<clinit> ()V <clinit>
cmk$1 net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$1
cmk$a net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder
	a stateProvider
	b blockPlacer
	c whitelist
	d blacklist
	e tries
	f xspread
	g yspread
	h zspread
	i canReplace
	j project
	k needWater
	<init> (Lcnq;Lcli;)V <init>
	a (Ljava/util/Set;)Lcmk$a; whitelist
	b (Ljava/util/Set;)Lcmk$a; blacklist
	a (I)Lcmk$a; tries
	b (I)Lcmk$a; xspread
	c (I)Lcmk$a; yspread
	d (I)Lcmk$a; zspread
	a ()Lcmk$a; canReplace
	b ()Lcmk$a; noProjection
	c ()Lcmk$a; needWater
	d ()Lcmk; build
cml net/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration
	a CODEC
	c bottomOffset
	d topOffset
	e maximum
	<init> (III)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcml;)Ljava/lang/Integer; lambda$null$2
	b (Lcml;)Ljava/lang/Integer; lambda$null$1
	c (Lcml;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cmm net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	a CODEC
	b target
	c state
	<init> (Lcee;Lcee;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcmm;)Lcee; lambda$null$1
	b (Lcmm;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
cmn net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	a CODEC
	b targetState
	c replaceState
	d radius
	<init> (Lcee;Lcee;Laft;)V <init>
	b ()Laft; radius
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcmn;)Laft; lambda$null$2
	b (Lcmn;)Lcee; lambda$null$1
	c (Lcmn;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
cmo net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration
	a CODEC
	b portalType
	<init> (Lckm$b;)V <init>
	a (Lcmo;)Lckm$b; lambda$static$0
	<clinit> ()V <clinit>
cmp net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration
	a CODEC
	b isBeached
	<init> (Z)V <init>
	a (Lcmp;)Ljava/lang/Boolean; lambda$static$0
	<clinit> ()V <clinit>
cmq net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	a CODEC
	b toPlace
	c placeOn
	d placeIn
	e placeUnder
	<init> (Lcee;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lcmq;)Ljava/util/List; lambda$null$3
	b (Lcmq;)Ljava/util/List; lambda$null$2
	c (Lcmq;)Ljava/util/List; lambda$null$1
	d (Lcmq;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
cmr net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	a CODEC
	b features
	<init> (Ljava/util/List;)V <init>
	an_ ()Ljava/util/stream/Stream; getFeatures
	a (Ljava/util/function/Supplier;)Ljava/util/stream/Stream; lambda$getFeatures$1
	a (Lcmr;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
cms net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	a CODEC
	b crystalInvulnerable
	c spikes
	d crystalBeamTarget
	<init> (ZLjava/util/List;Lfx;)V <init>
	<init> (ZLjava/util/List;Ljava/util/Optional;)V <init>
	b ()Z isCrystalInvulnerable
	c ()Ljava/util/List; getSpikes
	d ()Lfx; getCrystalBeamTarget
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcms;)Ljava/util/Optional; lambda$null$2
	b (Lcms;)Ljava/util/List; lambda$null$1
	c (Lcms;)Ljava/lang/Boolean; lambda$null$0
	<clinit> ()V <clinit>
cmt net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	a CODEC
	b state
	c requiresBlockBelow
	d rockCount
	e holeCount
	f validBlocks
	<init> (Lcuu;ZIILjava/util/Set;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lcmt;)Ljava/util/Set; lambda$null$4
	b (Lcmt;)Ljava/lang/Integer; lambda$null$3
	c (Lcmt;)Ljava/lang/Integer; lambda$null$2
	d (Lcmt;)Ljava/lang/Boolean; lambda$null$1
	e (Lcmt;)Lcuu; lambda$null$0
	<clinit> ()V <clinit>
cmu net/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration
	a CODEC
	b distance
	c spread
	d count
	<init> (III)V <init>
	a ()I distance
	b ()I spread
	c ()I count
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cmv net/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	<init> (III)V <init>
	a ()I spacing
	b ()I separation
	c ()I salt
	a (Lcmv;)Lcom/mojang/serialization/DataResult; lambda$static$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	b (Lcmv;)Ljava/lang/Integer; lambda$null$2
	c (Lcmv;)Ljava/lang/Integer; lambda$null$1
	d (Lcmv;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cmw net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	a CODEC
	b trunkProvider
	c leavesProvider
	d decorators
	e fromSapling
	f foliagePlacer
	g trunkPlacer
	h minimumSize
	i maxWaterDepth
	j ignoreVines
	l heightmap
	<init> (Lcnq;Lcnq;Lcni;Lcoy;Lcmy;Ljava/util/List;IZLchk$a;)V <init>
	b ()V setFromSapling
	a (Ljava/util/List;)Lcmw; withDecorators
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$9
	a (Lcmw;)Lchk$a; lambda$null$8
	b (Lcmw;)Ljava/lang/Boolean; lambda$null$7
	c (Lcmw;)Ljava/lang/Integer; lambda$null$6
	d (Lcmw;)Ljava/util/List; lambda$null$5
	e (Lcmw;)Lcmy; lambda$null$4
	f (Lcmw;)Lcoy; lambda$null$3
	g (Lcmw;)Lcni; lambda$null$2
	h (Lcmw;)Lcnq; lambda$null$1
	i (Lcmw;)Lcnq; lambda$null$0
	<clinit> ()V <clinit>
cmw$a net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	a trunkProvider
	b leavesProvider
	c foliagePlacer
	d trunkPlacer
	e minimumSize
	f decorators
	g maxWaterDepth
	h ignoreVines
	i heightmap
	<init> (Lcnq;Lcnq;Lcni;Lcoy;Lcmy;)V <init>
	a (Ljava/util/List;)Lcmw$a; decorators
	a (I)Lcmw$a; maxWaterDepth
	a ()Lcmw$a; ignoreVines
	a (Lchk$a;)Lcmw$a; heightmap
	b ()Lcmw; build
cmx net/minecraft/world/level/levelgen/feature/configurations/package-info
cmy net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	a CODEC
	b minClippedHeight
	a ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; minClippedHeightCodec
	<init> (Ljava/util/OptionalInt;)V <init>
	b ()Lcmz; type
	a (II)I getSizeAtHeight
	c ()Ljava/util/OptionalInt; minClippedHeight
	a (Lcmy;)Ljava/util/OptionalInt; lambda$minClippedHeightCodec$2
	a (Ljava/util/OptionalInt;)Ljava/util/Optional; lambda$minClippedHeightCodec$1
	a (Ljava/util/Optional;)Ljava/util/OptionalInt; lambda$minClippedHeightCodec$0
	<clinit> ()V <clinit>
cmz net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	a TWO_LAYERS_FEATURE_SIZE
	b THREE_LAYERS_FEATURE_SIZE
	c codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcmz; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
cna net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	c CODEC
	d limit
	e upperLimit
	f lowerSize
	g middleSize
	h upperSize
	<init> (IIIIILjava/util/OptionalInt;)V <init>
	b ()Lcmz; type
	a (II)I getSizeAtHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lcna;)Ljava/lang/Integer; lambda$null$4
	b (Lcna;)Ljava/lang/Integer; lambda$null$3
	c (Lcna;)Ljava/lang/Integer; lambda$null$2
	d (Lcna;)Ljava/lang/Integer; lambda$null$1
	e (Lcna;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cnb net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	c CODEC
	d limit
	e lowerSize
	f upperSize
	<init> (III)V <init>
	<init> (IIILjava/util/OptionalInt;)V <init>
	b ()Lcmz; type
	a (II)I getSizeAtHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcnb;)Ljava/lang/Integer; lambda$null$2
	b (Lcnb;)Ljava/lang/Integer; lambda$null$1
	c (Lcnb;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cnc net/minecraft/world/level/levelgen/feature/featuresize/package-info
cnd net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	a CODEC
	<init> (Laft;Laft;)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cne net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	a CODEC
	b height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; blobParts
	<init> (Laft;Laft;I)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcne;)Ljava/lang/Integer; lambda$blobParts$1
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cnf net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	c CODEC
	<init> (Laft;Laft;I)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cng net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	a CODEC
	<init> (Laft;Laft;)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	b (Ljava/util/Random;IIIIZ)Z shouldSkipLocationSigned
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cnh net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	c CODEC
	<init> (Laft;Laft;I)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cni net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	d CODEC
	e radius
	f offset
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; foliagePlacerParts
	<init> (Laft;Laft;)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;Lcqx;)V createFoliage
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;I)I foliageRadius
	a (Ljava/util/Random;)I offset
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	b (Ljava/util/Random;IIIIZ)Z shouldSkipLocationSigned
	a (Lbry;Ljava/util/Random;Lcmw;Lfx;ILjava/util/Set;IZLcqx;)V placeLeavesRow
	a (Lcni;)Laft; lambda$foliagePlacerParts$1
	b (Lcni;)Laft; lambda$foliagePlacerParts$0
	<clinit> ()V <clinit>
cni$a net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$Factory
	a (IIII)Lcni; create
cni$b net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	a foliagePos
	b radiusOffset
	c doubleTrunk
	<init> (Lfx;IZ)V <init>
	a ()Lfx; foliagePos
	b ()I radiusOffset
	c ()Z doubleTrunk
cnj net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	a BLOB_FOLIAGE_PLACER
	b SPRUCE_FOLIAGE_PLACER
	c PINE_FOLIAGE_PLACER
	d ACACIA_FOLIAGE_PLACER
	e BUSH_FOLIAGE_PLACER
	f FANCY_FOLIAGE_PLACER
	g MEGA_JUNGLE_FOLIAGE_PLACER
	h MEGA_PINE_FOLIAGE_PLACER
	i DARK_OAK_FOLIAGE_PLACER
	j codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcnj; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
cnk net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	a CODEC
	b height
	<init> (Laft;Laft;I)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcnk;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cnl net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	a CODEC
	b crownHeight
	<init> (Laft;Laft;Laft;)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcnl;)Laft; lambda$null$0
	<clinit> ()V <clinit>
cnm net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	a CODEC
	b height
	<init> (Laft;Laft;Laft;)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;I)I foliageRadius
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcnm;)Laft; lambda$null$0
	<clinit> ()V <clinit>
cnn net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	a CODEC
	b trunkHeight
	<init> (Laft;Laft;Laft;)V <init>
	a ()Lcnj; type
	a (Lbry;Ljava/util/Random;Lcmw;ILcni$b;IILjava/util/Set;ILcqx;)V createFoliage
	a (Ljava/util/Random;ILcmw;)I foliageHeight
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcnn;)Laft; lambda$null$0
	<clinit> ()V <clinit>
cno net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
cnp net/minecraft/world/level/levelgen/feature/package-info
cnq net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	a CODEC
	<init> ()V <init>
	a ()Lcnr; type
	a (Ljava/util/Random;Lfx;)Lcee; getState
	<clinit> ()V <clinit>
cnr net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	a SIMPLE_STATE_PROVIDER
	b WEIGHTED_STATE_PROVIDER
	c PLAIN_FLOWER_PROVIDER
	d FOREST_FLOWER_PROVIDER
	e ROTATED_BLOCK_PROVIDER
	f codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcnr; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
cns net/minecraft/world/level/levelgen/feature/stateproviders/ForestFlowerProvider
	b CODEC
	d FLOWERS
	c INSTANCE
	<init> ()V <init>
	a ()Lcnr; type
	a (Ljava/util/Random;Lfx;)Lcee; getState
	b ()Lcns; lambda$static$0
	<clinit> ()V <clinit>
cnt net/minecraft/world/level/levelgen/feature/stateproviders/PlainFlowerProvider
	b CODEC
	c INSTANCE
	d LOW_NOISE_FLOWERS
	e HIGH_NOISE_FLOWERS
	<init> ()V <init>
	a ()Lcnr; type
	a (Ljava/util/Random;Lfx;)Lcee; getState
	b ()Lcnt; lambda$static$0
	<clinit> ()V <clinit>
cnu net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	b CODEC
	c block
	<init> (Lbul;)V <init>
	a ()Lcnr; type
	a (Ljava/util/Random;Lfx;)Lcee; getState
	a (Lcnu;)Lbul; lambda$static$0
	<clinit> ()V <clinit>
cnv net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	b CODEC
	c state
	<init> (Lcee;)V <init>
	a ()Lcnr; type
	a (Ljava/util/Random;Lfx;)Lcee; getState
	a (Lcnv;)Lcee; lambda$static$0
	<clinit> ()V <clinit>
cnw net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	b CODEC
	c weightedList
	a (Laum;)Lcom/mojang/serialization/DataResult; create
	<init> (Laum;)V <init>
	a ()Lcnr; type
	<init> ()V <init>
	a (Lcee;I)Lcnw; add
	a (Ljava/util/Random;Lfx;)Lcee; getState
	a (Lcnw;)Laum; lambda$static$0
	<clinit> ()V <clinit>
cnx net/minecraft/world/level/levelgen/feature/stateproviders/package-info
cny net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lcst;Lbzj;)Lfx; getSize
	a (Lcst;Lfx;Lbzj;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lcst;Lfx;Lbzj;)Lcqx; getBoundingBox
	a (Lcst;Lbso;Lbsk;Lcfv;Lfx;Lfx;Lbzj;Lcqx;Ljava/util/Random;Z)Z place
	a ()Lcog; getType
	toString ()Ljava/lang/String; toString
	b ()Lcny; lambda$static$0
	<clinit> ()V <clinit>
cnz net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement
	a CODEC
	b feature
	c defaultJigsawNBT
	<init> (Ljava/util/function/Supplier;Lcoh$a;)V <init>
	b ()Lmd; fillDefaultJigsawNBT
	a (Lcst;Lbzj;)Lfx; getSize
	a (Lcst;Lfx;Lbzj;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lcst;Lfx;Lbzj;)Lcqx; getBoundingBox
	a (Lcst;Lbso;Lbsk;Lcfv;Lfx;Lfx;Lbzj;Lcqx;Ljava/util/Random;Z)Z place
	a ()Lcog; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcnz;)Ljava/util/function/Supplier; lambda$null$0
	<clinit> ()V <clinit>
coa net/minecraft/world/level/levelgen/feature/structures/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	<init> (IIIILcoh$a;)V <init>
	a ()I getSourceX
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Lcoh$a; getDestProjection
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	a (Lcom/mojang/serialization/Dynamic;)Lcoa; deserialize
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
cob net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement
	a LOGGER
	<init> ()V <init>
	a (Lgn;Lclz;Lcob$a;Lcfv;Lcst;Lfx;Ljava/util/List;Ljava/util/Random;ZZ)V addPieces
	a (Lgn;Lcrl;ILcob$a;Lcfv;Lcst;Ljava/util/List;Ljava/util/Random;)V addPieces
	a ()Lorg/apache/logging/log4j/Logger; access$000
	<clinit> ()V <clinit>
cob$1 net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$1
cob$a net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory
	create (Lcst;Lcof;Lfx;ILbzj;Lcqx;)Lcrl; create
cob$b net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState
	a piece
	b free
	c boundsTop
	d depth
	<init> (Lcrl;Lorg/apache/commons/lang3/mutable/MutableObject;II)V <init>
	<init> (Lcrl;Lorg/apache/commons/lang3/mutable/MutableObject;IILcob$1;)V <init>
	a (Lcob$b;)Lcrl; access$400
	b (Lcob$b;)Lorg/apache/commons/lang3/mutable/MutableObject; access$500
	c (Lcob$b;)I access$600
	d (Lcob$b;)I access$700
cob$c net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer
	a pools
	b maxDepth
	c factory
	d chunkGenerator
	e structureManager
	f pieces
	g random
	h placing
	<init> (Lgm;ILcob$a;Lcfv;Lcst;Ljava/util/List;Ljava/util/Random;)V <init>
	a (Lcrl;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V tryPlacingChildren
	a (Lcqx;Lcsy$c;)I lambda$tryPlacingChildren$3
	a (Lcoh;)Ljava/lang/Integer; lambda$null$2
	b (Lcoh;)Ljava/lang/Integer; lambda$null$1
	c (Lcoh;)Ljava/util/Optional; lambda$null$0
	<init> (Lgm;ILcob$a;Lcfv;Lcst;Ljava/util/List;Ljava/util/Random;Lcob$1;)V <init>
	a (Lcob$c;)Ljava/util/Deque; access$300
	a (Lcob$c;Lcrl;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V access$800
coc net/minecraft/world/level/levelgen/feature/structures/LegacySinglePoolElement
	a CODEC
	<init> (Lcom/mojang/datafixers/util/Either;Ljava/util/function/Supplier;Lcoh$a;)V <init>
	a (Lbzj;Lcqx;Z)Lcsu; getSettings
	a ()Lcog; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cod net/minecraft/world/level/levelgen/feature/structures/ListPoolElement
	a CODEC
	b elements
	<init> (Ljava/util/List;Lcoh$a;)V <init>
	a (Lcst;Lbzj;)Lfx; getSize
	a (Lcst;Lfx;Lbzj;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lcst;Lfx;Lbzj;)Lcqx; getBoundingBox
	a (Lcst;Lbso;Lbsk;Lcfv;Lfx;Lfx;Lbzj;Lcqx;Ljava/util/Random;Z)Z place
	a ()Lcog; getType
	a (Lcoh$a;)Lcof; setProjection
	toString ()Ljava/lang/String; toString
	b (Lcoh$a;)V setProjectionOnEachElement
	a (Lcoh$a;Lcof;)V lambda$setProjectionOnEachElement$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcod;)Ljava/util/List; lambda$null$0
	<clinit> ()V <clinit>
coe net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement
	a TEMPLATE_CODEC
	b CODEC
	c template
	d processors
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeTemplate
	b ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; processorsCodec
	c ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; templateCodec
	<init> (Lcom/mojang/datafixers/util/Either;Ljava/util/function/Supplier;Lcoh$a;)V <init>
	<init> (Lcsy;)V <init>
	a (Lcst;Lbzj;)Lfx; getSize
	a (Lcst;)Lcsy; getTemplate
	a (Lcst;Lfx;Lbzj;Z)Ljava/util/List; getDataMarkers
	a (Lcst;Lfx;Lbzj;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lcst;Lfx;Lbzj;)Lcqx; getBoundingBox
	a (Lcst;Lbso;Lbsk;Lcfv;Lfx;Lfx;Lbzj;Lcqx;Ljava/util/Random;Z)Z place
	a (Lbzj;Lcqx;Z)Lcsu; getSettings
	a ()Lcog; getType
	toString ()Ljava/lang/String; toString
	h ()Lcsw; lambda$new$3
	a (Lcoe;)Lcom/mojang/datafixers/util/Either; lambda$templateCodec$2
	b (Lcoe;)Ljava/util/function/Supplier; lambda$processorsCodec$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cof net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement
	e CODEC
	a projection
	d ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; projectionCodec
	<init> (Lcoh$a;)V <init>
	a (Lcst;Lbzj;)Lfx; getSize
	a (Lcst;Lfx;Lbzj;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lcst;Lfx;Lbzj;)Lcqx; getBoundingBox
	a (Lcst;Lbso;Lbsk;Lcfv;Lfx;Lfx;Lbzj;Lcqx;Ljava/util/Random;Z)Z place
	a ()Lcog; getType
	a (Lbrv;Lcsy$c;Lfx;Lbzj;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (Lcoh$a;)Lcof; setProjection
	e ()Lcoh$a; getProjection
	f ()I getGroundLevelDelta
	g ()Ljava/util/function/Function; empty
	a (Ljava/lang/String;)Ljava/util/function/Function; legacy
	a (Ljava/lang/String;Lcsw;)Ljava/util/function/Function; legacy
	b (Ljava/lang/String;)Ljava/util/function/Function; single
	b (Ljava/lang/String;Lcsw;)Ljava/util/function/Function; single
	a (Lcis;)Ljava/util/function/Function; feature
	a (Ljava/util/List;)Ljava/util/function/Function; list
	a (Ljava/util/List;Lcoh$a;)Lcod; lambda$list$12
	a (Lcoh$a;Ljava/util/function/Function;)Lcof; lambda$null$11
	a (Lcis;Lcoh$a;)Lcnz; lambda$feature$10
	b (Lcis;)Lcis; lambda$null$9
	a (Ljava/lang/String;Lcsw;Lcoh$a;)Lcoe; lambda$single$8
	a (Lcsw;)Lcsw; lambda$null$7
	a (Ljava/lang/String;Lcoh$a;)Lcoe; lambda$single$6
	b ()Lcsw; lambda$null$5
	b (Ljava/lang/String;Lcsw;Lcoh$a;)Lcoc; lambda$legacy$4
	b (Lcsw;)Lcsw; lambda$null$3
	b (Ljava/lang/String;Lcoh$a;)Lcoc; lambda$legacy$2
	c ()Lcsw; lambda$null$1
	b (Lcoh$a;)Lcny; lambda$empty$0
	<clinit> ()V <clinit>
cog net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType
	a SINGLE
	b LIST
	c FEATURE
	d EMPTY
	e LEGACY
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcog; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
coh net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool
	c LOGGER
	a DIRECT_CODEC
	b CODEC
	d name
	e rawTemplates
	f templates
	g fallback
	h maxSize
	<init> (Lvk;Lvk;Ljava/util/List;)V <init>
	<init> (Lvk;Lvk;Ljava/util/List;Lcoh$a;)V <init>
	a (Lcst;)I getMaxSize
	a ()Lvk; getFallback
	a (Ljava/util/Random;)Lcof; getRandomTemplate
	b (Ljava/util/Random;)Ljava/util/List; getShuffledTemplates
	b ()Lvk; getName
	c ()I size
	a (Lcst;Lcof;)I lambda$getMaxSize$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcoh;)Ljava/util/List; lambda$null$0
	<clinit> ()V <clinit>
coh$a net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection
	a TERRAIN_MATCHING
	b RIGID
	c CODEC
	d BY_NAME
	e name
	f processors
	g $VALUES
	values ()[Lcoh$a; values
	valueOf (Ljava/lang/String;)Lcoh$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lcoh$a; byName
	c ()Lcom/google/common/collect/ImmutableList; getProcessors
	a ()Ljava/lang/String; getSerializedName
	a (Lcoh$a;)Lcoh$a; lambda$static$0
	<clinit> ()V <clinit>
coi net/minecraft/world/level/levelgen/feature/structures/package-info
coj net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	a CODEC
	b provider
	<init> (Lcnq;)V <init>
	a ()Lcop; type
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;)V place
	a (Lbry;Ljava/util/Random;Lfx;)V placeCircle
	b (Lbry;Ljava/util/Random;Lfx;)V placeBlockAt
	a (Lbso;Ljava/util/Random;Lfx;)V lambda$place$2
	a (ILfx;)Z lambda$place$1
	a (Lcoj;)Lcnq; lambda$static$0
	<clinit> ()V <clinit>
cok net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	a CODEC
	b probability
	<init> (F)V <init>
	a ()Lcop; type
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;)V place
	a (ILfx;)Z lambda$place$1
	a (Lcok;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
col net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	a CODEC
	b probability
	<init> (F)V <init>
	a ()Lcop; type
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;)V place
	a (Ljava/util/Random;Lbso;Ljava/util/Set;Lcqx;Lfx;)V lambda$place$2
	a (ILfx;)Z lambda$place$1
	a (Lcol;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
com net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a ()Lcop; type
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;)V place
	a (Lbry;Lfx;Lcev;Ljava/util/Set;Lcqx;)V addHangingVine
	a (Ljava/util/Random;Lbso;Ljava/util/Set;Lcqx;Lfx;)V lambda$place$1
	b ()Lcom; lambda$static$0
	<clinit> ()V <clinit>
coo net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	c CODEC
	<init> ()V <init>
	a ()Lcop; type
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;)V place
	a (Lbsb;Lfx;Lcev;Ljava/util/Set;Lcqx;)V placeVine
	a (Lbsb;Lfx;Lcee;Ljava/util/Set;Lcqx;)V setBlock
	<clinit> ()V <clinit>
cop net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	a TRUNK_VINE
	b LEAVE_VINE
	c COCOA
	d BEEHIVE
	e ALTER_GROUND
	f codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcop; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
coq net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a ()Lcop; type
	a (Lbso;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lcqx;)V place
	a (Ljava/util/Random;Lbso;Ljava/util/Set;Lcqx;Lfx;)V lambda$place$1
	b ()Lcoq; lambda$static$0
	<clinit> ()V <clinit>
cor net/minecraft/world/level/levelgen/feature/treedecorators/package-info
cos net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cot net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	a (Lbry;Ljava/util/Random;Lfx;Lfx;ZLjava/util/Set;Lcqx;Lcmw;)Z makeLimb
	a (Lfx;)I getSteps
	a (Lfx;Lfx;)Lgc$a; getLogAxis
	a (II)Z trimBranches
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/List;Ljava/util/Set;Lcqx;Lcmw;)V makeBranches
	b (II)F treeShape
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cot$a net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	a attachment
	b branchBase
	<init> (Lfx;I)V <init>
	a ()I getBranchBase
	a (Lcot$a;)Lcni$b; access$000
cou net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cov net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	a (Lbry;Ljava/util/Random;Lfx$a;Ljava/util/Set;Lcqx;Lcmw;Lfx;III)V placeLogIfFreeWithOffset
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cow net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	b CODEC
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cox net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
coy net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	c CODEC
	d baseHeight
	e heightRandA
	f heightRandB
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; trunkPlacerParts
	<init> (III)V <init>
	a ()Lcoz; type
	a (Lbry;Ljava/util/Random;ILfx;Ljava/util/Set;Lcqx;Lcmw;)Ljava/util/List; placeTrunk
	a (Ljava/util/Random;)I getTreeHeight
	a (Lbsb;Lfx;Lcee;Lcqx;)V setBlock
	a (Lbrz;Lfx;)Z isDirt
	a (Lbry;Lfx;)V setDirtAt
	a (Lbry;Ljava/util/Random;Lfx;Ljava/util/Set;Lcqx;Lcmw;)Z placeLog
	a (Lbry;Ljava/util/Random;Lfx$a;Ljava/util/Set;Lcqx;Lcmw;)V placeLogIfFree
	a (Lcee;)Z lambda$isDirt$3
	a (Lcoy;)Ljava/lang/Integer; lambda$trunkPlacerParts$2
	b (Lcoy;)Ljava/lang/Integer; lambda$trunkPlacerParts$1
	c (Lcoy;)Ljava/lang/Integer; lambda$trunkPlacerParts$0
	<clinit> ()V <clinit>
coz net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	a STRAIGHT_TRUNK_PLACER
	b FORKING_TRUNK_PLACER
	c GIANT_TRUNK_PLACER
	d MEGA_JUNGLE_TRUNK_PLACER
	e DARK_OAK_TRUNK_PLACER
	f FANCY_TRUNK_PLACER
	g codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcoz; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
cpa net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
cpb net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a CODEC
	b blockState
	c height
	d start
	<init> (ILbul;)V <init>
	a ()I getHeight
	b ()Lcee; getBlockState
	c ()I getStart
	a (I)V setStart
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcpb;)Lbul; lambda$null$0
	<clinit> ()V <clinit>
cpc net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	b LOGGER
	a CODEC
	c STRUCTURE_FEATURES
	d biomes
	e structureSettings
	f layersInfo
	g biome
	h layers
	i voidGen
	j decoration
	k addLakes
	<init> (Lgm;Lchs;Ljava/util/List;ZZLjava/util/Optional;)V <init>
	<init> (Lchs;Lgm;)V <init>
	a (Lchs;)Lcpc; withStructureSettings
	a (Ljava/util/List;Lchs;)Lcpc; withLayers
	a ()V setDecoration
	b ()V setAddLakes
	c ()Lbss; getBiomeFromSettings
	d ()Lchs; structureSettings
	e ()Lbss; getBiome
	a (Ljava/util/function/Supplier;)V setBiome
	f ()Ljava/util/List; getLayersInfo
	g ()[Lcee; getLayers
	h ()V updateLayers
	a (Lgm;)Lcpc; getDefault
	b (Lgm;)Lbss; lambda$getDefault$8
	c (Lgm;)Lbss; lambda$new$7
	d (Lgm;)Lbss; lambda$new$6
	a (Ljava/util/HashMap;)V lambda$static$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lcpc;)Ljava/util/Optional; lambda$null$3
	b (Lcpc;)Ljava/lang/Boolean; lambda$null$2
	c (Lcpc;)Ljava/lang/Boolean; lambda$null$1
	d (Lcpc;)Lgm; lambda$null$0
	<clinit> ()V <clinit>
cpd net/minecraft/world/level/levelgen/flat/package-info
cpe net/minecraft/world/level/levelgen/package-info
cpf net/minecraft/world/level/levelgen/placement/BaseHeightmapDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cpg net/minecraft/world/level/levelgen/placement/BiasedRangeDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcml;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cph net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcpi;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lbra;I)Lfx; lambda$getPositions$1
	a (Ljava/util/BitSet;Ljava/util/Random;Lcpi;I)Z lambda$getPositions$0
cpi net/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration
	a CODEC
	c step
	d probability
	<init> (Lchj$a;F)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcpi;)Ljava/lang/Float; lambda$null$1
	b (Lcpi;)Lchj$a; lambda$null$0
	<clinit> ()V <clinit>
cpj net/minecraft/world/level/levelgen/placement/ChanceDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcpk;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cpk net/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration
	a CODEC
	c chance
	<init> (I)V <init>
	a (Lcpk;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
cpl net/minecraft/world/level/levelgen/placement/ConfiguredDecorator
	a CODEC
	b decorator
	c config
	<init> (Lcpz;Lclt;)V <init>
	a (Lcps;Ljava/util/Random;Lfx;)Ljava/util/stream/Stream; getPositions
	toString ()Ljava/lang/String; toString
	b (Lcpl;)Lcpl; decorated
	b ()Lclt; config
	a (Lcpl;)Ljava/lang/Object; decorated
	c (Lcpl;)Lcpz; lambda$static$0
	<clinit> ()V <clinit>
cpm net/minecraft/world/level/levelgen/placement/CountDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lclr;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
	a (Lfx;I)Lfx; lambda$place$0
cpn net/minecraft/world/level/levelgen/placement/CountNoiseDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcmc;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lfx;I)Lfx; lambda$getPositions$0
cpo net/minecraft/world/level/levelgen/placement/CountWithExtraChanceDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcqa;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
	a (Lfx;I)Lfx; lambda$place$0
cpp net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmd;)Lchk$a; type
	a (Lcps;Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lclt;)Lchk$a; type
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Ljava/util/Random;Lfx;Lcps;Lcmd;I)Lfx; lambda$getPositions$0
cpq net/minecraft/world/level/levelgen/placement/DecoratedDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcpr;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcpr;Lcps;Ljava/util/Random;Lfx;)Ljava/util/stream/Stream; lambda$getPositions$0
cpr net/minecraft/world/level/levelgen/placement/DecoratedDecoratorConfiguration
	a CODEC
	c outer
	d inner
	<init> (Lcpl;Lcpl;)V <init>
	a ()Lcpl; outer
	b ()Lcpl; inner
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cps net/minecraft/world/level/levelgen/placement/DecorationContext
	a level
	b generator
	<init> (Lbso;Lcfv;)V <init>
	a (Lchk$a;II)I getHeight
	a ()I getGenDepth
	b ()I getSeaLevel
	a (Lbra;Lchj$a;)Ljava/util/BitSet; getCarvingMask
	a (Lfx;)Lcee; getBlockState
cpt net/minecraft/world/level/levelgen/placement/DepthAverageConfigation
	a CODEC
	c baseline
	d spread
	<init> (II)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcpt;)Ljava/lang/Integer; lambda$null$1
	b (Lcpt;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cpu net/minecraft/world/level/levelgen/placement/DepthAverageDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcpt;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cpv net/minecraft/world/level/levelgen/placement/EdgeDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lclt;)Lchk$a; type
cpw net/minecraft/world/level/levelgen/placement/EmeraldPlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lfx;I)Lfx; lambda$place$0
cpx net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cpy net/minecraft/world/level/levelgen/placement/EndIslandPlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cpz net/minecraft/world/level/levelgen/placement/FeatureDecorator
	a NOPE
	b CHANCE
	c COUNT
	d COUNT_NOISE
	e COUNT_NOISE_BIASED
	f COUNT_EXTRA
	g SQUARE
	h HEIGHTMAP
	i HEIGHTMAP_SPREAD_DOUBLE
	j TOP_SOLID_HEIGHTMAP
	k HEIGHTMAP_WORLD_SURFACE
	l RANGE
	m RANGE_BIASED
	n RANGE_VERY_BIASED
	o DEPTH_AVERAGE
	p SPREAD_32_ABOVE
	q CARVING_MASK
	r FIRE
	s MAGMA
	t EMERALD_ORE
	u LAVA_LAKE
	v WATER_LAKE
	w GLOWSTONE
	x END_GATEWAY
	y DARK_OAK_TREE
	z ICEBERG
	A END_ISLAND
	B DECORATED
	C COUNT_MULTILAYER
	D configuredCodec
	a (Ljava/lang/String;Lcpz;)Lcpz; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	b (Lclt;)Lcpl; configured
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
	toString ()Ljava/lang/String; toString
	a (Lclt;)Lcpl; lambda$new$0
	<clinit> ()V <clinit>
cqa net/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration
	a CODEC
	c count
	d extraChance
	e extraCount
	<init> (IFI)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcqa;)Ljava/lang/Integer; lambda$null$2
	b (Lcqa;)Ljava/lang/Float; lambda$null$1
	c (Lcqa;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cqb net/minecraft/world/level/levelgen/placement/HeightMapWorldSurfaceDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmd;)Lchk$a; type
	a (Lclt;)Lchk$a; type
cqc net/minecraft/world/level/levelgen/placement/HeightmapDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lclt;)Lchk$a; type
cqd net/minecraft/world/level/levelgen/placement/HeightmapDoubleDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lclt;)Lchk$a; type
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cqe net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cqf net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcpk;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cqg net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcpk;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cqh net/minecraft/world/level/levelgen/placement/NoiseBasedDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcqi;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
	a (Lfx;I)Lfx; lambda$place$0
cqi net/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration
	a CODEC
	c noiseToCountRatio
	d noiseFactor
	e noiseOffset
	<init> (IDD)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcqi;)Ljava/lang/Double; lambda$null$2
	b (Lcqi;)Ljava/lang/Double; lambda$null$1
	c (Lcqi;)Ljava/lang/Integer; lambda$null$0
	<clinit> ()V <clinit>
cqj net/minecraft/world/level/levelgen/placement/NopePlacementDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cqk net/minecraft/world/level/levelgen/placement/RangeDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcml;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cql net/minecraft/world/level/levelgen/placement/SimpleFeatureDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cqm net/minecraft/world/level/levelgen/placement/Spread32Decorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cqn net/minecraft/world/level/levelgen/placement/SquareDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cqo net/minecraft/world/level/levelgen/placement/TopSolidHeightMapDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmd;)Lchk$a; type
	a (Lclt;)Lchk$a; type
cqp net/minecraft/world/level/levelgen/placement/VeryBiasedRangeDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcml;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cqq net/minecraft/world/level/levelgen/placement/nether/CountMultiLayerDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lclr;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;IIII)I findOnGroundYPosition
	a (Lcee;)Z isEmpty
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cqr net/minecraft/world/level/levelgen/placement/nether/FireDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lclr;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
cqs net/minecraft/world/level/levelgen/placement/nether/GlowstoneDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lclr;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lfx;I)Lfx; lambda$place$0
cqt net/minecraft/world/level/levelgen/placement/nether/MagmaDecorator
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcps;Ljava/util/Random;Lcmd;Lfx;)Ljava/util/stream/Stream; getPositions
	a (Lcps;Ljava/util/Random;Lclt;Lfx;)Ljava/util/stream/Stream; getPositions
cqu net/minecraft/world/level/levelgen/placement/nether/package-info
cqv net/minecraft/world/level/levelgen/placement/package-info
cqw net/minecraft/world/level/levelgen/structure/BeardedStructureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	b ()V calculateBoundingBox
cqx net/minecraft/world/level/levelgen/structure/BoundingBox
	a x0
	b y0
	c z0
	d x1
	e y1
	f z1
	<init> ()V <init>
	<init> ([I)V <init>
	a ()Lcqx; getUnknownBox
	b ()Lcqx; infinite
	a (IIIIIIIIILgc;)Lcqx; orientBox
	a (IIIIII)Lcqx; createProper
	<init> (Lcqx;)V <init>
	<init> (IIIIII)V <init>
	<init> (Lgr;Lgr;)V <init>
	<init> (IIII)V <init>
	a (Lcqx;)Z isInsideOf
	b (Lcqx;)Z intersects
	b (IIIIII)Z intersects
	a (Lgr;Lgr;)Z intersects
	a (IIII)Z intersects
	c (Lcqx;)V expand
	d (Lcqx;)Lcqx; getIntersection
	a (DDD)V inflate
	a (D)V inflate
	a (III)V move
	b (III)Lcqx; moved
	a (Lgr;)V move
	b (Lgr;)Z isInside
	c ()Lgr; getLength
	d ()I getXSpan
	e ()I getYSpan
	f ()I getZSpan
	g ()Lgr; getCenter
	toString ()Ljava/lang/String; toString
	h ()Lmh; createTag
cqx$1 net/minecraft/world/level/levelgen/structure/BoundingBox$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cqy net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces
	<init> ()V <init>
cqy$a net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece
	<init> (Lfx;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Lcee;)Z isLiquid
cqz net/minecraft/world/level/levelgen/structure/DesertPyramidPiece
	e hasPlacedChest
	<init> (Ljava/util/Random;II)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cra net/minecraft/world/level/levelgen/structure/EndCityPieces
	a OVERWRITE
	b INSERT
	c HOUSE_TOWER_GENERATOR
	d TOWER_BRIDGES
	e TOWER_GENERATOR
	f TOWER_BRIDGE_GENERATOR
	g FAT_TOWER_BRIDGES
	h FAT_TOWER_GENERATOR
	<init> ()V <init>
	b (Lcst;Lcra$a;Lfx;Ljava/lang/String;Lbzj;Z)Lcra$a; addPiece
	a (Lcst;Lfx;Lbzj;Ljava/util/List;Ljava/util/Random;)V startHouseTower
	b (Ljava/util/List;Lcra$a;)Lcra$a; addHelper
	b (Lcst;Lcra$b;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z recursiveChildren
	a ()Lcsu; access$000
	b ()Lcsu; access$100
	a (Lcst;Lcra$a;Lfx;Ljava/lang/String;Lbzj;Z)Lcra$a; access$200
	a (Ljava/util/List;Lcra$a;)Lcra$a; access$300
	c ()Lcra$b; access$400
	a (Lcst;Lcra$b;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z access$500
	d ()Ljava/util/List; access$600
	e ()Lcra$b; access$700
	f ()Lcra$b; access$800
	g ()Lcra$b; access$900
	h ()Ljava/util/List; access$1000
	<clinit> ()V <clinit>
cra$1 net/minecraft/world/level/levelgen/structure/EndCityPieces$1
	<init> ()V <init>
	a ()V init
	a (Lcst;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z generate
cra$2 net/minecraft/world/level/levelgen/structure/EndCityPieces$2
	<init> ()V <init>
	a ()V init
	a (Lcst;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z generate
cra$3 net/minecraft/world/level/levelgen/structure/EndCityPieces$3
	a shipCreated
	<init> ()V <init>
	a ()V init
	a (Lcst;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z generate
cra$4 net/minecraft/world/level/levelgen/structure/EndCityPieces$4
	<init> ()V <init>
	a ()V init
	a (Lcst;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z generate
cra$a net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece
	d templateName
	e rotation
	f overwrite
	<init> (Lcst;Ljava/lang/String;Lfx;Lbzj;Z)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcst;)V loadTemplate
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
cra$b net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator
	a ()V init
	a (Lcst;ILcra$a;Lfx;Ljava/util/List;Ljava/util/Random;)Z generate
crb net/minecraft/world/level/levelgen/structure/IglooPieces
	a STRUCTURE_LOCATION_IGLOO
	b STRUCTURE_LOCATION_LADDER
	c STRUCTURE_LOCATION_LABORATORY
	d PIVOTS
	e OFFSETS
	<init> ()V <init>
	a (Lcst;Lfx;Lbzj;Ljava/util/List;Ljava/util/Random;)V addPieces
	a ()Ljava/util/Map; access$000
	b ()Ljava/util/Map; access$100
	c ()Lvk; access$200
	<clinit> ()V <clinit>
crb$a net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece
	d templateLocation
	e rotation
	<init> (Lcst;Lvk;Lfx;Lbzj;I)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcst;)V loadTemplate
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crc net/minecraft/world/level/levelgen/structure/JunglePyramidPiece
	e placedMainChest
	f placedHiddenChest
	g placedTrap1
	h placedTrap2
	i STONE_SELECTOR
	<init> (Ljava/util/Random;II)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	<clinit> ()V <clinit>
crc$1 net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$1
crc$a net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector
	<init> ()V <init>
	a (Ljava/util/Random;IIIZ)V next
	<init> (Lcrc$1;)V <init>
crd net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c hasLegacyData
	d dataMap
	e indexMap
	f legacyKeys
	g currentKeys
	<init> (Lcxz;Ljava/util/List;Ljava/util/List;)V <init>
	a (J)V removeIndex
	a (Lmd;)Lmd; updateFromLegacy
	a (IILjava/lang/String;)Z hasLegacyStart
	a (II)Z isUnhandledStructureStart
	a (Lmd;Lbra;)Lmd; updateStructureStart
	a (Lcxz;)V populateCaches
	a (Lvj;Lcxz;)Lcrd; getLegacyStructureHandler
	a (Ljava/lang/String;)Lcrq; lambda$populateCaches$3
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; lambda$populateCaches$2
	a (Ljava/util/HashMap;)V lambda$static$1
	b (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
cre net/minecraft/world/level/levelgen/structure/MineShaftPieces
	<init> ()V <init>
	a (Ljava/util/List;Ljava/util/Random;IIILgc;ILcjy$b;)Lcre$c; createRandomShaftPiece
	b (Lcrr;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcre$c; generateAndAddPiece
	a (Lcrr;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcre$c; access$000
cre$1 net/minecraft/world/level/levelgen/structure/MineShaftPieces$1
	a $SwitchMap$net$minecraft$world$level$levelgen$feature$MineshaftFeature$Type
	b $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cre$a net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	e numSections
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	<init> (ILjava/util/Random;Lcqx;Lgc;Lcjy$b;)V <init>
	a (Ljava/util/List;Ljava/util/Random;IIILgc;)Lcqx; findCorridorSize
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Lbso;Lcqx;Ljava/util/Random;IIILvk;)Z createChest
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Lbso;Lcqx;IIIIILjava/util/Random;)V placeSupport
	a (Lbso;Lcqx;Ljava/util/Random;FIII)V placeCobWeb
cre$b net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	<init> (ILcqx;Lgc;Lcjy$b;)V <init>
	a (Ljava/util/List;Ljava/util/Random;IIILgc;)Lcqx; findCrossing
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Lbso;Lcqx;IIII)V placeSupportPillar
cre$c net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece
	a type
	<init> (Lcky;ILcjy$b;)V <init>
	<init> (Lcky;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a ()Lcee; getPlanksBlock
	b ()Lcee; getFenceBlock
	a (Lbqz;Lcqx;IIII)Z isSupportingBox
cre$d net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom
	b childEntranceBoxes
	<init> (ILjava/util/Random;IILcjy$b;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (III)V move
	a (Lmd;)V addAdditionalSaveData
cre$e net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs
	<init> (ILcqx;Lgc;Lcjy$b;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Ljava/util/List;Ljava/util/Random;IIILgc;)Lcqx; findStairs
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf net/minecraft/world/level/levelgen/structure/NetherBridgePieces
	a BRIDGE_PIECE_WEIGHTS
	b CASTLE_PIECE_WEIGHTS
	<init> ()V <init>
	b (Lcrf$n;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$m; findAndCreateBridgePieceFactory
	a (Lcrf$n;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$m; access$000
	a ()[Lcrf$n; access$100
	b ()[Lcrf$n; access$200
	<clinit> ()V <clinit>
crf$1 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
crf$a net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing
	<init> (ILcqx;Lgc;)V <init>
	<init> (Ljava/util/Random;II)V <init>
	<init> (Lcky;Lmd;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$a; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$b net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller
	a selfSeed
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$b; createPiece
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$c net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$c; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$d net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$d; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$e net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$e; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$f net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$f; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$g net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$g; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$h net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece
	a isNeedingChest
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$h; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$i net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$i; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$j net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece
	a isNeedingChest
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$j; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$k net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$k; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$l net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone
	a hasPlacedSpawner
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/util/List;IIIILgc;)Lcrf$l; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$m net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece
	<init> (Lcky;I)V <init>
	<init> (Lcky;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/util/List;)I updatePieceWeight
	a (Lcrf$q;Ljava/util/List;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrf$m; generatePiece
	a (Lcrf$q;Ljava/util/List;Ljava/util/Random;IIILgc;IZ)Lcrr; generateAndAddPiece
	a (Lcrf$q;Ljava/util/List;Ljava/util/Random;IIZ)Lcrr; generateChildForward
	b (Lcrf$q;Ljava/util/List;Ljava/util/Random;IIZ)Lcrr; generateChildLeft
	c (Lcrf$q;Ljava/util/List;Ljava/util/Random;IIZ)Lcrr; generateChildRight
	a (Lcqx;)Z isOkBox
	a (Lbso;Ljava/util/Random;Lcqx;IIIII)V generateLightPost
crf$n net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	<init> (Ljava/lang/Class;IIZ)V <init>
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
	a ()Z isValid
crf$o net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrf$o; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$p net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIIILgc;)Lcrf$p; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crf$q net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
	<init> (Ljava/util/Random;II)V <init>
	<init> (Lcst;Lmd;)V <init>
crg net/minecraft/world/level/levelgen/structure/NetherFossilFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
crg$a net/minecraft/world/level/levelgen/structure/NetherFossilFeature$FeatureStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcme;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
crh net/minecraft/world/level/levelgen/structure/NetherFossilPieces
	a FOSSILS
	<init> ()V <init>
	a (Lcst;Ljava/util/List;Ljava/util/Random;Lfx;)V addPieces
	<clinit> ()V <clinit>
crh$a net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece
	d templateLocation
	e rotation
	<init> (Lcst;Lvk;Lfx;Lbzj;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcst;)V loadTemplate
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri net/minecraft/world/level/levelgen/structure/OceanMonumentPieces
	<init> ()V <init>
cri$1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cri$a net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$b net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$c net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$d net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$e net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$f net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$g net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom
	<init> ()V <init>
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
	<init> (Lcri$1;)V <init>
cri$h net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding
	p sourceRoom
	q coreRoom
	r childPieces
	<init> (Ljava/util/Random;IILgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Ljava/util/Random;)Ljava/util/List; generateRoomGraph
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (ZILbso;Ljava/util/Random;Lcqx;)V generateWing
	a (Lbso;Ljava/util/Random;Lcqx;)V generateEntranceArchs
	b (Lbso;Ljava/util/Random;Lcqx;)V generateEntranceWall
	c (Lbso;Ljava/util/Random;Lcqx;)V generateRoofPiece
	d (Lbso;Ljava/util/Random;Lcqx;)V generateLowerWall
	e (Lbso;Ljava/util/Random;Lcqx;)V generateMiddleWall
	f (Lbso;Ljava/util/Random;Lcqx;)V generateUpperWall
cri$i net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter
	a (Lcri$v;)Z fits
	a (Lgc;Lcri$v;Ljava/util/Random;)Lcri$r; create
cri$j net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$k net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$l net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$m net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$n net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$o net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$p net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$q net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse
	<init> (Lgc;Lcqx;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$r net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece
	a BASE_GRAY
	b BASE_LIGHT
	c BASE_BLACK
	d DOT_DECO_DATA
	e LAMP_BLOCK
	f FILL_BLOCK
	g FILL_KEEP
	h GRIDROOM_SOURCE_INDEX
	i GRIDROOM_TOP_CONNECT_INDEX
	j GRIDROOM_LEFTWING_CONNECT_INDEX
	k GRIDROOM_RIGHTWING_CONNECT_INDEX
	l roomDefinition
	b (III)I getRoomIndex
	a (I)I getRoomX
	b (I)I getRoomY
	c (I)I getRoomZ
	<init> (Lcky;I)V <init>
	<init> (Lcky;Lgc;Lcqx;)V <init>
	<init> (Lcky;ILgc;Lcri$v;III)V <init>
	<init> (Lcky;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lcqx;IIIIII)V generateWaterBox
	a (Lbso;Lcqx;IIZ)V generateDefaultFloor
	a (Lbso;Lcqx;IIIIIILcee;)V generateBoxOnFillOnly
	a (Lcqx;IIII)Z chunkIntersects
	a (Lbso;Lcqx;III)Z spawnElder
	<clinit> ()V <clinit>
cri$s net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom
	p mainDesign
	<init> (Lgc;Lcri$v;Ljava/util/Random;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$t net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	<init> (Lgc;Lcri$v;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$u net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom
	p mainDesign
	<init> (Lgc;Lcqx;I)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
cri$v net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	<init> (I)V <init>
	a (Lgc;Lcri$v;)V setConnection
	a ()V updateOpenings
	a (I)Z findSource
	b ()Z isSpecial
	c ()I countOpenings
	a (Lcri$v;)I access$000
	a (Lcri$v;Z)Z access$102
	b (Lcri$v;)Z access$100
	b (Lcri$v;Z)Z access$902
	c (Lcri$v;)[Lcri$v; access$1000
	d (Lcri$v;)[Z access$1100
crj net/minecraft/world/level/levelgen/structure/OceanRuinFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lckx$a; getStartFactory
crj$a net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcmf;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
crj$b net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type
	a WARM
	b COLD
	c CODEC
	d BY_NAME
	e name
	f $VALUES
	values ()[Lcrj$b; values
	valueOf (Ljava/lang/String;)Lcrj$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lcrj$b; byName
	a ()Ljava/lang/String; getSerializedName
	a (Lcrj$b;)Lcrj$b; lambda$static$0
	<clinit> ()V <clinit>
crk net/minecraft/world/level/levelgen/structure/OceanRuinPieces
	a WARM_RUINS
	b RUINS_BRICK
	c RUINS_CRACKED
	d RUINS_MOSSY
	e BIG_RUINS_BRICK
	f BIG_RUINS_MOSSY
	g BIG_RUINS_CRACKED
	h BIG_WARM_RUINS
	<init> ()V <init>
	a (Ljava/util/Random;)Lvk; getSmallWarmRuin
	b (Ljava/util/Random;)Lvk; getBigWarmRuin
	a (Lcst;Lfx;Lbzj;Ljava/util/List;Ljava/util/Random;Lcmf;)V addPieces
	a (Lcst;Ljava/util/Random;Lbzj;Lfx;Lcmf;Ljava/util/List;)V addClusterRuins
	a (Ljava/util/Random;II)Ljava/util/List; allPositions
	a (Lcst;Lfx;Lbzj;Ljava/util/List;Ljava/util/Random;Lcmf;ZF)V addPiece
	<clinit> ()V <clinit>
crk$a net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece
	d biomeType
	e integrity
	f templateLocation
	g rotation
	h isLarge
	<init> (Lcst;Lvk;Lfx;Lbzj;FLcrj$b;Z)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcst;)V loadTemplate
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Lfx;Lbqz;Lfx;)I getHeight
crl net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	d LOGGER
	a element
	b position
	e groundLevelDelta
	c rotation
	f junctions
	g structureManager
	<init> (Lcst;Lcof;Lfx;ILbzj;Lcqx;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lfx;Z)Z place
	a (III)V move
	ap_ ()Lbzj; getRotation
	toString ()Ljava/lang/String; toString
	b ()Lcof; getElement
	c ()Lfx; getPosition
	d ()I getGroundLevelDelta
	a (Lcoa;)V addJunction
	e ()Ljava/util/List; getJunctions
	a (Lmd;Lmt;)V lambda$addAdditionalSaveData$1
	a (Lmt;)V lambda$new$0
	<clinit> ()V <clinit>
crm net/minecraft/world/level/levelgen/structure/RuinedPortalPiece
	d LOGGER
	e templateLocation
	f rotation
	g mirror
	h verticalPlacement
	i properties
	<init> (Lfx;Lcrm$b;Lcrm$a;Lvk;Lcsy;Lbzj;Lbyd;Lfx;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcsy;Lfx;)V loadTemplate
	c ()Lcsn; getLavaProcessorRule
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (Ljava/util/Random;Lbrv;Lfx;)V maybeAddVines
	b (Ljava/util/Random;Lbrv;Lfx;)V maybeAddLeavesAbove
	a (Ljava/util/Random;Lbrv;)V addNetherrackDripColumnsBelowPortal
	c (Ljava/util/Random;Lbrv;Lfx;)V addNetherrackDripColumn
	b (Ljava/util/Random;Lbrv;)V spreadNetherrack
	a (Lbrv;Lfx;)Z canBlockBeReplacedByNetherrackOrMagma
	d (Ljava/util/Random;Lbrv;Lfx;)V placeNetherrackOrMagma
	a (Lbrv;IILcrm$b;)I getSurfaceY
	a (Lcrm$b;)Lchk$a; getHeightMapType
	a (Lbul;FLbul;)Lcsn; getBlockReplaceRule
	a (Lbul;Lbul;)Lcsn; getBlockReplaceRule
	a (Ljava/util/Random;Lbso;Lfx;)V lambda$postProcess$1
	a (Lmd;Lmt;)V lambda$addAdditionalSaveData$0
	<clinit> ()V <clinit>
crm$a net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties
	a CODEC
	b cold
	c mossiness
	d airPocket
	e overgrown
	f vines
	g replaceWithBlackstone
	<init> ()V <init>
	<init> (ZFZZZZ)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Lcrm$a;)Ljava/lang/Boolean; lambda$null$5
	b (Lcrm$a;)Ljava/lang/Boolean; lambda$null$4
	c (Lcrm$a;)Ljava/lang/Boolean; lambda$null$3
	d (Lcrm$a;)Ljava/lang/Boolean; lambda$null$2
	e (Lcrm$a;)Ljava/lang/Float; lambda$null$1
	f (Lcrm$a;)Ljava/lang/Boolean; lambda$null$0
	<clinit> ()V <clinit>
crm$b net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement
	a ON_LAND_SURFACE
	b PARTLY_BURIED
	c ON_OCEAN_FLOOR
	d IN_MOUNTAIN
	e UNDERGROUND
	f IN_NETHER
	g BY_NAME
	h name
	i $VALUES
	values ()[Lcrm$b; values
	valueOf (Ljava/lang/String;)Lcrm$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lcrm$b; byName
	a (Lcrm$b;)Lcrm$b; lambda$static$0
	<clinit> ()V <clinit>
crn net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	<init> (Lcky;Ljava/util/Random;IIIIII)V <init>
	<init> (Lcky;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbrv;Lcqx;I)Z updateAverageGroundHeight
cro net/minecraft/world/level/levelgen/structure/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	<init> ()V <init>
	a (Lcst;Lfx;Lbzj;Ljava/util/List;Ljava/util/Random;Lcmp;)V addPieces
	a ()Lfx; access$000
	<clinit> ()V <clinit>
cro$a net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece
	d rotation
	e templateLocation
	f isBeached
	<init> (Lcst;Lvk;Lfx;Lbzj;Z)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcst;)V loadTemplate
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp net/minecraft/world/level/levelgen/structure/StrongholdPieces
	a STRONGHOLD_PIECE_WEIGHTS
	b currentPieces
	c imposedPiece
	d totalWeight
	e SMOOTH_STONE_SELECTOR
	<init> ()V <init>
	a ()V resetPieces
	c ()Z updatePieceWeight
	a (Ljava/lang/Class;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$p; findAndCreatePieceFactory
	b (Lcrp$m;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$p; generatePieceFromSmallDoor
	c (Lcrp$m;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrr; generateAndAddPiece
	a (Lcrp$m;Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrr; access$000
	a (Ljava/lang/Class;)Ljava/lang/Class; access$102
	b ()Lcrp$k; access$200
	<clinit> ()V <clinit>
crp$1 net/minecraft/world/level/levelgen/structure/StrongholdPieces$1
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
crp$2 net/minecraft/world/level/levelgen/structure/StrongholdPieces$2
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
crp$3 net/minecraft/world/level/levelgen/structure/StrongholdPieces$3
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$StrongholdPieces$StrongholdPiece$SmallDoorType
	b $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
crp$a net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor
	a hasPlacedChest
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$a; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$b net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor
	a steps
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/util/List;Ljava/util/Random;IIILgc;)Lcqx; findPieceBox
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$c net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing
	a leftLow
	b leftHigh
	c rightLow
	e rightHigh
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$c; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$d net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$d; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$e net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library
	a isTall
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$e; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$f net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
	a ()Z isValid
crp$g net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom
	a hasPlacedSpawner
	<init> (ILcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;IIILgc;I)Lcrp$g; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$h net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$h; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$i net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$i; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$j net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing
	a type
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$j; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$k net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector
	<init> ()V <init>
	a (Ljava/util/Random;IIIZ)V next
	<init> (Lcrp$1;)V <init>
crp$l net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown
	a isSource
	<init> (Lcky;ILjava/util/Random;II)V <init>
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcky;Lmd;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$l; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$m net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	<init> (Ljava/util/Random;II)V <init>
	<init> (Lcst;Lmd;)V <init>
	ao_ ()Lfx; getLocatorPosition
crp$n net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight
	a leftChild
	b rightChild
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$n; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$o net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown
	<init> (ILjava/util/Random;Lcqx;Lgc;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Ljava/util/List;Ljava/util/Random;IIILgc;I)Lcrp$o; createPiece
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
crp$p net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece
	d entryDoor
	<init> (Lcky;I)V <init>
	<init> (Lcky;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Ljava/util/Random;Lcqx;Lcrp$p$a;III)V generateSmallDoor
	a (Ljava/util/Random;)Lcrp$p$a; randomSmallDoor
	a (Lcrp$m;Ljava/util/List;Ljava/util/Random;II)Lcrr; generateSmallDoorChildForward
	b (Lcrp$m;Ljava/util/List;Ljava/util/Random;II)Lcrr; generateSmallDoorChildLeft
	c (Lcrp$m;Ljava/util/List;Ljava/util/Random;II)Lcrr; generateSmallDoorChildRight
	a (Lcqx;)Z isOkBox
crp$p$a net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType
	a OPENING
	b WOOD_DOOR
	c GRATES
	d IRON_DOOR
	e $VALUES
	values ()[Lcrp$p$a; values
	valueOf (Ljava/lang/String;)Lcrp$p$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
crp$q net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn
	<init> (Lcky;I)V <init>
	<init> (Lcky;Lmd;)V <init>
crq net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a all
	b remaining
	<init> (Ljava/lang/String;)V <init>
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	a (J)V addIndex
	b (J)Z hasStartIndex
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
crr net/minecraft/world/level/levelgen/structure/StructurePiece
	m CAVE_AIR
	n boundingBox
	a orientation
	b mirror
	c rotation
	o genDepth
	d type
	e SHAPE_CHECK_BLOCKS
	<init> (Lcky;I)V <init>
	<init> (Lcky;Lmd;)V <init>
	f ()Lmd; createTag
	a (Lmd;)V addAdditionalSaveData
	a (Lcrr;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	g ()Lcqx; getBoundingBox
	h ()I getGenDepth
	a (Lbra;I)Z isCloseToChunk
	a (Ljava/util/List;Lcqx;)Lcrr; findCollisionPiece
	ao_ ()Lfx; getLocatorPosition
	a (Lbqz;Lcqx;)Z edgesLiquid
	c (III)Lfx; getWorldPos
	a (II)I getWorldX
	d (I)I getWorldY
	b (II)I getWorldZ
	a (Lbso;Lcee;IIILcqx;)V placeBlock
	a (Lbqz;IIILcqx;)Lcee; getBlock
	a (Lbrw;IIILcqx;)Z isInterior
	b (Lbso;Lcqx;IIIIII)V generateAirBox
	a (Lbso;Lcqx;IIIIIILcee;Lcee;Z)V generateBox
	a (Lbso;Lcqx;Lcqx;Lcee;Lcee;Z)V generateBox
	a (Lbso;Lcqx;IIIIIIZLjava/util/Random;Lcrr$a;)V generateBox
	a (Lbso;Lcqx;Lcqx;ZLjava/util/Random;Lcrr$a;)V generateBox
	a (Lbso;Lcqx;Ljava/util/Random;FIIIIIILcee;Lcee;ZZ)V generateMaybeBox
	a (Lbso;Lcqx;Ljava/util/Random;FIIILcee;)V maybeGenerateBlock
	a (Lbso;Lcqx;IIIIIILcee;Z)V generateUpperHalfSphere
	a (Lbso;IIILcqx;)V generateAirColumnUp
	b (Lbso;Lcee;IIILcqx;)V fillColumnDown
	a (Lbso;Lcqx;Ljava/util/Random;IIILvk;)Z createChest
	a (Lbqz;Lfx;Lcee;)Lcee; reorient
	a (Lbsh;Lcqx;Ljava/util/Random;Lfx;Lvk;Lcee;)Z createChest
	a (Lbso;Lcqx;Ljava/util/Random;IIILgc;Lvk;)Z createDispenser
	a (Lbso;Lcqx;Ljava/util/Random;IIILgc;Lbvy;)V createDoor
	a (III)V move
	i ()Lgc; getOrientation
	a (Lgc;)V setOrientation
	ap_ ()Lbzj; getRotation
	j ()Lbyd; getMirror
	k ()Lcky; getType
	<clinit> ()V <clinit>
crr$1 net/minecraft/world/level/levelgen/structure/StructurePiece$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
crr$a net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	<init> ()V <init>
	a (Ljava/util/Random;IIIZ)V next
	a ()Lcee; getNext
crs net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START
	e feature
	b pieces
	c boundingBox
	f chunkX
	g chunkZ
	h references
	d random
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
	c ()Lcqx; getBoundingBox
	d ()Ljava/util/List; getPieces
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;)V placeInChunk
	b ()V calculateBoundingBox
	a (II)Lmd; createTag
	a (ILjava/util/Random;I)V moveBelowSeaLevel
	a (Ljava/util/Random;II)V moveInsideHeights
	e ()Z isValid
	f ()I getChunkX
	g ()I getChunkZ
	a ()Lfx; getLocatePos
	h ()Z canBeReferenced
	i ()V addReference
	j ()I getReferences
	k ()I getMaxReferences
	l ()Lckx; getFeature
	<clinit> ()V <clinit>
crs$1 net/minecraft/world/level/levelgen/structure/StructureStart$1
	<init> (Lckx;IILcqx;IJ)V <init>
	a (Lgn;Lcfv;Lcst;IILbss;Lcmb;)V generatePieces
	a (Lgn;Lcfv;Lcst;IILbss;Lclx;)V generatePieces
crt net/minecraft/world/level/levelgen/structure/SwamplandHutPiece
	e spawnedWitch
	f spawnedCat
	<init> (Ljava/util/Random;II)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Lbsh;Lcqx;)V spawnCat
cru net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	d LOGGER
	a template
	b placeSettings
	c templatePosition
	<init> (Lcky;I)V <init>
	<init> (Lcky;Lmd;)V <init>
	a (Lcsy;Lfx;Lcsu;)V setup
	a (Lmd;)V addAdditionalSaveData
	a (Lbso;Lbsk;Lcfv;Ljava/util/Random;Lcqx;Lbra;Lfx;)Z postProcess
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
	a (III)V move
	ap_ ()Lbzj; getRotation
	<clinit> ()V <clinit>
crv net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces
	<init> ()V <init>
	a (Lcst;Lfx;Lbzj;Ljava/util/List;Ljava/util/Random;)V generateMansion
	a ([Ljava/lang/String;)V main
crv$1 net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$1
crv$a net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection
	<init> ()V <init>
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
	<init> (Lcrv$1;)V <init>
crv$b net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection
	<init> ()V <init>
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
	<init> (Lcrv$1;)V <init>
crv$c net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid
	a random
	b baseGrid
	c thirdFloorGrid
	d floorRooms
	e entranceX
	f entranceY
	<init> (Ljava/util/Random;)V <init>
	a (Lcrv$g;II)Z isHouse
	a (Lcrv$g;IIII)Z isRoomId
	b (Lcrv$g;IIII)Lgc; get1x2RoomDirection
	a (Lcrv$g;IILgc;I)V recursiveCorridor
	a (Lcrv$g;)Z cleanEdges
	b ()V setupThirdFloor
	a (Lcrv$g;Lcrv$g;)V identifyRooms
	a ()V print
	a (Lcrv$c;)Lcrv$g; access$100
	b (Lcrv$c;)Lcrv$g; access$200
	c (Lcrv$c;)I access$300
	d (Lcrv$c;)I access$400
	e (Lcrv$c;)[Lcrv$g; access$1000
crv$d net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer
	a structureManager
	b random
	c startX
	d startY
	<init> (Lcst;Ljava/util/Random;)V <init>
	a (Lfx;Lbzj;Ljava/util/List;Lcrv$c;)V createMansion
	a (Ljava/util/List;Lcrv$e;Lcrv$g;Lgc;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lfx;Lbzj;Lcrv$g;Lcrv$g;)V createRoof
	a (Ljava/util/List;Lcrv$e;)V entrance
	b (Ljava/util/List;Lcrv$e;)V traverseWallPiece
	c (Ljava/util/List;Lcrv$e;)V traverseTurn
	d (Ljava/util/List;Lcrv$e;)V traverseInnerTurn
	a (Ljava/util/List;Lfx;Lbzj;Lgc;Lcrv$b;)V addRoom1x1
	a (Ljava/util/List;Lfx;Lbzj;Lgc;Lgc;Lcrv$b;Z)V addRoom1x2
	a (Ljava/util/List;Lfx;Lbzj;Lgc;Lgc;Lcrv$b;)V addRoom2x2
	a (Ljava/util/List;Lfx;Lbzj;Lcrv$b;)V addRoom2x2Secret
crv$e net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
	<init> ()V <init>
	<init> (Lcrv$1;)V <init>
crv$f net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection
	<init> ()V <init>
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
	<init> (Lcrv$1;)V <init>
crv$g net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	<init> (III)V <init>
	a (III)V set
	a (IIIII)V set
	a (II)I get
	a (IIII)V setif
	b (III)Z edgesTo
	a (Lcrv$g;)I access$500
	b (Lcrv$g;)I access$600
crv$h net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection
	<init> ()V <init>
	<init> (Lcrv$1;)V <init>
crv$i net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece
	d templateName
	e rotation
	f mirror
	<init> (Lcst;Ljava/lang/String;Lfx;Lbzj;)V <init>
	<init> (Lcst;Ljava/lang/String;Lfx;Lbzj;Lbyd;)V <init>
	<init> (Lcst;Lmd;)V <init>
	a (Lcst;)V loadTemplate
	a (Lmd;)V addAdditionalSaveData
	a (Ljava/lang/String;Lfx;Lbsh;Ljava/util/Random;Lcqx;)V handleDataMarker
crw net/minecraft/world/level/levelgen/structure/package-info
crx net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	b ()Lcrx; lambda$static$0
	<clinit> ()V <clinit>
cry net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	g axis
	<init> (FFIILgc$a;)V <init>
	a (Lfx;Lfx;Lfx;Ljava/util/Random;)Z test
	a ()Lcsm; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lcry;)Lgc$a; lambda$null$4
	b (Lcry;)Ljava/lang/Integer; lambda$null$3
	c (Lcry;)Ljava/lang/Integer; lambda$null$2
	d (Lcry;)Ljava/lang/Float; lambda$null$1
	e (Lcry;)Ljava/lang/Float; lambda$null$0
	<clinit> ()V <clinit>
crz net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	a CODEC
	b INSTANCE
	c replacements
	<init> ()V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	a (Ljava/util/HashMap;)V lambda$new$1
	b ()Lcrz; lambda$static$0
	<clinit> ()V <clinit>
csa net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	a CODEC
	b mossiness
	<init> (F)V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a (Ljava/util/Random;)Lcee; maybeReplaceFullStoneBlock
	a (Ljava/util/Random;Lcee;)Lcee; maybeReplaceStairs
	b (Ljava/util/Random;)Lcee; maybeReplaceSlab
	c (Ljava/util/Random;)Lcee; maybeReplaceWall
	d (Ljava/util/Random;)Lcee; maybeReplaceObsidian
	a (Ljava/util/Random;Lbul;)Lcee; getRandomFacingStairs
	a (Ljava/util/Random;[Lcee;[Lcee;)Lcee; getRandomBlock
	a (Ljava/util/Random;[Lcee;)Lcee; getRandomBlock
	a ()Lcsx; getType
	a (Lcsa;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
csb net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a CODEC
	b STRUCTURE_BLOCK
	c AIR
	d STRUCTURE_AND_AIR
	e toIgnore
	<init> (Ljava/util/List;)V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	a (Lcsb;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
csc net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a CODEC
	b block
	<init> (Lbul;)V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	a (Lcsc;)Lbul; lambda$static$0
	<clinit> ()V <clinit>
csd net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a CODEC
	b integrity
	<init> (F)V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	a (Lcsd;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
cse net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a CODEC
	b blockState
	<init> (Lcee;)V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	a (Lcse;)Lcee; lambda$static$0
	<clinit> ()V <clinit>
csf net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a CODEC
	b heightmap
	c offset
	<init> (Lchk$a;I)V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcsf;)Ljava/lang/Integer; lambda$null$1
	b (Lcsf;)Lchk$a; lambda$null$0
	<clinit> ()V <clinit>
csg net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	b ()Lcsg; lambda$static$0
	<clinit> ()V <clinit>
csh net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	b ()Lcsh; lambda$static$0
	<clinit> ()V <clinit>
csi net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	<init> (FFII)V <init>
	a (Lfx;Lfx;Lfx;Ljava/util/Random;)Z test
	a ()Lcsm; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lcsi;)Ljava/lang/Integer; lambda$null$3
	b (Lcsi;)Ljava/lang/Integer; lambda$null$2
	c (Lcsi;)Ljava/lang/Float; lambda$null$1
	d (Lcsi;)Ljava/lang/Float; lambda$null$0
	<clinit> ()V <clinit>
csj net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	b ()Lcsj; lambda$static$0
	<clinit> ()V <clinit>
csk net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lfx;Lfx;Lfx;Ljava/util/Random;)Z test
	a ()Lcsm; getType
	b ()Lcsk; lambda$static$0
	<clinit> ()V <clinit>
csl net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	c CODEC
	<init> ()V <init>
	a (Lfx;Lfx;Lfx;Ljava/util/Random;)Z test
	a ()Lcsm; getType
	<clinit> ()V <clinit>
csm net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	a ALWAYS_TRUE_TEST
	b LINEAR_POS_TEST
	c AXIS_ALIGNED_LINEAR_POS_TEST
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcsm; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
csn net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a CODEC
	b inputPredicate
	c locPredicate
	d posPredicate
	e outputState
	f outputTag
	<init> (Lcsr;Lcsr;Lcee;)V <init>
	<init> (Lcsr;Lcsr;Lcsl;Lcee;)V <init>
	<init> (Lcsr;Lcsr;Lcsl;Lcee;Ljava/util/Optional;)V <init>
	a (Lcee;Lcee;Lfx;Lfx;Lfx;Ljava/util/Random;)Z test
	a ()Lcee; getOutputState
	b ()Lmd; getOutputTag
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lcsn;)Ljava/util/Optional; lambda$null$4
	b (Lcsn;)Lcee; lambda$null$3
	c (Lcsn;)Lcsl; lambda$null$2
	d (Lcsn;)Lcsr; lambda$null$1
	e (Lcsn;)Lcsr; lambda$null$0
	<clinit> ()V <clinit>
cso net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a CODEC
	b block
	d probability
	<init> (Lbul;F)V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcso;)Ljava/lang/Float; lambda$null$1
	b (Lcso;)Lbul; lambda$null$0
	<clinit> ()V <clinit>
csp net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a CODEC
	b blockState
	d probability
	<init> (Lcee;F)V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcsp;)Ljava/lang/Float; lambda$null$1
	b (Lcsp;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
csq net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a CODEC
	b rules
	<init> (Ljava/util/List;)V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
	a (Lcsq;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
csr net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	c CODEC
	<init> ()V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	<clinit> ()V <clinit>
css net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	a ALWAYS_TRUE_TEST
	b BLOCK_TEST
	c BLOCKSTATE_TEST
	d TAG_TEST
	e RANDOM_BLOCK_TEST
	f RANDOM_BLOCKSTATE_TEST
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcss; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
cst net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager
	a LOGGER
	b structureRepository
	c fixerUpper
	d resourceManager
	e generatedDir
	<init> (Lacf;Lcyd$a;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Lvk;)Lcsy; getOrCreate
	b (Lvk;)Lcsy; get
	a (Lacf;)V onResourceManagerReload
	e (Lvk;)Lcsy; loadFromResource
	f (Lvk;)Lcsy; loadFromGenerated
	a (Ljava/io/InputStream;)Lcsy; readStructure
	a (Lmd;)Lcsy; readStructure
	c (Lvk;)Z save
	a (Lvk;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	b (Lvk;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	d (Lvk;)V remove
	g (Lvk;)Lcsy; lambda$get$0
	<clinit> ()V <clinit>
csu net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e chunkPos
	f boundingBox
	g keepLiquids
	h random
	i palette
	j processors
	k knownShape
	l finalizeEntities
	<init> ()V <init>
	a ()Lcsu; copy
	a (Lbyd;)Lcsu; setMirror
	a (Lbzj;)Lcsu; setRotation
	a (Lfx;)Lcsu; setRotationPivot
	a (Z)Lcsu; setIgnoreEntities
	a (Lbra;)Lcsu; setChunkPos
	a (Lcqx;)Lcsu; setBoundingBox
	a (Ljava/util/Random;)Lcsu; setRandom
	b (Z)Lcsu; setKeepLiquids
	c (Z)Lcsu; setKnownShape
	b ()Lcsu; clearProcessors
	a (Lcsv;)Lcsu; addProcessor
	b (Lcsv;)Lcsu; popProcessor
	c ()Lbyd; getMirror
	d ()Lbzj; getRotation
	e ()Lfx; getRotationPivot
	f ()Lbra; getChunkPos
	b (Lfx;)Ljava/util/Random; getRandom
	g ()Z isIgnoreEntities
	h ()Lcqx; getBoundingBox
	i ()Z getKnownShape
	j ()Ljava/util/List; getProcessors
	k ()V updateBoundingBoxFromChunkPos
	l ()Z shouldKeepLiquids
	a (Ljava/util/List;Lfx;)Lcsy$a; getRandomPalette
	b (Lbra;)Lcqx; calculateBoundingBox
	d (Z)Lcsu; setFinalizeEntities
	m ()Z shouldFinalizeEntities
csv net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	<init> ()V <init>
	a (Lbrw;Lfx;Lfx;Lcsy$c;Lcsy$c;Lcsu;)Lcsy$c; processBlock
	a ()Lcsx; getType
csw net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	a list
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; list
	toString ()Ljava/lang/String; toString
csx net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	a BLOCK_IGNORE
	b BLOCK_ROT
	c GRAVITY
	d JIGSAW_REPLACEMENT
	e RULE
	f NOP
	g BLOCK_AGE
	h BLACKSTONE_REPLACE
	i LAVA_SUBMERGED_BLOCK
	j SINGLE_CODEC
	k LIST_OBJECT_CODEC
	l DIRECT_CODEC
	m LIST_CODEC
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcsx; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$3
	a (Lcom/mojang/datafixers/util/Either;)Lcsw; lambda$static$2
	a (Lcsw;)Lcsw; lambda$null$1
	b (Lcsw;)Lcsw; lambda$null$0
	<clinit> ()V <clinit>
csy net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a palettes
	b entityInfoList
	c size
	d author
	<init> ()V <init>
	a ()Lfx; getSize
	a (Ljava/lang/String;)V setAuthor
	b ()Ljava/lang/String; getAuthor
	a (Lbru;Lfx;Lfx;ZLbul;)V fillFromWorld
	a (Lcsy$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V addToLists
	a (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; buildInfoList
	a (Lbru;Lfx;Lfx;)V fillEntityList
	a (Lfx;Lcsu;Lbul;)Ljava/util/List; filterBlocks
	a (Lfx;Lcsu;Lbul;Z)Ljava/util/List; filterBlocks
	a (Lcsu;Lfx;Lcsu;Lfx;)Lfx; calculateConnectedPosition
	a (Lcsu;Lfx;)Lfx; calculateRelativePosition
	a (Lbsh;Lfx;Lcsu;Ljava/util/Random;)V placeInWorldChunk
	b (Lbsh;Lfx;Lcsu;Ljava/util/Random;)V placeInWorld
	a (Lbsh;Lfx;Lfx;Lcsu;Ljava/util/Random;I)Z placeInWorld
	a (Lbrv;ILdct;III)V updateShapeAtEdge
	a (Lbrv;Lfx;Lfx;Lcsu;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lbsh;Lfx;Lbyd;Lbzj;Lfx;Lcqx;Z)V placeEntities
	a (Lbsh;Lmd;)Ljava/util/Optional; createEntityIgnoreException
	a (Lbzj;)Lfx; getSize
	a (Lfx;Lbyd;Lbzj;Lfx;)Lfx; transform
	a (Ldck;Lbyd;Lbzj;Lfx;)Ldck; transform
	a (Lfx;Lbyd;Lbzj;)Lfx; getZeroPositionWithTransform
	a (Lfx;Lbyd;Lbzj;II)Lfx; getZeroPositionWithTransform
	b (Lcsu;Lfx;)Lcqx; getBoundingBox
	a (Lfx;Lbzj;Lfx;Lbyd;)Lcqx; getBoundingBox
	a (Lbzj;IILcqx;Lgc;Lgc;)V mirrorAABB
	a (Lmd;)Lmd; save
	b (Lmd;)V load
	a (Lmj;Lmj;)V loadPalette
	a ([I)Lmj; newIntegerList
	a ([D)Lmj; newDoubleList
	a (Lbyd;Lbzj;Ldck;ZLbsh;Lmd;Lapx;)V lambda$placeEntities$5
	a (IIILbrv;ILgc;III)V lambda$updateShapeAtEdge$4
	a (Lapx;)Z lambda$fillEntityList$3
	a (Lcsy$c;)I lambda$buildInfoList$2
	b (Lcsy$c;)I lambda$buildInfoList$1
	c (Lcsy$c;)I lambda$buildInfoList$0
csy$1 net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
csy$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	a blocks
	b cache
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; blocks
	a (Lbul;)Ljava/util/List; blocks
	b (Lbul;)Ljava/util/List; lambda$blocks$1
	a (Lbul;Lcsy$c;)Z lambda$null$0
	<init> (Ljava/util/List;Lcsy$1;)V <init>
csy$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	<init> ()V <init>
	a (Lcee;)I idFor
	a (I)Lcee; stateFor
	iterator ()Ljava/util/Iterator; iterator
	a (Lcee;I)V addMapping
	<init> (Lcsy$1;)V <init>
	<clinit> ()V <clinit>
csy$c net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
	<init> (Lfx;Lcee;Lmd;)V <init>
	toString ()Ljava/lang/String; toString
csy$d net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
	<init> (Ldck;Lfx;Lmd;)V <init>
csz net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a CODEC
	b tag
	<init> (Laej;)V <init>
	a (Lcee;Ljava/util/Random;)Z test
	a ()Lcss; getType
	a (Lcsz;)Laej; lambda$static$1
	b ()Laek; lambda$static$0
	<clinit> ()V <clinit>
cta net/minecraft/world/level/levelgen/structure/templatesystem/package-info
ctb net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder
	K WHITE_TERRACOTTA
	L ORANGE_TERRACOTTA
	M TERRACOTTA
	N YELLOW_TERRACOTTA
	O BROWN_TERRACOTTA
	P RED_TERRACOTTA
	Q LIGHT_GRAY_TERRACOTTA
	a clayBands
	b seed
	c pillarNoise
	d pillarRoofNoise
	e clayBandsOffsetNoise
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (J)V initNoise
	b (J)V generateBands
	a (III)Lcee; getBand
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	<clinit> ()V <clinit>
ctc net/minecraft/world/level/levelgen/surfacebuilders/BasaltDeltasSurfaceBuilder
	a BASALT
	b BLACKSTONE
	c GRAVEL
	d FLOOR_BLOCK_STATES
	e CEILING_BLOCK_STATES
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/google/common/collect/ImmutableList; getFloorBlockStates
	b ()Lcom/google/common/collect/ImmutableList; getCeilingBlockStates
	c ()Lcee; getPatchBlockState
	<clinit> ()V <clinit>
ctd net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder
	a DIRECT_CODEC
	b CODEC
	c surfaceBuilder
	d config
	<init> (Lctq;Lcts;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJ)V apply
	a (J)V initNoise
	a ()Lcts; config
	a (Lctd;)Lctq; lambda$static$0
	<clinit> ()V <clinit>
cte net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;Lcee;Lcee;Lcee;I)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
ctf net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder
	K WHITE_TERRACOTTA
	L ORANGE_TERRACOTTA
	M TERRACOTTA
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	<clinit> ()V <clinit>
ctg net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder
	a PACKED_ICE
	b SNOW_BLOCK
	c AIR
	d GRAVEL
	e ICE
	K icebergNoise
	L icebergRoofNoise
	M seed
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (J)V initNoise
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	<clinit> ()V <clinit>
cth net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
cti net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
ctj net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
ctk net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder
	a seed
	b floorNoises
	c ceilingNoises
	d patchNoise
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (J)V initNoise
	a (Lcom/google/common/collect/ImmutableList;J)Lcom/google/common/collect/ImmutableMap; initPerlinNoises
	a ()Lcom/google/common/collect/ImmutableList; getFloorBlockStates
	b ()Lcom/google/common/collect/ImmutableList; getCeilingBlockStates
	c ()Lcee; getPatchBlockState
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	a (IIILjava/util/Map$Entry;)Ljava/lang/Double; lambda$apply$1
	b (IIILjava/util/Map$Entry;)Ljava/lang/Double; lambda$apply$0
ctl net/minecraft/world/level/levelgen/surfacebuilders/NetherForestSurfaceBuilder
	b AIR
	a seed
	c decorationNoise
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (J)V initNoise
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	<clinit> ()V <clinit>
ctm net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder
	c AIR
	d GRAVEL
	e SOUL_SAND
	a seed
	b decorationNoise
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (J)V initNoise
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	<clinit> ()V <clinit>
ctn net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
cto net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
ctp net/minecraft/world/level/levelgen/surfacebuilders/SoulSandValleySurfaceBuilder
	a SOUL_SAND
	b SOUL_SOIL
	c GRAVEL
	d BLOCK_STATES
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/google/common/collect/ImmutableList; getFloorBlockStates
	b ()Lcom/google/common/collect/ImmutableList; getCeilingBlockStates
	c ()Lcee; getPatchBlockState
	<clinit> ()V <clinit>
ctq net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder
	a DIRT
	b GRASS_BLOCK
	c PODZOL
	d GRAVEL
	e STONE
	K COARSE_DIRT
	L SAND
	M RED_SAND
	N WHITE_TERRACOTTA
	O MYCELIUM
	P SOUL_SAND
	Q NETHERRACK
	R ENDSTONE
	S CRIMSON_NYLIUM
	T WARPED_NYLIUM
	U NETHER_WART_BLOCK
	V WARPED_WART_BLOCK
	W BLACKSTONE
	X BASALT
	Y MAGMA
	f CONFIG_PODZOL
	g CONFIG_GRAVEL
	h CONFIG_GRASS
	i CONFIG_STONE
	j CONFIG_COARSE_DIRT
	k CONFIG_DESERT
	l CONFIG_OCEAN_SAND
	m CONFIG_FULL_SAND
	n CONFIG_BADLANDS
	o CONFIG_MYCELIUM
	p CONFIG_HELL
	q CONFIG_SOUL_SAND_VALLEY
	r CONFIG_THEEND
	s CONFIG_CRIMSON_FOREST
	t CONFIG_WARPED_FOREST
	u CONFIG_BASALT_DELTAS
	v DEFAULT
	w MOUNTAIN
	x SHATTERED_SAVANNA
	y GRAVELLY_MOUNTAIN
	z GIANT_TREE_TAIGA
	A SWAMP
	B BADLANDS
	C WOODED_BADLANDS
	D ERODED_BADLANDS
	E FROZEN_OCEAN
	F NETHER
	G NETHER_FOREST
	H SOUL_SAND_VALLEY
	I BASALT_DELTAS
	J NOPE
	Z configuredCodec
	a (Ljava/lang/String;Lctq;)Lctq; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	d ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Lcts;)Lctd; configured
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	a (J)V initNoise
	<clinit> ()V <clinit>
ctr net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration
	a CODEC
	b topMaterial
	c underMaterial
	d underwaterMaterial
	<init> (Lcee;Lcee;Lcee;)V <init>
	a ()Lcee; getTopMaterial
	b ()Lcee; getUnderMaterial
	c ()Lcee; getUnderwaterMaterial
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lctr;)Lcee; lambda$null$2
	b (Lctr;)Lcee; lambda$null$1
	c (Lctr;)Lcee; lambda$null$0
	<clinit> ()V <clinit>
cts net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration
	a ()Lcee; getTopMaterial
	b ()Lcee; getUnderMaterial
	c ()Lcee; getUnderwaterMaterial
ctt net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
ctu net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder
	K WHITE_TERRACOTTA
	L ORANGE_TERRACOTTA
	M TERRACOTTA
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLctr;)V apply
	a (Ljava/util/Random;Lcft;Lbss;IIIDLcee;Lcee;IJLcts;)V apply
	<clinit> ()V <clinit>
ctv net/minecraft/world/level/levelgen/surfacebuilders/package-info
ctw net/minecraft/world/level/levelgen/synth/ImprovedNoise
	d p
	a xo
	b yo
	c zo
	<init> (Ljava/util/Random;)V <init>
	a (DDDDD)D noise
	a (IDDD)D gradDot
	a (I)I p
	a (IIIDDDDDD)D sampleAndLerp
ctx net/minecraft/world/level/levelgen/synth/NormalNoise
	a valueFactor
	b first
	c second
	a (Lchu;I[D)Lctx; create
	a (Lchu;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lctx; create
	<init> (Lchu;ILit/unimi/dsi/fastutil/doubles/DoubleList;)V <init>
	a (I)D expectedDeviation
	a (DDD)D getValue
cty net/minecraft/world/level/levelgen/synth/PerlinNoise
	a noiseLevels
	b amplitudes
	c lowestFreqValueFactor
	d lowestFreqInputFactor
	<init> (Lchu;Ljava/util/stream/IntStream;)V <init>
	<init> (Lchu;Ljava/util/List;)V <init>
	a (Lchu;I[D)Lcty; create
	a (Lchu;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lcty; create
	a (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; makeAmplitudes
	<init> (Lchu;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V <init>
	<init> (Lchu;Lcom/mojang/datafixers/util/Pair;)V <init>
	a (DDD)D getValue
	a (DDDDDZ)D getValue
	a (I)Lctw; getOctaveNoise
	a (D)D wrap
	a (DDDD)D getSurfaceNoiseValue
ctz net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	<init> (Lchu;Ljava/util/stream/IntStream;)V <init>
	<init> (Lchu;Ljava/util/List;)V <init>
	<init> (Lchu;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V <init>
	a (DDZ)D getValue
	a (DDDD)D getSurfaceNoiseValue
cua net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	e SQRT_3
	f F2
	g G2
	h p
	b xo
	c yo
	d zo
	<init> (Ljava/util/Random;)V <init>
	a (I)I p
	a ([IDDD)D dot
	a (IDDDD)D getCornerNoise3D
	a (DD)D getValue
	a (DDD)D getValue
	<clinit> ()V <clinit>
cub net/minecraft/world/level/levelgen/synth/SurfaceNoise
	a (DDDD)D getSurfaceNoiseValue
cuc net/minecraft/world/level/levelgen/synth/package-info
cud net/minecraft/world/level/lighting/BlockLightEngine
	e DIRECTIONS
	f pos
	<init> (Lcgg;)V <init>
	d (J)I getLightEmission
	b (JJI)I computeLevelFromNeighbor
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (Lfx;I)V onBlockEmissionIncrease
	<clinit> ()V <clinit>
cue net/minecraft/world/level/lighting/BlockLightSectionStorage
	<init> (Lcgg;)V <init>
	d (J)I getLightValue
cue$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V <init>
	a ()Lcue$a; copy
	b ()Lcuf; copy
cuf net/minecraft/world/level/lighting/DataLayerStorageMap
	b lastSectionKeys
	c lastSections
	d cacheEnabled
	a map
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V <init>
	b ()Lcuf; copy
	a (J)V copyDataLayer
	b (J)Z hasLayer
	c (J)Lcfy; getLayer
	d (J)Lcfy; removeLayer
	a (JLcfy;)V setLayer
	c ()V clearCache
	d ()V disableCache
cug net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	a levelCount
	b queues
	c computedLevels
	d firstQueuedLevel
	e hasWork
	<init> (III)V <init>
	a (II)I getKey
	a (I)V checkFirstQueuedLevel
	e (J)V removeFromQueue
	a (Ljava/util/function/LongPredicate;)V removeIf
	a (JIIZ)V dequeue
	a (JII)V enqueue
	f (J)V checkNode
	a (JJIZ)V checkEdge
	a (JJIIIZ)V checkEdge
	b (JJIZ)V checkNeighbor
	b ()Z hasWork
	b (I)I runUpdates
	c ()I getQueueSize
	a (J)Z isSource
	a (JJI)I getComputedLevel
	a (JIZ)V checkNeighborsAfterUpdate
	c (J)I getLevel
	a (JI)V setLevel
	b (JJI)I computeLevelFromNeighbor
	a (Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V lambda$removeIf$0
cug$1 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	a val$minQueueSize
	b this$0
	<init> (Lcug;IFI)V <init>
	rehash (I)V rehash
cug$2 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$2
	a val$minMapSize
	b this$0
	<init> (Lcug;IFI)V <init>
	rehash (I)V rehash
cuh net/minecraft/world/level/lighting/FlatDataLayer
	<init> ()V <init>
	<init> (Lcfy;I)V <init>
	b (III)I getIndex
	a ()[B getData
cui net/minecraft/world/level/lighting/LayerLightEngine
	e DIRECTIONS
	a chunkSource
	b layer
	c storage
	f runningLightUpdates
	d pos
	g lastChunkPos
	h lastChunk
	<init> (Lcgg;Lbsc;Lcuk;)V <init>
	f (J)V checkNode
	a (II)Lbqz; getChunk
	d ()V clearCache
	a (JLorg/apache/commons/lang3/mutable/MutableInt;)Lcee; getStateAndOpacity
	a (Lcee;JLgc;)Ldde; getShape
	a (Lbqz;Lcee;Lfx;Lcee;Lfx;Lgc;I)I getLightBlockInto
	a (J)Z isSource
	a (JJI)I getComputedLevel
	c (J)I getLevel
	a (Lcfy;J)I getLevel
	a (JI)V setLevel
	b (JJI)I computeLevelFromNeighbor
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (JLcfy;Z)V queueSectionData
	a (Lgp;)Lcfy; getDataLayerData
	b (Lfx;)I getLightValue
	b (J)Ljava/lang/String; getDebugData
	a (Lfx;)V checkBlock
	a (Lfx;I)V onBlockEmissionIncrease
	a (Lgp;Z)V updateSectionStatus
	a (Lbra;Z)V enableLightSources
	b (Lbra;Z)V retainData
	<clinit> ()V <clinit>
cuj net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lgp;)Lcfy; getDataLayerData
	b (Lfx;)I getLightValue
cuj$a net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	a INSTANCE
	b $VALUES
	values ()[Lcuj$a; values
	valueOf (Ljava/lang/String;)Lcuj$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lgp;)Lcfy; getDataLayerData
	b (Lfx;)I getLightValue
	a (Lfx;)V checkBlock
	a (Lfx;I)V onBlockEmissionIncrease
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lgp;Z)V updateSectionStatus
	a (Lbra;Z)V enableLightSources
	<clinit> ()V <clinit>
cuk net/minecraft/world/level/lighting/LayerLightSectionStorage
	a EMPTY_DATA
	k DIRECTIONS
	l layer
	m chunkSource
	b dataSectionSet
	c toMarkNoData
	d toMarkData
	e visibleSectionData
	f updatingSectionData
	g changedSections
	h sectionsAffectedByLightUpdates
	i queuedSections
	n untrustedSections
	o columnsToRetainQueuedDataFor
	p toRemove
	j hasToRemove
	<init> (Lbsc;Lcgg;Lcuf;)V <init>
	g (J)Z storingLightForSection
	a (JZ)Lcfy; getDataLayer
	a (Lcuf;J)Lcfy; getDataLayer
	h (J)Lcfy; getDataLayerData
	d (J)I getLightValue
	i (J)I getStoredLevel
	b (JI)V setStoredLevel
	c (J)I getLevel
	b (J)I getLevelFromSource
	a (JI)V setLevel
	j (J)Lcfy; createDataLayer
	a (Lcui;J)V clearQueuedSectionBlocks
	a ()Z hasInconsistencies
	a (Lcui;ZZ)V markNewInconsistencies
	b (Lcui;J)V checkEdgesForSection
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
	b (JZ)V enableLightSources
	c (JZ)V retainData
	a (JLcfy;Z)V queueSectionData
	d (JZ)V updateSectionStatus
	d ()V runAllUpdates
	e ()V swapSectionMap
	a (JJ)Z lambda$clearQueuedSectionBlocks$0
	<clinit> ()V <clinit>
cuk$1 net/minecraft/world/level/lighting/LayerLightSectionStorage$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cul net/minecraft/world/level/lighting/LevelLightEngine
	a blockEngine
	b skyEngine
	<init> (Lcgg;ZZ)V <init>
	a (Lfx;)V checkBlock
	a (Lfx;I)V onBlockEmissionIncrease
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lgp;Z)V updateSectionStatus
	a (Lbra;Z)V enableLightSources
	a (Lbsc;)Lcuj; getLayerListener
	a (Lbsc;Lgp;)Ljava/lang/String; getDebugData
	a (Lbsc;Lgp;Lcfy;Z)V queueSectionData
	b (Lbra;Z)V retainData
	b (Lfx;I)I getRawBrightness
cum net/minecraft/world/level/lighting/LightEventListener
	a (Lfx;)V checkBlock
	a (Lfx;I)V onBlockEmissionIncrease
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lfx;Z)V updateSectionStatus
	a (Lgp;Z)V updateSectionStatus
	a (Lbra;Z)V enableLightSources
cun net/minecraft/world/level/lighting/SkyLightEngine
	e DIRECTIONS
	f HORIZONTALS
	<init> (Lcgg;)V <init>
	b (JJI)I computeLevelFromNeighbor
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	f (J)V checkNode
	b (J)Ljava/lang/String; getDebugData
	<clinit> ()V <clinit>
cuo net/minecraft/world/level/lighting/SkyLightSectionStorage
	k HORIZONTALS
	l sectionsWithSources
	m sectionsToAddSourcesTo
	n sectionsToRemoveSourcesFrom
	o columnsWithSkySources
	p hasSourceInconsistencies
	<init> (Lcgg;)V <init>
	d (J)I getLightValue
	k (J)V onNodeAdded
	p (J)V queueRemoveSource
	q (J)V queueAddSource
	f ()V recheckInconsistencyFlag
	l (J)V onNodeRemoved
	b (JZ)V enableLightSources
	a ()Z hasInconsistencies
	j (J)Lcfy; createDataLayer
	a (Lcui;ZZ)V markNewInconsistencies
	a (I)Z hasSectionsBelow
	m (J)Z hasLightSource
	n (J)Z isAboveData
	o (J)Z lightOnInSection
	<clinit> ()V <clinit>
cuo$1 net/minecraft/world/level/lighting/SkyLightSectionStorage$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cuo$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V <init>
	a ()Lcuo$a; copy
	b ()Lcuf; copy
	a (Lcuo$a;)Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap; access$000
	b (Lcuo$a;)I access$100
	a (Lcuo$a;I)I access$102
cup net/minecraft/world/level/lighting/SpatialLongSet
	a map
	<init> (IF)V <init>
	add (J)Z add
	rem (J)Z rem
	removeFirstLong ()J removeFirstLong
	size ()I size
	isEmpty ()Z isEmpty
cup$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Z_OFFSET
	e X_OFFSET
	g OUTER_MASK
	h lastPos
	i lastOuterKey
	j minSize
	<init> (IF)V <init>
	a (J)J getOuterKey
	b (J)I getInnerKey
	a (JI)J getFullKey
	c (J)Z addBit
	a (IJ)Z replaceBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
	b (IJ)Z removeFromEntry
	a ()J removeFirstBit
	rehash (I)V rehash
	<clinit> ()V <clinit>
cuq net/minecraft/world/level/lighting/package-info
cur net/minecraft/world/level/material/EmptyFluid
	<init> ()V <init>
	a ()Lblu; getBucket
	a (Lcuu;Lbqz;Lfx;Lcut;Lgc;)Z canBeReplacedWith
	a (Lbqz;Lfx;Lcuu;)Ldck; getFlow
	a (Lbrw;)I getTickDelay
	b ()Z isEmpty
	c ()F getExplosionResistance
	a (Lcuu;Lbqz;Lfx;)F getHeight
	a (Lcuu;)F getOwnHeight
	b (Lcuu;)Lcee; createLegacyBlock
	c (Lcuu;)Z isSource
	d (Lcuu;)I getAmount
	b (Lcuu;Lbqz;Lfx;)Ldde; getShape
cus net/minecraft/world/level/material/FlowingFluid
	a FALLING
	b LEVEL
	e OCCLUSION_CACHE
	f shapes
	<init> ()V <init>
	a (Lcef$a;)V createFluidStateDefinition
	a (Lbqz;Lfx;Lcuu;)Ldck; getFlow
	g (Lcuu;)Z affectsFlow
	a (Lbqz;Lfx;Lgc;)Z isSolidFace
	a (Lbrv;Lfx;Lcuu;)V spread
	a (Lbrv;Lfx;Lcuu;Lcee;)V spreadToSides
	a (Lbrw;Lfx;Lcee;)Lcuu; getNewLiquid
	a (Lgc;Lbqz;Lfx;Lcee;Lfx;Lcee;)Z canPassThroughWall
	d ()Lcut; getFlowing
	a (IZ)Lcuu; getFlowing
	e ()Lcut; getSource
	a (Z)Lcuu; getSource
	f ()Z canConvertToSource
	a (Lbrv;Lfx;Lcee;Lgc;Lcuu;)V spreadTo
	a (Lbrv;Lfx;Lcee;)V beforeDestroyingBlock
	a (Lfx;Lfx;)S getCacheKey
	a (Lbrw;Lfx;ILgc;Lcee;Lfx;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lbqz;Lcut;Lfx;Lcee;Lfx;Lcee;)Z isWaterHole
	a (Lbqz;Lcut;Lfx;Lcee;Lgc;Lfx;Lcee;Lcuu;)Z canPassThrough
	h (Lcuu;)Z isSourceBlockOfThisType
	b (Lbrw;)I getSlopeFindDistance
	a (Lbrw;Lfx;)I sourceNeighborCount
	b (Lbrw;Lfx;Lcee;)Ljava/util/Map; getSpread
	a (Lbqz;Lfx;Lcee;Lcut;)Z canHoldFluid
	a (Lbqz;Lfx;Lcee;Lgc;Lfx;Lcee;Lcuu;Lcut;)Z canSpreadTo
	c (Lbrw;)I getDropOff
	a (Lbru;Lfx;Lcuu;Lcuu;)I getSpreadDelay
	a (Lbru;Lfx;Lcuu;)V tick
	e (Lcuu;)I getLegacyLevel
	c (Lcuu;Lbqz;Lfx;)Z hasSameAbove
	a (Lcuu;Lbqz;Lfx;)F getHeight
	a (Lcuu;)F getOwnHeight
	d (Lcuu;)I getAmount
	b (Lcuu;Lbqz;Lfx;)Ldde; getShape
	b (Lbqz;Lfx;Lcuu;)Ldde; lambda$getShape$5
	a (Lbrw;Lfx;Lfx;Lcee;I)Z lambda$getSpread$4
	a (Lbrw;Lfx;I)Lcom/mojang/datafixers/util/Pair; lambda$getSpread$3
	a (Lfx;Lbrw;Lcee;I)Z lambda$getSlopeDistance$2
	b (Lbrw;Lfx;I)Lcom/mojang/datafixers/util/Pair; lambda$getSlopeDistance$1
	k ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
	<clinit> ()V <clinit>
cus$1 net/minecraft/world/level/material/FlowingFluid$1
	<init> (I)V <init>
	rehash (I)V rehash
cut net/minecraft/world/level/material/Fluid
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a defaultFluidState
	<init> ()V <init>
	a (Lcef$a;)V createFluidStateDefinition
	g ()Lcef; getStateDefinition
	f (Lcuu;)V registerDefaultState
	h ()Lcuu; defaultFluidState
	a ()Lblu; getBucket
	a (Lbru;Lfx;Lcuu;Ljava/util/Random;)V animateTick
	a (Lbru;Lfx;Lcuu;)V tick
	b (Lbru;Lfx;Lcuu;Ljava/util/Random;)V randomTick
	i ()Lhf; getDripParticle
	a (Lcuu;Lbqz;Lfx;Lcut;Lgc;)Z canBeReplacedWith
	a (Lbqz;Lfx;Lcuu;)Ldck; getFlow
	a (Lbrw;)I getTickDelay
	j ()Z isRandomlyTicking
	b ()Z isEmpty
	c ()F getExplosionResistance
	a (Lcuu;Lbqz;Lfx;)F getHeight
	a (Lcuu;)F getOwnHeight
	b (Lcuu;)Lcee; createLegacyBlock
	c (Lcuu;)Z isSource
	d (Lcuu;)I getAmount
	a (Lcut;)Z isSame
	a (Laej;)Z is
	b (Lcuu;Lbqz;Lfx;)Ldde; getShape
	<clinit> ()V <clinit>
cuu net/minecraft/world/level/material/FluidState
	a CODEC
	<init> (Lcut;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	a ()Lcut; getType
	b ()Z isSource
	c ()Z isEmpty
	a (Lbqz;Lfx;)F getHeight
	d ()F getOwnHeight
	e ()I getAmount
	b (Lbqz;Lfx;)Z shouldRenderBackwardUpFace
	a (Lbru;Lfx;)V tick
	a (Lbru;Lfx;Ljava/util/Random;)V animateTick
	f ()Z isRandomlyTicking
	b (Lbru;Lfx;Ljava/util/Random;)V randomTick
	c (Lbqz;Lfx;)Ldck; getFlow
	g ()Lcee; createLegacyBlock
	h ()Lhf; getDripParticle
	a (Laej;)Z is
	i ()F getExplosionResistance
	a (Lbqz;Lfx;Lcut;Lgc;)Z canBeReplacedWith
	d (Lbqz;Lfx;)Ldde; getShape
	<clinit> ()V <clinit>
cuv net/minecraft/world/level/material/Fluids
	a EMPTY
	b FLOWING_WATER
	c WATER
	d FLOWING_LAVA
	e LAVA
	<init> ()V <init>
	a (Ljava/lang/String;Lcut;)Lcut; register
	<clinit> ()V <clinit>
cuw net/minecraft/world/level/material/LavaFluid
	<init> ()V <init>
	d ()Lcut; getFlowing
	e ()Lcut; getSource
	a ()Lblu; getBucket
	a (Lbru;Lfx;Lcuu;Ljava/util/Random;)V animateTick
	b (Lbru;Lfx;Lcuu;Ljava/util/Random;)V randomTick
	a (Lbrw;Lfx;)Z hasFlammableNeighbours
	b (Lbrw;Lfx;)Z isFlammable
	i ()Lhf; getDripParticle
	a (Lbrv;Lfx;Lcee;)V beforeDestroyingBlock
	b (Lbrw;)I getSlopeFindDistance
	b (Lcuu;)Lcee; createLegacyBlock
	a (Lcut;)Z isSame
	c (Lbrw;)I getDropOff
	a (Lcuu;Lbqz;Lfx;Lcut;Lgc;)Z canBeReplacedWith
	a (Lbrw;)I getTickDelay
	a (Lbru;Lfx;Lcuu;Lcuu;)I getSpreadDelay
	a (Lbrv;Lfx;)V fizz
	f ()Z canConvertToSource
	a (Lbrv;Lfx;Lcee;Lgc;Lcuu;)V spreadTo
	j ()Z isRandomlyTicking
	c ()F getExplosionResistance
cuw$a net/minecraft/world/level/material/LavaFluid$Flowing
	<init> ()V <init>
	a (Lcef$a;)V createFluidStateDefinition
	d (Lcuu;)I getAmount
	c (Lcuu;)Z isSource
cuw$b net/minecraft/world/level/material/LavaFluid$Source
	<init> ()V <init>
	d (Lcuu;)I getAmount
	c (Lcuu;)Z isSource
cux net/minecraft/world/level/material/Material
	a AIR
	b STRUCTURAL_AIR
	c PORTAL
	d CLOTH_DECORATION
	e PLANT
	f WATER_PLANT
	g REPLACEABLE_PLANT
	h REPLACEABLE_FIREPROOF_PLANT
	i REPLACEABLE_WATER_PLANT
	j WATER
	k BUBBLE_COLUMN
	l LAVA
	m TOP_SNOW
	n FIRE
	o DECORATION
	p WEB
	q BUILDABLE_GLASS
	r CLAY
	s DIRT
	t GRASS
	u ICE_SOLID
	v SAND
	w SPONGE
	x SHULKER_SHELL
	y WOOD
	z NETHER_WOOD
	A BAMBOO_SAPLING
	B BAMBOO
	C WOOL
	D EXPLOSIVE
	E LEAVES
	F GLASS
	G ICE
	H CACTUS
	I STONE
	J METAL
	K SNOW
	L HEAVY_METAL
	M BARRIER
	N PISTON
	O CORAL
	P VEGETABLE
	Q EGG
	R CAKE
	S color
	T pushReaction
	U blocksMotion
	V flammable
	W liquid
	X solidBlocking
	Y replaceable
	Z solid
	<init> (Lcuy;ZZZZZZLcuz;)V <init>
	a ()Z isLiquid
	b ()Z isSolid
	c ()Z blocksMotion
	d ()Z isFlammable
	e ()Z isReplaceable
	f ()Z isSolidBlocking
	g ()Lcuz; getPushReaction
	h ()Lcuy; getColor
	<clinit> ()V <clinit>
cux$a net/minecraft/world/level/material/Material$Builder
	a pushReaction
	b blocksMotion
	c flammable
	d liquid
	e replaceable
	f solid
	g color
	h solidBlocking
	<init> (Lcuy;)V <init>
	a ()Lcux$a; liquid
	b ()Lcux$a; nonSolid
	c ()Lcux$a; noCollider
	i ()Lcux$a; notSolidBlocking
	d ()Lcux$a; flammable
	e ()Lcux$a; replaceable
	f ()Lcux$a; destroyOnPush
	g ()Lcux$a; notPushable
	h ()Lcux; build
	a (Lcux$a;)Lcux$a; access$000
cuy net/minecraft/world/level/material/MaterialColor
	a MATERIAL_COLORS
	b NONE
	c GRASS
	d SAND
	e WOOL
	f FIRE
	g ICE
	h METAL
	i PLANT
	j SNOW
	k CLAY
	l DIRT
	m STONE
	n WATER
	o WOOD
	p QUARTZ
	q COLOR_ORANGE
	r COLOR_MAGENTA
	s COLOR_LIGHT_BLUE
	t COLOR_YELLOW
	u COLOR_LIGHT_GREEN
	v COLOR_PINK
	w COLOR_GRAY
	x COLOR_LIGHT_GRAY
	y COLOR_CYAN
	z COLOR_PURPLE
	A COLOR_BLUE
	B COLOR_BROWN
	C COLOR_GREEN
	D COLOR_RED
	E COLOR_BLACK
	F GOLD
	G DIAMOND
	H LAPIS
	I EMERALD
	J PODZOL
	K NETHER
	L TERRACOTTA_WHITE
	M TERRACOTTA_ORANGE
	N TERRACOTTA_MAGENTA
	O TERRACOTTA_LIGHT_BLUE
	P TERRACOTTA_YELLOW
	Q TERRACOTTA_LIGHT_GREEN
	R TERRACOTTA_PINK
	S TERRACOTTA_GRAY
	T TERRACOTTA_LIGHT_GRAY
	U TERRACOTTA_CYAN
	V TERRACOTTA_PURPLE
	W TERRACOTTA_BLUE
	X TERRACOTTA_BROWN
	Y TERRACOTTA_GREEN
	Z TERRACOTTA_RED
	aa TERRACOTTA_BLACK
	ab CRIMSON_NYLIUM
	ac CRIMSON_STEM
	ad CRIMSON_HYPHAE
	ae WARPED_NYLIUM
	af WARPED_STEM
	ag WARPED_HYPHAE
	ah WARPED_WART_BLOCK
	ai col
	aj id
	<init> (II)V <init>
	a (I)I calculateRGBColor
	<clinit> ()V <clinit>
cuz net/minecraft/world/level/material/PushReaction
	a NORMAL
	b DESTROY
	c BLOCK
	d IGNORE
	e PUSH_ONLY
	f $VALUES
	values ()[Lcuz; values
	valueOf (Ljava/lang/String;)Lcuz; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cva net/minecraft/world/level/material/WaterFluid
	<init> ()V <init>
	d ()Lcut; getFlowing
	e ()Lcut; getSource
	a ()Lblu; getBucket
	a (Lbru;Lfx;Lcuu;Ljava/util/Random;)V animateTick
	i ()Lhf; getDripParticle
	f ()Z canConvertToSource
	a (Lbrv;Lfx;Lcee;)V beforeDestroyingBlock
	b (Lbrw;)I getSlopeFindDistance
	b (Lcuu;)Lcee; createLegacyBlock
	a (Lcut;)Z isSame
	c (Lbrw;)I getDropOff
	a (Lbrw;)I getTickDelay
	a (Lcuu;Lbqz;Lfx;Lcut;Lgc;)Z canBeReplacedWith
	c ()F getExplosionResistance
cva$a net/minecraft/world/level/material/WaterFluid$Flowing
	<init> ()V <init>
	a (Lcef$a;)V createFluidStateDefinition
	d (Lcuu;)I getAmount
	c (Lcuu;)Z isSource
cva$b net/minecraft/world/level/material/WaterFluid$Source
	<init> ()V <init>
	d (Lcuu;)I getAmount
	c (Lcuu;)Z isSource
cvb net/minecraft/world/level/material/package-info
cvc net/minecraft/world/level/newbiome/area/Area
	a (II)I get
cvd net/minecraft/world/level/newbiome/area/AreaFactory
	make ()Lcvc; make
cve net/minecraft/world/level/newbiome/area/LazyArea
	a transformer
	b cache
	c maxCache
	<init> (Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;ILcws;)V <init>
	a (II)I get
	a ()I getMaxCache
cvf net/minecraft/world/level/newbiome/area/package-info
cvg net/minecraft/world/level/newbiome/context/BigContext
	a (JJ)V initRandom
	a (Lcws;)Lcvc; createResult
	a ()J getMixedSeed
	a (Lcws;Lcvc;)Lcvc; createResult
	a (Lcws;Lcvc;Lcvc;)Lcvc; createResult
	a (II)I random
	a (IIII)I random
cvh net/minecraft/world/level/newbiome/context/Context
	a (I)I nextRandom
	b ()Lctw; getBiomeNoise
cvi net/minecraft/world/level/newbiome/context/LazyAreaContext
	a cache
	b maxCache
	c biomeNoise
	d seed
	e rval
	<init> (IJJ)V <init>
	b (Lcws;)Lcve; createResult
	a (Lcws;Lcve;)Lcve; createResult
	a (Lcws;Lcve;Lcve;)Lcve; createResult
	a (JJ)V initRandom
	a (I)I nextRandom
	a ()J getMixedSeed
	b ()Lctw; getBiomeNoise
	b (JJ)J mixSeed
	a (Lcws;Lcvc;Lcvc;)Lcvc; createResult
	a (Lcws;Lcvc;)Lcvc; createResult
	a (Lcws;)Lcvc; createResult
cvj net/minecraft/world/level/newbiome/context/package-info
cvk net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvk; values
	valueOf (Ljava/lang/String;)Lcvk; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cvl net/minecraft/world/level/newbiome/layer/AddEdgeLayer
	<init> ()V <init>
cvl$a net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm
	a INSTANCE
	b $VALUES
	values ()[Lcvl$a; values
	valueOf (Ljava/lang/String;)Lcvl$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cvl$b net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce
	a INSTANCE
	b $VALUES
	values ()[Lcvl$b; values
	valueOf (Ljava/lang/String;)Lcvl$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cvl$c net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial
	a INSTANCE
	b $VALUES
	values ()[Lcvl$c; values
	valueOf (Ljava/lang/String;)Lcvl$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;I)I apply
	<clinit> ()V <clinit>
cvm net/minecraft/world/level/newbiome/layer/AddIslandLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvm; values
	valueOf (Ljava/lang/String;)Lcvm; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cvn net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvn; values
	valueOf (Ljava/lang/String;)Lcvn; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cvo net/minecraft/world/level/newbiome/layer/AddSnowLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvo; values
	valueOf (Ljava/lang/String;)Lcvo; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;I)I apply
	<clinit> ()V <clinit>
cvp net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvp; values
	valueOf (Ljava/lang/String;)Lcvp; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	a ([II)Z checkEdge
	a ([IIIIIIII)Z checkEdgeStrict
	<clinit> ()V <clinit>
cvq net/minecraft/world/level/newbiome/layer/BiomeInitLayer
	a LEGACY_WARM_BIOMES
	b WARM_BIOMES
	c MEDIUM_BIOMES
	d COLD_BIOMES
	e ICE_BIOMES
	f warmBiomes
	<init> (Z)V <init>
	a (Lcvh;I)I apply
	<clinit> ()V <clinit>
cvr net/minecraft/world/level/newbiome/layer/IslandLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvr; values
	valueOf (Ljava/lang/String;)Lcvr; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;II)I applyPixel
	<clinit> ()V <clinit>
cvs net/minecraft/world/level/newbiome/layer/Layer
	a LOGGER
	b area
	<init> (Lcvd;)V <init>
	a (Lgm;II)Lbss; get
	<clinit> ()V <clinit>
cvt net/minecraft/world/level/newbiome/layer/LayerBiomes
cvu net/minecraft/world/level/newbiome/layer/Layers
	a CATEGORIES
	<init> ()V <init>
	a (JLcwj;Lcvd;ILjava/util/function/LongFunction;)Lcvd; zoom
	a (ZIILjava/util/function/LongFunction;)Lcvd; getDefaultLayer
	a (JZII)Lcvs; getDefaultLayer
	a (II)Z isSame
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;Lcvu$a;I)V register
	a (I)Z isOcean
	b (I)Z isShallowOcean
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;)V lambda$static$1
	a (JJ)Lcvi; lambda$getDefaultLayer$0
	<clinit> ()V <clinit>
cvu$a net/minecraft/world/level/newbiome/layer/Layers$Category
	a NONE
	b TAIGA
	c EXTREME_HILLS
	d JUNGLE
	e MESA
	f BADLANDS_PLATEAU
	g PLAINS
	h SAVANNA
	i ICY
	j BEACH
	k FOREST
	l OCEAN
	m DESERT
	n RIVER
	o SWAMP
	p MUSHROOM
	q $VALUES
	values ()[Lcvu$a; values
	valueOf (Ljava/lang/String;)Lcvu$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cvv net/minecraft/world/level/newbiome/layer/OceanLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvv; values
	valueOf (Ljava/lang/String;)Lcvv; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;II)I applyPixel
	<clinit> ()V <clinit>
cvw net/minecraft/world/level/newbiome/layer/OceanMixerLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvw; values
	valueOf (Ljava/lang/String;)Lcvw; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;Lcvc;Lcvc;II)I applyPixel
	<clinit> ()V <clinit>
cvx net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvx; values
	valueOf (Ljava/lang/String;)Lcvx; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;I)I apply
	<clinit> ()V <clinit>
cvy net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer
	a INSTANCE
	b $VALUES
	values ()[Lcvy; values
	valueOf (Ljava/lang/String;)Lcvy; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;I)I apply
	<clinit> ()V <clinit>
cvz net/minecraft/world/level/newbiome/layer/RegionHillsLayer
	a INSTANCE
	b LOGGER
	c MUTATIONS
	d $VALUES
	values ()[Lcvz; values
	valueOf (Ljava/lang/String;)Lcvz; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;Lcvc;Lcvc;II)I applyPixel
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
cwa net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer
	a INSTANCE
	b $VALUES
	values ()[Lcwa; values
	valueOf (Ljava/lang/String;)Lcwa; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cwb net/minecraft/world/level/newbiome/layer/RiverInitLayer
	a INSTANCE
	b $VALUES
	values ()[Lcwb; values
	valueOf (Ljava/lang/String;)Lcwb; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;I)I apply
	<clinit> ()V <clinit>
cwc net/minecraft/world/level/newbiome/layer/RiverLayer
	a INSTANCE
	b $VALUES
	values ()[Lcwc; values
	valueOf (Ljava/lang/String;)Lcwc; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	c (I)I riverFilter
	<clinit> ()V <clinit>
cwd net/minecraft/world/level/newbiome/layer/RiverMixerLayer
	a INSTANCE
	b $VALUES
	values ()[Lcwd; values
	valueOf (Ljava/lang/String;)Lcwd; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;Lcvc;Lcvc;II)I applyPixel
	<clinit> ()V <clinit>
cwe net/minecraft/world/level/newbiome/layer/ShoreLayer
	a INSTANCE
	b SNOWY
	c JUNGLES
	d $VALUES
	values ()[Lcwe; values
	valueOf (Ljava/lang/String;)Lcwe; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	c (I)Z isJungleCompatible
	d (I)Z isMesa
	<clinit> ()V <clinit>
cwf net/minecraft/world/level/newbiome/layer/SmoothLayer
	a INSTANCE
	b $VALUES
	values ()[Lcwf; values
	valueOf (Ljava/lang/String;)Lcwf; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvh;IIIII)I apply
	<clinit> ()V <clinit>
cwg net/minecraft/world/level/newbiome/layer/ZoomLayer
	a NORMAL
	b FUZZY
	c $VALUES
	values ()[Lcwg; values
	valueOf (Ljava/lang/String;)Lcwg; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (I)I getParentX
	b (I)I getParentY
	a (Lcvg;Lcvc;II)I applyPixel
	a (Lcvg;IIII)I modeOrRandom
	<init> (Ljava/lang/String;ILcwg$1;)V <init>
	<clinit> ()V <clinit>
cwg$1 net/minecraft/world/level/newbiome/layer/ZoomLayer$1
	<init> (Ljava/lang/String;I)V <init>
	a (Lcvg;IIII)I modeOrRandom
cwh net/minecraft/world/level/newbiome/layer/package-info
cwi net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0
	a (Lcvg;)Lcvd; run
	a (Lcvh;II)I applyPixel
	b (Lcvg;)Lcvc; lambda$run$1
	a (Lcvg;II)I lambda$null$0
cwj net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1
	a (Lcvg;Lcvd;)Lcvd; run
	a (Lcvg;Lcvc;II)I applyPixel
	a (Lcvd;Lcvg;)Lcvc; lambda$run$1
	b (Lcvg;Lcvc;II)I lambda$null$0
cwk net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2
	a (Lcvg;Lcvd;Lcvd;)Lcvd; run
	a (Lcvh;Lcvc;Lcvc;II)I applyPixel
	a (Lcvd;Lcvd;Lcvg;)Lcvc; lambda$run$1
	a (Lcvg;Lcvc;Lcvc;II)I lambda$null$0
cwl net/minecraft/world/level/newbiome/layer/traits/BishopTransformer
	a (Lcvh;IIIII)I apply
	a (Lcvg;Lcvc;II)I applyPixel
cwm net/minecraft/world/level/newbiome/layer/traits/C0Transformer
	a (Lcvh;I)I apply
	a (Lcvg;Lcvc;II)I applyPixel
cwn net/minecraft/world/level/newbiome/layer/traits/C1Transformer
	a (Lcvh;I)I apply
	a (Lcvg;Lcvc;II)I applyPixel
cwo net/minecraft/world/level/newbiome/layer/traits/CastleTransformer
	a (Lcvh;IIIII)I apply
	a (Lcvg;Lcvc;II)I applyPixel
cwp net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer
	a (I)I getParentX
	b (I)I getParentY
cwq net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer
	a (I)I getParentX
	b (I)I getParentY
cwr net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer
	a (I)I getParentX
	b (I)I getParentY
cws net/minecraft/world/level/newbiome/layer/traits/PixelTransformer
	apply (II)I apply
cwt net/minecraft/world/level/newbiome/layer/traits/package-info
cwu net/minecraft/world/level/package-info
cwv net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	<init> ()V <init>
	a (Lcwy;)Lcwy; insert
	a ()V clear
	b ()Lcwy; peek
	c ()Lcwy; pop
	b (Lcwy;)V remove
	a (Lcwy;F)V changeCost
	d ()I size
	a (I)V upHeap
	b (I)V downHeap
	e ()Z isEmpty
	f ()[Lcwy; getHeap
cww net/minecraft/world/level/pathfinder/BlockPathTypes
	a BLOCKED
	b OPEN
	c WALKABLE
	d WALKABLE_DOOR
	e TRAPDOOR
	f FENCE
	g LAVA
	h WATER
	i WATER_BORDER
	j RAIL
	k UNPASSABLE_RAIL
	l DANGER_FIRE
	m DAMAGE_FIRE
	n DANGER_CACTUS
	o DAMAGE_CACTUS
	p DANGER_OTHER
	q DAMAGE_OTHER
	r DOOR_OPEN
	s DOOR_WOOD_CLOSED
	t DOOR_IRON_CLOSED
	u BREACH
	v LEAVES
	w STICKY_HONEY
	x COCOA
	y malus
	z $VALUES
	values ()[Lcww; values
	valueOf (Ljava/lang/String;)Lcww; valueOf
	<init> (Ljava/lang/String;IF)V <init>
	a ()F getMalus
	<clinit> ()V <clinit>
cwx net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	<init> ()V <init>
	a (Lbsf;Laqk;)V prepare
	a ()V done
	b ()Lcwy; getStart
	a (DDD)Lcxe; getGoal
	a ([Lcwy;Lcwy;)I getNeighbors
	a (Lcwy;)Z hasMalus
	b (Lcwy;)Z isOpen
	a (III)Lcwy; getNode
	a (Lbqz;IIILaqk;IIIZZ)Lcww; getBlockPathType
	a (Lbqz;III)Lcww; getBlockPathType
	a (Laqk;Lfx;)Lcww; getBlockPathType
	a (Laqk;III)Lcww; getBlockPathType
cwy net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	m hash
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	<init> (III)V <init>
	a (III)Lcwy; cloneAndMove
	b (III)I createHash
	a (Lcwy;)F distanceTo
	a (Lfx;)F distanceTo
	b (Lcwy;)F distanceToSqr
	b (Lfx;)F distanceToSqr
	c (Lcwy;)F distanceManhattan
	c (Lfx;)F distanceManhattan
	a ()Lfx; asBlockPos
	b ()Ldck; asVec3
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	c ()Z inOpenSet
	toString ()Ljava/lang/String; toString
	a (Lnf;)V writeToStream
	b (Lnf;)Lcwy; createFromStream
cwz net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	<init> ()V <init>
	a (Lbsf;Laqk;)V prepare
	a ()V done
	a (Lfx;)Lcwy; getNode
	a (III)Lcwy; getNode
	b ()Lcwy; getStart
	a (DDD)Lcxe; getGoal
	a ([Lcwy;Lcwy;)I getNeighbors
	a (Lbqz;IIILaqk;IIIZZ)Lcww; getBlockPathType
	a (Lbqz;III)Lcww; getBlockPathType
	a (Z)V setCanPassDoors
	b (Z)V setCanOpenDoors
	c (Z)V setCanFloat
	c ()Z canPassDoors
	d ()Z canOpenDoors
	e ()Z canFloat
	a (IIII)Lcwy; lambda$getNode$0
cxa net/minecraft/world/level/pathfinder/Path
	a nodes
	b openSet
	c closedSet
	d targetNodes
	e nextNodeIndex
	f target
	g distToTarget
	h reached
	<init> (Ljava/util/List;Lfx;Z)V <init>
	a ()V advance
	b ()Z notStarted
	c ()Z isDone
	d ()Lcwy; getEndNode
	a (I)Lcwy; getNode
	b (I)V truncateNodes
	a (ILcwy;)V replaceNode
	e ()I getNodeCount
	f ()I getNextNodeIndex
	c (I)V setNextNodeIndex
	a (Lapx;I)Ldck; getEntityPosAtNode
	d (I)Lfx; getNodePos
	a (Lapx;)Ldck; getNextEntityPos
	g ()Lfx; getNextNodePos
	h ()Lcwy; getNextNode
	i ()Lcwy; getPreviousNode
	a (Lcxa;)Z sameAs
	j ()Z canReach
	a ([Lcwy;[Lcwy;Ljava/util/Set;)V setDebug
	k ()[Lcwy; getOpenSet
	l ()[Lcwy; getClosedSet
	a (Lnf;)V writeToStream
	b (Lnf;)Lcxa; createFromStream
	toString ()Ljava/lang/String; toString
	m ()Lfx; getTarget
	n ()F getDistToTarget
	a (Lnf;Lcxe;)V lambda$writeToStream$0
cxb net/minecraft/world/level/pathfinder/PathComputationType
	a LAND
	b WATER
	c AIR
	d $VALUES
	values ()[Lcxb; values
	valueOf (Ljava/lang/String;)Lcxb; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
cxc net/minecraft/world/level/pathfinder/PathFinder
	a neighbors
	b maxVisitedNodes
	c nodeEvaluator
	d openSet
	<init> (Lcwz;I)V <init>
	a (Lbsf;Laqk;Ljava/util/Set;FIF)Lcxa; findPath
	a (Lcwy;Ljava/util/Map;FIF)Lcxa; findPath
	a (Lcwy;Ljava/util/Set;)F getBestH
	a (Lcwy;Lfx;Z)Lcxa; reconstructPath
	a (Ljava/util/Map;Lcxe;)Lcxa; lambda$findPath$2
	b (Ljava/util/Map;Lcxe;)Lcxa; lambda$findPath$1
	a (Lfx;)Lcxe; lambda$findPath$0
cxd net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	j allowBreaching
	<init> (Z)V <init>
	b ()Lcwy; getStart
	a (DDD)Lcxe; getGoal
	a ([Lcwy;Lcwy;)I getNeighbors
	a (Lbqz;IIILaqk;IIIZZ)Lcww; getBlockPathType
	a (Lbqz;III)Lcww; getBlockPathType
	b (III)Lcwy; getWaterNode
	a (III)Lcwy; getNode
	c (III)Lcww; isFree
cxe net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	<init> (Lcwy;)V <init>
	<init> (III)V <init>
	a (FLcwy;)V updateBest
	d ()Lcwy; getBestNode
	e ()V setReached
	f ()Z isReached
	c (Lnf;)Lcxe; createFromStream
cxf net/minecraft/world/level/pathfinder/TurtleNodeEvaluator
	k oldWalkableCost
	l oldWaterBorderCost
	<init> ()V <init>
	a (Lbsf;Laqk;)V prepare
	a ()V done
	b ()Lcwy; getStart
	a (DDD)Lcxe; getGoal
	a ([Lcwy;Lcwy;)I getNeighbors
	b (Lfx;)D inWaterDependentPosHeight
	a (IIIID)Lcwy; getAcceptedNode
	a (Lbqz;ZZLfx;Lcww;)Lcww; evaluateBlockPathType
	a (Lbqz;III)Lcww; getBlockPathType
cxg net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	j oldWaterCost
	k pathTypesByPosCache
	l collisionCache
	<init> ()V <init>
	a (Lbsf;Laqk;)V prepare
	a ()V done
	b ()Lcwy; getStart
	b (Lfx;)Z hasPositiveMalus
	a (DDD)Lcxe; getGoal
	a ([Lcwy;Lcwy;)I getNeighbors
	a (Lcwy;Lcwy;)Z isNeighborValid
	a (Lcwy;Lcwy;Lcwy;Lcwy;)Z isDiagonalValid
	a (Lcwy;)Z canReachWithoutCollision
	a (Lbqz;Lfx;)D getFloorLevel
	a (IIIIDLgc;Lcww;)Lcwy; getLandNode
	a (Ldcf;)Z hasCollisions
	a (Lbqz;IIILaqk;IIIZZ)Lcww; getBlockPathType
	a (Lbqz;IIIIIIZZLjava/util/EnumSet;Lcww;Lfx;)Lcww; getBlockPathTypes
	a (Lbqz;ZZLfx;Lcww;)Lcww; evaluateBlockPathType
	a (Laqk;Lfx;)Lcww; getBlockPathType
	a (Laqk;III)Lcww; getCachedBlockType
	a (Lbqz;III)Lcww; getBlockPathType
	a (Lbqz;Lfx$a;)Lcww; getBlockPathTypeStatic
	a (Lbqz;Lfx$a;Lcww;)Lcww; checkNeighbourBlocks
	b (Lbqz;Lfx;)Lcww; getBlockPathTypeRaw
	a (Lcee;)Z isBurningBlock
	a (IIILaqk;J)Lcww; lambda$getCachedBlockType$1
	a (Ldcf;Ldcf;)Ljava/lang/Boolean; lambda$hasCollisions$0
cxh net/minecraft/world/level/pathfinder/package-info
cxi net/minecraft/world/level/portal/PortalForcer
	a level
	<init> (Laag;)V <init>
	a (Lfx;Z)Ljava/util/Optional; findPortalAround
	a (Lfx;Lgc$a;)Ljava/util/Optional; createPortal
	a (Lfx;Lfx$a;Lgc;I)Z canHostFrame
	a (Lazm;)Li$a; lambda$findPortalAround$5
	a (Lcee;Lfx;)Z lambda$null$4
	b (Lazm;)Z lambda$findPortalAround$3
	c (Lazm;)I lambda$findPortalAround$2
	a (Lfx;Lazm;)D lambda$findPortalAround$1
	a (Lazo;)Z lambda$findPortalAround$0
cxj net/minecraft/world/level/portal/PortalInfo
	a pos
	b speed
	c yRot
	d xRot
	<init> (Ldck;Ldck;FF)V <init>
cxk net/minecraft/world/level/portal/PortalShape
	a FRAME
	b level
	c axis
	d rightDir
	e numPortalBlocks
	f bottomLeft
	g height
	h width
	a (Lbrv;Lfx;Lgc$a;)Ljava/util/Optional; findEmptyPortalShape
	a (Lbrv;Lfx;Ljava/util/function/Predicate;Lgc$a;)Ljava/util/Optional; findPortalShape
	<init> (Lbrv;Lfx;Lgc$a;)V <init>
	a (Lfx;)Lfx; calculateBottomLeft
	d ()I calculateWidth
	a (Lfx;Lgc;)I getDistanceUntilEdgeAboveFrame
	e ()I calculateHeight
	a (Lfx$a;I)Z hasTopFrame
	a (Lfx$a;)I getDistanceUntilTop
	a (Lcee;)Z isEmpty
	a ()Z isValid
	b ()V createPortalBlocks
	c ()Z isComplete
	a (Li$a;Lgc$a;Ldck;Lapy;)Ldck; getRelativePosition
	a (Laag;Li$a;Lgc$a;Ldck;Lapy;Ldck;FF)Lcxj; createPortalInfo
	a (Lcee;Lfx;)V lambda$createPortalBlocks$2
	a (Lcxk;)Z lambda$findEmptyPortalShape$1
	a (Lcee;Lbqz;Lfx;)Z lambda$static$0
	<clinit> ()V <clinit>
cxl net/minecraft/world/level/portal/package-info
cxm net/minecraft/world/level/redstone/Redstone
	<init> ()V <init>
cxn net/minecraft/world/level/redstone/package-info
cxo net/minecraft/world/level/saveddata/SaveDataDirtyRunnable
	a savedData
	<init> (Lcxp;)V <init>
	run ()V run
cxp net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	b id
	c dirty
	<init> (Ljava/lang/String;)V <init>
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	b ()V setDirty
	a (Z)V setDirty
	c ()Z isDirty
	d ()Ljava/lang/String; getId
	a (Ljava/io/File;)V save
	<clinit> ()V <clinit>
cxq net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	<init> (Lfx;Lbku;Lnr;)V <init>
	a (Lmd;)Lcxq; load
	a (Lbqz;Lfx;)Lcxq; fromWorld
	a ()Lfx; getPos
	b ()Lbku; getColor
	c ()Lcxr$a; getDecoration
	d ()Lnr; getName
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	e ()Lmd; save
	f ()Ljava/lang/String; getId
	b (Lbqz;Lfx;)Lcee; lambda$fromWorld$0
cxq$1 net/minecraft/world/level/saveddata/maps/MapBanner$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
	<clinit> ()V <clinit>
cxr net/minecraft/world/level/saveddata/maps/MapDecoration
	a type
	b x
	c y
	d rot
	e name
	<init> (Lcxr$a;BBBLnr;)V <init>
	a ()B getImage
	b ()Lcxr$a; getType
	c ()B getX
	a (B)V setX
	d ()B getY
	b (B)V setY
	e ()B getRot
	c (B)V setRot
	f ()Z renderOnFrame
	g ()Lnr; getName
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
cxr$a net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	a PLAYER
	b FRAME
	c RED_MARKER
	d BLUE_MARKER
	e TARGET_X
	f TARGET_POINT
	g PLAYER_OFF_MAP
	h PLAYER_OFF_LIMITS
	i MANSION
	j MONUMENT
	k BANNER_WHITE
	l BANNER_ORANGE
	m BANNER_MAGENTA
	n BANNER_LIGHT_BLUE
	o BANNER_YELLOW
	p BANNER_LIME
	q BANNER_PINK
	r BANNER_GRAY
	s BANNER_LIGHT_GRAY
	t BANNER_CYAN
	u BANNER_PURPLE
	v BANNER_BLUE
	w BANNER_BROWN
	x BANNER_GREEN
	y BANNER_RED
	z BANNER_BLACK
	A RED_X
	B icon
	C renderedOnFrame
	D mapColor
	E $VALUES
	values ()[Lcxr$a; values
	valueOf (Ljava/lang/String;)Lcxr$a; valueOf
	<init> (Ljava/lang/String;IZ)V <init>
	<init> (Ljava/lang/String;IZI)V <init>
	a ()B getIcon
	b ()Z isRenderedOnFrame
	c ()Z hasMapColor
	d ()I getMapColor
	a (B)Lcxr$a; byIcon
	<clinit> ()V <clinit>
cxs net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	<init> (Lfx;II)V <init>
	a (Lmd;)Lcxs; load
	a ()Lmd; save
	b ()Lfx; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
	a (Lfx;)Ljava/lang/String; frameId
cxt net/minecraft/world/level/saveddata/maps/MapIndex
	a usedAuxIds
	<init> ()V <init>
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	a ()I getFreeAuxValueForMap
cxu net/minecraft/world/level/saveddata/maps/MapItemSavedData
	k LOGGER
	a x
	b z
	c dimension
	d trackingPosition
	e unlimitedTracking
	f scale
	g colors
	h locked
	i carriedBy
	l carriedByPlayers
	m bannerMarkers
	j decorations
	n frameMarkers
	<init> (Ljava/lang/String;)V <init>
	a (IIIZZLvj;)V setProperties
	a (DDI)V setOrigin
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	a (Lcxu;)V lockData
	a (Lbft;Lbly;)V tickCarriedBy
	a (Lbly;Lfx;Ljava/lang/String;Lcxr$a;)V addTargetDecoration
	a (Lcxr$a;Lbrv;Ljava/lang/String;DDDLnr;)V addDecoration
	a (Lbly;Lbqz;Lbft;)Loj; getUpdatePacket
	a (II)V setDirty
	a (Lbft;)Lcxu$a; getHoldingPlayer
	a (Lbrv;Lfx;)V toggleBanner
	a (Lbqz;II)V checkBanners
	a ()Ljava/util/Collection; getBanners
	a (Lfx;I)V removedFromFrame
	a (Lmd;Lmt;)V lambda$save$1
	c (Lmd;)Ljava/lang/IllegalArgumentException; lambda$load$0
	<clinit> ()V <clinit>
cxu$a net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	a player
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i tick
	b step
	c this$0
	<init> (Lcxu;Lbft;)V <init>
	a (Lbly;)Loj; nextUpdatePacket
	a (II)V markDirty
cxv net/minecraft/world/level/saveddata/maps/package-info
cxw net/minecraft/world/level/saveddata/package-info
cxx net/minecraft/world/level/storage/CommandStorage
	a namespaces
	b storage
	<init> (Lcxz;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)Lcxx$a; newStorage
	a (Lvk;)Lmd; get
	a (Lvk;Lmd;)V set
	a ()Ljava/util/stream/Stream; keys
	a (Ljava/lang/String;)Ljava/lang/String; createId
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$keys$2
	b (Ljava/lang/String;Ljava/lang/String;)Lcxx$a; lambda$set$1
	c (Ljava/lang/String;Ljava/lang/String;)Lcxx$a; lambda$get$0
cxx$a net/minecraft/world/level/storage/CommandStorage$Container
	a storage
	<init> (Ljava/lang/String;)V <init>
	a (Lmd;)V load
	b (Lmd;)Lmd; save
	a (Ljava/lang/String;)Lmd; get
	a (Ljava/lang/String;Lmd;)V put
	b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
	a (Ljava/lang/String;Ljava/lang/String;)Lvk; lambda$getKeys$1
	a (Lmd;Ljava/lang/String;Lmd;)V lambda$save$0
cxy net/minecraft/world/level/storage/DerivedLevelData
	a worldData
	b wrapped
	<init> (Lcyk;Lcyj;)V <init>
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	g ()Ljava/lang/String; getLevelName
	h ()I getClearWeatherTime
	a (I)V setClearWeatherTime
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lbrr; getGameType
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	b (J)V setDayTime
	a (Lfx;F)V setSpawn
	a (Z)V setThundering
	e (I)V setThunderTime
	b (Z)V setRaining
	f (I)V setRainTime
	a (Lbrr;)V setGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	c (Z)V setInitialized
	q ()Lbrq; getGameRules
	r ()Lcfr$c; getWorldBorder
	a (Lcfr$c;)V setWorldBorder
	s ()Laoo; getDifficulty
	t ()Z isDifficultyLocked
	u ()Ldcc; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	g (I)V setWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	h (I)V setWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lm;)V fillCrashReportCategory
cxz net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	b cache
	c fixerUpper
	d dataFolder
	<init> (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/util/function/Supplier;Ljava/lang/String;)Lcxp; computeIfAbsent
	b (Ljava/util/function/Supplier;Ljava/lang/String;)Lcxp; get
	c (Ljava/util/function/Supplier;Ljava/lang/String;)Lcxp; readSavedData
	a (Lcxp;)V set
	a (Ljava/lang/String;I)Lmd; readTagFromDisk
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a ()V save
	<clinit> ()V <clinit>
cya net/minecraft/world/level/storage/LevelData
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	i ()Z isThundering
	k ()Z isRaining
	b (Z)V setRaining
	n ()Z isHardcore
	q ()Lbrq; getGameRules
	s ()Laoo; getDifficulty
	t ()Z isDifficultyLocked
	a (Lm;)V fillCrashReportCategory
	g ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	h ()Ljava/lang/String; lambda$fillCrashReportCategory$0
cyb net/minecraft/world/level/storage/LevelResource
	a PLAYER_ADVANCEMENTS_DIR
	b PLAYER_STATS_DIR
	c PLAYER_DATA_DIR
	d PLAYER_OLD_DATA_DIR
	e LEVEL_DATA_FILE
	f GENERATED_DIR
	g DATAPACK_DIR
	h MAP_RESOURCE_FILE
	i ROOT
	j id
	<init> (Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getId
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
cyc net/minecraft/world/level/storage/LevelStorageException
	<init> (Ljava/lang/String;)V <init>
cyd net/minecraft/world/level/storage/LevelStorageSource
	a LOGGER
	b FORMATTER
	c OLD_SETTINGS_KEYS
	d baseDir
	e backupDir
	f fixerUpper
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Ljava/nio/file/Path;)Lcyd; createDefault
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; readWorldGenSettings
	a (Lcom/mojang/serialization/Dynamic;)Lbrh; readDataPackConfig
	a ()Ljava/lang/String; getName
	b ()Ljava/util/List; getLevelList
	g ()I getStorageVersion
	a (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; readLevelData
	b (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lbrh; getDataPacks
	b (Lcom/mojang/serialization/DynamicOps;Lbrh;)Ljava/util/function/BiFunction; getLevelData
	a (Ljava/io/File;Z)Ljava/util/function/BiFunction; levelSummaryReader
	a (Ljava/lang/String;)Z isNewLevelIdAcceptable
	b (Ljava/lang/String;)Z levelExists
	c ()Ljava/nio/file/Path; getBaseDir
	d ()Ljava/nio/file/Path; getBackupPath
	c (Ljava/lang/String;)Lcyd$a; createAccess
	a (Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lcye; lambda$levelSummaryReader$5
	a (Lcom/mojang/serialization/DynamicOps;Lbrh;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lcyi; lambda$getLevelData$4
	b (Lcom/mojang/serialization/Dynamic;)Lcht; lambda$readWorldGenSettings$3
	h ()Ljava/lang/IllegalStateException; lambda$null$2
	i ()Ljava/lang/IllegalStateException; lambda$null$1
	j ()Ljava/lang/IllegalStateException; lambda$null$0
	a (Lcyd;)Ljava/nio/file/Path; access$000
	b (Lcyd;)Lcom/mojang/datafixers/DataFixer; access$100
	c (Lcyd;)I access$200
	a (Lcyd;Ljava/io/File;Z)Ljava/util/function/BiFunction; access$300
	a (Lcyd;Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; access$400
	a (Lcom/mojang/serialization/DynamicOps;Lbrh;)Ljava/util/function/BiFunction; access$500
	e ()Lorg/apache/logging/log4j/Logger; access$600
	f ()Ljava/time/format/DateTimeFormatter; access$900
	a (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lbrh; access$1000
	<clinit> ()V <clinit>
cyd$a net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	b lock
	c levelPath
	d levelId
	e resources
	a this$0
	<init> (Lcyd;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getLevelId
	a (Lcyb;)Ljava/nio/file/Path; getLevelPath
	a (Lvj;)Ljava/io/File; getDimensionPath
	i ()V checkLock
	b ()Lcyh; createPlayerStorage
	c ()Z requiresConversion
	a (Lafk;)Z convertLevel
	d ()Lcye; getSummary
	a (Lcom/mojang/serialization/DynamicOps;Lbrh;)Lcyk; getDataTag
	e ()Lbrh; getDataPacks
	a (Lgn;Lcyk;)V saveDataTag
	a (Lgn;Lcyk;Lmd;)V saveDataTag
	f ()Ljava/io/File; getIconFile
	g ()V deleteLevel
	a (Ljava/lang/String;)V renameLevel
	h ()J makeWorldBackup
	close ()V close
	a (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lbrh; lambda$getDataPacks$1
	b (Lcyb;)Ljava/nio/file/Path; lambda$getLevelPath$0
	a (Lcyd$a;)Ljava/nio/file/Path; access$700
	b (Lcyd$a;)Laeu; access$800
cyd$a$1 net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	a val$lockPath
	b this$1
	<init> (Lcyd$a;Ljava/nio/file/Path;)V <init>
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
	a (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult; postVisitDirectory
	postVisitDirectory (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult; postVisitDirectory
	visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
cyd$a$2 net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	a val$rootPath
	b val$stream
	c this$1
	<init> (Lcyd$a;Ljava/nio/file/Path;Ljava/util/zip/ZipOutputStream;)V <init>
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
	visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
cye net/minecraft/world/level/storage/LevelSummary
	a settings
	b levelVersion
	c levelId
	d requiresConversion
	e locked
	f icon
	g info
	<init> (Lbrx;Lcyf;Ljava/lang/String;ZZLjava/io/File;)V <init>
	a ()Ljava/lang/String; getLevelId
	b ()Ljava/lang/String; getLevelName
	c ()Ljava/io/File; getIcon
	d ()Z isRequiresConversion
	e ()J getLastPlayed
	a (Lcye;)I compareTo
	f ()Lbrx; getSettings
	g ()Lbrr; getGameMode
	h ()Z isHardcore
	i ()Z hasCheats
	j ()Lnx; getWorldVersionName
	k ()Lcyf; levelVersion
	l ()Z markVersionInList
	m ()Z askToOpenWorld
	n ()Z shouldBackup
	o ()Z isLocked
	p ()Lnr; getInfo
	q ()Lnr; createInfo
	compareTo (Ljava/lang/Object;)I compareTo
cyf net/minecraft/world/level/storage/LevelVersion
	a levelDataVersion
	b lastPlayed
	c minecraftVersionName
	d minecraftVersion
	e snapshot
	<init> (IJLjava/lang/String;IZ)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcyf; parse
	a ()I levelDataVersion
	b ()J lastPlayed
	c ()Ljava/lang/String; minecraftVersionName
	d ()I minecraftVersion
	e ()Z snapshot
cyg net/minecraft/world/level/storage/McRegionUpgrader
	a LOGGER
	<init> ()V <init>
	a (Lcyd$a;Lafk;)Z convertLevel
	a (Lcyd$a;)V makeMcrLevelDatBackup
	a (Lgn$b;Ljava/io/File;Ljava/lang/Iterable;Lbsv;IILafk;)V convertRegions
	a (Lgn$b;Ljava/io/File;Ljava/io/File;Lbsv;IILafk;)V convertRegion
	a (Ljava/io/File;Ljava/util/Collection;)V addRegionFiles
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$addRegionFiles$0
	<clinit> ()V <clinit>
cyh net/minecraft/world/level/storage/PlayerDataStorage
	b LOGGER
	c playerDir
	a fixerUpper
	<init> (Lcyd$a;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Lbft;)V save
	b (Lbft;)Lmd; load
	a ()[Ljava/lang/String; getSeenPlayers
	<clinit> ()V <clinit>
cyi net/minecraft/world/level/storage/PrimaryLevelData
	a LOGGER
	b settings
	c worldGenSettings
	d worldGenSettingsLifecycle
	e xSpawn
	f ySpawn
	g zSpawn
	h spawnAngle
	i gameTime
	j dayTime
	k fixerUpper
	l playerDataVersion
	m upgradedPlayerTag
	n loadedPlayerTag
	o version
	p clearWeatherTime
	q raining
	r rainTime
	s thundering
	t thunderTime
	u initialized
	v difficultyLocked
	w worldBorder
	x endDragonFightData
	y customBossEvents
	z wanderingTraderSpawnDelay
	A wanderingTraderSpawnChance
	B wanderingTraderId
	C knownServerBrands
	D wasModded
	E scheduledEvents
	<init> (Lcom/mojang/datafixers/DataFixer;ILmd;ZIIIFJJIIIZIZZZLcfr$c;IILjava/util/UUID;Ljava/util/LinkedHashSet;Ldcc;Lmd;Lmd;Lbrx;Lcht;Lcom/mojang/serialization/Lifecycle;)V <init>
	<init> (Lbrx;Lcht;Lcom/mojang/serialization/Lifecycle;)V <init>
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILmd;Lbrx;Lcyf;Lcht;Lcom/mojang/serialization/Lifecycle;)Lcyi; parse
	a (Lgn;Lmd;)Lmd; createTag
	a (Lgn;Lmd;Lmd;)V setTagData
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	J ()V updatePlayerTag
	y ()Lmd; getLoadedPlayerTag
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	b (J)V setDayTime
	a (Lfx;F)V setSpawn
	g ()Ljava/lang/String; getLevelName
	z ()I getVersion
	h ()I getClearWeatherTime
	a (I)V setClearWeatherTime
	i ()Z isThundering
	a (Z)V setThundering
	j ()I getThunderTime
	e (I)V setThunderTime
	k ()Z isRaining
	b (Z)V setRaining
	l ()I getRainTime
	f (I)V setRainTime
	m ()Lbrr; getGameType
	a (Lbrr;)V setGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	c (Z)V setInitialized
	q ()Lbrq; getGameRules
	r ()Lcfr$c; getWorldBorder
	a (Lcfr$c;)V setWorldBorder
	s ()Laoo; getDifficulty
	a (Laoo;)V setDifficulty
	t ()Z isDifficultyLocked
	d (Z)V setDifficultyLocked
	u ()Ldcc; getScheduledEvents
	a (Lm;)V fillCrashReportCategory
	A ()Lcht; worldGenSettings
	B ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	C ()Lmd; endDragonFightData
	a (Lmd;)V setEndDragonFightData
	D ()Lbrh; getDataPackConfig
	a (Lbrh;)V setDataPackConfig
	E ()Lmd; getCustomBossEvents
	b (Lmd;)V setCustomBossEvents
	v ()I getWanderingTraderSpawnDelay
	g (I)V setWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	h (I)V setWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Ljava/lang/String;Z)V setModdedInfo
	F ()Z wasModded
	G ()Ljava/util/Set; getKnownServerBrands
	H ()Lcyj; overworldData
	I ()Lbrx; getLevelSettings
	a (Lmd;Lmt;)V lambda$setTagData$3
	b (Lmd;Lmt;)V lambda$setTagData$2
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream; lambda$parse$1
	b (Lcom/mojang/serialization/Dynamic;)Lmt; lambda$parse$0
	<clinit> ()V <clinit>
cyj net/minecraft/world/level/storage/ServerLevelData
	g ()Ljava/lang/String; getLevelName
	a (Z)V setThundering
	l ()I getRainTime
	f (I)V setRainTime
	e (I)V setThunderTime
	j ()I getThunderTime
	a (Lm;)V fillCrashReportCategory
	h ()I getClearWeatherTime
	a (I)V setClearWeatherTime
	v ()I getWanderingTraderSpawnDelay
	g (I)V setWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	h (I)V setWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	a (Ljava/util/UUID;)V setWanderingTraderId
	m ()Lbrr; getGameType
	a (Lcfr$c;)V setWorldBorder
	r ()Lcfr$c; getWorldBorder
	p ()Z isInitialized
	c (Z)V setInitialized
	o ()Z getAllowCommands
	a (Lbrr;)V setGameType
	u ()Ldcc; getScheduledEvents
	a (J)V setGameTime
	b (J)V setDayTime
	y ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	z ()Ljava/lang/String; lambda$fillCrashReportCategory$0
cyk net/minecraft/world/level/storage/WorldData
	D ()Lbrh; getDataPackConfig
	a (Lbrh;)V setDataPackConfig
	F ()Z wasModded
	G ()Ljava/util/Set; getKnownServerBrands
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Lm;)V fillCrashReportCategory
	i (I)Ljava/lang/String; getStorageVersionName
	E ()Lmd; getCustomBossEvents
	b (Lmd;)V setCustomBossEvents
	H ()Lcyj; overworldData
	I ()Lbrx; getLevelSettings
	a (Lgn;Lmd;)Lmd; createTag
	n ()Z isHardcore
	z ()I getVersion
	g ()Ljava/lang/String; getLevelName
	m ()Lbrr; getGameType
	a (Lbrr;)V setGameType
	o ()Z getAllowCommands
	s ()Laoo; getDifficulty
	a (Laoo;)V setDifficulty
	t ()Z isDifficultyLocked
	d (Z)V setDifficultyLocked
	q ()Lbrq; getGameRules
	y ()Lmd; getLoadedPlayerTag
	C ()Lmd; endDragonFightData
	a (Lmd;)V setEndDragonFightData
	A ()Lcht; worldGenSettings
	B ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	a ()Ljava/lang/String; lambda$fillCrashReportCategory$2
	b ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	c ()Ljava/lang/String; lambda$fillCrashReportCategory$0
cyl net/minecraft/world/level/storage/WritableLevelData
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (Lfx;F)V setSpawn
cym net/minecraft/world/level/storage/loot/BinomialDistributionGenerator
	d n
	e p
	<init> (IF)V <init>
	a (Ljava/util/Random;)I getInt
	a (IF)Lcym; binomial
	a ()Lvk; getType
	a (Lcym;)I access$000
	b (Lcym;)F access$100
cym$a net/minecraft/world/level/storage/loot/BinomialDistributionGenerator$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcym; deserialize
	a (Lcym;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
cyn net/minecraft/world/level/storage/loot/BuiltInLootTables
	az LOCATIONS
	aA IMMUTABLE_LOCATIONS
	a EMPTY
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L BASTION_TREASURE
	M BASTION_OTHER
	N BASTION_BRIDGE
	O BASTION_HOGLIN_STABLE
	P RUINED_PORTAL
	Q SHEEP_WHITE
	R SHEEP_ORANGE
	S SHEEP_MAGENTA
	T SHEEP_LIGHT_BLUE
	U SHEEP_YELLOW
	V SHEEP_LIME
	W SHEEP_PINK
	X SHEEP_GRAY
	Y SHEEP_LIGHT_GRAY
	Z SHEEP_CYAN
	aa SHEEP_PURPLE
	ab SHEEP_BLUE
	ac SHEEP_BROWN
	ad SHEEP_GREEN
	ae SHEEP_RED
	af SHEEP_BLACK
	ag FISHING
	ah FISHING_JUNK
	ai FISHING_TREASURE
	aj FISHING_FISH
	ak CAT_MORNING_GIFT
	al ARMORER_GIFT
	am BUTCHER_GIFT
	an CARTOGRAPHER_GIFT
	ao CLERIC_GIFT
	ap FARMER_GIFT
	aq FISHERMAN_GIFT
	ar FLETCHER_GIFT
	as LEATHERWORKER_GIFT
	at LIBRARIAN_GIFT
	au MASON_GIFT
	av SHEPHERD_GIFT
	aw TOOLSMITH_GIFT
	ax WEAPONSMITH_GIFT
	ay PIGLIN_BARTERING
	<init> ()V <init>
	a (Ljava/lang/String;)Lvk; register
	a (Lvk;)Lvk; register
	a ()Ljava/util/Set; all
	<clinit> ()V <clinit>
cyo net/minecraft/world/level/storage/loot/ConstantIntValue
	d value
	<init> (I)V <init>
	a (Ljava/util/Random;)I getInt
	a ()Lvk; getType
	a (I)Lcyo; exactly
	a (Lcyo;)I access$000
cyo$a net/minecraft/world/level/storage/loot/ConstantIntValue$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcyo; deserialize
	a (Lcyo;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
cyp net/minecraft/world/level/storage/loot/Deserializers
	<init> ()V <init>
	a ()Lcom/google/gson/GsonBuilder; createConditionSerializer
	b ()Lcom/google/gson/GsonBuilder; createFunctionSerializer
	c ()Lcom/google/gson/GsonBuilder; createLootTableSerializer
cyq net/minecraft/world/level/storage/loot/GsonAdapterFactory
	<init> ()V <init>
	a (Lgm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcyq$a; builder
cyq$1 net/minecraft/world/level/storage/loot/GsonAdapterFactory$1
cyq$a net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	a registry
	b elementName
	c typeKey
	d typeGetter
	e defaultType
	<init> (Lgm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Lczc;Lcyq$b;)Lcyq$a; withDefaultSerializer
	a ()Ljava/lang/Object; build
	<init> (Lgm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Lcyq$1;)V <init>
cyq$b net/minecraft/world/level/storage/loot/GsonAdapterFactory$DefaultSerializer
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
cyq$c net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	a registry
	b elementName
	c typeKey
	d typeGetter
	e defaultType
	<init> (Lgm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V <init>
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	<init> (Lgm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;Lcyq$1;)V <init>
cyr net/minecraft/world/level/storage/loot/IntLimiter
	a min
	b max
	c op
	<init> (Ljava/lang/Integer;Ljava/lang/Integer;)V <init>
	a (II)Lcyr; clamp
	a (I)Lcyr; lowerBound
	b (I)Lcyr; upperBound
	applyAsInt (I)I applyAsInt
	a (III)I lambda$new$3
	b (II)I lambda$new$2
	c (II)I lambda$new$1
	c (I)I lambda$new$0
	<init> (Ljava/lang/Integer;Ljava/lang/Integer;Lcyr$1;)V <init>
	a (Lcyr;)Ljava/lang/Integer; access$100
	b (Lcyr;)Ljava/lang/Integer; access$200
cyr$1 net/minecraft/world/level/storage/loot/IntLimiter$1
cyr$a net/minecraft/world/level/storage/loot/IntLimiter$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcyr; deserialize
	a (Lcyr;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
cys net/minecraft/world/level/storage/loot/LootContext
	a random
	b luck
	c level
	d lootTables
	e visitedTables
	f conditions
	g visitedConditions
	h params
	i dynamicDrops
	<init> (Ljava/util/Random;FLaag;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/util/Map;)V <init>
	a (Ldaw;)Z hasParam
	b (Ldaw;)Ljava/lang/Object; getParam
	a (Lvk;Ljava/util/function/Consumer;)V addDynamicDrops
	c (Ldaw;)Ljava/lang/Object; getParamOrNull
	a (Lcyv;)Z addVisitedTable
	b (Lcyv;)V removeVisitedTable
	a (Ldbl;)Z addVisitedCondition
	b (Ldbl;)V removeVisitedCondition
	a (Lvk;)Lcyv; getLootTable
	b (Lvk;)Ldbl; getCondition
	a ()Ljava/util/Random; getRandom
	b ()F getLuck
	c ()Laag; getLevel
	<init> (Ljava/util/Random;FLaag;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/util/Map;Lcys$1;)V <init>
cys$1 net/minecraft/world/level/storage/loot/LootContext$1
cys$a net/minecraft/world/level/storage/loot/LootContext$Builder
	a level
	b params
	c dynamicDrops
	d random
	e luck
	<init> (Laag;)V <init>
	a (Ljava/util/Random;)Lcys$a; withRandom
	a (J)Lcys$a; withOptionalRandomSeed
	a (JLjava/util/Random;)Lcys$a; withOptionalRandomSeed
	a (F)Lcys$a; withLuck
	a (Ldaw;Ljava/lang/Object;)Lcys$a; withParameter
	b (Ldaw;Ljava/lang/Object;)Lcys$a; withOptionalParameter
	a (Lvk;Lcys$b;)Lcys$a; withDynamicDrop
	a ()Laag; getLevel
	a (Ldaw;)Ljava/lang/Object; getParameter
	b (Ldaw;)Ljava/lang/Object; getOptionalParameter
	a (Ldax;)Lcys; create
cys$b net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
	add (Lcys;Ljava/util/function/Consumer;)V add
cys$c net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	a THIS
	b KILLER
	c DIRECT_KILLER
	d KILLER_PLAYER
	e name
	f param
	g $VALUES
	values ()[Lcys$c; values
	valueOf (Ljava/lang/String;)Lcys$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldaw;)V <init>
	a ()Ldaw; getParam
	a (Ljava/lang/String;)Lcys$c; getByName
	a (Lcys$c;)Ljava/lang/String; access$100
	<clinit> ()V <clinit>
cys$c$a net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/stream/JsonWriter;Lcys$c;)V write
	a (Lcom/google/gson/stream/JsonReader;)Lcys$c; read
	read (Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object; read
	write (Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V write
cyt net/minecraft/world/level/storage/loot/LootContextUser
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lczd;)V validate
cyu net/minecraft/world/level/storage/loot/LootPool
	a entries
	b conditions
	c compositeCondition
	d functions
	e compositeFunction
	f rolls
	g bonusRolls
	<init> ([Lczn;[Ldbl;[Ldag;Lcyy;Lcza;)V <init>
	b (Ljava/util/function/Consumer;Lcys;)V addRandomItem
	a (Ljava/util/function/Consumer;Lcys;)V addRandomItems
	a (Lczd;)V validate
	a ()Lcyu$a; lootPool
	a (Lcys;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Lczm;)V lambda$addRandomItem$0
	<init> ([Lczn;[Ldbl;[Ldag;Lcyy;Lcza;Lcyu$1;)V <init>
	a (Lcyu;)Lcyy; access$100
	b (Lcyu;)[Lczn; access$200
	c (Lcyu;)Lcza; access$300
	d (Lcyu;)[Ldbl; access$400
	e (Lcyu;)[Ldag; access$500
cyu$1 net/minecraft/world/level/storage/loot/LootPool$1
cyu$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	<init> ()V <init>
	a (Lcyy;)Lcyu$a; setRolls
	a ()Lcyu$a; unwrap
	a (Lcza;)Lcyu$a; setBonusRolls
	a (Lczn$a;)Lcyu$a; add
	a (Ldbl$a;)Lcyu$a; when
	a (Ldag$a;)Lcyu$a; apply
	b ()Lcyu; build
	c ()Ljava/lang/Object; unwrap
	b (Ldag$a;)Ljava/lang/Object; apply
	b (Ldbl$a;)Ljava/lang/Object; when
cyu$b net/minecraft/world/level/storage/loot/LootPool$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcyu; deserialize
	a (Lcyu;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
cyv net/minecraft/world/level/storage/loot/LootTable
	c LOGGER
	a EMPTY
	b DEFAULT_PARAM_SET
	d paramSet
	e pools
	f functions
	g compositeFunction
	<init> (Ldax;[Lcyu;[Ldag;)V <init>
	a (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	a (Lcys;Ljava/util/function/Consumer;)V getRandomItemsRaw
	b (Lcys;Ljava/util/function/Consumer;)V getRandomItems
	a (Lcys;)Ljava/util/List; getRandomItems
	a ()Ldax; getParamSet
	a (Lczd;)V validate
	a (Laok;Lcys;)V fill
	a (Ljava/util/List;ILjava/util/Random;)V shuffleAndSplitItems
	a (Laok;Ljava/util/Random;)Ljava/util/List; getAvailableSlots
	b ()Lcyv$a; lootTable
	a (Ljava/util/function/Consumer;Lbly;)V lambda$createStackSplitter$0
	<init> (Ldax;[Lcyu;[Ldag;Lcyv$1;)V <init>
	a (Lcyv;)Ldax; access$100
	c ()Lorg/apache/logging/log4j/Logger; access$200
	b (Lcyv;)[Lcyu; access$300
	c (Lcyv;)[Ldag; access$400
	<clinit> ()V <clinit>
cyv$1 net/minecraft/world/level/storage/loot/LootTable$1
cyv$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	<init> ()V <init>
	a (Lcyu$a;)Lcyv$a; withPool
	a (Ldax;)Lcyv$a; setParamSet
	a (Ldag$a;)Lcyv$a; apply
	a ()Lcyv$a; unwrap
	b ()Lcyv; build
	c ()Ljava/lang/Object; unwrap
	b (Ldag$a;)Ljava/lang/Object; apply
cyv$b net/minecraft/world/level/storage/loot/LootTable$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcyv; deserialize
	a (Lcyv;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
cyw net/minecraft/world/level/storage/loot/LootTables
	a LOGGER
	b GSON
	c tables
	d predicateManager
	<init> (Lcyx;)V <init>
	a (Lvk;)Lcyv; get
	a (Ljava/util/Map;Lacf;Lant;)V apply
	a (Lczd;Lvk;Lcyv;)V validate
	a (Lcyv;)Lcom/google/gson/JsonElement; serialize
	a ()Ljava/util/Set; getIds
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$apply$2
	b (Lczd;Lvk;Lcyv;)V lambda$apply$1
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lvk;Lcom/google/gson/JsonElement;)V lambda$apply$0
	<clinit> ()V <clinit>
cyx net/minecraft/world/level/storage/loot/PredicateManager
	a LOGGER
	b GSON
	c conditions
	<init> ()V <init>
	a (Lvk;)Ldbl; get
	a (Ljava/util/Map;Lacf;Lant;)V apply
	a ()Ljava/util/Set; getKeys
	a (Ljava/lang/Object;Lacf;Lant;)V apply
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$apply$3
	a (Lczd;Lvk;Ldbl;)V lambda$apply$2
	b (Lvk;)Lcyv; lambda$apply$1
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lvk;Lcom/google/gson/JsonElement;)V lambda$apply$0
	<clinit> ()V <clinit>
cyx$1 net/minecraft/world/level/storage/loot/PredicateManager$1
cyx$a net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate
	a terms
	b composedPredicate
	<init> ([Ldbl;)V <init>
	a (Lcys;)Z test
	a (Lczd;)V validate
	b ()Ldbm; getType
	test (Ljava/lang/Object;)Z test
	<init> ([Ldbl;Lcyx$1;)V <init>
cyy net/minecraft/world/level/storage/loot/RandomIntGenerator
	a CONSTANT
	b UNIFORM
	c BINOMIAL
	a (Ljava/util/Random;)I getInt
	a ()Lvk; getType
	<clinit> ()V <clinit>
cyz net/minecraft/world/level/storage/loot/RandomIntGenerators
	a GENERATORS
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lcyy; deserialize
	a (Lcyy;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	<clinit> ()V <clinit>
cza net/minecraft/world/level/storage/loot/RandomValueBounds
	d min
	e max
	<init> (FF)V <init>
	<init> (F)V <init>
	a (F)Lcza; exactly
	a (FF)Lcza; between
	b ()F getMin
	c ()F getMax
	a (Ljava/util/Random;)I getInt
	b (Ljava/util/Random;)F getFloat
	a (I)Z matchesValue
	a ()Lvk; getType
	a (Lcza;)F access$000
	b (Lcza;)F access$100
cza$a net/minecraft/world/level/storage/loot/RandomValueBounds$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcza; deserialize
	a (Lcza;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
czb net/minecraft/world/level/storage/loot/Serializer
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
czc net/minecraft/world/level/storage/loot/SerializerType
	a serializer
	<init> (Lczb;)V <init>
	a ()Lczb; getSerializer
czd net/minecraft/world/level/storage/loot/ValidationContext
	a problems
	b context
	c params
	d conditionResolver
	e visitedConditions
	f tableResolver
	g visitedTables
	h contextCache
	<init> (Ldax;Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	<init> (Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;Ldax;Ljava/util/function/Function;Ljava/util/Set;Ljava/util/function/Function;Ljava/util/Set;)V <init>
	b ()Ljava/lang/String; getContext
	a (Ljava/lang/String;)V reportProblem
	b (Ljava/lang/String;)Lczd; forChild
	a (Ljava/lang/String;Lvk;)Lczd; enterTable
	b (Ljava/lang/String;Lvk;)Lczd; enterCondition
	a (Lvk;)Z hasVisitedTable
	b (Lvk;)Z hasVisitedCondition
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Lcyt;)V validateUser
	c (Lvk;)Lcyv; resolveLootTable
	d (Lvk;)Ldbl; resolveCondition
	a (Ldax;)Lczd; setParams
	c (Ljava/lang/String;)Ljava/lang/String; lambda$enterCondition$3
	d (Ljava/lang/String;)Ljava/lang/String; lambda$enterTable$2
	e (Ljava/lang/String;)Ljava/lang/String; lambda$forChild$1
	c ()Ljava/lang/String; lambda$new$0
cze net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	<init> ([Lczn;[Ldbl;)V <init>
	a ()Lczo; getType
	a ([Lczf;)Lczf; compose
	a (Lczd;)V validate
	a ([Lczn$a;)Lcze$a; alternatives
	a ([Lczf;Lcys;Ljava/util/function/Consumer;)Z lambda$compose$0
cze$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	<init> ([Lczn$a;)V <init>
	a ()Lcze$a; getThis
	a (Lczn$a;)Lcze$a; otherwise
	b ()Lczn; build
	d ()Lczn$a; getThis
czf net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	a ALWAYS_FALSE
	b ALWAYS_TRUE
	expand (Lcys;Ljava/util/function/Consumer;)Z expand
	a (Lczf;)Lczf; and
	b (Lczf;)Lczf; or
	a (Lczf;Lcys;Ljava/util/function/Consumer;)Z lambda$or$3
	b (Lczf;Lcys;Ljava/util/function/Consumer;)Z lambda$and$2
	a (Lcys;Ljava/util/function/Consumer;)Z lambda$static$1
	b (Lcys;Ljava/util/function/Consumer;)Z lambda$static$0
	<clinit> ()V <clinit>
czg net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	c children
	e composedChildren
	<init> ([Lczn;[Ldbl;)V <init>
	a (Lczd;)V validate
	a ([Lczf;)Lczf; compose
	expand (Lcys;Ljava/util/function/Consumer;)Z expand
	a (Lczg$a;)Lczn$b; createSerializer
czg$1 net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	a val$constructor
	<init> (Lczg$a;)V <init>
	a (Lcom/google/gson/JsonObject;Lczg;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczg; deserializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczn; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
czg$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
	create ([Lczn;[Ldbl;)Lczg; create
czh net/minecraft/world/level/storage/loot/entries/DynamicLoot
	g name
	<init> (Lvk;II[Ldbl;[Ldag;)V <init>
	a ()Lczo; getType
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
	a (Lvk;)Lczp$a; dynamicEntry
	a (Lvk;II[Ldbl;[Ldag;)Lczp; lambda$dynamicEntry$0
	a (Lczh;)Lvk; access$000
	<init> (Lvk;II[Ldbl;[Ldag;Lczh$1;)V <init>
czh$1 net/minecraft/world/level/storage/loot/entries/DynamicLoot$1
czh$a net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczh;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczh; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczp; deserialize
	a (Lcom/google/gson/JsonObject;Lczp;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
czi net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	<init> (II[Ldbl;[Ldag;)V <init>
	a ()Lczo; getType
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
	b ()Lczp$a; emptyItem
	<init> (II[Ldbl;[Ldag;Lczi$1;)V <init>
czi$1 net/minecraft/world/level/storage/loot/entries/EmptyLootItem$1
czi$a net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczi; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczp; deserialize
czj net/minecraft/world/level/storage/loot/entries/EntryGroup
	<init> ([Lczn;[Ldbl;)V <init>
	a ()Lczo; getType
	a ([Lczf;)Lczf; compose
	a ([Lczn$a;)Lczj$a; list
	a ([Lczf;Lcys;Ljava/util/function/Consumer;)Z lambda$compose$1
	a (Lczf;Lczf;Lcys;Ljava/util/function/Consumer;)Z lambda$compose$0
czj$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	<init> ([Lczn$a;)V <init>
	a ()Lczj$a; getThis
	b (Lczn$a;)Lczj$a; append
	b ()Lczn; build
	d ()Lczn$a; getThis
czk net/minecraft/world/level/storage/loot/entries/LootItem
	g item
	<init> (Lblu;II[Ldbl;[Ldag;)V <init>
	a ()Lczo; getType
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
	a (Lbrt;)Lczp$a; lootTableItem
	a (Lbrt;II[Ldbl;[Ldag;)Lczp; lambda$lootTableItem$0
	a (Lczk;)Lblu; access$000
	<init> (Lblu;II[Ldbl;[Ldag;Lczk$1;)V <init>
czk$1 net/minecraft/world/level/storage/loot/entries/LootItem$1
czk$a net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczk;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczk; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczp; deserialize
	a (Lcom/google/gson/JsonObject;Lczp;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
czl net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a EMPTY
	b ITEM
	c REFERENCE
	d DYNAMIC
	e TAG
	f ALTERNATIVES
	g SEQUENCE
	h GROUP
	<init> ()V <init>
	a (Ljava/lang/String;Lczb;)Lczo; register
	a ()Ljava/lang/Object; createGsonAdapter
	<clinit> ()V <clinit>
czm net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
czn net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	d conditions
	c compositeCondition
	<init> ([Ldbl;)V <init>
	a (Lczd;)V validate
	a (Lcys;)Z canRun
	a ()Lczo; getType
czn$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	<init> ()V <init>
	d ()Lczn$a; getThis
	a (Ldbl$a;)Lczn$a; when
	e ()Lczn$a; unwrap
	f ()[Ldbl; getConditions
	a (Lczn$a;)Lcze$a; otherwise
	b (Lczn$a;)Lczj$a; append
	c (Lczn$a;)Lczr$a; then
	b ()Lczn; build
	c ()Ljava/lang/Object; unwrap
	b (Ldbl$a;)Ljava/lang/Object; when
czn$b net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczn; deserialize
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczn; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
czo net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	<init> (Lczb;)V <init>
czp net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	c weight
	e quality
	f functions
	g compositeFunction
	h entry
	<init> (II[Ldbl;[Ldag;)V <init>
	a (Lczd;)V validate
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
	expand (Lcys;Ljava/util/function/Consumer;)Z expand
	a (Lczp$d;)Lczp$a; simpleBuilder
	a (Lczp;)Ljava/util/function/BiFunction; access$000
czp$1 net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	a this$0
	<init> (Lczp;)V <init>
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
czp$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	<init> ()V <init>
	a (Ldag$a;)Lczp$a; apply
	a ()[Ldag; getFunctions
	a (I)Lczp$a; setWeight
	b (I)Lczp$a; setQuality
	b (Ldag$a;)Ljava/lang/Object; apply
czp$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	<init> (Lczp$d;)V <init>
	g ()Lczp$b; getThis
	b ()Lczn; build
	d ()Lczn$a; getThis
czp$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	b this$0
	<init> (Lczp;)V <init>
	a (F)I getWeight
czp$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
	build (II[Ldbl;[Ldag;)Lczp; build
czp$e net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczp;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczp; deserializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczp; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczn; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
czq net/minecraft/world/level/storage/loot/entries/LootTableReference
	g name
	<init> (Lvk;II[Ldbl;[Ldag;)V <init>
	a ()Lczo; getType
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
	a (Lczd;)V validate
	a (Lvk;)Lczp$a; lootTableReference
	a (Lvk;II[Ldbl;[Ldag;)Lczp; lambda$lootTableReference$0
	a (Lczq;)Lvk; access$000
	<init> (Lvk;II[Ldbl;[Ldag;Lczq$1;)V <init>
czq$1 net/minecraft/world/level/storage/loot/entries/LootTableReference$1
czq$a net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczq;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczq; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczp; deserialize
	a (Lcom/google/gson/JsonObject;Lczp;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
czr net/minecraft/world/level/storage/loot/entries/SequentialEntry
	<init> ([Lczn;[Ldbl;)V <init>
	a ()Lczo; getType
	a ([Lczf;)Lczf; compose
	a ([Lczn$a;)Lczr$a; sequential
	a ([Lczf;Lcys;Ljava/util/function/Consumer;)Z lambda$compose$0
czr$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	<init> ([Lczn$a;)V <init>
	a ()Lczr$a; getThis
	c (Lczn$a;)Lczr$a; then
	b ()Lczn; build
	d ()Lczn$a; getThis
czs net/minecraft/world/level/storage/loot/entries/TagEntry
	g tag
	h expand
	<init> (Laej;ZII[Ldbl;[Ldag;)V <init>
	a ()Lczo; getType
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
	a (Lcys;Ljava/util/function/Consumer;)Z expandTag
	expand (Lcys;Ljava/util/function/Consumer;)Z expand
	a (Laej;)Lczp$a; tagContents
	b (Laej;)Lczp$a; expandTag
	a (Laej;II[Ldbl;[Ldag;)Lczp; lambda$expandTag$2
	b (Laej;II[Ldbl;[Ldag;)Lczp; lambda$tagContents$1
	a (Ljava/util/function/Consumer;Lblu;)V lambda$createItemStack$0
	a (Lczs;)Laej; access$000
	b (Lczs;)Z access$100
	<init> (Laej;ZII[Ldbl;[Ldag;Lczs$1;)V <init>
czs$1 net/minecraft/world/level/storage/loot/entries/TagEntry$1
	a val$item
	c this$0
	<init> (Lczs;Lblu;)V <init>
	a (Ljava/util/function/Consumer;Lcys;)V createItemStack
czs$a net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczs;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczs; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldbl;[Ldag;)Lczp; deserialize
	a (Lcom/google/gson/JsonObject;Lczp;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lczn;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
czt net/minecraft/world/level/storage/loot/entries/package-info
czu net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a FORMULAS
	b enchantment
	d formula
	<init> ([Ldbl;Lbpp;Lczu$b;)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	a (Lbpp;FI)Ldaf$a; addBonusBinomialDistributionCount
	a (Lbpp;)Ldaf$a; addOreBonusCount
	b (Lbpp;)Ldaf$a; addUniformBonusCount
	a (Lbpp;I)Ldaf$a; addUniformBonusCount
	a (Lbpp;I[Ldbl;)Ldag; lambda$addUniformBonusCount$3
	a (Lbpp;[Ldbl;)Ldag; lambda$addUniformBonusCount$2
	b (Lbpp;[Ldbl;)Ldag; lambda$addOreBonusCount$1
	a (Lbpp;IF[Ldbl;)Ldag; lambda$addBonusBinomialDistributionCount$0
	a (Lczu;)Lbpp; access$000
	b (Lczu;)Lczu$b; access$100
	c ()Ljava/util/Map; access$200
	<init> ([Ldbl;Lbpp;Lczu$b;Lczu$1;)V <init>
	<clinit> ()V <clinit>
czu$1 net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$1
czu$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	<init> (IF)V <init>
	a (Ljava/util/Random;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
	a ()Lvk; getType
	<clinit> ()V <clinit>
czu$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a (Ljava/util/Random;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a ()Lvk; getType
czu$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
czu$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a TYPE
	<init> ()V <init>
	a (Ljava/util/Random;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
	a ()Lvk; getType
	<init> (Lczu$1;)V <init>
	<clinit> ()V <clinit>
czu$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczu;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczu; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lvk;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
czu$f net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a TYPE
	b bonusMultiplier
	<init> (I)V <init>
	a (Ljava/util/Random;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
	a ()Lvk; getType
	<clinit> ()V <clinit>
czv net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	<init> ([Ldbl;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	c ()Ldaf$a; explosionDecay
	<init> ([Ldbl;Lczv$1;)V <init>
czv$1 net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$1
czv$a net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczv; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
czw net/minecraft/world/level/storage/loot/functions/CopyBlockState
	a block
	b properties
	<init> ([Ldbl;Lbul;Ljava/util/Set;)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	a (Lbul;)Lczw$a; copyState
	a (Lcee;Lcfg;)Ljava/lang/String; serialize
	a (Lmd;Lcee;Lcfg;)V lambda$run$0
	<init> ([Ldbl;Lbul;Ljava/util/Set;Lczw$1;)V <init>
	a (Lczw;)Lbul; access$200
	b (Lczw;)Ljava/util/Set; access$300
czw$1 net/minecraft/world/level/storage/loot/functions/CopyBlockState$1
czw$a net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	a block
	b properties
	<init> (Lbul;)V <init>
	a (Lcfg;)Lczw$a; copy
	a ()Lczw$a; getThis
	b ()Ldag; build
	d ()Ldaf$a; getThis
	<init> (Lbul;Lczw$1;)V <init>
czw$b net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczw;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczw; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/util/Set;Lcef;Lcom/google/gson/JsonElement;)V lambda$deserialize$2
	a (Lvk;)Ljava/lang/IllegalArgumentException; lambda$deserialize$1
	a (Lcom/google/gson/JsonArray;Lcfg;)V lambda$serialize$0
czx net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a source
	<init> ([Ldbl;Lczx$a;)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	a (Lczx$a;)Ldaf$a; copyName
	a (Lczx$a;[Ldbl;)Ldag; lambda$copyName$0
	a (Lczx;)Lczx$a; access$000
	<init> ([Ldbl;Lczx$a;Lczx$1;)V <init>
czx$1 net/minecraft/world/level/storage/loot/functions/CopyNameFunction$1
czx$a net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	a THIS
	b KILLER
	c KILLER_PLAYER
	d BLOCK_ENTITY
	e name
	f param
	g $VALUES
	values ()[Lczx$a; values
	valueOf (Ljava/lang/String;)Lczx$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldaw;)V <init>
	a (Ljava/lang/String;)Lczx$a; getByName
	<clinit> ()V <clinit>
czx$b net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczx;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczx; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
czy net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a source
	b operations
	d ENTITY_GETTER
	e BLOCK_ENTITY_GETTER
	<init> ([Ldbl;Lczy$c;Ljava/util/List;)V <init>
	b ()Ldah; getType
	b (Ljava/lang/String;)Ldr$h; compileNbtPath
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	a (Lczy$c;)Lczy$a; copyData
	a (Lccg;)Lmt; lambda$static$1
	a (Lbly;Lmt;Lczy$b;)V lambda$run$0
	a (Ljava/lang/String;)Ldr$h; access$000
	<init> ([Ldbl;Lczy$c;Ljava/util/List;Lczy$1;)V <init>
	c ()Ljava/util/function/Function; access$600
	d ()Ljava/util/function/Function; access$700
	a (Lczy;)Lczy$c; access$800
	b (Lczy;)Ljava/util/List; access$900
	<clinit> ()V <clinit>
czy$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$1
czy$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	<init> (Lczy$c;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;Lczy$d;)Lczy$a; copy
	a (Ljava/lang/String;Ljava/lang/String;)Lczy$a; copy
	a ()Lczy$a; getThis
	b ()Ldag; build
	d ()Ldaf$a; getThis
	<init> (Lczy$c;Lczy$1;)V <init>
czy$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a sourcePathText
	b sourcePath
	c targetPathText
	d targetPath
	e op
	<init> (Ljava/lang/String;Ljava/lang/String;Lczy$d;)V <init>
	a (Ljava/util/function/Supplier;Lmt;)V apply
	a ()Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Lczy$b; fromJson
	<init> (Ljava/lang/String;Ljava/lang/String;Lczy$d;Lczy$1;)V <init>
czy$c net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource
	a THIS
	b KILLER
	c KILLER_PLAYER
	d BLOCK_ENTITY
	e name
	f param
	g getter
	h $VALUES
	values ()[Lczy$c; values
	valueOf (Ljava/lang/String;)Lczy$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldaw;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Lczy$c; getByName
	a (Ldaw;Ljava/util/function/Function;Lcys;)Lmt; lambda$new$0
	<clinit> ()V <clinit>
czy$d net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	a REPLACE
	b APPEND
	c MERGE
	d name
	e $VALUES
	values ()[Lczy$d; values
	valueOf (Ljava/lang/String;)Lczy$d; valueOf
	a (Lmt;Ldr$h;Ljava/util/List;)V merge
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Lczy$d; getByName
	a (Lczy$d;)Ljava/lang/String; access$100
	<init> (Ljava/lang/String;ILjava/lang/String;Lczy$1;)V <init>
	<clinit> ()V <clinit>
czy$d$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lmt;Ldr$h;Ljava/util/List;)V merge
czy$d$2 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lmt;Ldr$h;Ljava/util/List;)V merge
	a (Ljava/util/List;Lmt;)V lambda$merge$1
	a (Lmt;Lmt;)V lambda$null$0
czy$d$3 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lmt;Ldr$h;Ljava/util/List;)V merge
	a (Ljava/util/List;Lmt;)V lambda$merge$1
	a (Lmt;Lmt;)V lambda$null$0
czy$e net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczy;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczy; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
czz net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a LOGGER
	b enchantments
	<init> ([Ldbl;Ljava/util/Collection;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lbly;Lbpp;Ljava/util/Random;)Lbly; enchantItem
	c ()Lczz$a; randomEnchantment
	d ()Ldaf$a; randomApplicableEnchantment
	a ([Ldbl;)Ldag; lambda$randomApplicableEnchantment$1
	a (ZLbly;Lbpp;)Z lambda$run$0
	<init> ([Ldbl;Ljava/util/Collection;Lczz$1;)V <init>
	a (Lczz;)Ljava/util/List; access$100
	<clinit> ()V <clinit>
czz$1 net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$1
czz$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	<init> ()V <init>
	a ()Lczz$a; getThis
	a (Lbpp;)Lczz$a; withEnchantment
	b ()Ldag; build
	d ()Ldaf$a; getThis
czz$b net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lczz;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Lczz; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
daa net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a levels
	b treasure
	<init> ([Ldbl;Lcyy;Z)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lcyy;)Ldaa$a; enchantWithLevels
	<init> ([Ldbl;Lcyy;ZLdaa$1;)V <init>
	a (Ldaa;)Lcyy; access$100
	b (Ldaa;)Z access$200
daa$1 net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$1
daa$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	<init> (Lcyy;)V <init>
	a ()Ldaa$a; getThis
	e ()Ldaa$a; allowTreasure
	b ()Ldag; build
	d ()Ldaf$a; getThis
daa$b net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldaa;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaa; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dab net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	d LOGGER
	a DEFAULT_FEATURE
	b DEFAULT_DECORATION
	e destination
	f mapDecoration
	g zoom
	h searchRadius
	i skipKnownStructures
	<init> ([Ldbl;Lckx;Lcxr$a;BIZ)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	c ()Ldab$a; makeExplorationMap
	<init> ([Ldbl;Lckx;Lcxr$a;BIZLdab$1;)V <init>
	a (Ldab;)Lckx; access$100
	b (Ldab;)Lcxr$a; access$200
	c (Ldab;)B access$300
	d (Ldab;)I access$400
	e (Ldab;)Z access$500
	d ()Lorg/apache/logging/log4j/Logger; access$600
	<clinit> ()V <clinit>
dab$1 net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$1
dab$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	<init> ()V <init>
	a ()Ldab$a; getThis
	a (Lckx;)Ldab$a; setDestination
	a (Lcxr$a;)Ldab$a; setMapDecoration
	a (B)Ldab$a; setZoom
	a (I)Ldab$a; setSearchRadius
	a (Z)Ldab$a; setSkipKnownStructures
	b ()Ldag; build
	d ()Ldaf$a; getThis
dab$b net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldab;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldab; deserialize
	a (Lcom/google/gson/JsonObject;)Lckx; readStructure
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dac net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a entityTarget
	<init> ([Ldbl;Lcys$c;)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	a (Lcys$c;)Ldaf$a; fillPlayerHead
	a (Lcys$c;[Ldbl;)Ldag; lambda$fillPlayerHead$0
	a (Ldac;)Lcys$c; access$000
dac$a net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldac;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldac; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dad net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	b (Ldag$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
dae net/minecraft/world/level/storage/loot/functions/LimitCount
	a limiter
	<init> ([Ldbl;Lcyr;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lcyr;)Ldaf$a; limitCount
	a (Lcyr;[Ldbl;)Ldag; lambda$limitCount$0
	a (Ldae;)Lcyr; access$000
	<init> ([Ldbl;Lcyr;Ldae$1;)V <init>
dae$1 net/minecraft/world/level/storage/loot/functions/LimitCount$1
dae$a net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldae;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldae; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
daf net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	c predicates
	a compositePredicates
	<init> ([Ldbl;)V <init>
	b (Lbly;Lcys;)Lbly; apply
	a (Lbly;Lcys;)Lbly; run
	a (Lczd;)V validate
	a (Ljava/util/function/Function;)Ldaf$a; simpleBuilder
	apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
daf$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	<init> ()V <init>
	a (Ldbl$a;)Ldaf$a; when
	f ()Ldaf$a; unwrap
	d ()Ldaf$a; getThis
	g ()[Ldbl; getConditions
	c ()Ljava/lang/Object; unwrap
	b (Ldbl$a;)Ljava/lang/Object; when
daf$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	<init> (Ljava/util/function/Function;)V <init>
	a ()Ldaf$b; getThis
	b ()Ldag; build
	d ()Ldaf$a; getThis
daf$c net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldaf; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dag net/minecraft/world/level/storage/loot/functions/LootItemFunction
	b ()Ldah; getType
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lcys;)Ljava/util/function/Consumer; decorate
	a (Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lcys;Lbly;)V lambda$decorate$0
dag$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Ldag; build
dah net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	<init> (Lczb;)V <init>
dai net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	a IDENTITY
	b SET_COUNT
	c ENCHANT_WITH_LEVELS
	d ENCHANT_RANDOMLY
	e SET_NBT
	f FURNACE_SMELT
	g LOOTING_ENCHANT
	h SET_DAMAGE
	i SET_ATTRIBUTES
	j SET_NAME
	k EXPLORATION_MAP
	l SET_STEW_EFFECT
	m COPY_NAME
	n SET_CONTENTS
	o LIMIT_COUNT
	p APPLY_BONUS
	q SET_LOOT_TABLE
	r EXPLOSION_DECAY
	s SET_LORE
	t FILL_PLAYER_HEAD
	u COPY_NBT
	v COPY_STATE
	<init> ()V <init>
	a (Ljava/lang/String;Lczb;)Ldah; register
	a ()Ljava/lang/Object; createGsonAdapter
	a ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; compose
	a ([Ljava/util/function/BiFunction;Lbly;Lcys;)Lbly; lambda$compose$2
	a (Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lbly;Lcys;)Lbly; lambda$compose$1
	a (Lbly;Lcys;)Lbly; lambda$static$0
	<clinit> ()V <clinit>
daj net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a value
	b limit
	<init> ([Ldbl;Lcza;I)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	c ()Z hasLimit
	a (Lbly;Lcys;)Lbly; run
	a (Lcza;)Ldaj$a; lootingMultiplier
	<init> ([Ldbl;Lcza;ILdaj$1;)V <init>
	a (Ldaj;)Lcza; access$100
	b (Ldaj;)Z access$200
	c (Ldaj;)I access$300
daj$1 net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$1
daj$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	<init> (Lcza;)V <init>
	a ()Ldaj$a; getThis
	a (I)Ldaj$a; setLimit
	b ()Ldag; build
	d ()Ldaf$a; getThis
daj$b net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldaj;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaj; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dak net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a modifiers
	<init> ([Ldbl;Ljava/util/List;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Ljava/lang/String;Lard;Larg$a;Lcza;)Ldak$c; modifier
	c ()Ldak$a; setAttributes
	<init> ([Ldbl;Ljava/util/List;Ldak$1;)V <init>
	a (Ldak;)Ljava/util/List; access$800
dak$1 net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	a $SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
	<clinit> ()V <clinit>
dak$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	<init> ()V <init>
	a ()Ldak$a; getThis
	a (Ldak$c;)Ldak$a; withModifier
	b ()Ldag; build
	d ()Ldaf$a; getThis
dak$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	<init> (Ljava/lang/String;Lard;Larg$a;Lcza;[Laqc;Ljava/util/UUID;)V <init>
	a (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldak$b; deserialize
	a (Larg$a;)Ljava/lang/String; operationToString
	a (Ljava/lang/String;)Larg$a; operationFromString
	a (Ldak$b;)Ljava/util/UUID; access$000
	b (Ldak$b;)[Laqc; access$100
	c (Ldak$b;)Lard; access$200
	d (Ldak$b;)Ljava/lang/String; access$300
	e (Ldak$b;)Lcza; access$400
	f (Ldak$b;)Larg$a; access$500
	<init> (Ljava/lang/String;Lard;Larg$a;Lcza;[Laqc;Ljava/util/UUID;Ldak$1;)V <init>
dak$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	<init> (Ljava/lang/String;Lard;Larg$a;Lcza;)V <init>
	a (Laqc;)Ldak$c; forSlot
	a (Ljava/util/UUID;)Ldak$c; withUuid
	a ()Ldak$b; build
dak$d net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldak;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldak; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dal net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a entries
	<init> ([Ldbl;Ljava/util/List;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lczd;)V validate
	c ()Ldal$a; setContents
	a (Lcys;Lgj;Lczn;)V lambda$run$1
	a (Lgj;Lcys;Lczm;)V lambda$null$0
	<init> ([Ldbl;Ljava/util/List;Ldal$1;)V <init>
	a (Ldal;)Ljava/util/List; access$100
dal$1 net/minecraft/world/level/storage/loot/functions/SetContainerContents$1
dal$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	<init> ()V <init>
	a ()Ldal$a; getThis
	a (Lczn$a;)Ldal$a; withEntry
	b ()Ldag; build
	d ()Ldaf$a; getThis
dal$b net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldal;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldal; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dam net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a name
	b seed
	<init> ([Ldbl;Lvk;J)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lczd;)V validate
	a (Lvk;)Ldaf$a; withLootTable
	a (Lvk;J)Ldaf$a; withLootTable
	a (Lvk;J[Ldbl;)Ldag; lambda$withLootTable$1
	a (Lvk;[Ldbl;)Ldag; lambda$withLootTable$0
	a (Ldam;)Lvk; access$000
	b (Ldam;)J access$100
	<init> ([Ldbl;Lvk;JLdam$1;)V <init>
dam$1 net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$1
dam$a net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldam;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldam; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dan net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a value
	<init> ([Ldbl;Lcyy;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lcyy;)Ldaf$a; setCount
	a (Lcyy;[Ldbl;)Ldag; lambda$setCount$0
	a (Ldan;)Lcyy; access$000
	<init> ([Ldbl;Lcyy;Ldan$1;)V <init>
dan$1 net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$1
dan$a net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldan;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldan; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dao net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a LOGGER
	b damage
	<init> ([Ldbl;Lcza;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lcza;)Ldaf$a; setDamage
	a (Lcza;[Ldbl;)Ldag; lambda$setDamage$0
	a (Ldao;)Lcza; access$000
	<init> ([Ldbl;Lcza;Ldao$1;)V <init>
	<clinit> ()V <clinit>
dao$1 net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$1
dao$a net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldao;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldao; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dap net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a replace
	b lore
	d resolutionContext
	<init> ([Ldbl;ZLjava/util/List;Lcys$c;)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbly;Lcys;)Lbly; run
	a (Lbly;Z)Lmj; getLoreTag
	c ()Ldap$a; setLore
	a (Ldap;)Z access$000
	b (Ldap;)Ljava/util/List; access$100
	c (Ldap;)Lcys$c; access$200
dap$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	<init> ()V <init>
	a (Z)Ldap$a; setReplace
	a (Lcys$c;)Ldap$a; setResolutionContext
	a (Lnr;)Ldap$a; addLine
	a ()Ldap$a; getThis
	b ()Ldag; build
	d ()Ldaf$a; getThis
dap$b net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldap;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldap; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
daq net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a LOGGER
	b name
	d resolutionContext
	<init> ([Ldbl;Lnr;Lcys$c;)V <init>
	b ()Ldah; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;Lcys$c;)Ljava/util/function/UnaryOperator; createResolver
	a (Lbly;Lcys;)Lbly; run
	a (Lnr;)Ldaf$a; setName
	a (Lnr;Lcys$c;)Ldaf$a; setName
	a (Lnr;Lcys$c;[Ldbl;)Ldag; lambda$setName$3
	a (Lnr;[Ldbl;)Ldag; lambda$setName$2
	b (Lnr;)Lnr; lambda$createResolver$1
	a (Ldb;Lapx;Lnr;)Lnr; lambda$createResolver$0
	a (Ldaq;)Lnr; access$000
	b (Ldaq;)Lcys$c; access$100
	<init> ([Ldbl;Lnr;Lcys$c;Ldaq$1;)V <init>
	<clinit> ()V <clinit>
daq$1 net/minecraft/world/level/storage/loot/functions/SetNameFunction$1
daq$a net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldaq;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaq; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dar net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a tag
	<init> ([Ldbl;Lmd;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	a (Lmd;)Ldaf$a; setTag
	a (Lmd;[Ldbl;)Ldag; lambda$setTag$0
	a (Ldar;)Lmd; access$000
	<init> ([Ldbl;Lmd;Ldar$1;)V <init>
dar$1 net/minecraft/world/level/storage/loot/functions/SetNbtFunction$1
dar$a net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldar;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldar; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
das net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a effectDurationMap
	<init> ([Ldbl;Ljava/util/Map;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	c ()Ldas$a; stewEffect
	<init> ([Ldbl;Ljava/util/Map;Ldas$1;)V <init>
	a (Ldas;)Ljava/util/Map; access$100
das$1 net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$1
das$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effectDurationMap
	<init> ()V <init>
	a ()Ldas$a; getThis
	a (Lapp;Lcza;)Ldas$a; withEffect
	b ()Ldag; build
	d ()Ldaf$a; getThis
das$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldas;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldas; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
	a (Lcom/google/gson/JsonObject;Ldaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
dat net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a LOGGER
	<init> ([Ldbl;)V <init>
	b ()Ldah; getType
	a (Lbly;Lcys;)Lbly; run
	c ()Ldaf$a; smelted
	<init> ([Ldbl;Ldat$1;)V <init>
	<clinit> ()V <clinit>
dat$1 net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$1
dat$a net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldat; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldbl;)Ldaf; deserialize
dau net/minecraft/world/level/storage/loot/functions/package-info
dav net/minecraft/world/level/storage/loot/package-info
daw net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	<init> (Lvk;)V <init>
	a ()Lvk; getName
	toString ()Ljava/lang/String; toString
dax net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	<init> (Ljava/util/Set;Ljava/util/Set;)V <init>
	a (Ldaw;)Z isAllowed
	a ()Ljava/util/Set; getRequired
	b ()Ljava/util/Set; getAllowed
	toString ()Ljava/lang/String; toString
	a (Lczd;Lcyt;)V validateUser
	c ()Ldax$a; builder
	b (Ldaw;)Ljava/lang/String; lambda$toString$0
	<init> (Ljava/util/Set;Ljava/util/Set;Ldax$1;)V <init>
dax$1 net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$1
dax$a net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	<init> ()V <init>
	a (Ldaw;)Ldax$a; required
	b (Ldaw;)Ldax$a; optional
	a ()Ldax; build
day net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	m REGISTRY
	a EMPTY
	b CHEST
	c COMMAND
	d SELECTOR
	e FISHING
	f ENTITY
	g GIFT
	h PIGLIN_BARTER
	i ADVANCEMENT_REWARD
	j ADVANCEMENT_ENTITY
	k ALL_PARAMS
	l BLOCK
	<init> ()V <init>
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Ldax; register
	a (Lvk;)Ldax; get
	a (Ldax;)Lvk; getKey
	a (Ldax$a;)V lambda$static$11
	b (Ldax$a;)V lambda$static$10
	c (Ldax$a;)V lambda$static$9
	d (Ldax$a;)V lambda$static$8
	e (Ldax$a;)V lambda$static$7
	f (Ldax$a;)V lambda$static$6
	g (Ldax$a;)V lambda$static$5
	h (Ldax$a;)V lambda$static$4
	i (Ldax$a;)V lambda$static$3
	j (Ldax$a;)V lambda$static$2
	k (Ldax$a;)V lambda$static$1
	l (Ldax$a;)V lambda$static$0
	<clinit> ()V <clinit>
daz net/minecraft/world/level/storage/loot/parameters/LootContextParams
	a THIS_ENTITY
	b LAST_DAMAGE_PLAYER
	c DAMAGE_SOURCE
	d KILLER_ENTITY
	e DIRECT_KILLER_ENTITY
	f ORIGIN
	g BLOCK_STATE
	h BLOCK_ENTITY
	i TOOL
	j EXPLOSION_RADIUS
	<init> ()V <init>
	a (Ljava/lang/String;)Ldaw; create
	<clinit> ()V <clinit>
dba net/minecraft/world/level/storage/loot/parameters/package-info
dbb net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	a terms
	b composedPredicate
	<init> ([Ldbl;)V <init>
	b ()Ldbm; getType
	a (Lcys;)Z test
	a (Lczd;)V validate
	a ([Ldbl$a;)Ldbb$a; alternative
	test (Ljava/lang/Object;)Z test
	<init> ([Ldbl;Ldbb$1;)V <init>
	a (Ldbb;)[Ldbl; access$100
dbb$1 net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$1
dbb$a net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	a terms
	<init> ([Ldbl$a;)V <init>
	a (Ldbl$a;)Ldbb$a; or
	build ()Ldbl; build
dbb$b net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbb;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbb; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbc net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a enchantment
	b values
	<init> (Lbpp;[F)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (Lbpp;[F)Ldbl$a; bonusLevelFlatChance
	test (Ljava/lang/Object;)Z test
	b (Lbpp;[F)Ldbl; lambda$bonusLevelFlatChance$0
	a (Ldbc;)Lbpp; access$000
	b (Ldbc;)[F access$100
	<init> (Lbpp;[FLdbc$1;)V <init>
dbc$1 net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$1
dbc$a net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbc;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbc; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lvk;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
dbd net/minecraft/world/level/storage/loot/predicates/ConditionReference
	a LOGGER
	b name
	<init> (Lvk;)V <init>
	b ()Ldbm; getType
	a (Lczd;)V validate
	a (Lcys;)Z test
	a (Lvk;)Ldbl$a; conditionReference
	test (Ljava/lang/Object;)Z test
	b (Lvk;)Ldbl; lambda$conditionReference$0
	a (Ldbd;)Lvk; access$000
	<init> (Lvk;Ldbd$1;)V <init>
	<clinit> ()V <clinit>
dbd$1 net/minecraft/world/level/storage/loot/predicates/ConditionReference$1
dbd$a net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbd;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbd; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbe net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	b (Ldbl$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
dbf net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a predicate
	<init> (Law;)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (Law$a;)Ldbl$a; hasDamageSource
	test (Ljava/lang/Object;)Z test
	b (Law$a;)Ldbl; lambda$hasDamageSource$0
	a (Ldbf;)Law; access$000
	<init> (Law;Ldbf$1;)V <init>
dbf$1 net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$1
dbf$a net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbf;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbf; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbg net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a scores
	b entityTarget
	<init> (Ljava/util/Map;Lcys$c;)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (Lapx;Lddk;Ljava/lang/String;Lcza;)Z hasScore
	a (Lcys$c;)Ldbg$a; hasScores
	test (Ljava/lang/Object;)Z test
	<init> (Ljava/util/Map;Lcys$c;Ldbg$1;)V <init>
	a (Ldbg;)Ljava/util/Map; access$100
	b (Ldbg;)Lcys$c; access$200
dbg$1 net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$1
dbg$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	<init> (Lcys$c;)V <init>
	a (Ljava/lang/String;Lcza;)Ldbg$a; withScore
	build ()Ldbl; build
dbg$b net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbg;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbg; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbh net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a INSTANCE
	<init> ()V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	c ()Ldbl$a; survivesExplosion
	test (Ljava/lang/Object;)Z test
	e ()Ldbl; lambda$survivesExplosion$0
	d ()Ldbh; access$000
	<clinit> ()V <clinit>
dbh$a net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbh;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbh; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbi net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a term
	<init> (Ldbl;)V <init>
	b ()Ldbm; getType
	a (Lcys;)Z test
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lczd;)V validate
	a (Ldbl$a;)Ldbl$a; invert
	test (Ljava/lang/Object;)Z test
	b (Ldbi;)Ldbl; lambda$invert$0
	a (Ldbi;)Ldbl; access$000
	<init> (Ldbl;Ldbi$1;)V <init>
dbi$1 net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$1
dbi$a net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbi;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbi; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbj net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a predicate
	b offset
	<init> (Lbw;Lfx;)V <init>
	b ()Ldbm; getType
	a (Lcys;)Z test
	a (Lbw$a;)Ldbl$a; checkLocation
	a (Lbw$a;Lfx;)Ldbl$a; checkLocation
	test (Ljava/lang/Object;)Z test
	b (Lbw$a;Lfx;)Ldbl; lambda$checkLocation$1
	b (Lbw$a;)Ldbl; lambda$checkLocation$0
	a (Ldbj;)Lbw; access$000
	b (Ldbj;)Lfx; access$100
	<init> (Lbw;Lfx;Ldbj$1;)V <init>
dbj$1 net/minecraft/world/level/storage/loot/predicates/LocationCheck$1
dbj$a net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbj;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbj; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbk net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a block
	b properties
	<init> (Lbul;Lcm;)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (Lbul;)Ldbk$a; hasBlockStateProperties
	test (Ljava/lang/Object;)Z test
	<init> (Lbul;Lcm;Ldbk$1;)V <init>
	a (Ldbk;)Lbul; access$100
	b (Ldbk;)Lcm; access$200
dbk$1 net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$1
dbk$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b properties
	<init> (Lbul;)V <init>
	a (Lcm$a;)Ldbk$a; setProperties
	build ()Ldbl; build
dbk$b net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbk;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbk; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lbul;Ljava/lang/String;)V lambda$deserialize$1
	a (Lvk;)Ljava/lang/IllegalArgumentException; lambda$deserialize$0
dbl net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	b ()Ldbm; getType
dbl$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	build ()Ldbl; build
	a ()Ldbl$a; invert
	a (Ldbl$a;)Ldbb$a; or
dbm net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	<init> (Lczb;)V <init>
dbn net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a INVERTED
	b ALTERNATIVE
	c RANDOM_CHANCE
	d RANDOM_CHANCE_WITH_LOOTING
	e ENTITY_PROPERTIES
	f KILLED_BY_PLAYER
	g ENTITY_SCORES
	h BLOCK_STATE_PROPERTY
	i MATCH_TOOL
	j TABLE_BONUS
	k SURVIVES_EXPLOSION
	l DAMAGE_SOURCE_PROPERTIES
	m LOCATION_CHECK
	n WEATHER_CHECK
	o REFERENCE
	p TIME_CHECK
	<init> ()V <init>
	a (Ljava/lang/String;Lczb;)Ldbm; register
	a ()Ljava/lang/Object; createGsonAdapter
	a ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; andConditions
	b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
	a ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$orConditions$3
	a (Ljava/lang/Object;)Z lambda$orConditions$2
	b ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$andConditions$1
	b (Ljava/lang/Object;)Z lambda$andConditions$0
	<clinit> ()V <clinit>
dbo net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a predicate
	b entityTarget
	<init> (Lbg;Lcys$c;)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (Lcys$c;)Ldbl$a; entityPresent
	a (Lcys$c;Lbg$a;)Ldbl$a; hasProperties
	a (Lcys$c;Lbg;)Ldbl$a; hasProperties
	test (Ljava/lang/Object;)Z test
	a (Lbg;Lcys$c;)Ldbl; lambda$hasProperties$1
	a (Lbg$a;Lcys$c;)Ldbl; lambda$hasProperties$0
	a (Ldbo;)Lbg; access$000
	b (Ldbo;)Lcys$c; access$100
	<init> (Lbg;Lcys$c;Ldbo$1;)V <init>
dbo$1 net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$1
dbo$a net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbo;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbo; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbp net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a INSTANCE
	<init> ()V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	c ()Ldbl$a; killedByPlayer
	test (Ljava/lang/Object;)Z test
	e ()Ldbl; lambda$killedByPlayer$0
	d ()Ldbp; access$000
	<clinit> ()V <clinit>
dbp$a net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbp;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbp; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbq net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a probability
	<init> (F)V <init>
	b ()Ldbm; getType
	a (Lcys;)Z test
	a (F)Ldbl$a; randomChance
	test (Ljava/lang/Object;)Z test
	b (F)Ldbl; lambda$randomChance$0
	a (Ldbq;)F access$000
	<init> (FLdbq$1;)V <init>
dbq$1 net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$1
dbq$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbq;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbq; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbr net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a percent
	b lootingMultiplier
	<init> (FF)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (FF)Ldbl$a; randomChanceAndLootingBoost
	test (Ljava/lang/Object;)Z test
	b (FF)Ldbl; lambda$randomChanceAndLootingBoost$0
	a (Ldbr;)F access$000
	b (Ldbr;)F access$100
	<init> (FFLdbr$1;)V <init>
dbr$1 net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$1
dbr$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbr;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbr; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbs net/minecraft/world/level/storage/loot/predicates/MatchTool
	a predicate
	<init> (Lbq;)V <init>
	b ()Ldbm; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcys;)Z test
	a (Lbq$a;)Ldbl$a; toolMatches
	test (Ljava/lang/Object;)Z test
	b (Lbq$a;)Ldbl; lambda$toolMatches$0
	a (Ldbs;)Lbq; access$000
dbs$a net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbs;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbs; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbt net/minecraft/world/level/storage/loot/predicates/TimeCheck
	a period
	b value
	<init> (Ljava/lang/Long;Lcza;)V <init>
	b ()Ldbm; getType
	a (Lcys;)Z test
	a (Lcza;)Ldbt$a; time
	test (Ljava/lang/Object;)Z test
	<init> (Ljava/lang/Long;Lcza;Ldbt$1;)V <init>
	a (Ldbt;)Ljava/lang/Long; access$100
	b (Ldbt;)Lcza; access$200
dbt$1 net/minecraft/world/level/storage/loot/predicates/TimeCheck$1
dbt$a net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	a period
	b value
	<init> (Lcza;)V <init>
	a (J)Ldbt$a; setPeriod
	b ()Ldbt; build
	build ()Ldbl; build
dbt$b net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbt;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbt; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbu net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a isRaining
	b isThundering
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;)V <init>
	b ()Ldbm; getType
	a (Lcys;)Z test
	c ()Ldbu$a; weather
	test (Ljava/lang/Object;)Z test
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;Ldbu$1;)V <init>
	a (Ldbu;)Ljava/lang/Boolean; access$100
	b (Ldbu;)Ljava/lang/Boolean; access$200
dbu$1 net/minecraft/world/level/storage/loot/predicates/WeatherCheck$1
dbu$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	<init> ()V <init>
	a (Ljava/lang/Boolean;)Ldbu$a; setRaining
	b (Ljava/lang/Boolean;)Ldbu$a; setThundering
	b ()Ldbu; build
	build ()Ldbl; build
dbu$b net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldbu;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbu; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dbv net/minecraft/world/level/storage/loot/predicates/package-info
dbw net/minecraft/world/level/storage/package-info
dbx net/minecraft/world/level/storage/threaded/package-info
dby net/minecraft/world/level/timers/FunctionCallback
	a functionId
	<init> (Lvk;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;Ldcc;J)V handle
	a (Ljava/lang/Object;Ldcc;J)V handle
	a (Lvx;Lcy;)V lambda$handle$0
	a (Ldby;)Lvk; access$000
dby$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	<init> ()V <init>
	a (Lmd;Ldby;)V serialize
	a (Lmd;)Ldby; deserialize
	b (Lmd;)Ldca; deserialize
	a (Lmd;Ldca;)V serialize
dbz net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	<init> (Lvk;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;Ldcc;J)V handle
	a (Ljava/lang/Object;Ldcc;J)V handle
	a (Ldbz;)Lvk; access$000
dbz$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	<init> ()V <init>
	a (Lmd;Ldbz;)V serialize
	a (Lmd;)Ldbz; deserialize
	b (Lmd;)Ldca; deserialize
	a (Lmd;Ldca;)V serialize
dca net/minecraft/world/level/timers/TimerCallback
	a (Ljava/lang/Object;Ldcc;J)V handle
dca$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	<init> (Lvk;Ljava/lang/Class;)V <init>
	a ()Lvk; getId
	b ()Ljava/lang/Class; getCls
	a (Lmd;Ldca;)V serialize
	b (Lmd;)Ldca; deserialize
dcb net/minecraft/world/level/timers/TimerCallbacks
	b LOGGER
	a SERVER_CALLBACKS
	c idToSerializer
	d classToSerializer
	<init> ()V <init>
	a (Ldca$a;)Ldcb; register
	a (Ljava/lang/Class;)Ldca$a; getSerializer
	a (Ldca;)Lmd; serialize
	a (Lmd;)Ldca; deserialize
	<clinit> ()V <clinit>
dcc net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b callbacksRegistry
	c queue
	d sequentialId
	e events
	c ()Ljava/util/Comparator; createComparator
	<init> (Ldcb;Ljava/util/stream/Stream;)V <init>
	<init> (Ldcb;)V <init>
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;JLdca;)V schedule
	a (Ljava/lang/String;)I remove
	a ()Ljava/util/Set; getEventsIds
	a (Lmd;)V loadEvent
	a (Ldcc$a;)Lmd; storeEvent
	b ()Lmj; store
	a (Lcom/mojang/serialization/Dynamic;)V lambda$new$2
	b (Ldcc$a;)Lcom/google/common/primitives/UnsignedLong; lambda$createComparator$1
	c (Ldcc$a;)J lambda$createComparator$0
	<clinit> ()V <clinit>
dcc$1 net/minecraft/world/level/timers/TimerQueue$1
dcc$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
	<init> (JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Ldca;)V <init>
	<init> (JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Ldca;Ldcc$1;)V <init>
dcd net/minecraft/world/level/timers/package-info
dce net/minecraft/world/package-info
dcf net/minecraft/world/phys/AABB
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	<init> (DDDDDD)V <init>
	<init> (Lfx;)V <init>
	<init> (Lfx;Lfx;)V <init>
	<init> (Ldck;Ldck;)V <init>
	a (Lcqx;)Ldcf; of
	a (Ldck;)Ldcf; unitCubeFromLowerCorner
	a (D)Ldcf; setMinX
	b (D)Ldcf; setMinY
	c (D)Ldcf; setMinZ
	d (D)Ldcf; setMaxX
	e (D)Ldcf; setMaxY
	f (D)Ldcf; setMaxZ
	a (Lgc$a;)D min
	b (Lgc$a;)D max
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (DDD)Ldcf; contract
	b (Ldck;)Ldcf; expandTowards
	b (DDD)Ldcf; expandTowards
	c (DDD)Ldcf; inflate
	g (D)Ldcf; inflate
	a (Ldcf;)Ldcf; intersect
	b (Ldcf;)Ldcf; minmax
	a (Ljava/lang/Iterable;)Ldcf; minmax
	d (DDD)Ldcf; move
	a (Lfx;)Ldcf; move
	c (Ldck;)Ldcf; move
	a (Ldcf;D)D clipXCollide
	b (Ldcf;D)D clipYCollide
	c (Ldcf;D)D clipZCollide
	c (Ldcf;)Z intersects
	a (DDDDDD)Z intersects
	a (Ldck;Ldck;)Z intersects
	d (Ldck;)Z contains
	e (DDD)Z contains
	a ()D getSize
	b ()D getXsize
	c ()D getYsize
	d ()D getZsize
	f (DDD)Ldcf; deflate
	h (D)Ldcf; deflate
	b (Ldck;Ldck;)Ljava/util/Optional; clip
	a (Ljava/lang/Iterable;Ldck;Ldck;Lfx;)Ldcg; clip
	a (Ldcf;Ldck;[DLgc;DDD)Lgc; getDirection
	a ([DLgc;DDDDDDDDLgc;DDD)Lgc; clipPoint
	toString ()Ljava/lang/String; toString
	e ()Z hasNaN
	f ()Ldck; getCenter
	g (DDD)Ldcf; ofSize
dcg net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a (Ldck;Lgc;Lfx;)Ldcg; miss
	<init> (Ldck;Lgc;Lfx;Z)V <init>
	<init> (ZLdck;Lgc;Lfx;Z)V <init>
	a (Lgc;)Ldcg; withDirection
	a (Lfx;)Ldcg; withPosition
	a ()Lfx; getBlockPos
	b ()Lgc; getDirection
	c ()Ldci$a; getType
	d ()Z isInside
dch net/minecraft/world/phys/EntityHitResult
	b entity
	<init> (Lapx;)V <init>
	<init> (Lapx;Ldck;)V <init>
	a ()Lapx; getEntity
	c ()Ldci$a; getType
dci net/minecraft/world/phys/HitResult
	a location
	<init> (Ldck;)V <init>
	a (Lapx;)D distanceTo
	c ()Ldci$a; getType
	e ()Ldck; getLocation
dci$a net/minecraft/world/phys/HitResult$Type
	a MISS
	b BLOCK
	c ENTITY
	d $VALUES
	values ()[Ldci$a; values
	valueOf (Ljava/lang/String;)Ldci$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<clinit> ()V <clinit>
dcj net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	<init> (FF)V <init>
	a (F)Ldcj; scale
	a (Ldcj;)F dot
	b (Ldcj;)Ldcj; add
	b (F)Ldcj; add
	c (Ldcj;)Z equals
	a ()Ldcj; normalized
	b ()F length
	c ()F lengthSquared
	d (Ldcj;)F distanceToSqr
	d ()Ldcj; negated
	<clinit> ()V <clinit>
dck net/minecraft/world/phys/Vec3
	a ZERO
	b x
	c y
	d z
	a (I)Ldck; fromRGB24
	a (Lgr;)Ldck; atCenterOf
	b (Lgr;)Ldck; atLowerCornerOf
	c (Lgr;)Ldck; atBottomCenterOf
	a (Lgr;D)Ldck; upFromBottomCenterOf
	<init> (DDD)V <init>
	<init> (Lg;)V <init>
	a (Ldck;)Ldck; vectorTo
	d ()Ldck; normalize
	b (Ldck;)D dot
	c (Ldck;)Ldck; cross
	d (Ldck;)Ldck; subtract
	a (DDD)Ldck; subtract
	e (Ldck;)Ldck; add
	b (DDD)Ldck; add
	a (Lgk;D)Z closerThan
	f (Ldck;)D distanceTo
	g (Ldck;)D distanceToSqr
	c (DDD)D distanceToSqr
	a (D)Ldck; scale
	e ()Ldck; reverse
	h (Ldck;)Ldck; multiply
	d (DDD)Ldck; multiply
	f ()D length
	g ()D lengthSqr
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Ldck;D)Ldck; lerp
	a (F)Ldck; xRot
	b (F)Ldck; yRot
	c (F)Ldck; zRot
	a (Ldcj;)Ldck; directionFromRotation
	a (FF)Ldck; directionFromRotation
	a (Ljava/util/EnumSet;)Ldck; align
	a (Lgc$a;)D get
	a ()D x
	b ()D y
	c ()D z
	<clinit> ()V <clinit>
dcl net/minecraft/world/phys/package-info
dcm net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	<init> (Ldct;[D[D[D)V <init>
	<init> (Ldct;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V <init>
	a (Lgc$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
dcm$1 net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
dcn net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	<init> (III)V <init>
	<init> (IIIIIIIII)V <init>
	<init> (Ldct;)V <init>
	a (III)I getIndex
	b (III)Z isFull
	a (IIIZZ)V setFull
	a ()Z isEmpty
	a (Lgc$a;)I firstFull
	b (Lgc$a;)I lastFull
	a (IIII)Z isZStripFull
	a (IIIIZ)V setZStrip
	a (Ldct;Ldct;Ldcw;Ldcw;Ldcw;Ldco;)Ldcn; join
	a (Ldcw;Ldcw;Ldco;Ldct;Ldct;Ldcn;[IIII)Z lambda$join$2
	a (Ldcw;Ldco;Ldct;ILdct;ILdcn;I[I[ZIII)Z lambda$null$1
	a (Ldco;Ldct;IILdct;IILdcn;II[I[ZIII)Z lambda$null$0
dco net/minecraft/world/phys/shapes/BooleanOp
	a FALSE
	b NOT_OR
	c ONLY_SECOND
	d NOT_FIRST
	e ONLY_FIRST
	f NOT_SECOND
	g NOT_SAME
	h NOT_AND
	i AND
	j SAME
	k SECOND
	l CAUSES
	m FIRST
	n CAUSED_BY
	o OR
	p TRUE
	apply (ZZ)Z apply
	a (ZZ)Z lambda$static$15
	b (ZZ)Z lambda$static$14
	c (ZZ)Z lambda$static$13
	d (ZZ)Z lambda$static$12
	e (ZZ)Z lambda$static$11
	f (ZZ)Z lambda$static$10
	g (ZZ)Z lambda$static$9
	h (ZZ)Z lambda$static$8
	i (ZZ)Z lambda$static$7
	j (ZZ)Z lambda$static$6
	k (ZZ)Z lambda$static$5
	l (ZZ)Z lambda$static$4
	m (ZZ)Z lambda$static$3
	n (ZZ)Z lambda$static$2
	o (ZZ)Z lambda$static$1
	p (ZZ)Z lambda$static$0
	<clinit> ()V <clinit>
dcp net/minecraft/world/phys/shapes/CollisionContext
	a ()Ldcp; empty
	a (Lapx;)Ldcp; of
	b ()Z isDescending
	a (Ldde;Lfx;Z)Z isAbove
	a (Lblu;)Z isHoldingItem
	a (Lcuu;Lcus;)Z canStandOnFluid
dcq net/minecraft/world/phys/shapes/CubePointRange
	a parts
	<init> (I)V <init>
	getDouble (I)D getDouble
	size ()I size
dcr net/minecraft/world/phys/shapes/CubeVoxelShape
	<init> (Ldct;)V <init>
	a (Lgc$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lgc$a;D)I findIndex
dcs net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstSize
	c secondSize
	d gcd
	<init> (II)V <init>
	a (Ldcw$a;)Z forMergedIndexes
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
dct net/minecraft/world/phys/shapes/DiscreteVoxelShape
	d AXIS_VALUES
	a xSize
	b ySize
	c zSize
	<init> (III)V <init>
	a (Lfv;III)Z isFullWide
	c (III)Z isFullWide
	b (Lfv;III)Z isFull
	b (III)Z isFull
	a (IIIZZ)V setFull
	a ()Z isEmpty
	a (Lgc$a;)I firstFull
	b (Lgc$a;)I lastFull
	a (Lgc$a;II)I firstFull
	b (Lgc$a;II)I lastFull
	c (Lgc$a;)I getSize
	b ()I getXSize
	c ()I getYSize
	d ()I getZSize
	a (Ldct$b;Z)V forAllEdges
	a (Ldct$b;Lfv;Z)V forAllAxisEdges
	a (IIII)Z isZStripFull
	a (IIIIZ)V setZStrip
	a (IIIII)Z isXZRectangleFull
	b (Ldct$b;Z)V forAllBoxes
	a (Ldct$a;)V forAllFaces
	a (Ldct$a;Lfv;)V forAllAxisFaces
	<clinit> ()V <clinit>
dct$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
	consume (Lgc;III)V consume
dct$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
	consume (IIIIII)V consume
dcu net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b descending
	c entityBottom
	d heldItem
	e canStandOnFluid
	<init> (ZDLblu;Ljava/util/function/Predicate;)V <init>
	<init> (Lapx;)V <init>
	a (Lblu;)Z isHoldingItem
	a (Lcuu;Lcus;)Z canStandOnFluid
	b ()Z isDescending
	a (Ldde;Lfx;Z)Z isAbove
	a (Lcut;)Z lambda$new$1
	b (Lcut;)Z lambda$static$0
	<clinit> ()V <clinit>
dcu$1 net/minecraft/world/phys/shapes/EntityCollisionContext$1
	<init> (ZDLblu;Ljava/util/function/Predicate;)V <init>
	a (Ldde;Lfx;Z)Z isAbove
dcv net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;)V <init>
	a (Ldcw$a;)Z forMergedIndexes
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
dcw net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;)Z forMergedIndexes
dcw$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
	merge (III)Z merge
dcx net/minecraft/world/phys/shapes/IndirectMerger
	a result
	b firstIndices
	c secondIndices
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V <init>
	a (Ldcw$a;)Z forMergedIndexes
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
dcy net/minecraft/world/phys/shapes/IntPointRange
	a parts
	b origin
	<init> (II)V <init>
	getDouble (I)D getDouble
	size ()I size
dcz net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V <init>
	size ()I size
	a (Ldcw$a;)Z forMergedIndexes
	b (Ldcw$a;)Z forNonSwappedIndexes
	getDouble (I)D getDouble
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;III)Z lambda$forMergedIndexes$0
dda net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V <init>
	getDouble (I)D getDouble
	size ()I size
ddb net/minecraft/world/phys/shapes/Shapes
	b BLOCK
	a INFINITY
	c EMPTY
	<init> ()V <init>
	a ()Ldde; empty
	b ()Ldde; block
	a (DDDDDD)Ldde; box
	a (Ldcf;)Ldde; create
	a (DD)I findBits
	a (II)J lcm
	a (Ldde;Ldde;)Ldde; or
	a (Ldde;[Ldde;)Ldde; or
	a (Ldde;Ldde;Ldco;)Ldde; join
	b (Ldde;Ldde;Ldco;)Ldde; joinUnoptimized
	c (Ldde;Ldde;Ldco;)Z joinIsNotEmpty
	a (Ldcw;Ldcw;Ldcw;Ldct;Ldct;Ldco;)Z joinIsNotEmpty
	a (Lgc$a;Ldcf;Ljava/util/stream/Stream;D)D collide
	a (Lgc$a;Ldcf;Lbrw;DLdcp;Ljava/util/stream/Stream;)D collide
	a (Ldcf;Lbrw;DLdcp;Lfv;Ljava/util/stream/Stream;)D collide
	a (DDD)I lastC
	a (Ldde;Ldde;Lgc;)Z blockOccudes
	a (Ldde;Lgc;)Ldde; getFaceShape
	b (Ldde;Ldde;Lgc;)Z mergedFaceOccludes
	b (Ldde;Ldde;)Z faceShapeOccludes
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Ldcw; createIndexMerger
	a ([DLgc$a;Ldcf;Ldde;)V lambda$collide$4
	a (Ldcw;Ldcw;Ldco;Ldct;Ldct;III)Z lambda$joinIsNotEmpty$3
	a (Ldcw;Ldco;Ldct;ILdct;IIII)Z lambda$null$2
	a (Ldco;Ldct;IILdct;IIIII)Z lambda$null$1
	c ()Ldcr; lambda$static$0
	<clinit> ()V <clinit>
ddb$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
	consume (DDDDDD)V consume
ddc net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	<init> (Ldde;Lgc$a;I)V <init>
	a (Ldct;Lgc$a;I)Ldct; makeSlice
	a (Lgc$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	<clinit> ()V <clinit>
ddd net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	<init> (Ldct;IIIIII)V <init>
	b (III)Z isFull
	a (IIIZZ)V setFull
	a (Lgc$a;)I firstFull
	b (Lgc$a;)I lastFull
dde net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	<init> (Ldct;)V <init>
	b (Lgc$a;)D min
	c (Lgc$a;)D max
	a ()Ldcf; bounds
	a (Lgc$a;I)D get
	a (Lgc$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	b ()Z isEmpty
	a (DDD)Ldde; move
	c ()Ldde; optimize
	a (Lddb$a;)V forAllEdges
	b (Lddb$a;)V forAllBoxes
	d ()Ljava/util/List; toAabbs
	a (Lgc$a;DD)D min
	b (Lgc$a;DD)D max
	a (Lgc$a;D)I findIndex
	b (DDD)Z isFullWide
	a (Ldck;Ldck;Lfx;)Ldcg; clip
	a (Lgc;)Ldde; getFaceShape
	b (Lgc;)Ldde; calculateFace
	a (Lgc$a;Ldcf;D)D collide
	a (Lfv;Ldcf;D)D collideX
	toString ()Ljava/lang/String; toString
	a (Lgc$a;DI)Z lambda$findIndex$4
	a (Ljava/util/List;DDDDDD)V lambda$toAabbs$3
	a (Lddb$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V lambda$forAllBoxes$2
	a (Lddb$a;IIIIII)V lambda$forAllEdges$1
	a ([Ldde;DDDDDD)V lambda$optimize$0
ddf net/minecraft/world/phys/shapes/WorldRegionIndirectVoxelShape
	b x
	c y
	d z
	<init> (Ldct;III)V <init>
	a (Lgc$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
ddg net/minecraft/world/phys/shapes/package-info
ddh net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	d displayName
	e formattedDisplayName
	f renderType
	<init> (Lddk;Ljava/lang/String;Lddn;Lnr;Lddn$a;)V <init>
	a ()Lddk; getScoreboard
	b ()Ljava/lang/String; getName
	c ()Lddn; getCriteria
	d ()Lnr; getDisplayName
	g ()Lnr; createFormattedDisplayName
	e ()Lnr; getFormattedDisplayName
	a (Lnr;)V setDisplayName
	f ()Lddn$a; getRenderType
	a (Lddn$a;)V setRenderType
	a (Lob;)Lob; lambda$createFormattedDisplayName$0
ddi net/minecraft/world/scores/PlayerTeam
	a scoreboard
	b name
	c players
	d displayName
	e playerPrefix
	f playerSuffix
	g allowFriendlyFire
	h seeFriendlyInvisibles
	i nameTagVisibility
	j deathMessageVisibility
	k color
	l collisionRule
	m displayNameStyle
	<init> (Lddk;Ljava/lang/String;)V <init>
	a ()Lddk; getScoreboard
	b ()Ljava/lang/String; getName
	c ()Lnr; getDisplayName
	d ()Lnx; getFormattedDisplayName
	a (Lnr;)V setDisplayName
	b (Lnr;)V setPlayerPrefix
	e ()Lnr; getPlayerPrefix
	c (Lnr;)V setPlayerSuffix
	f ()Lnr; getPlayerSuffix
	g ()Ljava/util/Collection; getPlayers
	d (Lnr;)Lnx; getFormattedName
	a (Lddm;Lnr;)Lnx; formatNameForTeam
	h ()Z isAllowFriendlyFire
	a (Z)V setAllowFriendlyFire
	i ()Z canSeeFriendlyInvisibles
	b (Z)V setSeeFriendlyInvisibles
	j ()Lddm$b; getNameTagVisibility
	k ()Lddm$b; getDeathMessageVisibility
	a (Lddm$b;)V setNameTagVisibility
	b (Lddm$b;)V setDeathMessageVisibility
	l ()Lddm$a; getCollisionRule
	a (Lddm$a;)V setCollisionRule
	m ()I packOptions
	a (I)V unpackOptions
	a (Lk;)V setColor
	n ()Lk; getColor
ddj net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	d owner
	e count
	f locked
	g forceUpdate
	<init> (Lddk;Lddh;Ljava/lang/String;)V <init>
	a (I)V add
	b (I)V remove
	a ()V increment
	b ()I getScore
	c ()V reset
	c (I)V setScore
	d ()Lddh; getObjective
	e ()Ljava/lang/String; getOwner
	f ()Lddk; getScoreboard
	g ()Z isLocked
	a (Z)V setLocked
	a (Lddj;Lddj;)I lambda$static$0
	<clinit> ()V <clinit>
ddk net/minecraft/world/scores/Scoreboard
	a objectivesByName
	b objectivesByCriteria
	c playerScores
	d displayObjectives
	e teamsByName
	f teamsByPlayer
	g displaySlotNames
	<init> ()V <init>
	b (Ljava/lang/String;)Z hasObjective
	c (Ljava/lang/String;)Lddh; getOrCreateObjective
	d (Ljava/lang/String;)Lddh; getObjective
	a (Ljava/lang/String;Lddn;Lnr;Lddn$a;)Lddh; addObjective
	a (Lddn;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	b (Ljava/lang/String;Lddh;)Z hasPlayerScore
	c (Ljava/lang/String;Lddh;)Lddj; getOrCreatePlayerScore
	i (Lddh;)Ljava/util/Collection; getPlayerScores
	c ()Ljava/util/Collection; getObjectives
	d ()Ljava/util/Collection; getObjectiveNames
	e ()Ljava/util/Collection; getTrackedPlayers
	d (Ljava/lang/String;Lddh;)V resetPlayerScore
	e (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	j (Lddh;)V removeObjective
	a (ILddh;)V setDisplayObjective
	a (I)Lddh; getDisplayObjective
	f (Ljava/lang/String;)Lddi; getPlayerTeam
	g (Ljava/lang/String;)Lddi; addPlayerTeam
	d (Lddi;)V removePlayerTeam
	a (Ljava/lang/String;Lddi;)Z addPlayerToTeam
	h (Ljava/lang/String;)Z removePlayerFromTeam
	b (Ljava/lang/String;Lddi;)V removePlayerFromTeam
	f ()Ljava/util/Collection; getTeamNames
	g ()Ljava/util/Collection; getPlayerTeams
	i (Ljava/lang/String;)Lddi; getPlayersTeam
	a (Lddh;)V onObjectiveAdded
	b (Lddh;)V onObjectiveChanged
	c (Lddh;)V onObjectiveRemoved
	a (Lddj;)V onScoreChanged
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lddh;)V onPlayerScoreRemoved
	a (Lddi;)V onTeamAdded
	b (Lddi;)V onTeamChanged
	c (Lddi;)V onTeamRemoved
	b (I)Ljava/lang/String; getDisplaySlotName
	j (Ljava/lang/String;)I getDisplaySlotByName
	h ()[Ljava/lang/String; getDisplaySlotNames
	a (Lapx;)V entityRemoved
	i ()Lmj; savePlayerScores
	a (Lmj;)V loadPlayerScores
	a (Lmj;Ljava/util/Collection;)V lambda$savePlayerScores$6
	a (Lmj;Lddj;)V lambda$null$5
	b (Lddj;)Z lambda$null$4
	e (Ljava/lang/String;Lddh;)Lddj; lambda$getOrCreatePlayerScore$3
	k (Ljava/lang/String;)Ljava/util/Map; lambda$getOrCreatePlayerScore$2
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lddh;)V lambda$forAllObjectives$1
	a (Lddn;)Ljava/util/List; lambda$addObjective$0
ddl net/minecraft/world/scores/ScoreboardSaveData
	a LOGGER
	b scoreboard
	c delayLoad
	<init> ()V <init>
	a (Lddk;)V setScoreboard
	a (Lmd;)V load
	a (Lmj;)V loadTeams
	a (Lddi;Lmj;)V loadTeamPlayers
	c (Lmd;)V loadDisplaySlots
	b (Lmj;)V loadObjectives
	b (Lmd;)Lmd; save
	a ()Lmj; saveTeams
	d (Lmd;)V saveDisplaySlots
	e ()Lmj; saveObjectives
	a (Lmd;Lddn;)V lambda$loadObjectives$0
	<clinit> ()V <clinit>
ddm net/minecraft/world/scores/Team
	<init> ()V <init>
	a (Lddm;)Z isAlliedTo
	b ()Ljava/lang/String; getName
	d (Lnr;)Lnx; getFormattedName
	i ()Z canSeeFriendlyInvisibles
	h ()Z isAllowFriendlyFire
	j ()Lddm$b; getNameTagVisibility
	n ()Lk; getColor
	g ()Ljava/util/Collection; getPlayers
	k ()Lddm$b; getDeathMessageVisibility
	l ()Lddm$a; getCollisionRule
ddm$a net/minecraft/world/scores/Team$CollisionRule
	a ALWAYS
	b NEVER
	c PUSH_OTHER_TEAMS
	d PUSH_OWN_TEAM
	g BY_NAME
	e name
	f id
	h $VALUES
	values ()[Lddm$a; values
	valueOf (Ljava/lang/String;)Lddm$a; valueOf
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lddm$a; byName
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	b ()Lnr; getDisplayName
	a (Lddm$a;)Lddm$a; lambda$static$1
	b (Lddm$a;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
ddm$b net/minecraft/world/scores/Team$Visibility
	a ALWAYS
	b NEVER
	c HIDE_FOR_OTHER_TEAMS
	d HIDE_FOR_OWN_TEAM
	g BY_NAME
	e name
	f id
	h $VALUES
	values ()[Lddm$b; values
	valueOf (Ljava/lang/String;)Lddm$b; valueOf
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lddm$b; byName
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	b ()Lnr; getDisplayName
	a (Lddm$b;)Lddm$b; lambda$static$1
	b (Lddm$b;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
ddn net/minecraft/world/scores/criteria/ObjectiveCriteria
	a CRITERIA_BY_NAME
	b DUMMY
	c TRIGGER
	d DEATH_COUNT
	e KILL_COUNT_PLAYERS
	f KILL_COUNT_ALL
	g HEALTH
	h FOOD
	i AIR
	j ARMOR
	k EXPERIENCE
	l LEVEL
	m TEAM_KILL
	n KILLED_BY_TEAM
	o name
	p readOnly
	q renderType
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;ZLddn$a;)V <init>
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ladx;Lvk;)Ljava/util/Optional; getStat
	c ()Ljava/lang/String; getName
	d ()Z isReadOnly
	e ()Lddn$a; getDefaultRenderType
	a (Ljava/lang/String;ILadx;)Ljava/util/Optional; lambda$byName$0
	<clinit> ()V <clinit>
ddn$a net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	a INTEGER
	b HEARTS
	c id
	d BY_ID
	e $VALUES
	values ()[Lddn$a; values
	valueOf (Ljava/lang/String;)Lddn$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lddn$a; byId
	<clinit> ()V <clinit>
ddo net/minecraft/world/scores/criteria/package-info
ddp net/minecraft/world/scores/package-info
